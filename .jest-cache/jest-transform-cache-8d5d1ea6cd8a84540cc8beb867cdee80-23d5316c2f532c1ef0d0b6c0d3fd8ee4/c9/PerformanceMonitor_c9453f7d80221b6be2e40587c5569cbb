0cad508d5951b54fd7c0db866d0a7759
'use client';
"use strict";

/* istanbul ignore next */
function cov_2ku4lug0r7() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\performance\\PerformanceMonitor.tsx";
  var hash = "837ca5539147f0df37c54575a4556075a9f63b2f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\performance\\PerformanceMonitor.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 18
        },
        end: {
          line: 17,
          column: 43
        }
      },
      "9": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "10": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "11": {
        start: {
          line: 20,
          column: 33
        },
        end: {
          line: 20,
          column: 82
        }
      },
      "12": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "13": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "14": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "15": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "16": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "17": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "18": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "19": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "20": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "21": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "22": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "23": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "24": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "25": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "26": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "27": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 88
        }
      },
      "28": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "29": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "30": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 95
        }
      },
      "31": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "32": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "33": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "34": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "35": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "36": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 31
        }
      },
      "37": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "38": {
        start: {
          line: 63,
          column: 31
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "39": {
        start: {
          line: 94,
          column: 34
        },
        end: {
          line: 94,
          column: 60
        }
      },
      "40": {
        start: {
          line: 95,
          column: 32
        },
        end: {
          line: 95,
          column: 56
        }
      },
      "41": {
        start: {
          line: 96,
          column: 44
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "42": {
        start: {
          line: 97,
          column: 50
        },
        end: {
          line: 97,
          column: 76
        }
      },
      "43": {
        start: {
          line: 98,
          column: 24
        },
        end: {
          line: 98,
          column: 48
        }
      },
      "44": {
        start: {
          line: 99,
          column: 48
        },
        end: {
          line: 99,
          column: 72
        }
      },
      "45": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 110,
          column: 7
        }
      },
      "46": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "47": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 30
        }
      },
      "48": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 29
        }
      },
      "49": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 36
        }
      },
      "50": {
        start: {
          line: 106,
          column: 19
        },
        end: {
          line: 106,
          column: 35
        }
      },
      "51": {
        start: {
          line: 111,
          column: 28
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "52": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 25
        }
      },
      "53": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 75
        }
      },
      "54": {
        start: {
          line: 115,
          column: 27
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "55": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "56": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 47
        }
      },
      "57": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 39
        }
      },
      "58": {
        start: {
          line: 121,
          column: 27
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "59": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "60": {
        start: {
          line: 124,
          column: 30
        },
        end: {
          line: 124,
          column: 54
        }
      },
      "61": {
        start: {
          line: 126,
          column: 31
        },
        end: {
          line: 126,
          column: 56
        }
      },
      "62": {
        start: {
          line: 128,
          column: 33
        },
        end: {
          line: 128,
          column: 60
        }
      },
      "63": {
        start: {
          line: 130,
          column: 32
        },
        end: {
          line: 130,
          column: 58
        }
      },
      "64": {
        start: {
          line: 132,
          column: 35
        },
        end: {
          line: 132,
          column: 64
        }
      },
      "65": {
        start: {
          line: 133,
          column: 31
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "66": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 35
        }
      },
      "67": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "68": {
        start: {
          line: 141,
          column: 38
        },
        end: {
          line: 144,
          column: 17
        }
      },
      "69": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 47
        }
      },
      "70": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 151,
          column: 15
        }
      },
      "71": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 75
        }
      },
      "72": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "73": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 178,
          column: 11
        }
      },
      "74": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "75": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 166,
          column: 19
        }
      },
      "76": {
        start: {
          line: 161,
          column: 77
        },
        end: {
          line: 161,
          column: 116
        }
      },
      "77": {
        start: {
          line: 169,
          column: 35
        },
        end: {
          line: 169,
          column: 80
        }
      },
      "78": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 176,
          column: 19
        }
      },
      "79": {
        start: {
          line: 171,
          column: 77
        },
        end: {
          line: 171,
          column: 116
        }
      },
      "80": {
        start: {
          line: 180,
          column: 30
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "81": {
        start: {
          line: 181,
          column: 26
        },
        end: {
          line: 181,
          column: 66
        }
      },
      "82": {
        start: {
          line: 182,
          column: 17
        },
        end: {
          line: 182,
          column: 18
        }
      },
      "83": {
        start: {
          line: 182,
          column: 26
        },
        end: {
          line: 182,
          column: 27
        }
      },
      "84": {
        start: {
          line: 182,
          column: 38
        },
        end: {
          line: 182,
          column: 39
        }
      },
      "85": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 192,
          column: 11
        }
      },
      "86": {
        start: {
          line: 184,
          column: 25
        },
        end: {
          line: 184,
          column: 51
        }
      },
      "87": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "88": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 27
        }
      },
      "89": {
        start: {
          line: 187,
          column: 19
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "90": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 28
        }
      },
      "91": {
        start: {
          line: 189,
          column: 19
        },
        end: {
          line: 191,
          column: 13
        }
      },
      "92": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 31
        }
      },
      "93": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 198,
          column: 10
        }
      },
      "94": {
        start: {
          line: 200,
          column: 32
        },
        end: {
          line: 207,
          column: 5
        }
      },
      "95": {
        start: {
          line: 201,
          column: 27
        },
        end: {
          line: 201,
          column: 104
        }
      },
      "96": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "97": {
        start: {
          line: 208,
          column: 31
        },
        end: {
          line: 222,
          column: 5
        }
      },
      "98": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "99": {
        start: {
          line: 210,
          column: 27
        },
        end: {
          line: 210,
          column: 45
        }
      },
      "100": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 215,
          column: 14
        }
      },
      "101": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "102": {
        start: {
          line: 223,
          column: 34
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "103": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 224,
          column: 66
        }
      },
      "104": {
        start: {
          line: 225,
          column: 25
        },
        end: {
          line: 225,
          column: 41
        }
      },
      "105": {
        start: {
          line: 226,
          column: 26
        },
        end: {
          line: 226,
          column: 98
        }
      },
      "106": {
        start: {
          line: 226,
          column: 60
        },
        end: {
          line: 226,
          column: 94
        }
      },
      "107": {
        start: {
          line: 227,
          column: 32
        },
        end: {
          line: 227,
          column: 133
        }
      },
      "108": {
        start: {
          line: 227,
          column: 66
        },
        end: {
          line: 227,
          column: 118
        }
      },
      "109": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 232,
          column: 10
        }
      },
      "110": {
        start: {
          line: 234,
          column: 35
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "111": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 28
        }
      },
      "112": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "113": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 246,
          column: 15
        }
      },
      "114": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "115": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 257,
          column: 15
        }
      },
      "116": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "117": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "118": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 282,
          column: 9
        }
      },
      "119": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 281,
          column: 15
        }
      },
      "120": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "121": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 287,
          column: 19
        }
      },
      "122": {
        start: {
          line: 284,
          column: 30
        },
        end: {
          line: 287,
          column: 17
        }
      },
      "123": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "124": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 299,
          column: 9
        }
      },
      "125": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 56
        }
      },
      "126": {
        start: {
          line: 292,
          column: 42
        },
        end: {
          line: 292,
          column: 56
        }
      },
      "127": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 69
        }
      },
      "128": {
        start: {
          line: 293,
          column: 42
        },
        end: {
          line: 293,
          column: 69
        }
      },
      "129": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 26
        }
      },
      "130": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 56
        }
      },
      "131": {
        start: {
          line: 296,
          column: 42
        },
        end: {
          line: 296,
          column: 56
        }
      },
      "132": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 69
        }
      },
      "133": {
        start: {
          line: 297,
          column: 42
        },
        end: {
          line: 297,
          column: 69
        }
      },
      "134": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 298,
          column: 26
        }
      },
      "135": {
        start: {
          line: 301,
          column: 24
        },
        end: {
          line: 312,
          column: 5
        }
      },
      "136": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 302,
          column: 38
        }
      },
      "137": {
        start: {
          line: 302,
          column: 25
        },
        end: {
          line: 302,
          column: 38
        }
      },
      "138": {
        start: {
          line: 303,
          column: 18
        },
        end: {
          line: 303,
          column: 22
        }
      },
      "139": {
        start: {
          line: 304,
          column: 22
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "140": {
        start: {
          line: 310,
          column: 18
        },
        end: {
          line: 310,
          column: 59
        }
      },
      "141": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 80
        }
      },
      "142": {
        start: {
          line: 313,
          column: 23
        },
        end: {
          line: 316,
          column: 5
        }
      },
      "143": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 52
        }
      },
      "144": {
        start: {
          line: 314,
          column: 23
        },
        end: {
          line: 314,
          column: 52
        }
      },
      "145": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 315,
          column: 44
        }
      },
      "146": {
        start: {
          line: 317,
          column: 24
        },
        end: {
          line: 319,
          column: 5
        }
      },
      "147": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 318,
          column: 22
        }
      },
      "148": {
        start: {
          line: 320,
          column: 26
        },
        end: {
          line: 338,
          column: 5
        }
      },
      "149": {
        start: {
          line: 321,
          column: 21
        },
        end: {
          line: 326,
          column: 9
        }
      },
      "150": {
        start: {
          line: 327,
          column: 21
        },
        end: {
          line: 331,
          column: 10
        }
      },
      "151": {
        start: {
          line: 332,
          column: 20
        },
        end: {
          line: 332,
          column: 45
        }
      },
      "152": {
        start: {
          line: 333,
          column: 18
        },
        end: {
          line: 333,
          column: 45
        }
      },
      "153": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 21
        }
      },
      "154": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 62
        }
      },
      "155": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 18
        }
      },
      "156": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 33
        }
      },
      "157": {
        start: {
          line: 339,
          column: 4
        },
        end: {
          line: 374,
          column: 5
        }
      },
      "158": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 373,
          column: 11
        }
      },
      "159": {
        start: {
          line: 362,
          column: 41
        },
        end: {
          line: 362,
          column: 62
        }
      },
      "160": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 868,
          column: 7
        }
      },
      "161": {
        start: {
          line: 408,
          column: 53
        },
        end: {
          line: 408,
          column: 83
        }
      },
      "162": {
        start: {
          line: 452,
          column: 84
        },
        end: {
          line: 472,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 26,
            column: 40
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 34
          }
        },
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 30
      },
      "4": {
        name: "PerformanceMonitor",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 27
          }
        },
        loc: {
          start: {
            line: 93,
            column: 30
          },
          end: {
            line: 869,
            column: 1
          }
        },
        line: 93
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 27
          }
        },
        loc: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 100
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 106,
            column: 15
          },
          end: {
            line: 106,
            column: 16
          }
        },
        loc: {
          start: {
            line: 106,
            column: 19
          },
          end: {
            line: 106,
            column: 35
          }
        },
        line: 106
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 111,
            column: 28
          },
          end: {
            line: 111,
            column: 29
          }
        },
        loc: {
          start: {
            line: 111,
            column: 32
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 111
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 115,
            column: 28
          }
        },
        loc: {
          start: {
            line: 115,
            column: 31
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 115
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 121,
            column: 27
          },
          end: {
            line: 121,
            column: 28
          }
        },
        loc: {
          start: {
            line: 121,
            column: 37
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 121
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 141,
            column: 30
          },
          end: {
            line: 141,
            column: 31
          }
        },
        loc: {
          start: {
            line: 141,
            column: 38
          },
          end: {
            line: 144,
            column: 17
          }
        },
        line: 141
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 156,
            column: 29
          },
          end: {
            line: 156,
            column: 30
          }
        },
        loc: {
          start: {
            line: 156,
            column: 39
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 156
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 28
          }
        },
        loc: {
          start: {
            line: 157,
            column: 38
          },
          end: {
            line: 178,
            column: 9
          }
        },
        line: 157
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 161,
            column: 68
          },
          end: {
            line: 161,
            column: 69
          }
        },
        loc: {
          start: {
            line: 161,
            column: 77
          },
          end: {
            line: 161,
            column: 116
          }
        },
        line: 161
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 171,
            column: 68
          },
          end: {
            line: 171,
            column: 69
          }
        },
        loc: {
          start: {
            line: 171,
            column: 77
          },
          end: {
            line: 171,
            column: 116
          }
        },
        line: 171
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 180,
            column: 30
          },
          end: {
            line: 180,
            column: 31
          }
        },
        loc: {
          start: {
            line: 180,
            column: 40
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 180
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 183,
            column: 26
          },
          end: {
            line: 183,
            column: 27
          }
        },
        loc: {
          start: {
            line: 183,
            column: 38
          },
          end: {
            line: 192,
            column: 9
          }
        },
        line: 183
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 200,
            column: 32
          },
          end: {
            line: 200,
            column: 33
          }
        },
        loc: {
          start: {
            line: 200,
            column: 42
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 200
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 208,
            column: 31
          },
          end: {
            line: 208,
            column: 32
          }
        },
        loc: {
          start: {
            line: 208,
            column: 41
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 208
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 223,
            column: 34
          },
          end: {
            line: 223,
            column: 35
          }
        },
        loc: {
          start: {
            line: 223,
            column: 44
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 223
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 226,
            column: 43
          },
          end: {
            line: 226,
            column: 44
          }
        },
        loc: {
          start: {
            line: 226,
            column: 60
          },
          end: {
            line: 226,
            column: 94
          }
        },
        line: 226
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 227,
            column: 49
          },
          end: {
            line: 227,
            column: 50
          }
        },
        loc: {
          start: {
            line: 227,
            column: 66
          },
          end: {
            line: 227,
            column: 118
          }
        },
        line: 227
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 234,
            column: 35
          },
          end: {
            line: 234,
            column: 36
          }
        },
        loc: {
          start: {
            line: 234,
            column: 46
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 234
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 284,
            column: 22
          },
          end: {
            line: 284,
            column: 23
          }
        },
        loc: {
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 287,
            column: 17
          }
        },
        line: 284
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 290,
            column: 28
          },
          end: {
            line: 290,
            column: 29
          }
        },
        loc: {
          start: {
            line: 290,
            column: 66
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 290
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 301,
            column: 24
          },
          end: {
            line: 301,
            column: 25
          }
        },
        loc: {
          start: {
            line: 301,
            column: 33
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 301
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 313,
            column: 23
          },
          end: {
            line: 313,
            column: 24
          }
        },
        loc: {
          start: {
            line: 313,
            column: 29
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 313
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 317,
            column: 24
          },
          end: {
            line: 317,
            column: 25
          }
        },
        loc: {
          start: {
            line: 317,
            column: 28
          },
          end: {
            line: 319,
            column: 5
          }
        },
        line: 317
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 320,
            column: 26
          },
          end: {
            line: 320,
            column: 27
          }
        },
        loc: {
          start: {
            line: 320,
            column: 30
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 320
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 362,
            column: 37
          },
          end: {
            line: 362,
            column: 38
          }
        },
        loc: {
          start: {
            line: 362,
            column: 41
          },
          end: {
            line: 362,
            column: 62
          }
        },
        line: 362
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 408,
            column: 49
          },
          end: {
            line: 408,
            column: 50
          }
        },
        loc: {
          start: {
            line: 408,
            column: 53
          },
          end: {
            line: 408,
            column: 83
          }
        },
        line: 408
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 452,
            column: 61
          },
          end: {
            line: 452,
            column: 62
          }
        },
        loc: {
          start: {
            line: 452,
            column: 84
          },
          end: {
            line: 472,
            column: 44
          }
        },
        line: 452
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 45
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 65
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 27
          }
        }, {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 45
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 47
          }
        }, {
          start: {
            line: 34,
            column: 51
          },
          end: {
            line: 34,
            column: 76
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 31
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 53
          }
        }, {
          start: {
            line: 46,
            column: 57
          },
          end: {
            line: 46,
            column: 88
          }
        }],
        line: 46
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 79
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 47
          },
          end: {
            line: 49,
            column: 88
          }
        }, {
          start: {
            line: 49,
            column: 91
          },
          end: {
            line: 49,
            column: 95
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 54,
            column: 13
          }
        }],
        line: 50
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 33
          }
        }, {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "15": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: 103,
            column: 15
          },
          end: {
            line: 105,
            column: 9
          }
        }],
        line: 101
      },
      "16": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "17": {
        loc: {
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        }, {
          start: {
            line: 167,
            column: 19
          },
          end: {
            line: 177,
            column: 13
          }
        }],
        line: 159
      },
      "18": {
        loc: {
          start: {
            line: 161,
            column: 25
          },
          end: {
            line: 161,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 25
          },
          end: {
            line: 161,
            column: 128
          }
        }, {
          start: {
            line: 161,
            column: 132
          },
          end: {
            line: 161,
            column: 133
          }
        }],
        line: 161
      },
      "19": {
        loc: {
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 165,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 165,
            column: 86
          }
        }, {
          start: {
            line: 165,
            column: 90
          },
          end: {
            line: 165,
            column: 91
          }
        }],
        line: 165
      },
      "20": {
        loc: {
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 171,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 25
          },
          end: {
            line: 171,
            column: 128
          }
        }, {
          start: {
            line: 171,
            column: 132
          },
          end: {
            line: 171,
            column: 133
          }
        }],
        line: 171
      },
      "21": {
        loc: {
          start: {
            line: 172,
            column: 25
          },
          end: {
            line: 172,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 172,
            column: 25
          },
          end: {
            line: 172,
            column: 74
          }
        }, {
          start: {
            line: 172,
            column: 78
          },
          end: {
            line: 172,
            column: 79
          }
        }],
        line: 172
      },
      "22": {
        loc: {
          start: {
            line: 175,
            column: 26
          },
          end: {
            line: 175,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 175,
            column: 26
          },
          end: {
            line: 175,
            column: 78
          }
        }, {
          start: {
            line: 175,
            column: 82
          },
          end: {
            line: 175,
            column: 83
          }
        }],
        line: 175
      },
      "23": {
        loc: {
          start: {
            line: 184,
            column: 25
          },
          end: {
            line: 184,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 25
          },
          end: {
            line: 184,
            column: 46
          }
        }, {
          start: {
            line: 184,
            column: 50
          },
          end: {
            line: 184,
            column: 51
          }
        }],
        line: 184
      },
      "24": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 191,
            column: 13
          }
        }],
        line: 185
      },
      "25": {
        loc: {
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: 189,
            column: 19
          },
          end: {
            line: 191,
            column: 13
          }
        }],
        line: 187
      },
      "26": {
        loc: {
          start: {
            line: 189,
            column: 19
          },
          end: {
            line: 191,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 19
          },
          end: {
            line: 191,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "27": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "28": {
        loc: {
          start: {
            line: 226,
            column: 67
          },
          end: {
            line: 226,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 226,
            column: 67
          },
          end: {
            line: 226,
            column: 88
          }
        }, {
          start: {
            line: 226,
            column: 92
          },
          end: {
            line: 226,
            column: 93
          }
        }],
        line: 226
      },
      "29": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "30": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "31": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 270,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 260
      },
      "32": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 282,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 282,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "33": {
        loc: {
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 8
          },
          end: {
            line: 288,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "34": {
        loc: {
          start: {
            line: 290,
            column: 48
          },
          end: {
            line: 290,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 290,
            column: 58
          },
          end: {
            line: 290,
            column: 63
          }
        }],
        line: 290
      },
      "35": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 299,
            column: 9
          }
        }, {
          start: {
            line: 295,
            column: 15
          },
          end: {
            line: 299,
            column: 9
          }
        }],
        line: 291
      },
      "36": {
        loc: {
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 292,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "37": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "38": {
        loc: {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 296,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 296,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "39": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 297,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 297,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "40": {
        loc: {
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 302,
            column: 8
          },
          end: {
            line: 302,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 302
      },
      "41": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 314,
            column: 52
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 314,
            column: 52
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "42": {
        loc: {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 374,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 339
      },
      "43": {
        loc: {
          start: {
            line: 390,
            column: 36
          },
          end: {
            line: 399,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 36
          },
          end: {
            line: 390,
            column: 48
          }
        }, {
          start: {
            line: 390,
            column: 66
          },
          end: {
            line: 399,
            column: 38
          }
        }],
        line: 390
      },
      "44": {
        loc: {
          start: {
            line: 409,
            column: 50
          },
          end: {
            line: 409,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 409,
            column: 65
          },
          end: {
            line: 409,
            column: 71
          }
        }, {
          start: {
            line: 409,
            column: 74
          },
          end: {
            line: 409,
            column: 81
          }
        }],
        line: 409
      },
      "45": {
        loc: {
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 476,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 12
          },
          end: {
            line: 423,
            column: 29
          }
        }, {
          start: {
            line: 423,
            column: 47
          },
          end: {
            line: 476,
            column: 14
          }
        }],
        line: 423
      },
      "46": {
        loc: {
          start: {
            line: 453,
            column: 47
          },
          end: {
            line: 453,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 453,
            column: 72
          },
          end: {
            line: 453,
            column: 88
          }
        }, {
          start: {
            line: 453,
            column: 91
          },
          end: {
            line: 453,
            column: 110
          }
        }],
        line: 453
      },
      "47": {
        loc: {
          start: {
            line: 462,
            column: 61
          },
          end: {
            line: 462,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 462,
            column: 86
          },
          end: {
            line: 462,
            column: 99
          }
        }, {
          start: {
            line: 462,
            column: 102
          },
          end: {
            line: 462,
            column: 113
          }
        }],
        line: 462
      },
      "48": {
        loc: {
          start: {
            line: 526,
            column: 69
          },
          end: {
            line: 526,
            column: 174
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 526,
            column: 149
          },
          end: {
            line: 526,
            column: 158
          }
        }, {
          start: {
            line: 526,
            column: 161
          },
          end: {
            line: 526,
            column: 174
          }
        }],
        line: 526
      },
      "49": {
        loc: {
          start: {
            line: 558,
            column: 69
          },
          end: {
            line: 558,
            column: 174
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 558,
            column: 149
          },
          end: {
            line: 558,
            column: 158
          }
        }, {
          start: {
            line: 558,
            column: 161
          },
          end: {
            line: 558,
            column: 174
          }
        }],
        line: 558
      },
      "50": {
        loc: {
          start: {
            line: 590,
            column: 69
          },
          end: {
            line: 590,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 590,
            column: 151
          },
          end: {
            line: 590,
            column: 160
          }
        }, {
          start: {
            line: 590,
            column: 163
          },
          end: {
            line: 590,
            column: 176
          }
        }],
        line: 590
      },
      "51": {
        loc: {
          start: {
            line: 711,
            column: 69
          },
          end: {
            line: 711,
            column: 196
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 711,
            column: 171
          },
          end: {
            line: 711,
            column: 180
          }
        }, {
          start: {
            line: 711,
            column: 183
          },
          end: {
            line: 711,
            column: 196
          }
        }],
        line: 711
      },
      "52": {
        loc: {
          start: {
            line: 798,
            column: 69
          },
          end: {
            line: 798,
            column: 191
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 798,
            column: 166
          },
          end: {
            line: 798,
            column: 175
          }
        }, {
          start: {
            line: 798,
            column: 178
          },
          end: {
            line: 798,
            column: 191
          }
        }],
        line: 798
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\performance\\PerformanceMonitor.tsx"],
      sourcesContent: ["'use client'\n\nimport * as React from 'react'\nimport { useState, useEffect, useRef } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card'\nimport { Badge } from '../ui/badge'\nimport { Button } from '../ui/button'\nimport { Progress } from '../ui/progress'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs'\nimport { Alert, AlertDescription } from '../ui/alert'\nimport { performanceOptimizationService } from '../../services/performanceOptimization'\nimport {\n  Activity,\n  Zap,\n  Clock,\n  Database,\n  Wifi,\n  AlertTriangle,\n  CheckCircle,\n  TrendingUp,\n  TrendingDown,\n  RefreshCw\n} from 'lucide-react'\n\ninterface PerformanceMetrics {\n  webVitals: {\n    fcp: number\n    lcp: number\n    fid: number\n    cls: number\n    ttfb: number\n  }\n  bundleSize: {\n    total: number\n    js: number\n    css: number\n    images: number\n  }\n  cacheMetrics: {\n    hitRate: number\n    missRate: number\n    size: number\n  }\n  memoryUsage: {\n    used: number\n    total: number\n    percentage: number\n  }\n  networkMetrics: {\n    requests: number\n    totalSize: number\n    avgResponseTime: number\n  }\n}\n\ninterface PerformanceAlert {\n  id: string\n  type: 'warning' | 'error' | 'info'\n  message: string\n  metric: string\n  value: number\n  threshold: number\n  timestamp: Date\n}\n\nconst PERFORMANCE_THRESHOLDS = {\n  fcp: { good: 1800, poor: 3000 },\n  lcp: { good: 2500, poor: 4000 },\n  fid: { good: 100, poor: 300 },\n  cls: { good: 0.1, poor: 0.25 },\n  ttfb: { good: 800, poor: 1800 },\n  cacheHitRate: { good: 80, poor: 60 },\n  memoryUsage: { good: 70, poor: 85 }\n}\n\nexport default function PerformanceMonitor() {\n  const [metrics, setMetrics] = useState<PerformanceMetrics | null>(null)\n  const [alerts, setAlerts] = useState<PerformanceAlert[]>([])\n  const [isMonitoring, setIsMonitoring] = useState(false)\n  const [refreshInterval, setRefreshInterval] = useState(5000)\n  const intervalRef = useRef<NodeJS.Timeout | null>(null)\n  const [historicalData, setHistoricalData] = useState<PerformanceMetrics[]>([])\n\n  useEffect(() => {\n    if (isMonitoring) {\n      startMonitoring()\n    } else {\n      stopMonitoring()\n    }\n\n    return () => stopMonitoring()\n  }, [isMonitoring, refreshInterval])\n\n  const startMonitoring = () => {\n    collectMetrics()\n    intervalRef.current = setInterval(collectMetrics, refreshInterval)\n  }\n\n  const stopMonitoring = () => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const collectMetrics = async () => {\n    try {\n      // Collect Web Vitals\n      const webVitals = await collectWebVitals()\n      \n      // Collect Bundle Size\n      const bundleSize = await collectBundleSize()\n      \n      // Collect Cache Metrics\n      const cacheMetrics = await collectCacheMetrics()\n      \n      // Collect Memory Usage\n      const memoryUsage = await collectMemoryUsage()\n      \n      // Collect Network Metrics\n      const networkMetrics = await collectNetworkMetrics()\n\n      const newMetrics: PerformanceMetrics = {\n        webVitals,\n        bundleSize,\n        cacheMetrics,\n        memoryUsage,\n        networkMetrics\n      }\n\n      setMetrics(newMetrics)\n      setHistoricalData(prev => [...prev.slice(-19), newMetrics])\n      \n      // Check for performance alerts\n      checkPerformanceAlerts(newMetrics)\n      \n      // Log metrics to performance service\n      performanceOptimizationService.logPerformanceMetric('monitoring', {\n        timestamp: Date.now(),\n        metrics: newMetrics\n      })\n    } catch (error) {\n      console.error('Failed to collect performance metrics:', error)\n    }\n  }\n\n  const collectWebVitals = async (): Promise<PerformanceMetrics['webVitals']> => {\n    return new Promise((resolve) => {\n      // Use Web Vitals API if available\n      if ('web-vitals' in window) {\n        resolve({\n          fcp: performance.getEntriesByType('paint').find(entry => entry.name === 'first-contentful-paint')?.startTime || 0,\n          lcp: 0, // Would be collected via web-vitals library\n          fid: 0, // Would be collected via web-vitals library\n          cls: 0, // Would be collected via web-vitals library\n          ttfb: (performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming)?.responseStart || 0\n        })\n      } else {\n        // Fallback metrics\n        const navigation = performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming\n        resolve({\n          fcp: performance.getEntriesByType('paint').find(entry => entry.name === 'first-contentful-paint')?.startTime || 0,\n          lcp: navigation?.loadEventEnd - navigation?.fetchStart || 0,\n          fid: 0,\n          cls: 0,\n          ttfb: navigation?.responseStart - navigation?.requestStart || 0\n        })\n      }\n    })\n  }\n\n  const collectBundleSize = async (): Promise<PerformanceMetrics['bundleSize']> => {\n    const resources = performance.getEntriesByType('resource') as PerformanceResourceTiming[]\n    \n    let js = 0, css = 0, images = 0\n    \n    resources.forEach(resource => {\n      const size = resource.transferSize || 0\n      \n      if (resource.name.includes('.js')) {\n        js += size\n      } else if (resource.name.includes('.css')) {\n        css += size\n      } else if (resource.name.match(/\\.(jpg|jpeg|png|gif|webp|svg)$/)) {\n        images += size\n      }\n    })\n    \n    return {\n      total: js + css + images,\n      js,\n      css,\n      images\n    }\n  }\n\n  const collectCacheMetrics = async (): Promise<PerformanceMetrics['cacheMetrics']> => {\n    const cacheStats = await performanceOptimizationService.getCacheStats()\n    \n    return {\n      hitRate: cacheStats.hitRate,\n      missRate: 100 - cacheStats.hitRate,\n      size: cacheStats.size\n    }\n  }\n\n  const collectMemoryUsage = async (): Promise<PerformanceMetrics['memoryUsage']> => {\n    if ('memory' in performance) {\n      const memory = (performance as any).memory\n      return {\n        used: memory.usedJSHeapSize,\n        total: memory.totalJSHeapSize,\n        percentage: (memory.usedJSHeapSize / memory.totalJSHeapSize) * 100\n      }\n    }\n    \n    return { used: 0, total: 0, percentage: 0 }\n  }\n\n  const collectNetworkMetrics = async (): Promise<PerformanceMetrics['networkMetrics']> => {\n    const resources = performance.getEntriesByType('resource') as PerformanceResourceTiming[]\n    \n    const requests = resources.length\n    const totalSize = resources.reduce((sum, resource) => sum + (resource.transferSize || 0), 0)\n    const avgResponseTime = resources.reduce((sum, resource) => \n      sum + (resource.responseEnd - resource.requestStart), 0) / requests\n    \n    return {\n      requests,\n      totalSize,\n      avgResponseTime\n    }\n  }\n\n  const checkPerformanceAlerts = (metrics: PerformanceMetrics) => {\n    const newAlerts: PerformanceAlert[] = []\n    \n    // Check Web Vitals\n    if (metrics.webVitals.fcp > PERFORMANCE_THRESHOLDS.fcp.poor) {\n      newAlerts.push({\n        id: `fcp-${Date.now()}`,\n        type: 'error',\n        message: 'First Contentful Paint is too slow',\n        metric: 'FCP',\n        value: metrics.webVitals.fcp,\n        threshold: PERFORMANCE_THRESHOLDS.fcp.poor,\n        timestamp: new Date()\n      })\n    }\n    \n    if (metrics.webVitals.lcp > PERFORMANCE_THRESHOLDS.lcp.poor) {\n      newAlerts.push({\n        id: `lcp-${Date.now()}`,\n        type: 'error',\n        message: 'Largest Contentful Paint is too slow',\n        metric: 'LCP',\n        value: metrics.webVitals.lcp,\n        threshold: PERFORMANCE_THRESHOLDS.lcp.poor,\n        timestamp: new Date()\n      })\n    }\n    \n    // Check Cache Hit Rate\n    if (metrics.cacheMetrics.hitRate < PERFORMANCE_THRESHOLDS.cacheHitRate.poor) {\n      newAlerts.push({\n        id: `cache-${Date.now()}`,\n        type: 'warning',\n        message: 'Cache hit rate is below optimal threshold',\n        metric: 'Cache Hit Rate',\n        value: metrics.cacheMetrics.hitRate,\n        threshold: PERFORMANCE_THRESHOLDS.cacheHitRate.poor,\n        timestamp: new Date()\n      })\n    }\n    \n    // Check Memory Usage\n    if (metrics.memoryUsage.percentage > PERFORMANCE_THRESHOLDS.memoryUsage.poor) {\n      newAlerts.push({\n        id: `memory-${Date.now()}`,\n        type: 'error',\n        message: 'Memory usage is critically high',\n        metric: 'Memory Usage',\n        value: metrics.memoryUsage.percentage,\n        threshold: PERFORMANCE_THRESHOLDS.memoryUsage.poor,\n        timestamp: new Date()\n      })\n    }\n    \n    if (newAlerts.length > 0) {\n      setAlerts(prev => [...newAlerts, ...prev.slice(0, 9)])\n    }\n  }\n\n  const getMetricStatus = (value: number, thresholds: { good: number; poor: number }, reverse = false) => {\n    if (reverse) {\n      if (value >= thresholds.good) return 'good'\n      if (value >= thresholds.poor) return 'needs-improvement'\n      return 'poor'\n    } else {\n      if (value <= thresholds.good) return 'good'\n      if (value <= thresholds.poor) return 'needs-improvement'\n      return 'poor'\n    }\n  }\n\n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 B'\n    const k = 1024\n    const sizes = ['B', 'KB', 'MB', 'GB']\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]\n  }\n\n  const formatTime = (ms: number) => {\n    if (ms < 1000) return `${Math.round(ms)}ms`\n    return `${(ms / 1000).toFixed(2)}s`\n  }\n\n  const clearAlerts = () => {\n    setAlerts([])\n  }\n\n  const exportMetrics = () => {\n    const data = {\n      currentMetrics: metrics,\n      historicalData,\n      alerts,\n      timestamp: new Date().toISOString()\n    }\n    \n    const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `performance-metrics-${Date.now()}.json`\n    a.click()\n    URL.revokeObjectURL(url)\n  }\n\n  if (!metrics) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Activity className=\"h-5 w-5\" />\n            Performance Monitor\n          </CardTitle>\n          <CardDescription>\n            Real-time performance monitoring and optimization insights\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center py-8\">\n            <Button onClick={() => setIsMonitoring(true)}>\n              <Zap className=\"h-4 w-4 mr-2\" />\n              Start Monitoring\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Control Panel */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <Activity className=\"h-5 w-5\" />\n              Performance Monitor\n              {isMonitoring && (\n                <Badge variant=\"outline\" className=\"ml-2\">\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full mr-1 animate-pulse\" />\n                  Live\n                </Badge>\n              )}\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => setIsMonitoring(!isMonitoring)}\n              >\n                {isMonitoring ? 'Stop' : 'Start'}\n              </Button>\n              <Button variant=\"outline\" size=\"sm\" onClick={exportMetrics}>\n                Export\n              </Button>\n            </div>\n          </CardTitle>\n        </CardHeader>\n      </Card>\n\n      {/* Alerts */}\n      {alerts.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />\n                Performance Alerts ({alerts.length})\n              </div>\n              <Button variant=\"outline\" size=\"sm\" onClick={clearAlerts}>\n                Clear All\n              </Button>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {alerts.slice(0, 5).map((alert) => (\n                <Alert key={alert.id} className={alert.type === 'error' ? 'border-red-200' : 'border-yellow-200'}>\n                  <AlertDescription>\n                    <div className=\"flex items-center justify-between\">\n                      <span>{alert.message}</span>\n                      <Badge variant={alert.type === 'error' ? 'destructive' : 'secondary'}>\n                        {alert.metric}: {alert.value.toFixed(2)}\n                      </Badge>\n                    </div>\n                  </AlertDescription>\n                </Alert>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Metrics Tabs */}\n      <Tabs defaultValue=\"vitals\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"vitals\">Web Vitals</TabsTrigger>\n          <TabsTrigger value=\"resources\">Resources</TabsTrigger>\n          <TabsTrigger value=\"cache\">Cache</TabsTrigger>\n          <TabsTrigger value=\"memory\">Memory</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"vitals\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {/* FCP */}\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">First Contentful Paint</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-2xl font-bold\">{formatTime(metrics.webVitals.fcp)}</span>\n                  <Badge \n                    variant={getMetricStatus(metrics.webVitals.fcp, PERFORMANCE_THRESHOLDS.fcp) === 'good' ? 'default' : 'destructive'}\n                  >\n                    {getMetricStatus(metrics.webVitals.fcp, PERFORMANCE_THRESHOLDS.fcp)}\n                  </Badge>\n                </div>\n                <Progress \n                  value={Math.min((metrics.webVitals.fcp / PERFORMANCE_THRESHOLDS.fcp.poor) * 100, 100)} \n                  className=\"mt-2\"\n                />\n              </CardContent>\n            </Card>\n\n            {/* LCP */}\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Largest Contentful Paint</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-2xl font-bold\">{formatTime(metrics.webVitals.lcp)}</span>\n                  <Badge \n                    variant={getMetricStatus(metrics.webVitals.lcp, PERFORMANCE_THRESHOLDS.lcp) === 'good' ? 'default' : 'destructive'}\n                  >\n                    {getMetricStatus(metrics.webVitals.lcp, PERFORMANCE_THRESHOLDS.lcp)}\n                  </Badge>\n                </div>\n                <Progress \n                  value={Math.min((metrics.webVitals.lcp / PERFORMANCE_THRESHOLDS.lcp.poor) * 100, 100)} \n                  className=\"mt-2\"\n                />\n              </CardContent>\n            </Card>\n\n            {/* TTFB */}\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Time to First Byte</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-2xl font-bold\">{formatTime(metrics.webVitals.ttfb)}</span>\n                  <Badge \n                    variant={getMetricStatus(metrics.webVitals.ttfb, PERFORMANCE_THRESHOLDS.ttfb) === 'good' ? 'default' : 'destructive'}\n                  >\n                    {getMetricStatus(metrics.webVitals.ttfb, PERFORMANCE_THRESHOLDS.ttfb)}\n                  </Badge>\n                </div>\n                <Progress \n                  value={Math.min((metrics.webVitals.ttfb / PERFORMANCE_THRESHOLDS.ttfb.poor) * 100, 100)} \n                  className=\"mt-2\"\n                />\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"resources\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Total Bundle Size</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{formatBytes(metrics.bundleSize.total)}</span>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">JavaScript</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{formatBytes(metrics.bundleSize.js)}</span>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">CSS</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{formatBytes(metrics.bundleSize.css)}</span>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Images</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{formatBytes(metrics.bundleSize.images)}</span>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"cache\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Cache Hit Rate</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-2xl font-bold\">{metrics.cacheMetrics.hitRate.toFixed(1)}%</span>\n                  <Badge \n                    variant={getMetricStatus(metrics.cacheMetrics.hitRate, PERFORMANCE_THRESHOLDS.cacheHitRate, true) === 'good' ? 'default' : 'destructive'}\n                  >\n                    {getMetricStatus(metrics.cacheMetrics.hitRate, PERFORMANCE_THRESHOLDS.cacheHitRate, true)}\n                  </Badge>\n                </div>\n                <Progress value={metrics.cacheMetrics.hitRate} className=\"mt-2\" />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Cache Miss Rate</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{metrics.cacheMetrics.missRate.toFixed(1)}%</span>\n                <Progress value={metrics.cacheMetrics.missRate} className=\"mt-2\" />\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Cache Size</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{formatBytes(metrics.cacheMetrics.size)}</span>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"memory\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Memory Usage</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-2xl font-bold\">{metrics.memoryUsage.percentage.toFixed(1)}%</span>\n                  <Badge \n                    variant={getMetricStatus(metrics.memoryUsage.percentage, PERFORMANCE_THRESHOLDS.memoryUsage) === 'good' ? 'default' : 'destructive'}\n                  >\n                    {getMetricStatus(metrics.memoryUsage.percentage, PERFORMANCE_THRESHOLDS.memoryUsage)}\n                  </Badge>\n                </div>\n                <Progress value={metrics.memoryUsage.percentage} className=\"mt-2\" />\n                <div className=\"text-sm text-muted-foreground mt-1\">\n                  {formatBytes(metrics.memoryUsage.used)} / {formatBytes(metrics.memoryUsage.total)}\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Network Requests</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{metrics.networkMetrics.requests}</span>\n                <div className=\"text-sm text-muted-foreground mt-1\">\n                  Total: {formatBytes(metrics.networkMetrics.totalSize)}\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm font-medium\">Avg Response Time</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <span className=\"text-2xl font-bold\">{formatTime(metrics.networkMetrics.avgResponseTime)}</span>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n}"],
      names: ["PerformanceMonitor", "PERFORMANCE_THRESHOLDS", "fcp", "good", "poor", "lcp", "fid", "cls", "ttfb", "cacheHitRate", "memoryUsage", "metrics", "setMetrics", "useState", "alerts", "setAlerts", "isMonitoring", "setIsMonitoring", "refreshInterval", "setRefreshInterval", "intervalRef", "useRef", "historicalData", "setHistoricalData", "useEffect", "startMonitoring", "stopMonitoring", "collectMetrics", "current", "setInterval", "clearInterval", "webVitals", "collectWebVitals", "bundleSize", "collectBundleSize", "cacheMetrics", "collectCacheMetrics", "collectMemoryUsage", "networkMetrics", "collectNetworkMetrics", "newMetrics", "prev", "slice", "checkPerformanceAlerts", "performanceOptimizationService", "logPerformanceMetric", "timestamp", "Date", "now", "error", "console", "Promise", "resolve", "window", "performance", "getEntriesByType", "find", "entry", "name", "startTime", "responseStart", "navigation", "loadEventEnd", "fetchStart", "requestStart", "resources", "js", "css", "images", "forEach", "resource", "size", "transferSize", "includes", "match", "total", "cacheStats", "getCacheStats", "hitRate", "missRate", "memory", "used", "usedJSHeapSize", "totalJSHeapSize", "percentage", "requests", "length", "totalSize", "reduce", "sum", "avgResponseTime", "responseEnd", "newAlerts", "push", "id", "type", "message", "metric", "value", "threshold", "getMetricStatus", "thresholds", "reverse", "formatBytes", "bytes", "k", "sizes", "i", "Math", "floor", "log", "parseFloat", "pow", "toFixed", "formatTime", "ms", "round", "clearAlerts", "exportMetrics", "data", "currentMetrics", "toISOString", "blob", "Blob", "JSON", "stringify", "url", "URL", "createObjectURL", "a", "document", "createElement", "href", "download", "click", "revokeObjectURL", "Card", "CardHeader", "CardTitle", "className", "Activity", "CardDescription", "CardContent", "div", "Button", "onClick", "Zap", "Badge", "variant", "AlertTriangle", "map", "alert", "Alert", "AlertDescription", "span", "Tabs", "defaultValue", "TabsList", "TabsTrigger", "TabsContent", "Progress", "min"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "837ca5539147f0df37c54575a4556075a9f63b2f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ku4lug0r7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ku4lug0r7();
cov_2ku4lug0r7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ku4lug0r7().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[0]++;
    cov_2ku4lug0r7().s[2]++;
    return PerformanceMonitor;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2ku4lug0r7().s[4]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[5]++, require("../ui/card"));
const _badge =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[6]++, require("../ui/badge"));
const _button =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[7]++, require("../ui/button"));
const _progress =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[8]++, require("../ui/progress"));
const _tabs =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[9]++, require("../ui/tabs"));
const _alert =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[10]++, require("../ui/alert"));
const _performanceOptimization =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[11]++, require("../../services/performanceOptimization"));
const _lucidereact =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[12]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2ku4lug0r7().f[1]++;
  cov_2ku4lug0r7().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2ku4lug0r7().b[0][0]++;
    cov_2ku4lug0r7().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2ku4lug0r7().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[2]++;
    cov_2ku4lug0r7().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2ku4lug0r7().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2ku4lug0r7().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2ku4lug0r7().f[3]++;
  cov_2ku4lug0r7().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2ku4lug0r7().b[2][0]++;
    cov_2ku4lug0r7().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2ku4lug0r7().b[2][1]++;
  }
  cov_2ku4lug0r7().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2ku4lug0r7().b[4][0]++;
    cov_2ku4lug0r7().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2ku4lug0r7().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2ku4lug0r7().b[6][0]++;
    cov_2ku4lug0r7().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2ku4lug0r7().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[27]++,
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_2ku4lug0r7().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2ku4lug0r7().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[12][0]++;
        cov_2ku4lug0r7().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[12][1]++;
        cov_2ku4lug0r7().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2ku4lug0r7().b[14][0]++;
    cov_2ku4lug0r7().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2ku4lug0r7().b[14][1]++;
  }
  cov_2ku4lug0r7().s[37]++;
  return newObj;
}
const PERFORMANCE_THRESHOLDS =
/* istanbul ignore next */
(cov_2ku4lug0r7().s[38]++, {
  fcp: {
    good: 1800,
    poor: 3000
  },
  lcp: {
    good: 2500,
    poor: 4000
  },
  fid: {
    good: 100,
    poor: 300
  },
  cls: {
    good: 0.1,
    poor: 0.25
  },
  ttfb: {
    good: 800,
    poor: 1800
  },
  cacheHitRate: {
    good: 80,
    poor: 60
  },
  memoryUsage: {
    good: 70,
    poor: 85
  }
});
function PerformanceMonitor() {
  /* istanbul ignore next */
  cov_2ku4lug0r7().f[4]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[39]++, (0, _react.useState)(null));
  const [alerts, setAlerts] =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[40]++, (0, _react.useState)([]));
  const [isMonitoring, setIsMonitoring] =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[41]++, (0, _react.useState)(false));
  const [refreshInterval, setRefreshInterval] =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[42]++, (0, _react.useState)(5000));
  const intervalRef =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[43]++, (0, _react.useRef)(null));
  const [historicalData, setHistoricalData] =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().s[44]++, (0, _react.useState)([]));
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[45]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[5]++;
    cov_2ku4lug0r7().s[46]++;
    if (isMonitoring) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[15][0]++;
      cov_2ku4lug0r7().s[47]++;
      startMonitoring();
    } else {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[15][1]++;
      cov_2ku4lug0r7().s[48]++;
      stopMonitoring();
    }
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[49]++;
    return () => {
      /* istanbul ignore next */
      cov_2ku4lug0r7().f[6]++;
      cov_2ku4lug0r7().s[50]++;
      return stopMonitoring();
    };
  }, [isMonitoring, refreshInterval]);
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[51]++;
  const startMonitoring = () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[7]++;
    cov_2ku4lug0r7().s[52]++;
    collectMetrics();
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[53]++;
    intervalRef.current = setInterval(collectMetrics, refreshInterval);
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[54]++;
  const stopMonitoring = () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[8]++;
    cov_2ku4lug0r7().s[55]++;
    if (intervalRef.current) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[16][0]++;
      cov_2ku4lug0r7().s[56]++;
      clearInterval(intervalRef.current);
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[57]++;
      intervalRef.current = null;
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[16][1]++;
    }
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[58]++;
  const collectMetrics = async () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[9]++;
    cov_2ku4lug0r7().s[59]++;
    try {
      // Collect Web Vitals
      const webVitals =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[60]++, await collectWebVitals());
      // Collect Bundle Size
      const bundleSize =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[61]++, await collectBundleSize());
      // Collect Cache Metrics
      const cacheMetrics =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[62]++, await collectCacheMetrics());
      // Collect Memory Usage
      const memoryUsage =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[63]++, await collectMemoryUsage());
      // Collect Network Metrics
      const networkMetrics =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[64]++, await collectNetworkMetrics());
      const newMetrics =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[65]++, {
        webVitals,
        bundleSize,
        cacheMetrics,
        memoryUsage,
        networkMetrics
      });
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[66]++;
      setMetrics(newMetrics);
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[67]++;
      setHistoricalData(prev => {
        /* istanbul ignore next */
        cov_2ku4lug0r7().f[10]++;
        cov_2ku4lug0r7().s[68]++;
        return [...prev.slice(-19), newMetrics];
      });
      // Check for performance alerts
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[69]++;
      checkPerformanceAlerts(newMetrics);
      // Log metrics to performance service
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[70]++;
      _performanceOptimization.performanceOptimizationService.logPerformanceMetric('monitoring', {
        timestamp: Date.now(),
        metrics: newMetrics
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[71]++;
      console.error('Failed to collect performance metrics:', error);
    }
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[72]++;
  const collectWebVitals = async () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[11]++;
    cov_2ku4lug0r7().s[73]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2ku4lug0r7().f[12]++;
      cov_2ku4lug0r7().s[74]++;
      // Use Web Vitals API if available
      if ('web-vitals' in window) {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[17][0]++;
        cov_2ku4lug0r7().s[75]++;
        resolve({
          fcp:
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[18][0]++, performance.getEntriesByType('paint').find(entry => {
            /* istanbul ignore next */
            cov_2ku4lug0r7().f[13]++;
            cov_2ku4lug0r7().s[76]++;
            return entry.name === 'first-contentful-paint';
          })?.startTime) ||
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[18][1]++, 0),
          lcp: 0,
          fid: 0,
          cls: 0,
          ttfb:
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[19][0]++, performance.getEntriesByType('navigation')[0]?.responseStart) ||
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[19][1]++, 0)
        });
      } else {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[17][1]++;
        // Fallback metrics
        const navigation =
        /* istanbul ignore next */
        (cov_2ku4lug0r7().s[77]++, performance.getEntriesByType('navigation')[0]);
        /* istanbul ignore next */
        cov_2ku4lug0r7().s[78]++;
        resolve({
          fcp:
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[20][0]++, performance.getEntriesByType('paint').find(entry => {
            /* istanbul ignore next */
            cov_2ku4lug0r7().f[14]++;
            cov_2ku4lug0r7().s[79]++;
            return entry.name === 'first-contentful-paint';
          })?.startTime) ||
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[20][1]++, 0),
          lcp:
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[21][0]++, navigation?.loadEventEnd - navigation?.fetchStart) ||
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[21][1]++, 0),
          fid: 0,
          cls: 0,
          ttfb:
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[22][0]++, navigation?.responseStart - navigation?.requestStart) ||
          /* istanbul ignore next */
          (cov_2ku4lug0r7().b[22][1]++, 0)
        });
      }
    });
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[80]++;
  const collectBundleSize = async () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[15]++;
    const resources =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[81]++, performance.getEntriesByType('resource'));
    let js =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[82]++, 0),
      css =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[83]++, 0),
      images =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[84]++, 0);
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[85]++;
    resources.forEach(resource => {
      /* istanbul ignore next */
      cov_2ku4lug0r7().f[16]++;
      const size =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[86]++,
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[23][0]++, resource.transferSize) ||
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[23][1]++, 0));
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[87]++;
      if (resource.name.includes('.js')) {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[24][0]++;
        cov_2ku4lug0r7().s[88]++;
        js += size;
      } else {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[24][1]++;
        cov_2ku4lug0r7().s[89]++;
        if (resource.name.includes('.css')) {
          /* istanbul ignore next */
          cov_2ku4lug0r7().b[25][0]++;
          cov_2ku4lug0r7().s[90]++;
          css += size;
        } else {
          /* istanbul ignore next */
          cov_2ku4lug0r7().b[25][1]++;
          cov_2ku4lug0r7().s[91]++;
          if (resource.name.match(/\.(jpg|jpeg|png|gif|webp|svg)$/)) {
            /* istanbul ignore next */
            cov_2ku4lug0r7().b[26][0]++;
            cov_2ku4lug0r7().s[92]++;
            images += size;
          } else
          /* istanbul ignore next */
          {
            cov_2ku4lug0r7().b[26][1]++;
          }
        }
      }
    });
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[93]++;
    return {
      total: js + css + images,
      js,
      css,
      images
    };
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[94]++;
  const collectCacheMetrics = async () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[17]++;
    const cacheStats =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[95]++, await _performanceOptimization.performanceOptimizationService.getCacheStats());
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[96]++;
    return {
      hitRate: cacheStats.hitRate,
      missRate: 100 - cacheStats.hitRate,
      size: cacheStats.size
    };
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[97]++;
  const collectMemoryUsage = async () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[18]++;
    cov_2ku4lug0r7().s[98]++;
    if ('memory' in performance) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[27][0]++;
      const memory =
      /* istanbul ignore next */
      (cov_2ku4lug0r7().s[99]++, performance.memory);
      /* istanbul ignore next */
      cov_2ku4lug0r7().s[100]++;
      return {
        used: memory.usedJSHeapSize,
        total: memory.totalJSHeapSize,
        percentage: memory.usedJSHeapSize / memory.totalJSHeapSize * 100
      };
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[27][1]++;
    }
    cov_2ku4lug0r7().s[101]++;
    return {
      used: 0,
      total: 0,
      percentage: 0
    };
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[102]++;
  const collectNetworkMetrics = async () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[19]++;
    const resources =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[103]++, performance.getEntriesByType('resource'));
    const requests =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[104]++, resources.length);
    const totalSize =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[105]++, resources.reduce((sum, resource) => {
      /* istanbul ignore next */
      cov_2ku4lug0r7().f[20]++;
      cov_2ku4lug0r7().s[106]++;
      return sum + (
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[28][0]++, resource.transferSize) ||
      /* istanbul ignore next */
      (cov_2ku4lug0r7().b[28][1]++, 0));
    }, 0));
    const avgResponseTime =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[107]++, resources.reduce((sum, resource) => {
      /* istanbul ignore next */
      cov_2ku4lug0r7().f[21]++;
      cov_2ku4lug0r7().s[108]++;
      return sum + (resource.responseEnd - resource.requestStart);
    }, 0) / requests);
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[109]++;
    return {
      requests,
      totalSize,
      avgResponseTime
    };
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[110]++;
  const checkPerformanceAlerts = metrics => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[22]++;
    const newAlerts =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[111]++, []);
    // Check Web Vitals
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[112]++;
    if (metrics.webVitals.fcp > PERFORMANCE_THRESHOLDS.fcp.poor) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[29][0]++;
      cov_2ku4lug0r7().s[113]++;
      newAlerts.push({
        id: `fcp-${Date.now()}`,
        type: 'error',
        message: 'First Contentful Paint is too slow',
        metric: 'FCP',
        value: metrics.webVitals.fcp,
        threshold: PERFORMANCE_THRESHOLDS.fcp.poor,
        timestamp: new Date()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[29][1]++;
    }
    cov_2ku4lug0r7().s[114]++;
    if (metrics.webVitals.lcp > PERFORMANCE_THRESHOLDS.lcp.poor) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[30][0]++;
      cov_2ku4lug0r7().s[115]++;
      newAlerts.push({
        id: `lcp-${Date.now()}`,
        type: 'error',
        message: 'Largest Contentful Paint is too slow',
        metric: 'LCP',
        value: metrics.webVitals.lcp,
        threshold: PERFORMANCE_THRESHOLDS.lcp.poor,
        timestamp: new Date()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[30][1]++;
    }
    // Check Cache Hit Rate
    cov_2ku4lug0r7().s[116]++;
    if (metrics.cacheMetrics.hitRate < PERFORMANCE_THRESHOLDS.cacheHitRate.poor) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[31][0]++;
      cov_2ku4lug0r7().s[117]++;
      newAlerts.push({
        id: `cache-${Date.now()}`,
        type: 'warning',
        message: 'Cache hit rate is below optimal threshold',
        metric: 'Cache Hit Rate',
        value: metrics.cacheMetrics.hitRate,
        threshold: PERFORMANCE_THRESHOLDS.cacheHitRate.poor,
        timestamp: new Date()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[31][1]++;
    }
    // Check Memory Usage
    cov_2ku4lug0r7().s[118]++;
    if (metrics.memoryUsage.percentage > PERFORMANCE_THRESHOLDS.memoryUsage.poor) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[32][0]++;
      cov_2ku4lug0r7().s[119]++;
      newAlerts.push({
        id: `memory-${Date.now()}`,
        type: 'error',
        message: 'Memory usage is critically high',
        metric: 'Memory Usage',
        value: metrics.memoryUsage.percentage,
        threshold: PERFORMANCE_THRESHOLDS.memoryUsage.poor,
        timestamp: new Date()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[32][1]++;
    }
    cov_2ku4lug0r7().s[120]++;
    if (newAlerts.length > 0) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[33][0]++;
      cov_2ku4lug0r7().s[121]++;
      setAlerts(prev => {
        /* istanbul ignore next */
        cov_2ku4lug0r7().f[23]++;
        cov_2ku4lug0r7().s[122]++;
        return [...newAlerts, ...prev.slice(0, 9)];
      });
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[33][1]++;
    }
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[123]++;
  const getMetricStatus = (value, thresholds, reverse =
  /* istanbul ignore next */
  (cov_2ku4lug0r7().b[34][0]++, false)) => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[24]++;
    cov_2ku4lug0r7().s[124]++;
    if (reverse) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[35][0]++;
      cov_2ku4lug0r7().s[125]++;
      if (value >= thresholds.good) {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[36][0]++;
        cov_2ku4lug0r7().s[126]++;
        return 'good';
      } else
      /* istanbul ignore next */
      {
        cov_2ku4lug0r7().b[36][1]++;
      }
      cov_2ku4lug0r7().s[127]++;
      if (value >= thresholds.poor) {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[37][0]++;
        cov_2ku4lug0r7().s[128]++;
        return 'needs-improvement';
      } else
      /* istanbul ignore next */
      {
        cov_2ku4lug0r7().b[37][1]++;
      }
      cov_2ku4lug0r7().s[129]++;
      return 'poor';
    } else {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[35][1]++;
      cov_2ku4lug0r7().s[130]++;
      if (value <= thresholds.good) {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[38][0]++;
        cov_2ku4lug0r7().s[131]++;
        return 'good';
      } else
      /* istanbul ignore next */
      {
        cov_2ku4lug0r7().b[38][1]++;
      }
      cov_2ku4lug0r7().s[132]++;
      if (value <= thresholds.poor) {
        /* istanbul ignore next */
        cov_2ku4lug0r7().b[39][0]++;
        cov_2ku4lug0r7().s[133]++;
        return 'needs-improvement';
      } else
      /* istanbul ignore next */
      {
        cov_2ku4lug0r7().b[39][1]++;
      }
      cov_2ku4lug0r7().s[134]++;
      return 'poor';
    }
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[135]++;
  const formatBytes = bytes => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[25]++;
    cov_2ku4lug0r7().s[136]++;
    if (bytes === 0) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[40][0]++;
      cov_2ku4lug0r7().s[137]++;
      return '0 B';
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[40][1]++;
    }
    const k =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[138]++, 1024);
    const sizes =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[139]++, ['B', 'KB', 'MB', 'GB']);
    const i =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[140]++, Math.floor(Math.log(bytes) / Math.log(k)));
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[141]++;
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[142]++;
  const formatTime = ms => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[26]++;
    cov_2ku4lug0r7().s[143]++;
    if (ms < 1000) {
      /* istanbul ignore next */
      cov_2ku4lug0r7().b[41][0]++;
      cov_2ku4lug0r7().s[144]++;
      return `${Math.round(ms)}ms`;
    } else
    /* istanbul ignore next */
    {
      cov_2ku4lug0r7().b[41][1]++;
    }
    cov_2ku4lug0r7().s[145]++;
    return `${(ms / 1000).toFixed(2)}s`;
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[146]++;
  const clearAlerts = () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[27]++;
    cov_2ku4lug0r7().s[147]++;
    setAlerts([]);
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[148]++;
  const exportMetrics = () => {
    /* istanbul ignore next */
    cov_2ku4lug0r7().f[28]++;
    const data =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[149]++, {
      currentMetrics: metrics,
      historicalData,
      alerts,
      timestamp: new Date().toISOString()
    });
    const blob =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[150]++, new Blob([JSON.stringify(data, null, 2)], {
      type: 'application/json'
    }));
    const url =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[151]++, URL.createObjectURL(blob));
    const a =
    /* istanbul ignore next */
    (cov_2ku4lug0r7().s[152]++, document.createElement('a'));
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[153]++;
    a.href = url;
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[154]++;
    a.download = `performance-metrics-${Date.now()}.json`;
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[155]++;
    a.click();
    /* istanbul ignore next */
    cov_2ku4lug0r7().s[156]++;
    URL.revokeObjectURL(url);
  };
  /* istanbul ignore next */
  cov_2ku4lug0r7().s[157]++;
  if (!metrics) {
    /* istanbul ignore next */
    cov_2ku4lug0r7().b[42][0]++;
    cov_2ku4lug0r7().s[158]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "flex items-center gap-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
            className: "h-5 w-5"
          }), "Performance Monitor"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
          children: "Real-time performance monitoring and optimization insights"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center justify-center py-8",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
            onClick: () => {
              /* istanbul ignore next */
              cov_2ku4lug0r7().f[29]++;
              cov_2ku4lug0r7().s[159]++;
              return setIsMonitoring(true);
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Zap, {
              className: "h-4 w-4 mr-2"
            }), "Start Monitoring"]
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_2ku4lug0r7().b[42][1]++;
  }
  cov_2ku4lug0r7().s[160]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Activity, {
              className: "h-5 w-5"
            }), "Performance Monitor",
            /* istanbul ignore next */
            (cov_2ku4lug0r7().b[43][0]++, isMonitoring) &&
            /* istanbul ignore next */
            (cov_2ku4lug0r7().b[43][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
              variant: "outline",
              className: "ml-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "w-2 h-2 bg-green-500 rounded-full mr-1 animate-pulse"
              }), "Live"]
            }))]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_2ku4lug0r7().f[30]++;
                cov_2ku4lug0r7().s[161]++;
                return setIsMonitoring(!isMonitoring);
              },
              children: isMonitoring ?
              /* istanbul ignore next */
              (cov_2ku4lug0r7().b[44][0]++, 'Stop') :
              /* istanbul ignore next */
              (cov_2ku4lug0r7().b[44][1]++, 'Start')
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
              variant: "outline",
              size: "sm",
              onClick: exportMetrics,
              children: "Export"
            })]
          })]
        })
      })
    }),
    /* istanbul ignore next */
    (cov_2ku4lug0r7().b[45][0]++, alerts.length > 0) &&
    /* istanbul ignore next */
    (cov_2ku4lug0r7().b[45][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
              className: "h-5 w-5 text-yellow-500"
            }), "Performance Alerts (", alerts.length, ")"]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: clearAlerts,
            children: "Clear All"
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-2",
          children: alerts.slice(0, 5).map(alert => {
            /* istanbul ignore next */
            cov_2ku4lug0r7().f[31]++;
            cov_2ku4lug0r7().s[162]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.Alert, {
              className: alert.type === 'error' ?
              /* istanbul ignore next */
              (cov_2ku4lug0r7().b[46][0]++, 'border-red-200') :
              /* istanbul ignore next */
              (cov_2ku4lug0r7().b[46][1]++, 'border-yellow-200'),
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    children: alert.message
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_badge.Badge, {
                    variant: alert.type === 'error' ?
                    /* istanbul ignore next */
                    (cov_2ku4lug0r7().b[47][0]++, 'destructive') :
                    /* istanbul ignore next */
                    (cov_2ku4lug0r7().b[47][1]++, 'secondary'),
                    children: [alert.metric, ": ", alert.value.toFixed(2)]
                  })]
                })
              })
            }, alert.id);
          })
        })
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
      defaultValue: "vitals",
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "vitals",
          children: "Web Vitals"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "resources",
          children: "Resources"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "cache",
          children: "Cache"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "memory",
          children: "Memory"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "vitals",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "First Contentful Paint"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-2xl font-bold",
                  children: formatTime(metrics.webVitals.fcp)
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: getMetricStatus(metrics.webVitals.fcp, PERFORMANCE_THRESHOLDS.fcp) === 'good' ?
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[48][0]++, 'default') :
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[48][1]++, 'destructive'),
                  children: getMetricStatus(metrics.webVitals.fcp, PERFORMANCE_THRESHOLDS.fcp)
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                value: Math.min(metrics.webVitals.fcp / PERFORMANCE_THRESHOLDS.fcp.poor * 100, 100),
                className: "mt-2"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Largest Contentful Paint"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-2xl font-bold",
                  children: formatTime(metrics.webVitals.lcp)
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: getMetricStatus(metrics.webVitals.lcp, PERFORMANCE_THRESHOLDS.lcp) === 'good' ?
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[49][0]++, 'default') :
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[49][1]++, 'destructive'),
                  children: getMetricStatus(metrics.webVitals.lcp, PERFORMANCE_THRESHOLDS.lcp)
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                value: Math.min(metrics.webVitals.lcp / PERFORMANCE_THRESHOLDS.lcp.poor * 100, 100),
                className: "mt-2"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Time to First Byte"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-2xl font-bold",
                  children: formatTime(metrics.webVitals.ttfb)
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: getMetricStatus(metrics.webVitals.ttfb, PERFORMANCE_THRESHOLDS.ttfb) === 'good' ?
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[50][0]++, 'default') :
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[50][1]++, 'destructive'),
                  children: getMetricStatus(metrics.webVitals.ttfb, PERFORMANCE_THRESHOLDS.ttfb)
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                value: Math.min(metrics.webVitals.ttfb / PERFORMANCE_THRESHOLDS.ttfb.poor * 100, 100),
                className: "mt-2"
              })]
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "resources",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Total Bundle Size"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl font-bold",
                children: formatBytes(metrics.bundleSize.total)
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "JavaScript"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl font-bold",
                children: formatBytes(metrics.bundleSize.js)
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "CSS"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl font-bold",
                children: formatBytes(metrics.bundleSize.css)
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Images"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl font-bold",
                children: formatBytes(metrics.bundleSize.images)
              })
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "cache",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-1 md:grid-cols-3 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Cache Hit Rate"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "text-2xl font-bold",
                  children: [metrics.cacheMetrics.hitRate.toFixed(1), "%"]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: getMetricStatus(metrics.cacheMetrics.hitRate, PERFORMANCE_THRESHOLDS.cacheHitRate, true) === 'good' ?
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[51][0]++, 'default') :
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[51][1]++, 'destructive'),
                  children: getMetricStatus(metrics.cacheMetrics.hitRate, PERFORMANCE_THRESHOLDS.cacheHitRate, true)
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                value: metrics.cacheMetrics.hitRate,
                className: "mt-2"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Cache Miss Rate"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "text-2xl font-bold",
                children: [metrics.cacheMetrics.missRate.toFixed(1), "%"]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                value: metrics.cacheMetrics.missRate,
                className: "mt-2"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Cache Size"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl font-bold",
                children: formatBytes(metrics.cacheMetrics.size)
              })
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "memory",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-1 md:grid-cols-3 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Memory Usage"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "text-2xl font-bold",
                  children: [metrics.memoryUsage.percentage.toFixed(1), "%"]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_badge.Badge, {
                  variant: getMetricStatus(metrics.memoryUsage.percentage, PERFORMANCE_THRESHOLDS.memoryUsage) === 'good' ?
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[52][0]++, 'default') :
                  /* istanbul ignore next */
                  (cov_2ku4lug0r7().b[52][1]++, 'destructive'),
                  children: getMetricStatus(metrics.memoryUsage.percentage, PERFORMANCE_THRESHOLDS.memoryUsage)
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                value: metrics.memoryUsage.percentage,
                className: "mt-2"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-muted-foreground mt-1",
                children: [formatBytes(metrics.memoryUsage.used), " / ", formatBytes(metrics.memoryUsage.total)]
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Network Requests"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl font-bold",
                children: metrics.networkMetrics.requests
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-muted-foreground mt-1",
                children: ["Total: ", formatBytes(metrics.networkMetrics.totalSize)]
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              className: "pb-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                className: "text-sm font-medium",
                children: "Avg Response Time"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-2xl font-bold",
                children: formatTime(metrics.networkMetrics.avgResponseTime)
              })
            })]
          })]
        })
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,