6362f2aa5aee646f07217aae01c384f5
'use client';
"use strict";

/* istanbul ignore next */
function cov_1z4jgt3dv() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ErrorBoundary.tsx";
  var hash = "00296c889101564b49a4dec78799c3b678dfede9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 32
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 33
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "9": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "10": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 34
        }
      },
      "11": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "12": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "13": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 44
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "15": {
        start: {
          line: 31,
          column: 39
        },
        end: {
          line: 31,
          column: 51
        }
      },
      "16": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 41
        }
      },
      "17": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 20
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 19
        }
      },
      "22": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "24": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "27": {
        start: {
          line: 51,
          column: 17
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "28": {
        start: {
          line: 54,
          column: 32
        },
        end: {
          line: 54,
          column: 88
        }
      },
      "29": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "30": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "31": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 95
        }
      },
      "32": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "33": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 57
        }
      },
      "34": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "35": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 25
        }
      },
      "36": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "37": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "38": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "39": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "40": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "41": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 50
        }
      },
      "42": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 83,
          column: 15
        }
      },
      "43": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 87,
          column: 13
        }
      },
      "44": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 23
        }
      },
      "45": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 38
        }
      },
      "46": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 37
        }
      },
      "47": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 39
        }
      },
      "48": {
        start: {
          line: 94,
          column: 50
        },
        end: {
          line: 94,
          column: 60
        }
      },
      "49": {
        start: {
          line: 95,
          column: 33
        },
        end: {
          line: 103,
          column: 13
        }
      },
      "50": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "51": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 91
        }
      },
      "52": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 108,
          column: 19
        }
      },
      "53": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 113,
          column: 25
        }
      },
      "54": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 112,
          column: 23
        }
      },
      "55": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 68
        }
      },
      "56": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 125,
          column: 10
        }
      },
      "57": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 133,
          column: 11
        }
      },
      "58": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "59": {
        start: {
          line: 142,
          column: 52
        },
        end: {
          line: 142,
          column: 62
        }
      },
      "60": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "61": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 159,
          column: 14
        }
      },
      "62": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 162,
          column: 15
        }
      },
      "63": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "64": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 38
        }
      },
      "65": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 171,
          column: 11
        }
      },
      "66": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "67": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 174,
          column: 53
        }
      },
      "68": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 43
        }
      },
      "69": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 52
        }
      },
      "70": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 72
        }
      },
      "71": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 31
        }
      },
      "72": {
        start: {
          line: 182,
          column: 50
        },
        end: {
          line: 182,
          column: 60
        }
      },
      "73": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 39
        }
      },
      "74": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "75": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 187,
          column: 13
        }
      },
      "76": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 42
        }
      },
      "77": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "78": {
        start: {
          line: 190,
          column: 34
        },
        end: {
          line: 190,
          column: 59
        }
      },
      "79": {
        start: {
          line: 191,
          column: 39
        },
        end: {
          line: 191,
          column: 97
        }
      },
      "80": {
        start: {
          line: 191,
          column: 68
        },
        end: {
          line: 191,
          column: 96
        }
      },
      "81": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 194,
          column: 13
        }
      },
      "82": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 42
        }
      },
      "83": {
        start: {
          line: 198,
          column: 26
        },
        end: {
          line: 198,
          column: 36
        }
      },
      "84": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "85": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 30
        }
      },
      "86": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "87": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 26
        }
      },
      "88": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "89": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 28
        }
      },
      "90": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 21
        }
      },
      "91": {
        start: {
          line: 214,
          column: 57
        },
        end: {
          line: 214,
          column: 62
        }
      },
      "92": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "93": {
        start: {
          line: 222,
          column: 46
        },
        end: {
          line: 222,
          column: 56
        }
      },
      "94": {
        start: {
          line: 223,
          column: 78
        },
        end: {
          line: 223,
          column: 88
        }
      },
      "95": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "96": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 225,
          column: 24
        }
      },
      "97": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 320,
          column: 11
        }
      },
      "98": {
        start: {
          line: 323,
          column: 40
        },
        end: {
          line: 323,
          column: 50
        }
      },
      "99": {
        start: {
          line: 324,
          column: 38
        },
        end: {
          line: 324,
          column: 48
        }
      },
      "100": {
        start: {
          line: 325,
          column: 25
        },
        end: {
          line: 325,
          column: 53
        }
      },
      "101": {
        start: {
          line: 326,
          column: 25
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "102": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 334,
          column: 13
        }
      },
      "103": {
        start: {
          line: 329,
          column: 20
        },
        end: {
          line: 329,
          column: 40
        }
      },
      "104": {
        start: {
          line: 331,
          column: 20
        },
        end: {
          line: 331,
          column: 49
        }
      },
      "105": {
        start: {
          line: 333,
          column: 20
        },
        end: {
          line: 333,
          column: 50
        }
      },
      "106": {
        start: {
          line: 336,
          column: 31
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "107": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 344,
          column: 13
        }
      },
      "108": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 339,
          column: 144
        }
      },
      "109": {
        start: {
          line: 341,
          column: 20
        },
        end: {
          line: 341,
          column: 154
        }
      },
      "110": {
        start: {
          line: 343,
          column: 20
        },
        end: {
          line: 343,
          column: 112
        }
      },
      "111": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 442,
          column: 11
        }
      },
      "112": {
        start: {
          line: 445,
          column: 29
        },
        end: {
          line: 445,
          column: 39
        }
      },
      "113": {
        start: {
          line: 446,
          column: 56
        },
        end: {
          line: 446,
          column: 66
        }
      },
      "114": {
        start: {
          line: 447,
          column: 8
        },
        end: {
          line: 458,
          column: 9
        }
      },
      "115": {
        start: {
          line: 448,
          column: 12
        },
        end: {
          line: 450,
          column: 13
        }
      },
      "116": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 32
        }
      },
      "117": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 456,
          column: 13
        }
      },
      "118": {
        start: {
          line: 452,
          column: 16
        },
        end: {
          line: 455,
          column: 19
        }
      },
      "119": {
        start: {
          line: 457,
          column: 12
        },
        end: {
          line: 457,
          column: 43
        }
      },
      "120": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 24
        }
      },
      "121": {
        start: {
          line: 462,
          column: 26
        },
        end: {
          line: 471,
          column: 1
        }
      },
      "122": {
        start: {
          line: 463,
          column: 29
        },
        end: {
          line: 468,
          column: 10
        }
      },
      "123": {
        start: {
          line: 463,
          column: 52
        },
        end: {
          line: 468,
          column: 10
        }
      },
      "124": {
        start: {
          line: 469,
          column: 4
        },
        end: {
          line: 469,
          column: 99
        }
      },
      "125": {
        start: {
          line: 470,
          column: 4
        },
        end: {
          line: 470,
          column: 28
        }
      },
      "126": {
        start: {
          line: 472,
          column: 25
        },
        end: {
          line: 491,
          column: 1
        }
      },
      "127": {
        start: {
          line: 473,
          column: 30
        },
        end: {
          line: 473,
          column: 59
        }
      },
      "128": {
        start: {
          line: 474,
          column: 23
        },
        end: {
          line: 476,
          column: 10
        }
      },
      "129": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 23
        }
      },
      "130": {
        start: {
          line: 477,
          column: 25
        },
        end: {
          line: 479,
          column: 10
        }
      },
      "131": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 24
        }
      },
      "132": {
        start: {
          line: 480,
          column: 4
        },
        end: {
          line: 486,
          column: 7
        }
      },
      "133": {
        start: {
          line: 481,
          column: 8
        },
        end: {
          line: 483,
          column: 9
        }
      },
      "134": {
        start: {
          line: 482,
          column: 12
        },
        end: {
          line: 482,
          column: 24
        }
      },
      "135": {
        start: {
          line: 487,
          column: 4
        },
        end: {
          line: 490,
          column: 6
        }
      },
      "136": {
        start: {
          line: 492,
          column: 17
        },
        end: {
          line: 492,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 33
          }
        },
        loc: {
          start: {
            line: 30,
            column: 47
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 34,
            column: 40
          }
        },
        loc: {
          start: {
            line: 34,
            column: 61
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 38,
            column: 9
          },
          end: {
            line: 38,
            column: 34
          }
        },
        loc: {
          start: {
            line: 38,
            column: 53
          },
          end: {
            line: 70,
            column: 1
          }
        },
        line: 38
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 22
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 72
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 73,
            column: 97
          },
          end: {
            line: 73,
            column: 98
          }
        },
        loc: {
          start: {
            line: 73,
            column: 101
          },
          end: {
            line: 84,
            column: 9
          }
        },
        line: 73
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 84,
            column: 31
          }
        },
        loc: {
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 89,
            column: 9
          }
        },
        line: 84
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 89,
            column: 31
          },
          end: {
            line: 89,
            column: 32
          }
        },
        loc: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 91,
            column: 9
          }
        },
        line: 89
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 31
          },
          end: {
            line: 91,
            column: 32
          }
        },
        loc: {
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 93,
            column: 35
          },
          end: {
            line: 93,
            column: 36
          }
        },
        loc: {
          start: {
            line: 93,
            column: 45
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 93
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 109,
            column: 28
          }
        },
        loc: {
          start: {
            line: 109,
            column: 31
          },
          end: {
            line: 113,
            column: 17
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        loc: {
          start: {
            line: 135,
            column: 43
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 135
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 40
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 141
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 181,
            column: 5
          }
        },
        loc: {
          start: {
            line: 181,
            column: 34
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 181
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 191,
            column: 54
          },
          end: {
            line: 191,
            column: 55
          }
        },
        loc: {
          start: {
            line: 191,
            column: 68
          },
          end: {
            line: 191,
            column: 96
          }
        },
        line: 191
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        loc: {
          start: {
            line: 197,
            column: 29
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 197
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 213,
            column: 4
          },
          end: {
            line: 213,
            column: 5
          }
        },
        loc: {
          start: {
            line: 213,
            column: 25
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 213
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 5
          }
        },
        loc: {
          start: {
            line: 221,
            column: 25
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 221
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        loc: {
          start: {
            line: 322,
            column: 23
          },
          end: {
            line: 443,
            column: 5
          }
        },
        line: 322
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 326,
            column: 25
          },
          end: {
            line: 326,
            column: 26
          }
        },
        loc: {
          start: {
            line: 326,
            column: 29
          },
          end: {
            line: 335,
            column: 9
          }
        },
        line: 326
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 336,
            column: 31
          },
          end: {
            line: 336,
            column: 32
          }
        },
        loc: {
          start: {
            line: 336,
            column: 35
          },
          end: {
            line: 345,
            column: 9
          }
        },
        line: 336
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 444,
            column: 4
          },
          end: {
            line: 444,
            column: 5
          }
        },
        loc: {
          start: {
            line: 444,
            column: 13
          },
          end: {
            line: 460,
            column: 5
          }
        },
        line: 444
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 462,
            column: 26
          },
          end: {
            line: 462,
            column: 27
          }
        },
        loc: {
          start: {
            line: 462,
            column: 59
          },
          end: {
            line: 471,
            column: 1
          }
        },
        line: 462
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 463,
            column: 29
          },
          end: {
            line: 463,
            column: 30
          }
        },
        loc: {
          start: {
            line: 463,
            column: 52
          },
          end: {
            line: 468,
            column: 10
          }
        },
        line: 463
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 472,
            column: 25
          },
          end: {
            line: 472,
            column: 26
          }
        },
        loc: {
          start: {
            line: 472,
            column: 29
          },
          end: {
            line: 491,
            column: 1
          }
        },
        line: 472
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 474,
            column: 50
          },
          end: {
            line: 474,
            column: 51
          }
        },
        loc: {
          start: {
            line: 474,
            column: 54
          },
          end: {
            line: 476,
            column: 5
          }
        },
        line: 474
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 477,
            column: 52
          },
          end: {
            line: 477,
            column: 53
          }
        },
        loc: {
          start: {
            line: 477,
            column: 61
          },
          end: {
            line: 479,
            column: 5
          }
        },
        line: 477
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 480,
            column: 29
          },
          end: {
            line: 480,
            column: 30
          }
        },
        loc: {
          start: {
            line: 480,
            column: 33
          },
          end: {
            line: 484,
            column: 5
          }
        },
        line: 480
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 35,
            column: 45
          }
        }, {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 65
          }
        }],
        line: 35
      },
      "2": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 20
          }
        }, {
          start: {
            line: 39,
            column: 24
          },
          end: {
            line: 39,
            column: 27
          }
        }, {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 39,
            column: 45
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 42,
            column: 47
          }
        }, {
          start: {
            line: 42,
            column: 51
          },
          end: {
            line: 42,
            column: 76
          }
        }],
        line: 42
      },
      "6": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 17
          },
          end: {
            line: 48,
            column: 31
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 32
          },
          end: {
            line: 54,
            column: 53
          }
        }, {
          start: {
            line: 54,
            column: 57
          },
          end: {
            line: 54,
            column: 88
          }
        }],
        line: 54
      },
      "9": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 29
          }
        }, {
          start: {
            line: 56,
            column: 33
          },
          end: {
            line: 56,
            column: 79
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 88
          }
        }, {
          start: {
            line: 57,
            column: 91
          },
          end: {
            line: 57,
            column: 95
          }
        }],
        line: 57
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 62,
            column: 13
          }
        }, {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 62,
            column: 13
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 58,
            column: 20
          }
        }, {
          start: {
            line: 58,
            column: 25
          },
          end: {
            line: 58,
            column: 33
          }
        }, {
          start: {
            line: 58,
            column: 37
          },
          end: {
            line: 58,
            column: 45
          }
        }],
        line: 58
      },
      "14": {
        loc: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "15": {
        loc: {
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "16": {
        loc: {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "17": {
        loc: {
          start: {
            line: 142,
            column: 25
          },
          end: {
            line: 142,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 142,
            column: 43
          },
          end: {
            line: 142,
            column: 47
          }
        }],
        line: 142
      },
      "18": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "19": {
        loc: {
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 151,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 27
          },
          end: {
            line: 151,
            column: 43
          }
        }, {
          start: {
            line: 151,
            column: 47
          },
          end: {
            line: 151,
            column: 58
          }
        }],
        line: 151
      },
      "20": {
        loc: {
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 27
          },
          end: {
            line: 157,
            column: 43
          }
        }, {
          start: {
            line: 157,
            column: 47
          },
          end: {
            line: 157,
            column: 58
          }
        }],
        line: 157
      },
      "21": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "22": {
        loc: {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "23": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 188,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "24": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 20
          }
        }, {
          start: {
            line: 184,
            column: 24
          },
          end: {
            line: 184,
            column: 66
          }
        }],
        line: 184
      },
      "25": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 187,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "26": {
        loc: {
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "27": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 189,
            column: 20
          }
        }, {
          start: {
            line: 189,
            column: 24
          },
          end: {
            line: 189,
            column: 33
          }
        }],
        line: 189
      },
      "28": {
        loc: {
          start: {
            line: 190,
            column: 34
          },
          end: {
            line: 190,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 34
          },
          end: {
            line: 190,
            column: 53
          }
        }, {
          start: {
            line: 190,
            column: 57
          },
          end: {
            line: 190,
            column: 59
          }
        }],
        line: 190
      },
      "29": {
        loc: {
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 12
          },
          end: {
            line: 194,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "30": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "31": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 200,
            column: 28
          }
        }, {
          start: {
            line: 200,
            column: 32
          },
          end: {
            line: 200,
            column: 63
          }
        }],
        line: 200
      },
      "32": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "33": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 51
          }
        }, {
          start: {
            line: 204,
            column: 55
          },
          end: {
            line: 204,
            column: 96
          }
        }, {
          start: {
            line: 204,
            column: 100
          },
          end: {
            line: 204,
            column: 126
          }
        }],
        line: 204
      },
      "34": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "35": {
        loc: {
          start: {
            line: 223,
            column: 16
          },
          end: {
            line: 223,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 223,
            column: 35
          },
          end: {
            line: 223,
            column: 73
          }
        }],
        line: 223
      },
      "36": {
        loc: {
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 224,
            column: 8
          },
          end: {
            line: 226,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 224
      },
      "37": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 29
          }
        }, {
          start: {
            line: 224,
            column: 33
          },
          end: {
            line: 224,
            column: 39
          }
        }],
        line: 224
      },
      "38": {
        loc: {
          start: {
            line: 256,
            column: 28
          },
          end: {
            line: 267,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 256,
            column: 28
          },
          end: {
            line: 256,
            column: 35
          }
        }, {
          start: {
            line: 256,
            column: 53
          },
          end: {
            line: 267,
            column: 30
          }
        }],
        line: 256
      },
      "39": {
        loc: {
          start: {
            line: 268,
            column: 28
          },
          end: {
            line: 279,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 28
          },
          end: {
            line: 268,
            column: 39
          }
        }, {
          start: {
            line: 268,
            column: 57
          },
          end: {
            line: 279,
            column: 30
          }
        }],
        line: 268
      },
      "40": {
        loc: {
          start: {
            line: 280,
            column: 28
          },
          end: {
            line: 291,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 28
          },
          end: {
            line: 280,
            column: 53
          }
        }, {
          start: {
            line: 280,
            column: 71
          },
          end: {
            line: 291,
            column: 30
          }
        }],
        line: 280
      },
      "41": {
        loc: {
          start: {
            line: 301,
            column: 38
          },
          end: {
            line: 315,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 301,
            column: 72
          },
          end: {
            line: 308,
            column: 30
          }
        }, {
          start: {
            line: 308,
            column: 47
          },
          end: {
            line: 315,
            column: 30
          }
        }],
        line: 301
      },
      "42": {
        loc: {
          start: {
            line: 323,
            column: 16
          },
          end: {
            line: 323,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 323,
            column: 24
          },
          end: {
            line: 323,
            column: 35
          }
        }],
        line: 323
      },
      "43": {
        loc: {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 334,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 328,
            column: 16
          },
          end: {
            line: 329,
            column: 40
          }
        }, {
          start: {
            line: 330,
            column: 16
          },
          end: {
            line: 331,
            column: 49
          }
        }, {
          start: {
            line: 332,
            column: 16
          },
          end: {
            line: 333,
            column: 50
          }
        }],
        line: 327
      },
      "44": {
        loc: {
          start: {
            line: 337,
            column: 12
          },
          end: {
            line: 344,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 338,
            column: 16
          },
          end: {
            line: 339,
            column: 144
          }
        }, {
          start: {
            line: 340,
            column: 16
          },
          end: {
            line: 341,
            column: 154
          }
        }, {
          start: {
            line: 342,
            column: 16
          },
          end: {
            line: 343,
            column: 112
          }
        }],
        line: 337
      },
      "45": {
        loc: {
          start: {
            line: 375,
            column: 28
          },
          end: {
            line: 384,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 375,
            column: 28
          },
          end: {
            line: 375,
            column: 33
          }
        }, {
          start: {
            line: 375,
            column: 51
          },
          end: {
            line: 384,
            column: 30
          }
        }],
        line: 375
      },
      "46": {
        loc: {
          start: {
            line: 388,
            column: 36
          },
          end: {
            line: 397,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 388,
            column: 36
          },
          end: {
            line: 388,
            column: 44
          }
        }, {
          start: {
            line: 388,
            column: 62
          },
          end: {
            line: 397,
            column: 38
          }
        }],
        line: 388
      },
      "47": {
        loc: {
          start: {
            line: 427,
            column: 28
          },
          end: {
            line: 436,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 427,
            column: 28
          },
          end: {
            line: 427,
            column: 57
          }
        }, {
          start: {
            line: 427,
            column: 75
          },
          end: {
            line: 436,
            column: 30
          }
        }],
        line: 427
      },
      "48": {
        loc: {
          start: {
            line: 446,
            column: 36
          },
          end: {
            line: 446,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 446,
            column: 46
          },
          end: {
            line: 446,
            column: 51
          }
        }],
        line: 446
      },
      "49": {
        loc: {
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 447,
            column: 8
          },
          end: {
            line: 458,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 447
      },
      "50": {
        loc: {
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 450,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 448,
            column: 12
          },
          end: {
            line: 450,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 448
      },
      "51": {
        loc: {
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 456,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 451,
            column: 12
          },
          end: {
            line: 456,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 451
      },
      "52": {
        loc: {
          start: {
            line: 469,
            column: 56
          },
          end: {
            line: 469,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 469,
            column: 56
          },
          end: {
            line: 469,
            column: 77
          }
        }, {
          start: {
            line: 469,
            column: 81
          },
          end: {
            line: 469,
            column: 95
          }
        }],
        line: 469
      },
      "53": {
        loc: {
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 481,
            column: 8
          },
          end: {
            line: 483,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 481
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0],
      "43": [0, 0, 0],
      "44": [0, 0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ErrorBoundary.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { ErrorTracker } from '@/utils/errorTracking';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { AlertTriangle, RefreshCw, Home, Bug, Copy, CheckCircle } from 'lucide-react';\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n  showErrorDetails?: boolean;\n  enableReporting?: boolean;\n  resetOnPropsChange?: boolean;\n  resetKeys?: Array<string | number>;\n  isolate?: boolean;\n  level?: 'page' | 'component' | 'feature';\n}\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n  errorId: string | null;\n  retryCount: number;\n  copied: boolean;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  private errorTracker: ErrorTracker;\n  private resetTimeoutId: NodeJS.Timeout | null = null;\n  private maxRetries = 3;\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    \n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      retryCount: 0,\n      copied: false\n    };\n    \n    this.errorTracker = new ErrorTracker({\n      enableConsoleCapture: true,\n      enableNetworkCapture: true,\n      enablePerformanceCapture: true,\n      enableUserInteractionCapture: true,\n      maxBreadcrumbs: 50,\n      enableAutoErrorResolution: false\n    });\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    return {\n      hasError: true,\n      error\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    const { onError, enableReporting = true } = this.props;\n    \n    // Track error with our error tracking system\n    if (enableReporting) {\n      const errorId = this.errorTracker.captureError(error, {\n        category: 'react',\n        severity: this.determineSeverity(error),\n        context: {\n          componentStack: errorInfo.componentStack,\n          errorBoundary: true,\n          level: this.props.level || 'component',\n          retryCount: this.state.retryCount,\n          props: this.sanitizeProps(this.props)\n        },\n        tags: {\n          errorBoundary: true,\n          level: this.props.level || 'component'\n        }\n      });\n      \n      this.setState({ errorId });\n    }\n    \n    // Call custom error handler\n    if (onError) {\n      onError(error, errorInfo);\n    }\n    \n    this.setState({\n      errorInfo,\n      retryCount: this.state.retryCount + 1\n    });\n    \n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.group('\uD83D\uDEA8 React Error Boundary');\n      console.error('Error:', error);\n      console.error('Error Info:', errorInfo);\n      console.error('Component Stack:', errorInfo.componentStack);\n      console.groupEnd();\n    }\n  }\n\n  componentDidUpdate(prevProps: ErrorBoundaryProps) {\n    const { resetOnPropsChange, resetKeys } = this.props;\n    const { hasError } = this.state;\n    \n    if (hasError && prevProps.children !== this.props.children) {\n      if (resetOnPropsChange) {\n        this.resetErrorBoundary();\n      }\n    }\n    \n    if (hasError && resetKeys) {\n      const prevResetKeys = prevProps.resetKeys || [];\n      const hasResetKeyChanged = resetKeys.some(\n        (key, index) => key !== prevResetKeys[index]\n      );\n      \n      if (hasResetKeyChanged) {\n        this.resetErrorBoundary();\n      }\n    }\n  }\n\n  private determineSeverity(error: Error): 'low' | 'medium' | 'high' | 'critical' {\n    const { level } = this.props;\n    \n    // Critical errors\n    if (level === 'page' || error.name === 'ChunkLoadError') {\n      return 'critical';\n    }\n    \n    // High severity errors\n    if (\n      error.message.includes('Network Error') ||\n      error.message.includes('Failed to fetch') ||\n      error.name === 'TypeError'\n    ) {\n      return 'high';\n    }\n    \n    // Medium severity for component level\n    if (level === 'component') {\n      return 'medium';\n    }\n    \n    return 'low';\n  }\n\n  private sanitizeProps(props: ErrorBoundaryProps): Record<string, any> {\n    const { children, onError, ...sanitizedProps } = props;\n    return {\n      ...sanitizedProps,\n      hasChildren: !!children,\n      hasOnError: !!onError\n    };\n  }\n\n  private resetErrorBoundary = () => {\n    if (this.resetTimeoutId) {\n      clearTimeout(this.resetTimeoutId);\n    }\n    \n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      copied: false\n    });\n  };\n\n  private handleRetry = () => {\n    if (this.state.retryCount >= this.maxRetries) {\n      return;\n    }\n    \n    this.resetErrorBoundary();\n  };\n\n  private handleReload = () => {\n    window.location.reload();\n  };\n\n  private handleGoHome = () => {\n    window.location.href = '/';\n  };\n\n  private copyErrorDetails = async () => {\n    const { error, errorInfo, errorId } = this.state;\n    \n    const errorDetails = {\n      message: error?.message,\n      stack: error?.stack,\n      componentStack: errorInfo?.componentStack,\n      errorId,\n      timestamp: new Date().toISOString(),\n      url: window.location.href,\n      userAgent: navigator.userAgent\n    };\n    \n    try {\n      await navigator.clipboard.writeText(JSON.stringify(errorDetails, null, 2));\n      this.setState({ copied: true });\n      \n      setTimeout(() => {\n        this.setState({ copied: false });\n      }, 2000);\n    } catch (err) {\n      console.error('Failed to copy error details:', err);\n    }\n  };\n\n  private renderErrorDetails() {\n    const { error, errorInfo, errorId } = this.state;\n    const { showErrorDetails = process.env.NODE_ENV === 'development' } = this.props;\n    \n    if (!showErrorDetails || !error) {\n      return null;\n    }\n    \n    return (\n      <div className=\"mt-6 space-y-4\">\n        <div className=\"border-t pt-4\">\n          <h4 className=\"font-medium mb-2 flex items-center\">\n            <Bug className=\"h-4 w-4 mr-2\" />\n            Error Details\n          </h4>\n          \n          <div className=\"space-y-3\">\n            <div>\n              <label className=\"text-sm font-medium text-muted-foreground\">Message</label>\n              <pre className=\"text-sm bg-muted p-3 rounded mt-1 overflow-auto\">\n                {error.message}\n              </pre>\n            </div>\n            \n            {errorId && (\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Error ID</label>\n                <pre className=\"text-sm bg-muted p-3 rounded mt-1 font-mono\">\n                  {errorId}\n                </pre>\n              </div>\n            )}\n            \n            {error.stack && (\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Stack Trace</label>\n                <pre className=\"text-xs bg-muted p-3 rounded mt-1 overflow-auto max-h-40\">\n                  {error.stack}\n                </pre>\n              </div>\n            )}\n            \n            {errorInfo?.componentStack && (\n              <div>\n                <label className=\"text-sm font-medium text-muted-foreground\">Component Stack</label>\n                <pre className=\"text-xs bg-muted p-3 rounded mt-1 overflow-auto max-h-40\">\n                  {errorInfo.componentStack}\n                </pre>\n              </div>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-2 mt-4\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={this.copyErrorDetails}\n              className=\"flex items-center\"\n            >\n              {this.state.copied ? (\n                <>\n                  <CheckCircle className=\"h-4 w-4 mr-2\" />\n                  Copied!\n                </>\n              ) : (\n                <>\n                  <Copy className=\"h-4 w-4 mr-2\" />\n                  Copy Details\n                </>\n              )}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  private renderFallbackUI() {\n    const { level = 'component' } = this.props;\n    const { retryCount, error } = this.state;\n    const canRetry = retryCount < this.maxRetries;\n    \n    const getTitle = () => {\n      switch (level) {\n        case 'page': return 'Page Error';\n        case 'feature': return 'Feature Unavailable';\n        default: return 'Something went wrong';\n      }\n    };\n    \n    const getDescription = () => {\n      switch (level) {\n        case 'page':\n          return 'This page encountered an error and cannot be displayed. Please try refreshing the page or go back to the homepage.';\n        case 'feature':\n          return 'This feature is temporarily unavailable due to an error. You can try again or continue using other parts of the application.';\n        default:\n          return 'This component encountered an error. You can try reloading it or refresh the page.';\n      }\n    };\n    \n    return (\n      <div className=\"flex items-center justify-center min-h-[200px] p-6\">\n        <Card className=\"w-full max-w-md\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center text-destructive\">\n              <AlertTriangle className=\"h-5 w-5 mr-2\" />\n              {getTitle()}\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Alert>\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>\n                {getDescription()}\n              </AlertDescription>\n            </Alert>\n            \n            {error && (\n              <div className=\"text-sm text-muted-foreground\">\n                <strong>Error:</strong> {error.message}\n              </div>\n            )}\n            \n            <div className=\"flex flex-col space-y-2\">\n              {canRetry && (\n                <Button onClick={this.handleRetry} className=\"w-full\">\n                  <RefreshCw className=\"h-4 w-4 mr-2\" />\n                  Try Again\n                </Button>\n              )}\n              \n              <div className=\"flex space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  onClick={this.handleReload}\n                  className=\"flex-1\"\n                >\n                  <RefreshCw className=\"h-4 w-4 mr-2\" />\n                  Reload Page\n                </Button>\n                \n                <Button\n                  variant=\"outline\"\n                  onClick={this.handleGoHome}\n                  className=\"flex-1\"\n                >\n                  <Home className=\"h-4 w-4 mr-2\" />\n                  Go Home\n                </Button>\n              </div>\n            </div>\n            \n            {retryCount >= this.maxRetries && (\n              <Alert>\n                <AlertTriangle className=\"h-4 w-4\" />\n                <AlertDescription>\n                  Maximum retry attempts reached. Please reload the page or contact support if the problem persists.\n                </AlertDescription>\n              </Alert>\n            )}\n            \n            {this.renderErrorDetails()}\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  render() {\n    const { hasError } = this.state;\n    const { children, fallback, isolate = false } = this.props;\n    \n    if (hasError) {\n      if (fallback) {\n        return fallback;\n      }\n      \n      if (isolate) {\n        return (\n          <div className=\"border border-destructive/20 rounded-lg p-4 bg-destructive/5\">\n            {this.renderFallbackUI()}\n          </div>\n        );\n      }\n      \n      return this.renderFallbackUI();\n    }\n    \n    return children;\n  }\n}\n\n// Higher-order component for easy wrapping\nexport const withErrorBoundary = <P extends object>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps?: Omit<ErrorBoundaryProps, 'children'>\n) => {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n  \n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n  \n  return WrappedComponent;\n};\n\n// Hook for programmatic error boundary reset\nexport const useErrorBoundary = () => {\n  const [error, setError] = React.useState<Error | null>(null);\n  \n  const resetError = React.useCallback(() => {\n    setError(null);\n  }, []);\n  \n  const captureError = React.useCallback((error: Error) => {\n    setError(error);\n  }, []);\n  \n  React.useEffect(() => {\n    if (error) {\n      throw error;\n    }\n  }, [error]);\n  \n  return { captureError, resetError };\n};\n\nexport default ErrorBoundary;"],
      names: ["useErrorBoundary", "withErrorBoundary", "ErrorBoundary", "Component", "props", "resetTimeoutId", "maxRetries", "resetErrorBoundary", "clearTimeout", "setState", "hasError", "error", "errorInfo", "errorId", "copied", "handleRetry", "state", "retryCount", "handleReload", "window", "location", "reload", "handleGoHome", "href", "copyErrorDetails", "errorDetails", "message", "stack", "componentStack", "timestamp", "Date", "toISOString", "url", "userAgent", "navigator", "clipboard", "writeText", "JSON", "stringify", "setTimeout", "err", "console", "errorTracker", "ErrorTracker", "enableConsoleCapture", "enableNetworkCapture", "enablePerformanceCapture", "enableUserInteractionCapture", "maxBreadcrumbs", "enableAutoErrorResolution", "getDerivedStateFromError", "componentDidCatch", "onError", "enableReporting", "captureError", "category", "severity", "determineSeverity", "context", "errorBoundary", "level", "sanitizeProps", "tags", "process", "env", "NODE_ENV", "group", "groupEnd", "componentDidUpdate", "prevProps", "resetOnPropsChange", "resetKeys", "children", "prevResetKeys", "hasResetKeyChanged", "some", "key", "index", "name", "includes", "sanitizedProps", "hasChildren", "hasOnError", "renderErrorDetails", "showErrorDetails", "div", "className", "h4", "Bug", "label", "pre", "Button", "variant", "size", "onClick", "CheckCircle", "Copy", "renderFallbackUI", "canRetry", "getTitle", "getDescription", "Card", "CardHeader", "CardTitle", "AlertTriangle", "CardContent", "Alert", "AlertDescription", "strong", "RefreshCw", "Home", "render", "fallback", "isolate", "errorBoundaryProps", "WrappedComponent", "displayName", "setError", "React", "useState", "resetError", "useCallback", "useEffect"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "00296c889101564b49a4dec78799c3b678dfede9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1z4jgt3dv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1z4jgt3dv();
cov_1z4jgt3dv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1z4jgt3dv().f[0]++;
  cov_1z4jgt3dv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1z4jgt3dv().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[1]++;
    cov_1z4jgt3dv().s[4]++;
    return _default;
  },
  get useErrorBoundary() {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[2]++;
    cov_1z4jgt3dv().s[5]++;
    return useErrorBoundary;
  },
  get withErrorBoundary() {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[3]++;
    cov_1z4jgt3dv().s[6]++;
    return withErrorBoundary;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1z4jgt3dv().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1z4jgt3dv().s[8]++, _interop_require_wildcard(require("react")));
const _errorTracking =
/* istanbul ignore next */
(cov_1z4jgt3dv().s[9]++, require("../utils/errorTracking"));
const _card =
/* istanbul ignore next */
(cov_1z4jgt3dv().s[10]++, require("./ui/card"));
const _button =
/* istanbul ignore next */
(cov_1z4jgt3dv().s[11]++, require("./ui/button"));
const _alert =
/* istanbul ignore next */
(cov_1z4jgt3dv().s[12]++, require("./ui/alert"));
const _lucidereact =
/* istanbul ignore next */
(cov_1z4jgt3dv().s[13]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1z4jgt3dv().f[4]++;
  cov_1z4jgt3dv().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1z4jgt3dv().b[0][0]++;
    cov_1z4jgt3dv().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1z4jgt3dv().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[5]++;
    cov_1z4jgt3dv().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1z4jgt3dv().f[6]++;
  cov_1z4jgt3dv().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().b[2][0]++;
    cov_1z4jgt3dv().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1z4jgt3dv().b[2][1]++;
  }
  cov_1z4jgt3dv().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().b[4][0]++;
    cov_1z4jgt3dv().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1z4jgt3dv().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().b[6][0]++;
    cov_1z4jgt3dv().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1z4jgt3dv().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[28]++,
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[12][0]++;
        cov_1z4jgt3dv().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[12][1]++;
        cov_1z4jgt3dv().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().b[14][0]++;
    cov_1z4jgt3dv().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1z4jgt3dv().b[14][1]++;
  }
  cov_1z4jgt3dv().s[38]++;
  return newObj;
}
class ErrorBoundary extends
/* istanbul ignore next */
(_react.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[7]++;
    cov_1z4jgt3dv().s[39]++;
    super(props), this.resetTimeoutId = null, this.maxRetries = 3, this.resetErrorBoundary = () => {
      /* istanbul ignore next */
      cov_1z4jgt3dv().f[8]++;
      cov_1z4jgt3dv().s[40]++;
      if (this.resetTimeoutId) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[15][0]++;
        cov_1z4jgt3dv().s[41]++;
        clearTimeout(this.resetTimeoutId);
      } else
      /* istanbul ignore next */
      {
        cov_1z4jgt3dv().b[15][1]++;
      }
      cov_1z4jgt3dv().s[42]++;
      this.setState({
        hasError: false,
        error: null,
        errorInfo: null,
        errorId: null,
        copied: false
      });
    }, this.handleRetry = () => {
      /* istanbul ignore next */
      cov_1z4jgt3dv().f[9]++;
      cov_1z4jgt3dv().s[43]++;
      if (this.state.retryCount >= this.maxRetries) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[16][0]++;
        cov_1z4jgt3dv().s[44]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1z4jgt3dv().b[16][1]++;
      }
      cov_1z4jgt3dv().s[45]++;
      this.resetErrorBoundary();
    }, this.handleReload = () => {
      /* istanbul ignore next */
      cov_1z4jgt3dv().f[10]++;
      cov_1z4jgt3dv().s[46]++;
      window.location.reload();
    }, this.handleGoHome = () => {
      /* istanbul ignore next */
      cov_1z4jgt3dv().f[11]++;
      cov_1z4jgt3dv().s[47]++;
      window.location.href = '/';
    }, this.copyErrorDetails = async () => {
      /* istanbul ignore next */
      cov_1z4jgt3dv().f[12]++;
      const {
        error,
        errorInfo,
        errorId
      } =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().s[48]++, this.state);
      const errorDetails =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().s[49]++, {
        message: error?.message,
        stack: error?.stack,
        componentStack: errorInfo?.componentStack,
        errorId,
        timestamp: new Date().toISOString(),
        url: window.location.href,
        userAgent: navigator.userAgent
      });
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[50]++;
      try {
        /* istanbul ignore next */
        cov_1z4jgt3dv().s[51]++;
        await navigator.clipboard.writeText(JSON.stringify(errorDetails, null, 2));
        /* istanbul ignore next */
        cov_1z4jgt3dv().s[52]++;
        this.setState({
          copied: true
        });
        /* istanbul ignore next */
        cov_1z4jgt3dv().s[53]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_1z4jgt3dv().f[13]++;
          cov_1z4jgt3dv().s[54]++;
          this.setState({
            copied: false
          });
        }, 2000);
      } catch (err) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().s[55]++;
        console.error('Failed to copy error details:', err);
      }
    };
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[56]++;
    this.state = {
      hasError: false,
      error: null,
      errorInfo: null,
      errorId: null,
      retryCount: 0,
      copied: false
    };
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[57]++;
    this.errorTracker = new _errorTracking.ErrorTracker({
      enableConsoleCapture: true,
      enableNetworkCapture: true,
      enablePerformanceCapture: true,
      enableUserInteractionCapture: true,
      maxBreadcrumbs: 50,
      enableAutoErrorResolution: false
    });
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[14]++;
    cov_1z4jgt3dv().s[58]++;
    return {
      hasError: true,
      error
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[15]++;
    const {
      onError,
      enableReporting =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[17][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[59]++, this.props);
    // Track error with our error tracking system
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[60]++;
    if (enableReporting) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[18][0]++;
      const errorId =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().s[61]++, this.errorTracker.captureError(error, {
        category: 'react',
        severity: this.determineSeverity(error),
        context: {
          componentStack: errorInfo.componentStack,
          errorBoundary: true,
          level:
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[19][0]++, this.props.level) ||
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[19][1]++, 'component'),
          retryCount: this.state.retryCount,
          props: this.sanitizeProps(this.props)
        },
        tags: {
          errorBoundary: true,
          level:
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[20][0]++, this.props.level) ||
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[20][1]++, 'component')
        }
      }));
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[62]++;
      this.setState({
        errorId
      });
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[18][1]++;
    }
    // Call custom error handler
    cov_1z4jgt3dv().s[63]++;
    if (onError) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[21][0]++;
      cov_1z4jgt3dv().s[64]++;
      onError(error, errorInfo);
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[21][1]++;
    }
    cov_1z4jgt3dv().s[65]++;
    this.setState({
      errorInfo,
      retryCount: this.state.retryCount + 1
    });
    // Log to console in development
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[66]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[22][0]++;
      cov_1z4jgt3dv().s[67]++;
      console.group('🚨 React Error Boundary');
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[68]++;
      console.error('Error:', error);
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[69]++;
      console.error('Error Info:', errorInfo);
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[70]++;
      console.error('Component Stack:', errorInfo.componentStack);
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[71]++;
      console.groupEnd();
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[22][1]++;
    }
  }
  componentDidUpdate(prevProps) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[16]++;
    const {
      resetOnPropsChange,
      resetKeys
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[72]++, this.props);
    const {
      hasError
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[73]++, this.state);
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[24][0]++, hasError) &&
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[24][1]++, prevProps.children !== this.props.children)) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[23][0]++;
      cov_1z4jgt3dv().s[75]++;
      if (resetOnPropsChange) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[25][0]++;
        cov_1z4jgt3dv().s[76]++;
        this.resetErrorBoundary();
      } else
      /* istanbul ignore next */
      {
        cov_1z4jgt3dv().b[25][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[23][1]++;
    }
    cov_1z4jgt3dv().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[27][0]++, hasError) &&
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[27][1]++, resetKeys)) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[26][0]++;
      const prevResetKeys =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().s[78]++,
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[28][0]++, prevProps.resetKeys) ||
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[28][1]++, []));
      const hasResetKeyChanged =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().s[79]++, resetKeys.some((key, index) => {
        /* istanbul ignore next */
        cov_1z4jgt3dv().f[17]++;
        cov_1z4jgt3dv().s[80]++;
        return key !== prevResetKeys[index];
      }));
      /* istanbul ignore next */
      cov_1z4jgt3dv().s[81]++;
      if (hasResetKeyChanged) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[29][0]++;
        cov_1z4jgt3dv().s[82]++;
        this.resetErrorBoundary();
      } else
      /* istanbul ignore next */
      {
        cov_1z4jgt3dv().b[29][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[26][1]++;
    }
  }
  determineSeverity(error) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[18]++;
    const {
      level
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[83]++, this.props);
    // Critical errors
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[84]++;
    if (
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[31][0]++, level === 'page') ||
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[31][1]++, error.name === 'ChunkLoadError')) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[30][0]++;
      cov_1z4jgt3dv().s[85]++;
      return 'critical';
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[30][1]++;
    }
    // High severity errors
    cov_1z4jgt3dv().s[86]++;
    if (
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[33][0]++, error.message.includes('Network Error')) ||
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[33][1]++, error.message.includes('Failed to fetch')) ||
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[33][2]++, error.name === 'TypeError')) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[32][0]++;
      cov_1z4jgt3dv().s[87]++;
      return 'high';
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[32][1]++;
    }
    // Medium severity for component level
    cov_1z4jgt3dv().s[88]++;
    if (level === 'component') {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[34][0]++;
      cov_1z4jgt3dv().s[89]++;
      return 'medium';
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[34][1]++;
    }
    cov_1z4jgt3dv().s[90]++;
    return 'low';
  }
  sanitizeProps(props) {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[19]++;
    const {
      children,
      onError,
      ...sanitizedProps
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[91]++, props);
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[92]++;
    return {
      ...sanitizedProps,
      hasChildren: !!children,
      hasOnError: !!onError
    };
  }
  renderErrorDetails() {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[20]++;
    const {
      error,
      errorInfo,
      errorId
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[93]++, this.state);
    const {
      showErrorDetails =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[35][0]++, process.env.NODE_ENV === 'development')
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[94]++, this.props);
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[95]++;
    if (
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[37][0]++, !showErrorDetails) ||
    /* istanbul ignore next */
    (cov_1z4jgt3dv().b[37][1]++, !error)) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[36][0]++;
      cov_1z4jgt3dv().s[96]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[36][1]++;
    }
    cov_1z4jgt3dv().s[97]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "mt-6 space-y-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "border-t pt-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h4", {
          className: "font-medium mb-2 flex items-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Bug, {
            className: "h-4 w-4 mr-2"
          }), "Error Details"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-sm font-medium text-muted-foreground",
              children: "Message"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
              className: "text-sm bg-muted p-3 rounded mt-1 overflow-auto",
              children: error.message
            })]
          }),
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[38][0]++, errorId) &&
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[38][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-sm font-medium text-muted-foreground",
              children: "Error ID"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
              className: "text-sm bg-muted p-3 rounded mt-1 font-mono",
              children: errorId
            })]
          })),
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[39][0]++, error.stack) &&
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[39][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-sm font-medium text-muted-foreground",
              children: "Stack Trace"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
              className: "text-xs bg-muted p-3 rounded mt-1 overflow-auto max-h-40",
              children: error.stack
            })]
          })),
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[40][0]++, errorInfo?.componentStack) &&
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[40][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: "text-sm font-medium text-muted-foreground",
              children: "Component Stack"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("pre", {
              className: "text-xs bg-muted p-3 rounded mt-1 overflow-auto max-h-40",
              children: errorInfo.componentStack
            })]
          }))]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center space-x-2 mt-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_button.Button, {
            variant: "outline",
            size: "sm",
            onClick: this.copyErrorDetails,
            className: "flex items-center",
            children: this.state.copied ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1z4jgt3dv().b[41][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
                className: "h-4 w-4 mr-2"
              }), "Copied!"]
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1z4jgt3dv().b[41][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Copy, {
                className: "h-4 w-4 mr-2"
              }), "Copy Details"]
            }))
          })
        })]
      })
    });
  }
  renderFallbackUI() {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[21]++;
    const {
      level =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[42][0]++, 'component')
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[98]++, this.props);
    const {
      retryCount,
      error
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[99]++, this.state);
    const canRetry =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[100]++, retryCount < this.maxRetries);
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[101]++;
    const getTitle = () => {
      /* istanbul ignore next */
      cov_1z4jgt3dv().f[22]++;
      cov_1z4jgt3dv().s[102]++;
      switch (level) {
        case 'page':
          /* istanbul ignore next */
          cov_1z4jgt3dv().b[43][0]++;
          cov_1z4jgt3dv().s[103]++;
          return 'Page Error';
        case 'feature':
          /* istanbul ignore next */
          cov_1z4jgt3dv().b[43][1]++;
          cov_1z4jgt3dv().s[104]++;
          return 'Feature Unavailable';
        default:
          /* istanbul ignore next */
          cov_1z4jgt3dv().b[43][2]++;
          cov_1z4jgt3dv().s[105]++;
          return 'Something went wrong';
      }
    };
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[106]++;
    const getDescription = () => {
      /* istanbul ignore next */
      cov_1z4jgt3dv().f[23]++;
      cov_1z4jgt3dv().s[107]++;
      switch (level) {
        case 'page':
          /* istanbul ignore next */
          cov_1z4jgt3dv().b[44][0]++;
          cov_1z4jgt3dv().s[108]++;
          return 'This page encountered an error and cannot be displayed. Please try refreshing the page or go back to the homepage.';
        case 'feature':
          /* istanbul ignore next */
          cov_1z4jgt3dv().b[44][1]++;
          cov_1z4jgt3dv().s[109]++;
          return 'This feature is temporarily unavailable due to an error. You can try again or continue using other parts of the application.';
        default:
          /* istanbul ignore next */
          cov_1z4jgt3dv().b[44][2]++;
          cov_1z4jgt3dv().s[110]++;
          return 'This component encountered an error. You can try reloading it or refresh the page.';
      }
    };
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[111]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-center justify-center min-h-[200px] p-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        className: "w-full max-w-md",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
            className: "flex items-center text-destructive",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
              className: "h-5 w-5 mr-2"
            }), getTitle()]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
              children: getDescription()
            })]
          }),
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[45][0]++, error) &&
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[45][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-sm text-muted-foreground",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
              children: "Error:"
            }), " ", error.message]
          })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex flex-col space-y-2",
            children: [
            /* istanbul ignore next */
            (cov_1z4jgt3dv().b[46][0]++, canRetry) &&
            /* istanbul ignore next */
            (cov_1z4jgt3dv().b[46][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              onClick: this.handleRetry,
              className: "w-full",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                className: "h-4 w-4 mr-2"
              }), "Try Again"]
            })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                variant: "outline",
                onClick: this.handleReload,
                className: "flex-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
                  className: "h-4 w-4 mr-2"
                }), "Reload Page"]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
                variant: "outline",
                onClick: this.handleGoHome,
                className: "flex-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Home, {
                  className: "h-4 w-4 mr-2"
                }), "Go Home"]
              })]
            })]
          }),
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[47][0]++, retryCount >= this.maxRetries) &&
          /* istanbul ignore next */
          (cov_1z4jgt3dv().b[47][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_alert.Alert, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
              className: "h-4 w-4"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
              children: "Maximum retry attempts reached. Please reload the page or contact support if the problem persists."
            })]
          })), this.renderErrorDetails()]
        })]
      })
    });
  }
  render() {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[24]++;
    const {
      hasError
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[112]++, this.state);
    const {
      children,
      fallback,
      isolate =
      /* istanbul ignore next */
      (cov_1z4jgt3dv().b[48][0]++, false)
    } =
    /* istanbul ignore next */
    (cov_1z4jgt3dv().s[113]++, this.props);
    /* istanbul ignore next */
    cov_1z4jgt3dv().s[114]++;
    if (hasError) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[49][0]++;
      cov_1z4jgt3dv().s[115]++;
      if (fallback) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[50][0]++;
        cov_1z4jgt3dv().s[116]++;
        return fallback;
      } else
      /* istanbul ignore next */
      {
        cov_1z4jgt3dv().b[50][1]++;
      }
      cov_1z4jgt3dv().s[117]++;
      if (isolate) {
        /* istanbul ignore next */
        cov_1z4jgt3dv().b[51][0]++;
        cov_1z4jgt3dv().s[118]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "border border-destructive/20 rounded-lg p-4 bg-destructive/5",
          children: this.renderFallbackUI()
        });
      } else
      /* istanbul ignore next */
      {
        cov_1z4jgt3dv().b[51][1]++;
      }
      cov_1z4jgt3dv().s[119]++;
      return this.renderFallbackUI();
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[49][1]++;
    }
    cov_1z4jgt3dv().s[120]++;
    return children;
  }
}
/* istanbul ignore next */
cov_1z4jgt3dv().s[121]++;
const withErrorBoundary = (Component, errorBoundaryProps) => {
  /* istanbul ignore next */
  cov_1z4jgt3dv().f[25]++;
  cov_1z4jgt3dv().s[122]++;
  const WrappedComponent = props => {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[26]++;
    cov_1z4jgt3dv().s[123]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(ErrorBoundary, {
      ...errorBoundaryProps,
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(Component, {
        ...props
      })
    });
  };
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[124]++;
  WrappedComponent.displayName = `withErrorBoundary(${
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[52][0]++, Component.displayName) ||
  /* istanbul ignore next */
  (cov_1z4jgt3dv().b[52][1]++, Component.name)})`;
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[125]++;
  return WrappedComponent;
};
/* istanbul ignore next */
cov_1z4jgt3dv().s[126]++;
const useErrorBoundary = () => {
  /* istanbul ignore next */
  cov_1z4jgt3dv().f[27]++;
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[127]++, _react.default.useState(null));
  const resetError =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[128]++, _react.default.useCallback(() => {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[28]++;
    cov_1z4jgt3dv().s[129]++;
    setError(null);
  }, []));
  const captureError =
  /* istanbul ignore next */
  (cov_1z4jgt3dv().s[130]++, _react.default.useCallback(error => {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[29]++;
    cov_1z4jgt3dv().s[131]++;
    setError(error);
  }, []));
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[132]++;
  _react.default.useEffect(() => {
    /* istanbul ignore next */
    cov_1z4jgt3dv().f[30]++;
    cov_1z4jgt3dv().s[133]++;
    if (error) {
      /* istanbul ignore next */
      cov_1z4jgt3dv().b[53][0]++;
      cov_1z4jgt3dv().s[134]++;
      throw error;
    } else
    /* istanbul ignore next */
    {
      cov_1z4jgt3dv().b[53][1]++;
    }
  }, [error]);
  /* istanbul ignore next */
  cov_1z4jgt3dv().s[135]++;
  return {
    captureError,
    resetError
  };
};
const _default =
/* istanbul ignore next */
(cov_1z4jgt3dv().s[136]++, ErrorBoundary);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,