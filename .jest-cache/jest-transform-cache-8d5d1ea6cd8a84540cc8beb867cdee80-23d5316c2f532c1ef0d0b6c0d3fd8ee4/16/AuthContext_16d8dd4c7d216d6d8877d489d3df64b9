44e3c10d93380ec7636264e6547a051b
"use client";
"use strict";

/* istanbul ignore next */
function cov_19mtpf45vv() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\context\\AuthContext.tsx";
  var hash = "3a1dbb4901fdbc7963580d5387c3775c1188998b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\context\\AuthContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 28
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "9": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "10": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "11": {
        start: {
          line: 27,
          column: 39
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "12": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "13": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "16": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "17": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "18": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "20": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "21": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "23": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "24": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "25": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "26": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "27": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "28": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "29": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "30": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "31": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "32": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "33": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "34": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "35": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 67,
          column: 70
        }
      },
      "36": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 92,
          column: 1
        }
      },
      "37": {
        start: {
          line: 69,
          column: 38
        },
        end: {
          line: 69,
          column: 88
        }
      },
      "38": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "39": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 69
        }
      },
      "40": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 27
        }
      },
      "41": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "42": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 91,
          column: 7
        }
      },
      "43": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "44": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 94,
          column: 55
        }
      },
      "45": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "46": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "47": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 19
        }
      },
      "48": {
        start: {
          line: 100,
          column: 17
        },
        end: {
          line: 133,
          column: 1
        }
      },
      "49": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 132,
          column: 6
        }
      },
      "50": {
        start: {
          line: 102,
          column: 45
        },
        end: {
          line: 102,
          column: 54
        }
      },
      "51": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "52": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "53": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 128,
          column: 9
        }
      },
      "54": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 127,
          column: 15
        }
      },
      "55": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 131,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 68,
            column: 22
          }
        },
        loc: {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 92,
            column: 1
          }
        },
        line: 68
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 27
          }
        },
        loc: {
          start: {
            line: 70,
            column: 30
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 70
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 93,
            column: 17
          }
        },
        loc: {
          start: {
            line: 93,
            column: 20
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 93
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 100,
            column: 17
          },
          end: {
            line: 100,
            column: 18
          }
        },
        loc: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 133,
            column: 1
          }
        },
        line: 100
      },
      "11": {
        name: "AuthenticatedComponent",
        decl: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 101,
            column: 42
          }
        },
        loc: {
          start: {
            line: 101,
            column: 50
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 31,
            column: 65
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 45
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 31
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 88
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 29
          }
        }, {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 79
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 88
          }
        }, {
          start: {
            line: 53,
            column: 91
          },
          end: {
            line: 53,
            column: 95
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 54
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 33
          }
        }, {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 128,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\context\\AuthContext.tsx"],
      sourcesContent: ["\"use client\"\n\nimport * as React from \"react\"\nimport { createContext, useContext, useEffect, useState } from \"react\"\nimport { authService, type AuthState, type AuthUser } from \"../services/auth\"\n\n// Re-export AuthUser for components that need it\nexport type { AuthUser }\n\ninterface AuthContextType extends AuthState {\n  signUp: (email: string, password: string, userData?: { name?: string }) => Promise<AuthUser>\n  signIn: (email: string, password: string) => Promise<AuthUser>\n  signOut: () => Promise<void>\n  resetPassword: (email: string) => Promise<void>\n  updatePassword: (newPassword: string) => Promise<void>\n  updateProfile: (updates: Partial<AuthUser>) => Promise<AuthUser>\n  uploadAvatar: (file: File) => Promise<string>\n  isAuthenticated: () => boolean\n  hasRole: (role: string) => boolean\n  getAccessToken: () => string | null\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [authState, setAuthState] = useState<AuthState>(authService.getState())\n\n  useEffect(() => {\n    // Subscribe to auth state changes\n    const unsubscribe = authService.subscribe(setAuthState)\n    return unsubscribe\n  }, [])\n\n  const contextValue: AuthContextType = {\n    ...authState,\n    signUp: authService.signUp.bind(authService),\n    signIn: authService.signIn.bind(authService),\n    signOut: authService.signOut.bind(authService),\n    resetPassword: authService.resetPassword.bind(authService),\n    updatePassword: authService.updatePassword.bind(authService),\n    updateProfile: authService.updateProfile.bind(authService),\n    uploadAvatar: authService.uploadAvatar.bind(authService),\n    isAuthenticated: authService.isAuthenticated.bind(authService),\n    hasRole: authService.hasRole.bind(authService),\n    getAccessToken: authService.getAccessToken.bind(authService),\n  }\n\n  return <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n}\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\n// Higher-order component for protecting routes\nexport const withAuth = <P extends object>(Component: React.ComponentType<P>) => {\n  return function AuthenticatedComponent(props: P) {\n    const { isAuthenticated, loading } = useAuth()\n\n    if (loading) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600\"></div>\n        </div>\n      )\n    }\n\n    if (!isAuthenticated()) {\n      return (\n        <div className=\"flex items-center justify-center min-h-screen\">\n          <div className=\"text-center\">\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Access Denied</h1>\n            <p className=\"text-gray-600\">Please sign in to access this page.</p>\n          </div>\n        </div>\n      )\n    }\n\n    return <Component {...props} />\n  }\n}\n"],
      names: ["AuthProvider", "useAuth", "withAuth", "AuthContext", "createContext", "undefined", "children", "authState", "setAuthState", "useState", "authService", "getState", "useEffect", "unsubscribe", "subscribe", "contextValue", "signUp", "bind", "signIn", "signOut", "resetPassword", "updatePassword", "updateProfile", "uploadAvatar", "isAuthenticated", "hasRole", "getAccessToken", "Provider", "value", "context", "useContext", "Error", "Component", "AuthenticatedComponent", "props", "loading", "div", "className", "h1", "p"],
      mappings: "AAAA;;;;;;;;;;;;QAwBaA;eAAAA;;QA0BAC;eAAAA;;QASAC;eAAAA;;;;+DAzDU;sBAEoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkB3D,MAAMC,4BAAcC,IAAAA,oBAAa,EAA8BC;AAExD,MAAML,eAAwD,CAAC,EAAEM,QAAQ,EAAE;IAChF,MAAM,CAACC,WAAWC,aAAa,GAAGC,IAAAA,eAAQ,EAAYC,iBAAW,CAACC,QAAQ;IAE1EC,IAAAA,gBAAS,EAAC;QACR,kCAAkC;QAClC,MAAMC,cAAcH,iBAAW,CAACI,SAAS,CAACN;QAC1C,OAAOK;IACT,GAAG,EAAE;IAEL,MAAME,eAAgC;QACpC,GAAGR,SAAS;QACZS,QAAQN,iBAAW,CAACM,MAAM,CAACC,IAAI,CAACP,iBAAW;QAC3CQ,QAAQR,iBAAW,CAACQ,MAAM,CAACD,IAAI,CAACP,iBAAW;QAC3CS,SAAST,iBAAW,CAACS,OAAO,CAACF,IAAI,CAACP,iBAAW;QAC7CU,eAAeV,iBAAW,CAACU,aAAa,CAACH,IAAI,CAACP,iBAAW;QACzDW,gBAAgBX,iBAAW,CAACW,cAAc,CAACJ,IAAI,CAACP,iBAAW;QAC3DY,eAAeZ,iBAAW,CAACY,aAAa,CAACL,IAAI,CAACP,iBAAW;QACzDa,cAAcb,iBAAW,CAACa,YAAY,CAACN,IAAI,CAACP,iBAAW;QACvDc,iBAAiBd,iBAAW,CAACc,eAAe,CAACP,IAAI,CAACP,iBAAW;QAC7De,SAASf,iBAAW,CAACe,OAAO,CAACR,IAAI,CAACP,iBAAW;QAC7CgB,gBAAgBhB,iBAAW,CAACgB,cAAc,CAACT,IAAI,CAACP,iBAAW;IAC7D;IAEA,qBAAO,qBAACP,YAAYwB,QAAQ;QAACC,OAAOb;kBAAeT;;AACrD;AAEO,MAAML,UAAU;IACrB,MAAM4B,UAAUC,IAAAA,iBAAU,EAAC3B;IAC3B,IAAI0B,YAAYxB,WAAW;QACzB,MAAM,IAAI0B,MAAM;IAClB;IACA,OAAOF;AACT;AAGO,MAAM3B,WAAW,CAAmB8B;IACzC,OAAO,SAASC,uBAAuBC,KAAQ;QAC7C,MAAM,EAAEV,eAAe,EAAEW,OAAO,EAAE,GAAGlC;QAErC,IAAIkC,SAAS;YACX,qBACE,qBAACC;gBAAIC,WAAU;0BACb,cAAA,qBAACD;oBAAIC,WAAU;;;QAGrB;QAEA,IAAI,CAACb,mBAAmB;YACtB,qBACE,qBAACY;gBAAIC,WAAU;0BACb,cAAA,sBAACD;oBAAIC,WAAU;;sCACb,qBAACC;4BAAGD,WAAU;sCAAwC;;sCACtD,qBAACE;4BAAEF,WAAU;sCAAgB;;;;;QAIrC;QAEA,qBAAO,qBAACL;YAAW,GAAGE,KAAK;;IAC7B;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3a1dbb4901fdbc7963580d5387c3775c1188998b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19mtpf45vv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19mtpf45vv();
cov_19mtpf45vv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_19mtpf45vv().f[0]++;
  cov_19mtpf45vv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_19mtpf45vv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_19mtpf45vv().s[3]++;
_export(exports, {
  get AuthProvider() {
    /* istanbul ignore next */
    cov_19mtpf45vv().f[1]++;
    cov_19mtpf45vv().s[4]++;
    return AuthProvider;
  },
  get useAuth() {
    /* istanbul ignore next */
    cov_19mtpf45vv().f[2]++;
    cov_19mtpf45vv().s[5]++;
    return useAuth;
  },
  get withAuth() {
    /* istanbul ignore next */
    cov_19mtpf45vv().f[3]++;
    cov_19mtpf45vv().s[6]++;
    return withAuth;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_19mtpf45vv().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_19mtpf45vv().s[8]++, _interop_require_wildcard(require("react")));
const _auth =
/* istanbul ignore next */
(cov_19mtpf45vv().s[9]++, require("../services/auth"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_19mtpf45vv().f[4]++;
  cov_19mtpf45vv().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_19mtpf45vv().b[0][0]++;
    cov_19mtpf45vv().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_19mtpf45vv().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_19mtpf45vv().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_19mtpf45vv().f[5]++;
    cov_19mtpf45vv().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_19mtpf45vv().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_19mtpf45vv().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_19mtpf45vv().f[6]++;
  cov_19mtpf45vv().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_19mtpf45vv().b[2][0]++;
    cov_19mtpf45vv().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_19mtpf45vv().b[2][1]++;
  }
  cov_19mtpf45vv().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_19mtpf45vv().b[4][0]++;
    cov_19mtpf45vv().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_19mtpf45vv().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_19mtpf45vv().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_19mtpf45vv().b[6][0]++;
    cov_19mtpf45vv().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_19mtpf45vv().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[24]++,
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_19mtpf45vv().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_19mtpf45vv().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_19mtpf45vv().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_19mtpf45vv().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_19mtpf45vv().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_19mtpf45vv().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_19mtpf45vv().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_19mtpf45vv().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_19mtpf45vv().b[11][1]++, null));
      /* istanbul ignore next */
      cov_19mtpf45vv().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_19mtpf45vv().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_19mtpf45vv().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_19mtpf45vv().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_19mtpf45vv().b[12][0]++;
        cov_19mtpf45vv().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_19mtpf45vv().b[12][1]++;
        cov_19mtpf45vv().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_19mtpf45vv().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_19mtpf45vv().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_19mtpf45vv().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_19mtpf45vv().b[14][0]++;
    cov_19mtpf45vv().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_19mtpf45vv().b[14][1]++;
  }
  cov_19mtpf45vv().s[34]++;
  return newObj;
}
const AuthContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_19mtpf45vv().s[35]++, (0, _react.createContext)(undefined));
/* istanbul ignore next */
cov_19mtpf45vv().s[36]++;
const AuthProvider = ({
  children
}) => {
  /* istanbul ignore next */
  cov_19mtpf45vv().f[7]++;
  const [authState, setAuthState] =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[37]++, (0, _react.useState)(_auth.authService.getState()));
  /* istanbul ignore next */
  cov_19mtpf45vv().s[38]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_19mtpf45vv().f[8]++;
    // Subscribe to auth state changes
    const unsubscribe =
    /* istanbul ignore next */
    (cov_19mtpf45vv().s[39]++, _auth.authService.subscribe(setAuthState));
    /* istanbul ignore next */
    cov_19mtpf45vv().s[40]++;
    return unsubscribe;
  }, []);
  const contextValue =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[41]++, {
    ...authState,
    signUp: _auth.authService.signUp.bind(_auth.authService),
    signIn: _auth.authService.signIn.bind(_auth.authService),
    signOut: _auth.authService.signOut.bind(_auth.authService),
    resetPassword: _auth.authService.resetPassword.bind(_auth.authService),
    updatePassword: _auth.authService.updatePassword.bind(_auth.authService),
    updateProfile: _auth.authService.updateProfile.bind(_auth.authService),
    uploadAvatar: _auth.authService.uploadAvatar.bind(_auth.authService),
    isAuthenticated: _auth.authService.isAuthenticated.bind(_auth.authService),
    hasRole: _auth.authService.hasRole.bind(_auth.authService),
    getAccessToken: _auth.authService.getAccessToken.bind(_auth.authService)
  });
  /* istanbul ignore next */
  cov_19mtpf45vv().s[42]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(AuthContext.Provider, {
    value: contextValue,
    children: children
  });
};
/* istanbul ignore next */
cov_19mtpf45vv().s[43]++;
const useAuth = () => {
  /* istanbul ignore next */
  cov_19mtpf45vv().f[9]++;
  const context =
  /* istanbul ignore next */
  (cov_19mtpf45vv().s[44]++, (0, _react.useContext)(AuthContext));
  /* istanbul ignore next */
  cov_19mtpf45vv().s[45]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_19mtpf45vv().b[15][0]++;
    cov_19mtpf45vv().s[46]++;
    throw new Error("useAuth must be used within an AuthProvider");
  } else
  /* istanbul ignore next */
  {
    cov_19mtpf45vv().b[15][1]++;
  }
  cov_19mtpf45vv().s[47]++;
  return context;
};
/* istanbul ignore next */
cov_19mtpf45vv().s[48]++;
const withAuth = Component => {
  /* istanbul ignore next */
  cov_19mtpf45vv().f[10]++;
  cov_19mtpf45vv().s[49]++;
  return function AuthenticatedComponent(props) {
    /* istanbul ignore next */
    cov_19mtpf45vv().f[11]++;
    const {
      isAuthenticated,
      loading
    } =
    /* istanbul ignore next */
    (cov_19mtpf45vv().s[50]++, useAuth());
    /* istanbul ignore next */
    cov_19mtpf45vv().s[51]++;
    if (loading) {
      /* istanbul ignore next */
      cov_19mtpf45vv().b[16][0]++;
      cov_19mtpf45vv().s[52]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex items-center justify-center min-h-screen",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600"
        })
      });
    } else
    /* istanbul ignore next */
    {
      cov_19mtpf45vv().b[16][1]++;
    }
    cov_19mtpf45vv().s[53]++;
    if (!isAuthenticated()) {
      /* istanbul ignore next */
      cov_19mtpf45vv().b[17][0]++;
      cov_19mtpf45vv().s[54]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex items-center justify-center min-h-screen",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
            className: "text-2xl font-bold text-gray-900 mb-4",
            children: "Access Denied"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-gray-600",
            children: "Please sign in to access this page."
          })]
        })
      });
    } else
    /* istanbul ignore next */
    {
      cov_19mtpf45vv().b[17][1]++;
    }
    cov_19mtpf45vv().s[55]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(Component, {
      ...props
    });
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,