12071fd96254e9e94e04dce39964103e
"use client";
"use strict";

/* istanbul ignore next */
function cov_1lrbtielo8() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\forms\\InvoiceItemInput.tsx";
  var hash = "538327d3fe0d5d574f7a15bd94fd01e206bdce1f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\forms\\InvoiceItemInput.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "6": {
        start: {
          line: 15,
          column: 39
        },
        end: {
          line: 15,
          column: 51
        }
      },
      "7": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "8": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 40
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "10": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "11": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "12": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 19
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "15": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "16": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 30
        }
      },
      "18": {
        start: {
          line: 35,
          column: 17
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 38,
          column: 32
        },
        end: {
          line: 38,
          column: 88
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "22": {
        start: {
          line: 41,
          column: 23
        },
        end: {
          line: 41,
          column: 95
        }
      },
      "23": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 57
        }
      },
      "25": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 39
        }
      },
      "26": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 25
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 31
        }
      },
      "29": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 18
        }
      },
      "30": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 44
        }
      },
      "31": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 77,
          column: 1
        }
      },
      "32": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 139
        }
      },
      "33": {
        start: {
          line: 61,
          column: 25
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "34": {
        start: {
          line: 62,
          column: 25
        },
        end: {
          line: 62,
          column: 84
        }
      },
      "35": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 27
        }
      },
      "36": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      },
      "37": {
        start: {
          line: 78,
          column: 17
        },
        end: {
          line: 78,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 33
          }
        },
        loc: {
          start: {
            line: 14,
            column: 47
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 40
          }
        },
        loc: {
          start: {
            line: 18,
            column: 61
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 34
          }
        },
        loc: {
          start: {
            line: 22,
            column: 53
          },
          end: {
            line: 54,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "cn",
        decl: {
          start: {
            line: 56,
            column: 9
          },
          end: {
            line: 56,
            column: 11
          }
        },
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 25
          },
          end: {
            line: 59,
            column: 26
          }
        },
        loc: {
          start: {
            line: 59,
            column: 126
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 61,
            column: 26
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 61
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 15
      },
      "1": {
        loc: {
          start: {
            line: 19,
            column: 15
          },
          end: {
            line: 19,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 19,
            column: 45
          }
        }, {
          start: {
            line: 19,
            column: 48
          },
          end: {
            line: 19,
            column: 65
          }
        }],
        line: 19
      },
      "2": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "3": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 20
          }
        }, {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 27
          }
        }, {
          start: {
            line: 23,
            column: 31
          },
          end: {
            line: 23,
            column: 45
          }
        }],
        line: 23
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 47
          }
        }, {
          start: {
            line: 26,
            column: 51
          },
          end: {
            line: 26,
            column: 76
          }
        }],
        line: 26
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 31
          }
        }],
        line: 32
      },
      "8": {
        loc: {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 53
          }
        }, {
          start: {
            line: 38,
            column: 57
          },
          end: {
            line: 38,
            column: 88
          }
        }],
        line: 38
      },
      "9": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "10": {
        loc: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 29
          }
        }, {
          start: {
            line: 40,
            column: 33
          },
          end: {
            line: 40,
            column: 79
          }
        }],
        line: 40
      },
      "11": {
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 41,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 41,
            column: 88
          }
        }, {
          start: {
            line: 41,
            column: 91
          },
          end: {
            line: 41,
            column: 95
          }
        }],
        line: 41
      },
      "12": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 46,
            column: 13
          }
        }],
        line: 42
      },
      "13": {
        loc: {
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 16
          },
          end: {
            line: 42,
            column: 20
          }
        }, {
          start: {
            line: 42,
            column: 25
          },
          end: {
            line: 42,
            column: 33
          }
        }, {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 42,
            column: 45
          }
        }],
        line: 42
      },
      "14": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "15": {
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 45
          },
          end: {
            line: 62,
            column: 67
          }
        }, {
          start: {
            line: 62,
            column: 70
          },
          end: {
            line: 62,
            column: 84
          }
        }],
        line: 62
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\forms\\InvoiceItemInput.tsx"],
      sourcesContent: ["\"use client\"\n\nimport * as React from \"react\"\n\n// Local utility function to avoid import issues\nfunction cn(...inputs: (string | undefined | null | boolean)[]): string {\n  return inputs.filter(Boolean).join(\" \")\n}\n\ninterface InvoiceItemInputProps {\n  type: \"text\" | \"number\"\n  value: string | number\n  onChange: (value: string | number) => void\n  className?: string\n  placeholder?: string\n  min?: string\n  step?: string\n  id?: string\n  name?: string\n  \"data-testid\"?: string\n}\n\nconst InvoiceItemInput: React.FC<InvoiceItemInputProps> = ({\n  type,\n  value,\n  onChange,\n  className,\n  placeholder,\n  min,\n  step,\n  id,\n  name,\n  \"data-testid\": dataTestId,\n}) => {\n  const baseClasses =\n    \"px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors\"\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = type === \"number\" ? Number(e.target.value) : e.target.value\n    onChange(newValue)\n  }\n\n  return (\n    <input\n      id={id}\n      name={name}\n      type={type}\n      value={value}\n      onChange={handleChange}\n      className={cn(baseClasses, className)}\n      placeholder={placeholder}\n      min={min}\n      step={step}\n      data-testid={dataTestId}\n    />\n  )\n}\n\nexport default InvoiceItemInput\n"],
      names: ["cn", "inputs", "filter", "Boolean", "join", "InvoiceItemInput", "type", "value", "onChange", "className", "placeholder", "min", "step", "id", "name", "dataTestId", "baseClasses", "handleChange", "e", "newValue", "Number", "target", "input", "data-testid"],
      mappings: "AAAA;;;;;+BA0DA;;;eAAA;;;;+DAxDuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEvB,gDAAgD;AAChD,SAASA,GAAG,GAAGC,MAA+C;IAC5D,OAAOA,OAAOC,MAAM,CAACC,SAASC,IAAI,CAAC;AACrC;AAeA,MAAMC,mBAAoD,CAAC,EACzDC,IAAI,EACJC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,WAAW,EACXC,GAAG,EACHC,IAAI,EACJC,EAAE,EACFC,IAAI,EACJ,eAAeC,UAAU,EAC1B;IACC,MAAMC,cACJ;IAEF,MAAMC,eAAe,CAACC;QACpB,MAAMC,WAAWb,SAAS,WAAWc,OAAOF,EAAEG,MAAM,CAACd,KAAK,IAAIW,EAAEG,MAAM,CAACd,KAAK;QAC5EC,SAASW;IACX;IAEA,qBACE,qBAACG;QACCT,IAAIA;QACJC,MAAMA;QACNR,MAAMA;QACNC,OAAOA;QACPC,UAAUS;QACVR,WAAWT,GAAGgB,aAAaP;QAC3BC,aAAaA;QACbC,KAAKA;QACLC,MAAMA;QACNW,eAAaR;;AAGnB;MAEA,WAAeV"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "538327d3fe0d5d574f7a15bd94fd01e206bdce1f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1lrbtielo8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1lrbtielo8();
cov_1lrbtielo8().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1lrbtielo8().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1lrbtielo8().f[0]++;
    cov_1lrbtielo8().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1lrbtielo8().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1lrbtielo8().s[4]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1lrbtielo8().f[1]++;
  cov_1lrbtielo8().s[5]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1lrbtielo8().b[0][0]++;
    cov_1lrbtielo8().s[6]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1lrbtielo8().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1lrbtielo8().s[7]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1lrbtielo8().s[8]++, new WeakMap());
  /* istanbul ignore next */
  cov_1lrbtielo8().s[9]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1lrbtielo8().f[2]++;
    cov_1lrbtielo8().s[10]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1lrbtielo8().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1lrbtielo8().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1lrbtielo8().f[3]++;
  cov_1lrbtielo8().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1lrbtielo8().b[2][0]++;
    cov_1lrbtielo8().s[12]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1lrbtielo8().b[2][1]++;
  }
  cov_1lrbtielo8().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1lrbtielo8().b[4][0]++;
    cov_1lrbtielo8().s[14]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1lrbtielo8().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1lrbtielo8().s[15]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1lrbtielo8().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1lrbtielo8().b[6][0]++;
    cov_1lrbtielo8().s[17]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1lrbtielo8().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1lrbtielo8().s[18]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1lrbtielo8().s[19]++,
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1lrbtielo8().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1lrbtielo8().s[20]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1lrbtielo8().s[21]++;
    if (
    /* istanbul ignore next */
    (cov_1lrbtielo8().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1lrbtielo8().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1lrbtielo8().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1lrbtielo8().s[22]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1lrbtielo8().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1lrbtielo8().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1lrbtielo8().s[23]++;
      if (
      /* istanbul ignore next */
      (cov_1lrbtielo8().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1lrbtielo8().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1lrbtielo8().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1lrbtielo8().b[12][0]++;
        cov_1lrbtielo8().s[24]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1lrbtielo8().b[12][1]++;
        cov_1lrbtielo8().s[25]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1lrbtielo8().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1lrbtielo8().s[26]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1lrbtielo8().s[27]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1lrbtielo8().b[14][0]++;
    cov_1lrbtielo8().s[28]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1lrbtielo8().b[14][1]++;
  }
  cov_1lrbtielo8().s[29]++;
  return newObj;
}
// Local utility function to avoid import issues
function cn(...inputs) {
  /* istanbul ignore next */
  cov_1lrbtielo8().f[4]++;
  cov_1lrbtielo8().s[30]++;
  return inputs.filter(Boolean).join(" ");
}
/* istanbul ignore next */
cov_1lrbtielo8().s[31]++;
const InvoiceItemInput = ({
  type,
  value,
  onChange,
  className,
  placeholder,
  min,
  step,
  id,
  name,
  "data-testid": dataTestId
}) => {
  /* istanbul ignore next */
  cov_1lrbtielo8().f[5]++;
  const baseClasses =
  /* istanbul ignore next */
  (cov_1lrbtielo8().s[32]++, "px-3 py-2 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors");
  /* istanbul ignore next */
  cov_1lrbtielo8().s[33]++;
  const handleChange = e => {
    /* istanbul ignore next */
    cov_1lrbtielo8().f[6]++;
    const newValue =
    /* istanbul ignore next */
    (cov_1lrbtielo8().s[34]++, type === "number" ?
    /* istanbul ignore next */
    (cov_1lrbtielo8().b[15][0]++, Number(e.target.value)) :
    /* istanbul ignore next */
    (cov_1lrbtielo8().b[15][1]++, e.target.value));
    /* istanbul ignore next */
    cov_1lrbtielo8().s[35]++;
    onChange(newValue);
  };
  /* istanbul ignore next */
  cov_1lrbtielo8().s[36]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
    id: id,
    name: name,
    type: type,
    value: value,
    onChange: handleChange,
    className: cn(baseClasses, className),
    placeholder: placeholder,
    min: min,
    step: step,
    "data-testid": dataTestId
  });
};
const _default =
/* istanbul ignore next */
(cov_1lrbtielo8().s[37]++, InvoiceItemInput);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZGVmYXVsdCIsImNuIiwiaW5wdXRzIiwiY292XzFscmJ0aWVsbzgiLCJmIiwicyIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwiSW52b2ljZUl0ZW1JbnB1dCIsInR5cGUiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiY2xhc3NOYW1lIiwicGxhY2Vob2xkZXIiLCJtaW4iLCJzdGVwIiwiaWQiLCJuYW1lIiwiZGF0YVRlc3RJZCIsImJhc2VDbGFzc2VzIiwiaGFuZGxlQ2hhbmdlIiwiZSIsIm5ld1ZhbHVlIiwiYiIsIk51bWJlciIsInRhcmdldCIsIl9qc3hydW50aW1lIiwianN4Il0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxjaGFzZVxcRG93bmxvYWRzXFxjcm0gKDMyKVxcc3JjXFxjb21wb25lbnRzXFxmb3Jtc1xcSW52b2ljZUl0ZW1JbnB1dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcblxuLy8gTG9jYWwgdXRpbGl0eSBmdW5jdGlvbiB0byBhdm9pZCBpbXBvcnQgaXNzdWVzXG5mdW5jdGlvbiBjbiguLi5pbnB1dHM6IChzdHJpbmcgfCB1bmRlZmluZWQgfCBudWxsIHwgYm9vbGVhbilbXSk6IHN0cmluZyB7XG4gIHJldHVybiBpbnB1dHMuZmlsdGVyKEJvb2xlYW4pLmpvaW4oXCIgXCIpXG59XG5cbmludGVyZmFjZSBJbnZvaWNlSXRlbUlucHV0UHJvcHMge1xuICB0eXBlOiBcInRleHRcIiB8IFwibnVtYmVyXCJcbiAgdmFsdWU6IHN0cmluZyB8IG51bWJlclxuICBvbkNoYW5nZTogKHZhbHVlOiBzdHJpbmcgfCBudW1iZXIpID0+IHZvaWRcbiAgY2xhc3NOYW1lPzogc3RyaW5nXG4gIHBsYWNlaG9sZGVyPzogc3RyaW5nXG4gIG1pbj86IHN0cmluZ1xuICBzdGVwPzogc3RyaW5nXG4gIGlkPzogc3RyaW5nXG4gIG5hbWU/OiBzdHJpbmdcbiAgXCJkYXRhLXRlc3RpZFwiPzogc3RyaW5nXG59XG5cbmNvbnN0IEludm9pY2VJdGVtSW5wdXQ6IFJlYWN0LkZDPEludm9pY2VJdGVtSW5wdXRQcm9wcz4gPSAoe1xuICB0eXBlLFxuICB2YWx1ZSxcbiAgb25DaGFuZ2UsXG4gIGNsYXNzTmFtZSxcbiAgcGxhY2Vob2xkZXIsXG4gIG1pbixcbiAgc3RlcCxcbiAgaWQsXG4gIG5hbWUsXG4gIFwiZGF0YS10ZXN0aWRcIjogZGF0YVRlc3RJZCxcbn0pID0+IHtcbiAgY29uc3QgYmFzZUNsYXNzZXMgPVxuICAgIFwicHgtMyBweS0yIGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZCBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ibHVlLTUwMCBmb2N1czpib3JkZXItYmx1ZS01MDAgdHJhbnNpdGlvbi1jb2xvcnNcIlxuXG4gIGNvbnN0IGhhbmRsZUNoYW5nZSA9IChlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IG5ld1ZhbHVlID0gdHlwZSA9PT0gXCJudW1iZXJcIiA/IE51bWJlcihlLnRhcmdldC52YWx1ZSkgOiBlLnRhcmdldC52YWx1ZVxuICAgIG9uQ2hhbmdlKG5ld1ZhbHVlKVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8aW5wdXRcbiAgICAgIGlkPXtpZH1cbiAgICAgIG5hbWU9e25hbWV9XG4gICAgICB0eXBlPXt0eXBlfVxuICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cbiAgICAgIGNsYXNzTmFtZT17Y24oYmFzZUNsYXNzZXMsIGNsYXNzTmFtZSl9XG4gICAgICBwbGFjZWhvbGRlcj17cGxhY2Vob2xkZXJ9XG4gICAgICBtaW49e21pbn1cbiAgICAgIHN0ZXA9e3N0ZXB9XG4gICAgICBkYXRhLXRlc3RpZD17ZGF0YVRlc3RJZH1cbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IEludm9pY2VJdGVtSW5wdXRcbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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