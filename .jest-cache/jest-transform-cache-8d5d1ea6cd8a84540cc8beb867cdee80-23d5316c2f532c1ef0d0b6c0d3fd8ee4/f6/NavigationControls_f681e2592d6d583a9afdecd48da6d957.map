{"version":3,"names":["NavigationControls","TOTAL_STEPS","cov_t958102am","s","currentStep","answers","onPrevStep","onNextStep","onSave","onReset","quickMode","onToggleQuickMode","canUndo","canRedo","onUndo","onRedo","isComplete","f","progress","_utils","calculateProgress","stepComplete","isStepComplete","canGoNext","b","canGoPrev","_jsxruntime","jsxs","className","jsx","_progress","Progress","value","_button","Button","variant","size","onClick","_lucidereact","Zap","disabled","title","RotateCcw","Save","ChevronLeft","ChevronRight","Array","from","length","_","index","stepCompleted","isCurrentStep"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\WebDesignQuote\\NavigationControls.tsx"],"sourcesContent":["// Navigation controls component for WebDesignQuote\nimport React from 'react'\nimport { Button } from \"@/components/ui/button\"\nimport { Progress } from \"@/components/ui/progress\"\nimport { ChevronLeft, ChevronRight, Save, RotateCcw, Zap } from 'lucide-react'\nimport { NavigationControlsProps } from './types'\nimport { calculateProgress, isStepComplete } from './utils'\n\nconst TOTAL_STEPS = 8\n\nexport const NavigationControls: React.FC<NavigationControlsProps> = ({\n  currentStep,\n  answers,\n  onPrevStep,\n  onNextStep,\n  onSave,\n  onReset,\n  quickMode,\n  onToggleQuickMode,\n  canUndo,\n  canRedo,\n  onUndo,\n  onRedo,\n  isComplete,\n}) => {\n  const progress = calculateProgress(currentStep, TOTAL_STEPS)\n  const stepComplete = isStepComplete(currentStep, answers)\n  const canGoNext = stepComplete || currentStep >= TOTAL_STEPS\n  const canGoPrev = currentStep > 0\n  \n  return (\n    <div className=\"space-y-4\">\n      {/* Progress Bar */}\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between text-sm text-gray-600\">\n          <span>Progress</span>\n          <span>{progress}% Complete</span>\n        </div>\n        <Progress value={progress} className=\"h-2\" />\n      </div>\n      \n      {/* Quick Mode Toggle */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onToggleQuickMode}\n            className={quickMode ? 'bg-yellow-50 border-yellow-200' : ''}\n          >\n            <Zap className=\"h-4 w-4 mr-1\" />\n            {quickMode ? 'Quick Mode On' : 'Quick Mode Off'}\n          </Button>\n          \n          {/* Undo/Redo Controls */}\n          <div className=\"flex space-x-1\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onUndo}\n              disabled={!canUndo}\n              title=\"Undo (Ctrl+Z)\"\n            >\n              <RotateCcw className=\"h-4 w-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={onRedo}\n              disabled={!canRedo}\n              title=\"Redo (Ctrl+Y)\"\n            >\n              <RotateCcw className=\"h-4 w-4 scale-x-[-1]\" />\n            </Button>\n          </div>\n        </div>\n        \n        {/* Save and Reset */}\n        <div className=\"flex space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onSave}\n            title=\"Save Progress\"\n          >\n            <Save className=\"h-4 w-4 mr-1\" />\n            Save\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onReset}\n            title=\"Reset All\"\n          >\n            <RotateCcw className=\"h-4 w-4 mr-1\" />\n            Reset\n          </Button>\n        </div>\n      </div>\n      \n      {/* Step Navigation */}\n      <div className=\"flex justify-between items-center\">\n        <Button\n          variant=\"outline\"\n          onClick={onPrevStep}\n          disabled={!canGoPrev}\n          className=\"flex items-center space-x-2\"\n        >\n          <ChevronLeft className=\"h-4 w-4\" />\n          <span>Previous</span>\n        </Button>\n        \n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-600\">\n            Step {currentStep + 1} of {TOTAL_STEPS}\n          </span>\n          {!stepComplete && currentStep < TOTAL_STEPS && (\n            <span className=\"text-xs text-orange-600\">\n              (Please complete this step)\n            </span>\n          )}\n        </div>\n        \n        <Button\n          onClick={onNextStep}\n          disabled={!canGoNext && !isComplete}\n          className=\"flex items-center space-x-2\"\n        >\n          <span>{currentStep >= TOTAL_STEPS - 1 ? 'Finish' : 'Next'}</span>\n          <ChevronRight className=\"h-4 w-4\" />\n        </Button>\n      </div>\n      \n      {/* Step Indicators */}\n      <div className=\"flex justify-center space-x-2\">\n        {Array.from({ length: TOTAL_STEPS }, (_, index) => {\n          const stepCompleted = index < currentStep || (index === currentStep && stepComplete)\n          const isCurrentStep = index === currentStep\n          \n          return (\n            <div\n              key={index}\n              className={`w-3 h-3 rounded-full transition-colors ${\n                stepCompleted\n                  ? 'bg-green-500'\n                  : isCurrentStep\n                  ? 'bg-blue-500'\n                  : 'bg-gray-300'\n              }`}\n              title={`Step ${index + 1}`}\n            />\n          )\n        })}\n      </div>\n      \n      {/* Quick Mode Info */}\n      {quickMode && (\n        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n          <div className=\"flex items-center space-x-2\">\n            <Zap className=\"h-4 w-4 text-yellow-600\" />\n            <span className=\"text-sm font-medium text-yellow-800\">\n              Quick Mode Active\n            </span>\n          </div>\n          <p className=\"text-xs text-yellow-700 mt-1\">\n            You can skip optional questions and move faster through the form.\n          </p>\n        </div>\n      )}\n      \n      {/* Keyboard Shortcuts Info */}\n      <div className=\"text-xs text-gray-500 text-center space-y-1\">\n        <div>Keyboard shortcuts: ← → (navigate), Ctrl+S (save), Ctrl+Z (undo), Ctrl+Y (redo)</div>\n        <div>Press 'Q' to toggle quick mode</div>\n      </div>\n    </div>\n  )\n}"],"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","ignoreList":[]}