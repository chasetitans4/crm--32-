{"version":3,"names":["cov_21x4xud5ig","actualCoverage","s","RateLimiter","f","analytics","calculateCompletionRate","errorReporting","getConnectionType","getDeviceType","performanceMonitor","setupErrorTracking","trackModuleLoad","trackUserJourney","usePerformanceMonitoring","AnalyticsService","constructor","isEnabled","queue","sessionId","generateSessionId","setupBeforeUnload","Date","now","Math","random","toString","substr","window","b","addEventListener","flushQueue","track","event","properties","eventData","timestamp","toISOString","url","location","href","userAgent","navigator","push","length","fetch","method","headers","body","JSON","stringify","events","catch","error","disable","enable","ErrorReportingService","captureException","context","errorData","message","stack","name","err","PerformanceService","startMeasure","performance","mark","metrics","set","endMeasure","measure","getEntriesByName","duration","startTime","get","delete","getNavigationTiming","navigation","timing","domContentLoaded","domContentLoadedEventEnd","navigationStart","loadComplete","loadEventEnd","domInteractive","firstPaint","responseEnd","Map","width","innerWidth","connection","effectiveType","completed","total","round","moduleId","loadTime","userId","deviceType","connectionType","activeModule","Error","module","reason","data","modulesViewed","timeSpent","completionRate","measureName","options","requests","windowMs","max","isAllowed","identifier","validRequests","filter","time","getRemainingRequests","reset","clear"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\analyticsService.ts"],"sourcesContent":["// Performance monitoring utilities\nexport interface PerformanceMetrics {\n  moduleId: string\n  loadTime: number\n  userId: string\n  timestamp: Date\n  deviceType: string\n  connectionType?: string\n}\n\nexport interface ErrorContext {\n  userId: string\n  module: string\n  context: string\n  userAgent: string\n  url: string\n  timestamp: Date\n}\n\nexport interface UserJourneyData {\n  modulesViewed: string[]\n  timeSpent: number\n  completionRate: number\n  deviceType: string\n  sessionId: string\n  userId: string\n}\n\n// Analytics service\nclass AnalyticsService {\n  private isEnabled = true\n  private queue: any[] = []\n  private sessionId: string\n\n  constructor() {\n    this.sessionId = this.generateSessionId()\n    this.setupBeforeUnload()\n  }\n\n  private generateSessionId(): string {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`\n  }\n\n  private setupBeforeUnload(): void {\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"beforeunload\", () => {\n        this.flushQueue()\n      })\n    }\n  }\n\n  track(event: string, properties: Record<string, any>): void {\n    if (!this.isEnabled) return\n    const eventData = {\n      event,\n      properties: {\n        ...properties,\n        sessionId: this.sessionId,\n        timestamp: new Date().toISOString(),\n        url: typeof window !== \"undefined\" ? window.location.href : \"\",\n        userAgent: typeof navigator !== \"undefined\" ? navigator.userAgent : \"\",\n      },\n    }\n    this.queue.push(eventData)\n    // Auto-flush queue when it gets large\n    if (this.queue.length >= 10) {\n      this.flushQueue()\n    }\n  }\n\n  private flushQueue(): void {\n    if (this.queue.length === 0) return\n    // Send to analytics service (example)\n    if (typeof fetch !== \"undefined\") {\n      fetch(\"/api/analytics\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ events: this.queue }),\n      }).catch((error) => {\n          // Silent error handling - Failed to send analytics\n        })\n    }\n    this.queue = []\n  }\n\n  disable(): void {\n    this.isEnabled = false\n  }\n\n  enable(): void {\n    this.isEnabled = true\n  }\n}\n\n// Error reporting service\nclass ErrorReportingService {\n  private isEnabled = true\n\n  captureException(error: Error, context: Partial<ErrorContext>): void {\n    if (!this.isEnabled) return\n    const errorData = {\n      message: error.message,\n      stack: error.stack,\n      name: error.name,\n      context: {\n        ...context,\n        timestamp: new Date().toISOString(),\n        userAgent: typeof navigator !== \"undefined\" ? navigator.userAgent : \"\",\n        url: typeof window !== \"undefined\" ? window.location.href : \"\",\n      },\n    }\n    // Silent error handling - Error captured\n    // Send to error reporting service (example)\n    if (typeof fetch !== \"undefined\") {\n      fetch(\"/api/errors\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(errorData),\n      }).catch((err) => {\n        // Silent error handling - Failed to report error\n      })\n    }\n  }\n\n  disable(): void {\n    this.isEnabled = false\n  }\n\n  enable(): void {\n    this.isEnabled = true\n  }\n}\n\n// Performance monitoring service\nclass PerformanceService {\n  private metrics: Map<string, number> = new Map()\n\n  startMeasure(name: string): void {\n    if (typeof performance !== \"undefined\") {\n      performance.mark(`${name}-start`)\n    } else {\n      this.metrics.set(`${name}-start`, Date.now())\n    }\n  }\n\n  endMeasure(name: string): number {\n    if (typeof performance !== \"undefined\") {\n      performance.mark(`${name}-end`)\n      performance.measure(name, `${name}-start`, `${name}-end`)\n      const measure = performance.getEntriesByName(name)[0]\n      return measure ? measure.duration : 0\n    } else {\n      const startTime = this.metrics.get(`${name}-start`)\n      if (startTime) {\n        const duration = Date.now() - startTime\n        this.metrics.delete(`${name}-start`)\n        return duration\n      }\n      return 0\n    }\n  }\n\n  getNavigationTiming(): Record<string, number> {\n    if (typeof performance === \"undefined\" || !performance.navigation) {\n      return {}\n    }\n    const timing = performance.timing\n    return {\n      domContentLoaded: timing.domContentLoadedEventEnd - timing.navigationStart,\n      loadComplete: timing.loadEventEnd - timing.navigationStart,\n      domInteractive: timing.domInteractive - timing.navigationStart,\n      firstPaint: timing.responseEnd - timing.navigationStart,\n    }\n  }\n}\n\n// Utility functions\nexport const getDeviceType = (): string => {\n  if (typeof window === \"undefined\") return \"unknown\"\n  const width = window.innerWidth\n  if (width < 768) return \"mobile\"\n  if (width < 1024) return \"tablet\"\n  return \"desktop\"\n}\n\nexport const getConnectionType = (): string => {\n  if (typeof navigator === \"undefined\" || !(\"connection\" in navigator)) {\n    return \"unknown\"\n  }\n  const connection = (navigator as Navigator & { connection?: { effectiveType?: string } }).connection\n  return connection?.effectiveType || \"unknown\"\n}\n\nexport const calculateCompletionRate = (completed: number, total: number): number => {\n  if (total === 0) return 0\n  return Math.round((completed / total) * 100)\n}\n\n// Singleton instances\nexport const analytics = new AnalyticsService()\nexport const errorReporting = new ErrorReportingService()\nexport const performanceMonitor = new PerformanceService()\n\n// Monitoring utility functions\nexport const trackModuleLoad = (moduleId: string, loadTime: number, userId: string): void => {\n  analytics.track(\"module_loaded\", {\n    moduleId,\n    loadTime,\n    userId,\n    deviceType: getDeviceType(),\n    connectionType: getConnectionType(),\n  })\n}\n\nexport const setupErrorTracking = (userId: string, activeModule: string): void => {\n  if (typeof window === \"undefined\") return\n  // Global error handler\n  window.addEventListener(\"error\", (event) => {\n    errorReporting.captureException(event.error || new Error(event.message), {\n      userId,\n      module: activeModule,\n      context: \"training-dashboard\",\n    })\n  })\n  // Unhandled promise rejection handler\n  window.addEventListener(\"unhandledrejection\", (event) => {\n    errorReporting.captureException(new Error(`Unhandled Promise Rejection: ${event.reason}`), {\n      userId,\n      module: activeModule,\n      context: \"training-dashboard-promise\",\n    })\n  })\n}\n\nexport const trackUserJourney = (data: UserJourneyData): void => {\n  analytics.track(\"training_journey\", {\n    modulesViewed: data.modulesViewed,\n    timeSpent: data.timeSpent,\n    completionRate: data.completionRate,\n    deviceType: data.deviceType,\n    sessionId: data.sessionId,\n    userId: data.userId,\n  })\n}\n\n// Performance monitoring hooks\nexport const usePerformanceMonitoring = () => {\n  const startMeasure = (name: string) => {\n    performanceMonitor.startMeasure(name)\n  }\n  const endMeasure = (name: string) => {\n    const duration = performanceMonitor.endMeasure(name)\n    analytics.track(\"performance_measure\", {\n      measureName: name,\n      duration,\n      deviceType: getDeviceType(),\n    })\n    return duration\n  }\n  return { startMeasure, endMeasure }\n}\n\n// Rate limiting utility\nexport class RateLimiter {\n  private requests: Map<string, number[]> = new Map()\n  private windowMs: number\n  private max: number\n\n  constructor(options: { windowMs: number; max: number }) {\n    this.windowMs = options.windowMs\n    this.max = options.max\n  }\n\n  isAllowed(identifier: string): boolean {\n    const now = Date.now()\n    const requests = this.requests.get(identifier) || []\n    // Remove old requests outside the window\n    const validRequests = requests.filter((time) => now - time < this.windowMs)\n    if (validRequests.length >= this.max) {\n      return false\n    }\n    validRequests.push(now)\n    this.requests.set(identifier, validRequests)\n    return true\n  }\n\n  getRemainingRequests(identifier: string): number {\n    const now = Date.now()\n    const requests = this.requests.get(identifier) || []\n    const validRequests = requests.filter((time) => now - time < this.windowMs)\n    return Math.max(0, this.max - validRequests.length)\n  }\n\n  reset(identifier?: string): void {\n    if (identifier) {\n      this.requests.delete(identifier)\n    } else {\n      this.requests.clear()\n    }\n  }\n}\n"],"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","ignoreList":[]}