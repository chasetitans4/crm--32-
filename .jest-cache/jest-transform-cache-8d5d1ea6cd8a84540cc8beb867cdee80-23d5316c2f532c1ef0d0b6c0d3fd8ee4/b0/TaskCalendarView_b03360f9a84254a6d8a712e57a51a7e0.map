{"version":3,"names":["TaskCalendarView","cov_yh5qz8gaw","f","s","default","_default","TaskPriorities","LOW","label","color","MEDIUM","HIGH","URGENT","TaskStatuses","TODO","IN_PROGRESS","REVIEW","DONE","TaskCategories","DEVELOPMENT","DESIGN","TESTING","DOCUMENTATION","MEETING","RESEARCH","tasks","calendarDate","setCalendarDate","isTaskOverdue","_jsxruntime","jsxs","className","jsx","onClick","Date","getFullYear","getMonth","_lucidereact","ChevronLeft","size","toLocaleDateString","month","year","ChevronRight","map","day","Array","from","length","_","i","date","dayTasks","filter","task","dueDate","b","taskDate","toDateString","isCurrentMonth","isToday","getDate","slice","status","title","assignee","AlertCircle","User","category","Tag","id","Object","entries","key"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskCalendarView.tsx"],"sourcesContent":["import React from 'react';\nimport { ChevronLeft, ChevronRight, Calendar, User, Tag, AlertCircle } from 'lucide-react';\nimport { Task } from '../../types/task';\n\ninterface TaskCalendarViewProps {\n  tasks: Task[];\n  calendarDate: Date;\n  setCalendarDate: React.Dispatch<React.SetStateAction<Date>>;\n  isTaskOverdue: (task: Task) => boolean;\n}\n\nconst TaskPriorities = {\n  LOW: {\n    label: 'Low',\n    color: 'bg-green-100 text-green-800'\n  },\n  MEDIUM: {\n    label: 'Medium',\n    color: 'bg-yellow-100 text-yellow-800'\n  },\n  HIGH: {\n    label: 'High',\n    color: 'bg-orange-100 text-orange-800'\n  },\n  URGENT: {\n    label: 'Urgent',\n    color: 'bg-red-100 text-red-800'\n  }\n};\n\nconst TaskStatuses = {\n  TODO: {\n    label: 'To Do',\n    color: 'bg-gray-100 text-gray-800'\n  },\n  IN_PROGRESS: {\n    label: 'In Progress',\n    color: 'bg-blue-100 text-blue-800'\n  },\n  REVIEW: {\n    label: 'Review',\n    color: 'bg-purple-100 text-purple-800'\n  },\n  DONE: {\n    label: 'Done',\n    color: 'bg-green-100 text-green-800'\n  }\n};\n\nconst TaskCategories = {\n  DEVELOPMENT: { label: 'Development' },\n  DESIGN: { label: 'Design' },\n  TESTING: { label: 'Testing' },\n  DOCUMENTATION: { label: 'Documentation' },\n  MEETING: { label: 'Meeting' },\n  RESEARCH: { label: 'Research' }\n};\n\nexport const TaskCalendarView: React.FC<TaskCalendarViewProps> = ({\n  tasks,\n  calendarDate,\n  setCalendarDate,\n  isTaskOverdue\n}) => {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n      <div className=\"p-6 border-b border-gray-100\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Task Calendar</h2>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setCalendarDate(new Date(calendarDate.getFullYear(), calendarDate.getMonth() - 1, 1))}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n            >\n              <ChevronLeft size={16} />\n            </button>\n            <span className=\"text-sm font-medium text-gray-700 min-w-[120px] text-center\">\n              {calendarDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\n            </span>\n            <button\n              onClick={() => setCalendarDate(new Date(calendarDate.getFullYear(), calendarDate.getMonth() + 1, 1))}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n            >\n              <ChevronRight size={16} />\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        <div className=\"grid grid-cols-7 gap-2 mb-4\">\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n            <div key={day} className=\"text-center text-sm font-medium text-gray-500 py-2\">\n              {day}\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"grid grid-cols-7 gap-2\">\n          {Array.from({ length: 35 }, (_, i) => {\n            const date = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), i - 6)\n            const dayTasks = tasks.filter(task => {\n              if (!task.dueDate) return false\n              const taskDate = new Date(task.dueDate)\n              return taskDate.toDateString() === date.toDateString()\n            })\n            const isCurrentMonth = date.getMonth() === calendarDate.getMonth()\n            const isToday = date.toDateString() === new Date().toDateString()\n            \n            return (\n              <div\n                key={i}\n                className={`min-h-[100px] p-2 border border-gray-100 rounded-lg ${\n                  isCurrentMonth ? 'bg-white' : 'bg-gray-50'\n                } ${isToday ? 'ring-2 ring-blue-500' : ''}`}\n              >\n                <div className={`text-sm font-medium mb-1 ${\n                  isCurrentMonth ? 'text-gray-900' : 'text-gray-400'\n                }`}>\n                  {date.getDate()}\n                </div>\n                \n                <div className=\"space-y-1\">\n                  {dayTasks.slice(0, 3).map(task => (\n                    <div\n                      key={task.id}\n                      className={`text-xs p-1 rounded truncate cursor-pointer hover:shadow-sm transition-shadow ${\n                        TaskStatuses[task.status]?.color || TaskStatuses.TODO.color\n                      } ${isTaskOverdue(task) ? 'ring-1 ring-red-400' : ''}`}\n                      title={`${task.title} - ${task.assignee || 'Unassigned'}`}\n                    >\n                      <div className=\"flex items-center space-x-1\">\n                        {isTaskOverdue(task) && (\n                          <AlertCircle size={8} className=\"text-red-600 flex-shrink-0\" />\n                        )}\n                        <span className=\"truncate\">{task.title}</span>\n                      </div>\n                      \n                      {task.assignee && (\n                        <div className=\"flex items-center mt-1 text-gray-600\">\n                          <User size={8} className=\"mr-1\" />\n                          <span className=\"truncate\">{task.assignee}</span>\n                        </div>\n                      )}\n                      \n                      {task.category && (\n                        <div className=\"flex items-center mt-1 text-gray-600\">\n                          <Tag size={8} className=\"mr-1\" />\n                          <span className=\"truncate\">\n                            {TaskCategories[task.category as keyof typeof TaskCategories]?.label || task.category}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                  \n                  {dayTasks.length > 3 && (\n                    <div className=\"text-xs text-gray-500 text-center py-1\">\n                      +{dayTasks.length - 3} more\n                    </div>\n                  )}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n        {/* Calendar Legend */}\n        <div className=\"mt-6 pt-4 border-t border-gray-100\">\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Legend</h3>\n          <div className=\"flex flex-wrap gap-4\">\n            {Object.entries(TaskStatuses).map(([key, status]) => (\n              <div key={key} className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded ${status.color}`}></div>\n                <span className=\"text-xs text-gray-600\">{status.label}</span>\n              </div>\n            ))}\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 rounded border-2 border-red-400\"></div>\n              <span className=\"text-xs text-gray-600\">Overdue</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 rounded ring-2 ring-blue-500\"></div>\n              <span className=\"text-xs text-gray-600\">Today</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCalendarView;"],"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","ignoreList":[]}