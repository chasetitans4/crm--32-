e18594f07ed562334c542807d092dc91
"use client";
"use strict";

/* istanbul ignore next */
function cov_clkpzzh0z() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Dashboard\\Widget.tsx";
  var hash = "dc5cab1dec619a36d5d0e056562e61ded8f14070";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Dashboard\\Widget.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 61
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 35
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "9": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 129,
          column: 1
        }
      },
      "10": {
        start: {
          line: 29,
          column: 135
        },
        end: {
          line: 29,
          column: 173
        }
      },
      "11": {
        start: {
          line: 30,
          column: 26
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "12": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 115,
          column: 9
        }
      },
      "13": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 57,
          column: 19
        }
      },
      "14": {
        start: {
          line: 37,
          column: 55
        },
        end: {
          line: 40,
          column: 29
        }
      },
      "15": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 84,
          column: 19
        }
      },
      "16": {
        start: {
          line: 63,
          column: 58
        },
        end: {
          line: 66,
          column: 29
        }
      },
      "17": {
        start: {
          line: 86,
          column: 32
        },
        end: {
          line: 89,
          column: 23
        }
      },
      "18": {
        start: {
          line: 86,
          column: 88
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "19": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "20": {
        start: {
          line: 103,
          column: 84
        },
        end: {
          line: 105,
          column: 55
        }
      },
      "21": {
        start: {
          line: 112,
          column: 16
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "22": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 128,
          column: 7
        }
      },
      "23": {
        start: {
          line: 130,
          column: 17
        },
        end: {
          line: 130,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 16
          }
        },
        loc: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 129,
            column: 1
          }
        },
        line: 28
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 30,
            column: 27
          }
        },
        loc: {
          start: {
            line: 30,
            column: 30
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 37,
            column: 46
          },
          end: {
            line: 37,
            column: 47
          }
        },
        loc: {
          start: {
            line: 37,
            column: 55
          },
          end: {
            line: 40,
            column: 29
          }
        },
        line: 37
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 50
          }
        },
        loc: {
          start: {
            line: 63,
            column: 58
          },
          end: {
            line: 66,
            column: 29
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 86,
            column: 71
          },
          end: {
            line: 86,
            column: 72
          }
        },
        loc: {
          start: {
            line: 86,
            column: 88
          },
          end: {
            line: 89,
            column: 21
          }
        },
        line: 86
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 103,
            column: 54
          },
          end: {
            line: 103,
            column: 55
          }
        },
        loc: {
          start: {
            line: 103,
            column: 84
          },
          end: {
            line: 105,
            column: 55
          }
        },
        line: 103
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 115,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 32,
            column: 12
          },
          end: {
            line: 57,
            column: 19
          }
        }, {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 84,
            column: 19
          }
        }, {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 110,
            column: 19
          }
        }, {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 114,
            column: 19
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 86,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 86,
            column: 59
          }
        }, {
          start: {
            line: 86,
            column: 63
          },
          end: {
            line: 86,
            column: 65
          }
        }],
        line: 86
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Dashboard\\Widget.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React from 'react';\nimport { LazyRechartsComponents } from '@/utils/dynamicImports';\nimport { Card, CardContent, CardHeader, CardTitle } from '../ui/card';\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\ninterface WidgetProps {\n  widget: {\n    id: string;\n    type: 'kpi' | 'bar' | 'line' | 'pie';\n    metric: string;\n    title: string;\n  };\n  data: any;\n}\n\nconst Widget: React.FC<WidgetProps> = ({ widget, data }) => {\n  const { BarChart, LineChart, PieChart, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Bar, Line, Pie, Cell } = LazyRechartsComponents;\n  \n  const renderContent = () => {\n    switch (widget.type) {\n      case 'bar':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <BarChart data={data?.data?.map((d: number, i: number) => ({ name: data.labels[i], value: d }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey=\"value\" fill=\"#8884d8\" />\n            </BarChart>\n          </ResponsiveContainer>\n        );\n      case 'line':\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <LineChart data={data?.monthly?.map((d: number, i: number) => ({ name: `Month ${i + 1}`, value: d }))}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\n            </LineChart>\n          </ResponsiveContainer>\n        );\n      case 'pie':\n        const pieData = Object.entries(data?.stages || {}).map(([key, value]) => ({ name: key, value }));\n        return (\n          <ResponsiveContainer width=\"100%\" height={200}>\n            <PieChart>\n              <Pie data={pieData} cx=\"50%\" cy=\"50%\" labelLine={false} outerRadius={80} fill=\"#8884d8\" dataKey=\"value\">\n                {pieData.map((entry, index) => (\n                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                ))}\n              </Pie>\n              <Tooltip />\n            </PieChart>\n          </ResponsiveContainer>\n        );\n      default:\n        return <div>Unsupported widget type</div>;\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>{widget.title}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        {renderContent()}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Widget;"],
      names: ["COLORS", "Widget", "widget", "data", "BarChart", "LineChart", "PieChart", "ResponsiveContainer", "XAxis", "YAxis", "CartesianGrid", "Tooltip", "Legend", "Bar", "Line", "Pie", "Cell", "LazyRechartsComponents", "renderContent", "type", "width", "height", "map", "d", "i", "name", "labels", "value", "strokeDasharray", "dataKey", "fill", "monthly", "stroke", "pieData", "Object", "entries", "stages", "key", "cx", "cy", "labelLine", "outerRadius", "entry", "index", "length", "div", "Card", "CardHeader", "CardTitle", "title", "CardContent"],
      mappings: "AAAA;;;;;+BAgFA;;;eAAA;;;;8DA9EkB;gCACqB;sBACkB;;;;;;AAEzD,MAAMA,SAAS;IAAC;IAAW;IAAW;IAAW;IAAW;CAAU;AAYtE,MAAMC,SAAgC,CAAC,EAAEC,MAAM,EAAEC,IAAI,EAAE;IACrD,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAE,GAAGC,sCAAsB;IAEzJ,MAAMC,gBAAgB;QACpB,OAAQhB,OAAOiB,IAAI;YACjB,KAAK;gBACH,qBACE,qBAACZ;oBAAoBa,OAAM;oBAAOC,QAAQ;8BACxC,cAAA,sBAACjB;wBAASD,MAAMA,MAAMA,MAAMmB,IAAI,CAACC,GAAWC,IAAe,CAAA;gCAAEC,MAAMtB,KAAKuB,MAAM,CAACF,EAAE;gCAAEG,OAAOJ;4BAAE,CAAA;;0CAC1F,qBAACb;gCAAckB,iBAAgB;;0CAC/B,qBAACpB;gCAAMqB,SAAQ;;0CACf,qBAACpB;0CACD,qBAACE;0CACD,qBAACC;0CACD,qBAACC;gCAAIgB,SAAQ;gCAAQC,MAAK;;;;;YAIlC,KAAK;gBACH,qBACE,qBAACvB;oBAAoBa,OAAM;oBAAOC,QAAQ;8BACxC,cAAA,sBAAChB;wBAAUF,MAAMA,MAAM4B,SAAST,IAAI,CAACC,GAAWC,IAAe,CAAA;gCAAEC,MAAM,CAAC,MAAM,EAAED,IAAI,GAAG;gCAAEG,OAAOJ;4BAAE,CAAA;;0CAChG,qBAACb;gCAAckB,iBAAgB;;0CAC/B,qBAACpB;gCAAMqB,SAAQ;;0CACf,qBAACpB;0CACD,qBAACE;0CACD,qBAACC;0CACD,qBAACE;gCAAKK,MAAK;gCAAWU,SAAQ;gCAAQG,QAAO;;;;;YAIrD,KAAK;gBACH,MAAMC,UAAUC,OAAOC,OAAO,CAAChC,MAAMiC,UAAU,CAAC,GAAGd,GAAG,CAAC,CAAC,CAACe,KAAKV,MAAM,GAAM,CAAA;wBAAEF,MAAMY;wBAAKV;oBAAM,CAAA;gBAC7F,qBACE,qBAACpB;oBAAoBa,OAAM;oBAAOC,QAAQ;8BACxC,cAAA,sBAACf;;0CACC,qBAACS;gCAAIZ,MAAM8B;gCAASK,IAAG;gCAAMC,IAAG;gCAAMC,WAAW;gCAAOC,aAAa;gCAAIX,MAAK;gCAAUD,SAAQ;0CAC7FI,QAAQX,GAAG,CAAC,CAACoB,OAAOC,sBACnB,qBAAC3B;wCAA2Bc,MAAM9B,MAAM,CAAC2C,QAAQ3C,OAAO4C,MAAM,CAAC;uCAApD,CAAC,KAAK,EAAED,OAAO;;0CAG9B,qBAAChC;;;;YAIT;gBACE,qBAAO,qBAACkC;8BAAI;;QAChB;IACF;IAEA,qBACE,sBAACC,UAAI;;0BACH,qBAACC,gBAAU;0BACT,cAAA,qBAACC,eAAS;8BAAE9C,OAAO+C,KAAK;;;0BAE1B,qBAACC,iBAAW;0BACThC;;;;AAIT;MAEA,WAAejB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dc5cab1dec619a36d5d0e056562e61ded8f14070"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_clkpzzh0z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_clkpzzh0z();
cov_clkpzzh0z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_clkpzzh0z().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_clkpzzh0z().f[0]++;
    cov_clkpzzh0z().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_clkpzzh0z().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_clkpzzh0z().s[4]++, _interop_require_default(require("react")));
const _dynamicImports =
/* istanbul ignore next */
(cov_clkpzzh0z().s[5]++, require("../../utils/dynamicImports"));
const _card =
/* istanbul ignore next */
(cov_clkpzzh0z().s[6]++, require("../ui/card"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_clkpzzh0z().f[1]++;
  cov_clkpzzh0z().s[7]++;
  return /* istanbul ignore next */(cov_clkpzzh0z().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_clkpzzh0z().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_clkpzzh0z().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_clkpzzh0z().b[0][1]++, {
    default: obj
  });
}
const COLORS =
/* istanbul ignore next */
(cov_clkpzzh0z().s[8]++, ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8']);
/* istanbul ignore next */
cov_clkpzzh0z().s[9]++;
const Widget = ({
  widget,
  data
}) => {
  /* istanbul ignore next */
  cov_clkpzzh0z().f[2]++;
  const {
    BarChart,
    LineChart,
    PieChart,
    ResponsiveContainer,
    XAxis,
    YAxis,
    CartesianGrid,
    Tooltip,
    Legend,
    Bar,
    Line,
    Pie,
    Cell
  } =
  /* istanbul ignore next */
  (cov_clkpzzh0z().s[10]++, _dynamicImports.LazyRechartsComponents);
  /* istanbul ignore next */
  cov_clkpzzh0z().s[11]++;
  const renderContent = () => {
    /* istanbul ignore next */
    cov_clkpzzh0z().f[3]++;
    cov_clkpzzh0z().s[12]++;
    switch (widget.type) {
      case 'bar':
        /* istanbul ignore next */
        cov_clkpzzh0z().b[2][0]++;
        cov_clkpzzh0z().s[13]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(ResponsiveContainer, {
          width: "100%",
          height: 200,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(BarChart, {
            data: data?.data?.map((d, i) => {
              /* istanbul ignore next */
              cov_clkpzzh0z().f[4]++;
              cov_clkpzzh0z().s[14]++;
              return {
                name: data.labels[i],
                value: d
              };
            }),
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(CartesianGrid, {
              strokeDasharray: "3 3"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(XAxis, {
              dataKey: "name"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(YAxis, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(Bar, {
              dataKey: "value",
              fill: "#8884d8"
            })]
          })
        });
      case 'line':
        /* istanbul ignore next */
        cov_clkpzzh0z().b[2][1]++;
        cov_clkpzzh0z().s[15]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(ResponsiveContainer, {
          width: "100%",
          height: 200,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(LineChart, {
            data: data?.monthly?.map((d, i) => {
              /* istanbul ignore next */
              cov_clkpzzh0z().f[5]++;
              cov_clkpzzh0z().s[16]++;
              return {
                name: `Month ${i + 1}`,
                value: d
              };
            }),
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(CartesianGrid, {
              strokeDasharray: "3 3"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(XAxis, {
              dataKey: "name"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(YAxis, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(Line, {
              type: "monotone",
              dataKey: "value",
              stroke: "#8884d8"
            })]
          })
        });
      case 'pie':
        /* istanbul ignore next */
        cov_clkpzzh0z().b[2][2]++;
        const pieData =
        /* istanbul ignore next */
        (cov_clkpzzh0z().s[17]++, Object.entries(
        /* istanbul ignore next */
        (cov_clkpzzh0z().b[3][0]++, data?.stages) ||
        /* istanbul ignore next */
        (cov_clkpzzh0z().b[3][1]++, {})).map(([key, value]) => {
          /* istanbul ignore next */
          cov_clkpzzh0z().f[6]++;
          cov_clkpzzh0z().s[18]++;
          return {
            name: key,
            value
          };
        }));
        /* istanbul ignore next */
        cov_clkpzzh0z().s[19]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(ResponsiveContainer, {
          width: "100%",
          height: 200,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(PieChart, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(Pie, {
              data: pieData,
              cx: "50%",
              cy: "50%",
              labelLine: false,
              outerRadius: 80,
              fill: "#8884d8",
              dataKey: "value",
              children: pieData.map((entry, index) => {
                /* istanbul ignore next */
                cov_clkpzzh0z().f[7]++;
                cov_clkpzzh0z().s[20]++;
                return /*#__PURE__*/(0, _jsxruntime.jsx)(Cell, {
                  fill: COLORS[index % COLORS.length]
                }, `cell-${index}`);
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(Tooltip, {})]
          })
        });
      default:
        /* istanbul ignore next */
        cov_clkpzzh0z().b[2][3]++;
        cov_clkpzzh0z().s[21]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          children: "Unsupported widget type"
        });
    }
  };
  /* istanbul ignore next */
  cov_clkpzzh0z().s[22]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
        children: widget.title
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      children: renderContent()
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_clkpzzh0z().s[23]++, Widget);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,