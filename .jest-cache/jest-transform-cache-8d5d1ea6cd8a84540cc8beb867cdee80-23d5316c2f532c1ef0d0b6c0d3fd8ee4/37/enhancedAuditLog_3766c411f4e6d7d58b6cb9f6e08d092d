3ab92417f35d525f035c435294c72d9f
"use strict";

/* istanbul ignore next */
function cov_13uwxwng13() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\enhancedAuditLog.ts";
  var hash = "58ac80fc083ae899d0ff261d4827ec642e2b7772";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\enhancedAuditLog.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "6": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 53
        }
      },
      "7": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 30,
          column: 9
        }
      },
      "8": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 43
        }
      },
      "9": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "10": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 63
        }
      },
      "11": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "12": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 48,
          column: 15
        }
      },
      "13": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 68
        }
      },
      "14": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "15": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "16": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "17": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "18": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 65,
          column: 97
        }
      },
      "19": {
        start: {
          line: 65,
          column: 56
        },
        end: {
          line: 65,
          column: 95
        }
      },
      "20": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "21": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 95
        }
      },
      "22": {
        start: {
          line: 68,
          column: 56
        },
        end: {
          line: 68,
          column: 93
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "24": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 85
        }
      },
      "25": {
        start: {
          line: 71,
          column: 56
        },
        end: {
          line: 71,
          column: 83
        }
      },
      "26": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "27": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 126
        }
      },
      "28": {
        start: {
          line: 74,
          column: 56
        },
        end: {
          line: 74,
          column: 124
        }
      },
      "29": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "30": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 91
        }
      },
      "31": {
        start: {
          line: 77,
          column: 56
        },
        end: {
          line: 77,
          column: 89
        }
      },
      "32": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "33": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 104
        }
      },
      "34": {
        start: {
          line: 80,
          column: 56
        },
        end: {
          line: 80,
          column: 102
        }
      },
      "35": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "36": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 102
        }
      },
      "37": {
        start: {
          line: 83,
          column: 56
        },
        end: {
          line: 83,
          column: 100
        }
      },
      "38": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "39": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 87
        }
      },
      "40": {
        start: {
          line: 86,
          column: 56
        },
        end: {
          line: 86,
          column: 85
        }
      },
      "41": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "42": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 108
        }
      },
      "43": {
        start: {
          line: 89,
          column: 56
        },
        end: {
          line: 89,
          column: 106
        }
      },
      "44": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "45": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 108
        }
      },
      "46": {
        start: {
          line: 92,
          column: 56
        },
        end: {
          line: 92,
          column: 106
        }
      },
      "47": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "48": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 105
        }
      },
      "49": {
        start: {
          line: 95,
          column: 56
        },
        end: {
          line: 95,
          column: 103
        }
      },
      "50": {
        start: {
          line: 95,
          column: 76
        },
        end: {
          line: 95,
          column: 102
        }
      },
      "51": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "52": {
        start: {
          line: 98,
          column: 32
        },
        end: {
          line: 98,
          column: 64
        }
      },
      "53": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 217
        }
      },
      "54": {
        start: {
          line: 99,
          column: 56
        },
        end: {
          line: 99,
          column: 215
        }
      },
      "55": {
        start: {
          line: 101,
          column: 22
        },
        end: {
          line: 101,
          column: 43
        }
      },
      "56": {
        start: {
          line: 102,
          column: 32
        },
        end: {
          line: 102,
          column: 76
        }
      },
      "57": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 46
        }
      },
      "58": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "59": {
        start: {
          line: 113,
          column: 21
        },
        end: {
          line: 113,
          column: 32
        }
      },
      "60": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "61": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 117
        }
      },
      "62": {
        start: {
          line: 115,
          column: 40
        },
        end: {
          line: 115,
          column: 115
        }
      },
      "63": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 117,
          column: 31
        }
      },
      "64": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 118,
          column: 35
        }
      },
      "65": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 119,
          column: 29
        }
      },
      "66": {
        start: {
          line: 120,
          column: 25
        },
        end: {
          line: 120,
          column: 27
        }
      },
      "67": {
        start: {
          line: 121,
          column: 27
        },
        end: {
          line: 121,
          column: 28
        }
      },
      "68": {
        start: {
          line: 122,
          column: 31
        },
        end: {
          line: 122,
          column: 32
        }
      },
      "69": {
        start: {
          line: 123,
          column: 29
        },
        end: {
          line: 123,
          column: 30
        }
      },
      "70": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 164,
          column: 11
        }
      },
      "71": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 85
        }
      },
      "72": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 91
        }
      },
      "73": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 140,
          column: 13
        }
      },
      "74": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 40
        }
      },
      "75": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 138,
          column: 17
        }
      },
      "76": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 137,
          column: 22
        }
      },
      "77": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 40
        }
      },
      "78": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "79": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "80": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 147,
          column: 22
        }
      },
      "81": {
        start: {
          line: 149,
          column: 16
        },
        end: {
          line: 149,
          column: 50
        }
      },
      "82": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 150,
          column: 122
        }
      },
      "83": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "84": {
        start: {
          line: 154,
          column: 16
        },
        end: {
          line: 158,
          column: 17
        }
      },
      "85": {
        start: {
          line: 155,
          column: 20
        },
        end: {
          line: 155,
          column: 39
        }
      },
      "86": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 157,
          column: 35
        }
      },
      "87": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "88": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 33
        }
      },
      "89": {
        start: {
          line: 165,
          column: 25
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "90": {
        start: {
          line: 165,
          column: 64
        },
        end: {
          line: 165,
          column: 81
        }
      },
      "91": {
        start: {
          line: 165,
          column: 109
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "92": {
        start: {
          line: 170,
          column: 23
        },
        end: {
          line: 174,
          column: 70
        }
      },
      "93": {
        start: {
          line: 170,
          column: 67
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "94": {
        start: {
          line: 174,
          column: 29
        },
        end: {
          line: 174,
          column: 56
        }
      },
      "95": {
        start: {
          line: 175,
          column: 31
        },
        end: {
          line: 175,
          column: 50
        }
      },
      "96": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 188,
          column: 10
        }
      },
      "97": {
        start: {
          line: 193,
          column: 20
        },
        end: {
          line: 193,
          column: 21
        }
      },
      "98": {
        start: {
          line: 195,
          column: 27
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "99": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 203,
          column: 52
        }
      },
      "100": {
        start: {
          line: 205,
          column: 36
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "101": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 60
        }
      },
      "102": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "103": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 25
        }
      },
      "104": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "105": {
        start: {
          line: 219,
          column: 25
        },
        end: {
          line: 219,
          column: 51
        }
      },
      "106": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "107": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 29
        }
      },
      "108": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 47
        }
      },
      "109": {
        start: {
          line: 230,
          column: 21
        },
        end: {
          line: 230,
          column: 23
        }
      },
      "110": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 48
        }
      },
      "111": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 57
        }
      },
      "112": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "113": {
        start: {
          line: 237,
          column: 25
        },
        end: {
          line: 237,
          column: 51
        }
      },
      "114": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 13
        }
      },
      "115": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 39
        }
      },
      "116": {
        start: {
          line: 241,
          column: 24
        },
        end: {
          line: 241,
          column: 48
        }
      },
      "117": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 244,
          column: 13
        }
      },
      "118": {
        start: {
          line: 243,
          column: 16
        },
        end: {
          line: 243,
          column: 37
        }
      },
      "119": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "120": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 250,
          column: 13
        }
      },
      "121": {
        start: {
          line: 249,
          column: 16
        },
        end: {
          line: 249,
          column: 35
        }
      },
      "122": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "123": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 252,
          column: 33
        }
      },
      "124": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 257,
          column: 9
        }
      },
      "125": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 40
        }
      },
      "126": {
        start: {
          line: 259,
          column: 26
        },
        end: {
          line: 259,
          column: 75
        }
      },
      "127": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "128": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 261,
          column: 35
        }
      },
      "129": {
        start: {
          line: 262,
          column: 15
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "130": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 37
        }
      },
      "131": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 34
        }
      },
      "132": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 267,
          column: 20
        }
      },
      "133": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 80
        }
      },
      "134": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "135": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 30
        }
      },
      "136": {
        start: {
          line: 280,
          column: 16
        },
        end: {
          line: 280,
          column: 34
        }
      },
      "137": {
        start: {
          line: 282,
          column: 16
        },
        end: {
          line: 282,
          column: 32
        }
      },
      "138": {
        start: {
          line: 284,
          column: 16
        },
        end: {
          line: 284,
          column: 30
        }
      },
      "139": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 286,
          column: 30
        }
      },
      "140": {
        start: {
          line: 288,
          column: 16
        },
        end: {
          line: 288,
          column: 32
        }
      },
      "141": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "142": {
        start: {
          line: 308,
          column: 27
        },
        end: {
          line: 308,
          column: 69
        }
      },
      "143": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "144": {
        start: {
          line: 310,
          column: 28
        },
        end: {
          line: 323,
          column: 13
        }
      },
      "145": {
        start: {
          line: 324,
          column: 28
        },
        end: {
          line: 337,
          column: 18
        }
      },
      "146": {
        start: {
          line: 324,
          column: 48
        },
        end: {
          line: 337,
          column: 17
        }
      },
      "147": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 341,
          column: 96
        }
      },
      "148": {
        start: {
          line: 341,
          column: 25
        },
        end: {
          line: 341,
          column: 83
        }
      },
      "149": {
        start: {
          line: 341,
          column: 41
        },
        end: {
          line: 341,
          column: 72
        }
      },
      "150": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 47
        }
      },
      "151": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 84
        }
      },
      "152": {
        start: {
          line: 348,
          column: 43
        },
        end: {
          line: 348,
          column: 66
        }
      },
      "153": {
        start: {
          line: 353,
          column: 20
        },
        end: {
          line: 353,
          column: 30
        }
      },
      "154": {
        start: {
          line: 354,
          column: 28
        },
        end: {
          line: 354,
          column: 73
        }
      },
      "155": {
        start: {
          line: 355,
          column: 29
        },
        end: {
          line: 355,
          column: 95
        }
      },
      "156": {
        start: {
          line: 355,
          column: 53
        },
        end: {
          line: 355,
          column: 94
        }
      },
      "157": {
        start: {
          line: 357,
          column: 29
        },
        end: {
          line: 357,
          column: 31
        }
      },
      "158": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 370,
          column: 11
        }
      },
      "159": {
        start: {
          line: 358,
          column: 33
        },
        end: {
          line: 358,
          column: 81
        }
      },
      "160": {
        start: {
          line: 359,
          column: 27
        },
        end: {
          line: 359,
          column: 39
        }
      },
      "161": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 365,
          column: 13
        }
      },
      "162": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 364,
          column: 18
        }
      },
      "163": {
        start: {
          line: 366,
          column: 12
        },
        end: {
          line: 366,
          column: 41
        }
      },
      "164": {
        start: {
          line: 367,
          column: 12
        },
        end: {
          line: 369,
          column: 13
        }
      },
      "165": {
        start: {
          line: 368,
          column: 16
        },
        end: {
          line: 368,
          column: 67
        }
      },
      "166": {
        start: {
          line: 371,
          column: 37
        },
        end: {
          line: 374,
          column: 15
        }
      },
      "167": {
        start: {
          line: 371,
          column: 86
        },
        end: {
          line: 371,
          column: 101
        }
      },
      "168": {
        start: {
          line: 371,
          column: 126
        },
        end: {
          line: 374,
          column: 13
        }
      },
      "169": {
        start: {
          line: 376,
          column: 33
        },
        end: {
          line: 380,
          column: 10
        }
      },
      "170": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 47
        }
      },
      "171": {
        start: {
          line: 377,
          column: 34
        },
        end: {
          line: 377,
          column: 47
        }
      },
      "172": {
        start: {
          line: 378,
          column: 25
        },
        end: {
          line: 378,
          column: 51
        }
      },
      "173": {
        start: {
          line: 379,
          column: 12
        },
        end: {
          line: 379,
          column: 41
        }
      },
      "174": {
        start: {
          line: 382,
          column: 31
        },
        end: {
          line: 382,
          column: 122
        }
      },
      "175": {
        start: {
          line: 382,
          column: 60
        },
        end: {
          line: 382,
          column: 121
        }
      },
      "176": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 388,
          column: 10
        }
      },
      "177": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 25
        }
      },
      "178": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 392,
          column: 31
        }
      },
      "179": {
        start: {
          line: 393,
          column: 8
        },
        end: {
          line: 397,
          column: 10
        }
      },
      "180": {
        start: {
          line: 400,
          column: 32
        },
        end: {
          line: 400,
          column: 61
        }
      },
      "181": {
        start: {
          line: 401,
          column: 17
        },
        end: {
          line: 401,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 35
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 6
          },
          end: {
            line: 23,
            column: 7
          }
        },
        loc: {
          start: {
            line: 23,
            column: 28
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 6
          },
          end: {
            line: 59,
            column: 7
          }
        },
        loc: {
          start: {
            line: 59,
            column: 53
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 65,
            column: 52
          }
        },
        loc: {
          start: {
            line: 65,
            column: 56
          },
          end: {
            line: 65,
            column: 95
          }
        },
        line: 65
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 51
          },
          end: {
            line: 68,
            column: 52
          }
        },
        loc: {
          start: {
            line: 68,
            column: 56
          },
          end: {
            line: 68,
            column: 93
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 71,
            column: 51
          },
          end: {
            line: 71,
            column: 52
          }
        },
        loc: {
          start: {
            line: 71,
            column: 56
          },
          end: {
            line: 71,
            column: 83
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 74,
            column: 51
          },
          end: {
            line: 74,
            column: 52
          }
        },
        loc: {
          start: {
            line: 74,
            column: 56
          },
          end: {
            line: 74,
            column: 124
          }
        },
        line: 74
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 77,
            column: 51
          },
          end: {
            line: 77,
            column: 52
          }
        },
        loc: {
          start: {
            line: 77,
            column: 56
          },
          end: {
            line: 77,
            column: 89
          }
        },
        line: 77
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 80,
            column: 51
          },
          end: {
            line: 80,
            column: 52
          }
        },
        loc: {
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 80,
            column: 102
          }
        },
        line: 80
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 52
          }
        },
        loc: {
          start: {
            line: 83,
            column: 56
          },
          end: {
            line: 83,
            column: 100
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 86,
            column: 51
          },
          end: {
            line: 86,
            column: 52
          }
        },
        loc: {
          start: {
            line: 86,
            column: 56
          },
          end: {
            line: 86,
            column: 85
          }
        },
        line: 86
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 89,
            column: 51
          },
          end: {
            line: 89,
            column: 52
          }
        },
        loc: {
          start: {
            line: 89,
            column: 56
          },
          end: {
            line: 89,
            column: 106
          }
        },
        line: 89
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 92,
            column: 51
          },
          end: {
            line: 92,
            column: 52
          }
        },
        loc: {
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 92,
            column: 106
          }
        },
        line: 92
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 95,
            column: 51
          },
          end: {
            line: 95,
            column: 52
          }
        },
        loc: {
          start: {
            line: 95,
            column: 56
          },
          end: {
            line: 95,
            column: 103
          }
        },
        line: 95
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 95,
            column: 69
          },
          end: {
            line: 95,
            column: 70
          }
        },
        loc: {
          start: {
            line: 95,
            column: 76
          },
          end: {
            line: 95,
            column: 102
          }
        },
        line: 95
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 99,
            column: 51
          },
          end: {
            line: 99,
            column: 52
          }
        },
        loc: {
          start: {
            line: 99,
            column: 56
          },
          end: {
            line: 99,
            column: 215
          }
        },
        line: 99
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        },
        loc: {
          start: {
            line: 112,
            column: 28
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 112
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 36
          }
        },
        loc: {
          start: {
            line: 115,
            column: 40
          },
          end: {
            line: 115,
            column: 115
          }
        },
        line: 115
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 124,
            column: 23
          },
          end: {
            line: 124,
            column: 24
          }
        },
        loc: {
          start: {
            line: 124,
            column: 32
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 124
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 165,
            column: 56
          },
          end: {
            line: 165,
            column: 57
          }
        },
        loc: {
          start: {
            line: 165,
            column: 64
          },
          end: {
            line: 165,
            column: 81
          }
        },
        line: 165
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 165,
            column: 100
          },
          end: {
            line: 165,
            column: 101
          }
        },
        loc: {
          start: {
            line: 165,
            column: 109
          },
          end: {
            line: 169,
            column: 13
          }
        },
        line: 165
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 170,
            column: 52
          },
          end: {
            line: 170,
            column: 53
          }
        },
        loc: {
          start: {
            line: 170,
            column: 67
          },
          end: {
            line: 174,
            column: 13
          }
        },
        line: 170
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 174,
            column: 21
          },
          end: {
            line: 174,
            column: 22
          }
        },
        loc: {
          start: {
            line: 174,
            column: 29
          },
          end: {
            line: 174,
            column: 56
          }
        },
        line: 174
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 192,
            column: 6
          },
          end: {
            line: 192,
            column: 7
          }
        },
        loc: {
          start: {
            line: 192,
            column: 32
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 192
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 229,
            column: 6
          },
          end: {
            line: 229,
            column: 7
          }
        },
        loc: {
          start: {
            line: 229,
            column: 26
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 229
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 271,
            column: 6
          },
          end: {
            line: 271,
            column: 7
          }
        },
        loc: {
          start: {
            line: 271,
            column: 24
          },
          end: {
            line: 273,
            column: 5
          }
        },
        line: 271
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 5
          }
        },
        loc: {
          start: {
            line: 274,
            column: 38
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 274
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 293,
            column: 6
          },
          end: {
            line: 293,
            column: 7
          }
        },
        loc: {
          start: {
            line: 293,
            column: 34
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 293
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 307,
            column: 6
          },
          end: {
            line: 307,
            column: 7
          }
        },
        loc: {
          start: {
            line: 307,
            column: 48
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 307
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 324,
            column: 39
          },
          end: {
            line: 324,
            column: 40
          }
        },
        loc: {
          start: {
            line: 324,
            column: 48
          },
          end: {
            line: 337,
            column: 17
          }
        },
        line: 324
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 341,
            column: 18
          },
          end: {
            line: 341,
            column: 19
          }
        },
        loc: {
          start: {
            line: 341,
            column: 25
          },
          end: {
            line: 341,
            column: 83
          }
        },
        line: 341
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 341,
            column: 33
          },
          end: {
            line: 341,
            column: 34
          }
        },
        loc: {
          start: {
            line: 341,
            column: 41
          },
          end: {
            line: 341,
            column: 72
          }
        },
        line: 341
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 347,
            column: 6
          },
          end: {
            line: 347,
            column: 7
          }
        },
        loc: {
          start: {
            line: 347,
            column: 42
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 347
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 348,
            column: 34
          },
          end: {
            line: 348,
            column: 35
          }
        },
        loc: {
          start: {
            line: 348,
            column: 43
          },
          end: {
            line: 348,
            column: 66
          }
        },
        line: 348
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 352,
            column: 6
          },
          end: {
            line: 352,
            column: 7
          }
        },
        loc: {
          start: {
            line: 352,
            column: 30
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 352
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 355,
            column: 48
          },
          end: {
            line: 355,
            column: 49
          }
        },
        loc: {
          start: {
            line: 355,
            column: 53
          },
          end: {
            line: 355,
            column: 94
          }
        },
        line: 355
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 358,
            column: 28
          },
          end: {
            line: 358,
            column: 29
          }
        },
        loc: {
          start: {
            line: 358,
            column: 33
          },
          end: {
            line: 358,
            column: 81
          }
        },
        line: 358
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 358,
            column: 91
          },
          end: {
            line: 358,
            column: 92
          }
        },
        loc: {
          start: {
            line: 358,
            column: 100
          },
          end: {
            line: 370,
            column: 9
          }
        },
        line: 358
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 371,
            column: 73
          },
          end: {
            line: 371,
            column: 74
          }
        },
        loc: {
          start: {
            line: 371,
            column: 86
          },
          end: {
            line: 371,
            column: 101
          }
        },
        line: 371
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 371,
            column: 107
          },
          end: {
            line: 371,
            column: 108
          }
        },
        loc: {
          start: {
            line: 371,
            column: 126
          },
          end: {
            line: 374,
            column: 13
          }
        },
        line: 371
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 376,
            column: 53
          },
          end: {
            line: 376,
            column: 54
          }
        },
        loc: {
          start: {
            line: 376,
            column: 62
          },
          end: {
            line: 380,
            column: 9
          }
        },
        line: 376
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 382,
            column: 51
          },
          end: {
            line: 382,
            column: 52
          }
        },
        loc: {
          start: {
            line: 382,
            column: 60
          },
          end: {
            line: 382,
            column: 121
          }
        },
        line: 382
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 17
          },
          end: {
            line: 398,
            column: 5
          }
        },
        line: 390
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 23
          },
          end: {
            line: 27,
            column: 38
          }
        }, {
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 52
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 23
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 42
          },
          end: {
            line: 28,
            column: 72
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 28
          }
        }, {
          start: {
            line: 29,
            column: 32
          },
          end: {
            line: 29,
            column: 56
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 45,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 54
          },
          end: {
            line: 45,
            column: 59
          }
        }, {
          start: {
            line: 45,
            column: 62
          },
          end: {
            line: 45,
            column: 76
          }
        }],
        line: 45
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 35
          }
        }, {
          start: {
            line: 53,
            column: 39
          },
          end: {
            line: 53,
            column: 89
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 59,
            column: 39
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 59,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 50
          },
          end: {
            line: 59,
            column: 51
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "13": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "14": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "15": {
        loc: {
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 80,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 56
          },
          end: {
            line: 80,
            column: 67
          }
        }, {
          start: {
            line: 80,
            column: 71
          },
          end: {
            line: 80,
            column: 102
          }
        }],
        line: 80
      },
      "16": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "17": {
        loc: {
          start: {
            line: 83,
            column: 56
          },
          end: {
            line: 83,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 56
          },
          end: {
            line: 83,
            column: 67
          }
        }, {
          start: {
            line: 83,
            column: 71
          },
          end: {
            line: 83,
            column: 100
          }
        }],
        line: 83
      },
      "18": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "19": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "20": {
        loc: {
          start: {
            line: 89,
            column: 56
          },
          end: {
            line: 89,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 56
          },
          end: {
            line: 89,
            column: 67
          }
        }, {
          start: {
            line: 89,
            column: 71
          },
          end: {
            line: 89,
            column: 106
          }
        }],
        line: 89
      },
      "21": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "22": {
        loc: {
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 92,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 56
          },
          end: {
            line: 92,
            column: 67
          }
        }, {
          start: {
            line: 92,
            column: 71
          },
          end: {
            line: 92,
            column: 106
          }
        }],
        line: 92
      },
      "23": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "24": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "25": {
        loc: {
          start: {
            line: 99,
            column: 56
          },
          end: {
            line: 99,
            column: 215
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 56
          },
          end: {
            line: 99,
            column: 100
          }
        }, {
          start: {
            line: 99,
            column: 104
          },
          end: {
            line: 99,
            column: 150
          }
        }, {
          start: {
            line: 99,
            column: 154
          },
          end: {
            line: 99,
            column: 215
          }
        }],
        line: 99
      },
      "26": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "27": {
        loc: {
          start: {
            line: 115,
            column: 40
          },
          end: {
            line: 115,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 40
          },
          end: {
            line: 115,
            column: 51
          }
        }, {
          start: {
            line: 115,
            column: 55
          },
          end: {
            line: 115,
            column: 84
          }
        }, {
          start: {
            line: 115,
            column: 88
          },
          end: {
            line: 115,
            column: 115
          }
        }],
        line: 115
      },
      "28": {
        loc: {
          start: {
            line: 126,
            column: 45
          },
          end: {
            line: 126,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 45
          },
          end: {
            line: 126,
            column: 74
          }
        }, {
          start: {
            line: 126,
            column: 78
          },
          end: {
            line: 126,
            column: 79
          }
        }],
        line: 126
      },
      "29": {
        loc: {
          start: {
            line: 128,
            column: 48
          },
          end: {
            line: 128,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 48
          },
          end: {
            line: 128,
            column: 80
          }
        }, {
          start: {
            line: 128,
            column: 84
          },
          end: {
            line: 128,
            column: 85
          }
        }],
        line: 128
      },
      "30": {
        loc: {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 140,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "31": {
        loc: {
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 130,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 16
          },
          end: {
            line: 130,
            column: 28
          }
        }, {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 47
          }
        }],
        line: 130
      },
      "32": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 138,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "33": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "34": {
        loc: {
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 16
          },
          end: {
            line: 148,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "35": {
        loc: {
          start: {
            line: 150,
            column: 100
          },
          end: {
            line: 150,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 150,
            column: 100
          },
          end: {
            line: 150,
            column: 115
          }
        }, {
          start: {
            line: 150,
            column: 119
          },
          end: {
            line: 150,
            column: 120
          }
        }],
        line: 150
      },
      "36": {
        loc: {
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "37": {
        loc: {
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 16
          },
          end: {
            line: 158,
            column: 17
          }
        }, {
          start: {
            line: 156,
            column: 23
          },
          end: {
            line: 158,
            column: 17
          }
        }],
        line: 154
      },
      "38": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 163,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "39": {
        loc: {
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 16
          },
          end: {
            line: 161,
            column: 31
          }
        }, {
          start: {
            line: 161,
            column: 35
          },
          end: {
            line: 161,
            column: 77
          }
        }],
        line: 161
      },
      "40": {
        loc: {
          start: {
            line: 197,
            column: 20
          },
          end: {
            line: 197,
            column: 45
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 36
          },
          end: {
            line: 197,
            column: 39
          }
        }, {
          start: {
            line: 197,
            column: 42
          },
          end: {
            line: 197,
            column: 45
          }
        }],
        line: 197
      },
      "41": {
        loc: {
          start: {
            line: 203,
            column: 17
          },
          end: {
            line: 203,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 17
          },
          end: {
            line: 203,
            column: 44
          }
        }, {
          start: {
            line: 203,
            column: 48
          },
          end: {
            line: 203,
            column: 51
          }
        }],
        line: 203
      },
      "42": {
        loc: {
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 212,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 17
          },
          end: {
            line: 212,
            column: 52
          }
        }, {
          start: {
            line: 212,
            column: 56
          },
          end: {
            line: 212,
            column: 59
          }
        }],
        line: 212
      },
      "43": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "44": {
        loc: {
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 218
      },
      "45": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "46": {
        loc: {
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 220,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 16
          },
          end: {
            line: 220,
            column: 24
          }
        }, {
          start: {
            line: 220,
            column: 28
          },
          end: {
            line: 220,
            column: 37
          }
        }],
        line: 220
      },
      "47": {
        loc: {
          start: {
            line: 234,
            column: 18
          },
          end: {
            line: 234,
            column: 55
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 34
          },
          end: {
            line: 234,
            column: 43
          }
        }, {
          start: {
            line: 234,
            column: 46
          },
          end: {
            line: 234,
            column: 55
          }
        }],
        line: 234
      },
      "48": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "49": {
        loc: {
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 12
          },
          end: {
            line: 240,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "50": {
        loc: {
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 238,
            column: 16
          },
          end: {
            line: 238,
            column: 24
          }
        }, {
          start: {
            line: 238,
            column: 28
          },
          end: {
            line: 238,
            column: 37
          }
        }],
        line: 238
      },
      "51": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 244,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "52": {
        loc: {
          start: {
            line: 242,
            column: 16
          },
          end: {
            line: 242,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 242,
            column: 16
          },
          end: {
            line: 242,
            column: 25
          }
        }, {
          start: {
            line: 242,
            column: 29
          },
          end: {
            line: 242,
            column: 38
          }
        }],
        line: 242
      },
      "53": {
        loc: {
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "54": {
        loc: {
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 12
          },
          end: {
            line: 250,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "55": {
        loc: {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "56": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 257,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "57": {
        loc: {
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 259,
            column: 26
          },
          end: {
            line: 259,
            column: 41
          }
        }, {
          start: {
            line: 259,
            column: 45
          },
          end: {
            line: 259,
            column: 75
          }
        }],
        line: 259
      },
      "58": {
        loc: {
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 260,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: 262,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        }],
        line: 260
      },
      "59": {
        loc: {
          start: {
            line: 262,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: 264,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        }],
        line: 262
      },
      "60": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 276,
            column: 12
          },
          end: {
            line: 276,
            column: 31
          }
        }, {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 278,
            column: 30
          }
        }, {
          start: {
            line: 279,
            column: 12
          },
          end: {
            line: 280,
            column: 34
          }
        }, {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 282,
            column: 32
          }
        }, {
          start: {
            line: 283,
            column: 12
          },
          end: {
            line: 284,
            column: 30
          }
        }, {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 286,
            column: 30
          }
        }, {
          start: {
            line: 287,
            column: 12
          },
          end: {
            line: 288,
            column: 32
          }
        }],
        line: 275
      },
      "61": {
        loc: {
          start: {
            line: 307,
            column: 31
          },
          end: {
            line: 307,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 307,
            column: 40
          },
          end: {
            line: 307,
            column: 46
          }
        }],
        line: 307
      },
      "62": {
        loc: {
          start: {
            line: 308,
            column: 45
          },
          end: {
            line: 308,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 45
          },
          end: {
            line: 308,
            column: 52
          }
        }, {
          start: {
            line: 308,
            column: 56
          },
          end: {
            line: 308,
            column: 58
          }
        }],
        line: 308
      },
      "63": {
        loc: {
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 309,
            column: 8
          },
          end: {
            line: 342,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 309
      },
      "64": {
        loc: {
          start: {
            line: 325,
            column: 20
          },
          end: {
            line: 325,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 20
          },
          end: {
            line: 325,
            column: 28
          }
        }, {
          start: {
            line: 325,
            column: 32
          },
          end: {
            line: 325,
            column: 34
          }
        }],
        line: 325
      },
      "65": {
        loc: {
          start: {
            line: 326,
            column: 20
          },
          end: {
            line: 326,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 326,
            column: 20
          },
          end: {
            line: 326,
            column: 50
          }
        }, {
          start: {
            line: 326,
            column: 54
          },
          end: {
            line: 326,
            column: 56
          }
        }],
        line: 326
      },
      "66": {
        loc: {
          start: {
            line: 329,
            column: 20
          },
          end: {
            line: 329,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 329,
            column: 20
          },
          end: {
            line: 329,
            column: 32
          }
        }, {
          start: {
            line: 329,
            column: 36
          },
          end: {
            line: 329,
            column: 38
          }
        }],
        line: 329
      },
      "67": {
        loc: {
          start: {
            line: 330,
            column: 20
          },
          end: {
            line: 330,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 20
          },
          end: {
            line: 330,
            column: 35
          }
        }, {
          start: {
            line: 330,
            column: 39
          },
          end: {
            line: 330,
            column: 41
          }
        }],
        line: 330
      },
      "68": {
        loc: {
          start: {
            line: 331,
            column: 20
          },
          end: {
            line: 331,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 331,
            column: 20
          },
          end: {
            line: 331,
            column: 35
          }
        }, {
          start: {
            line: 331,
            column: 39
          },
          end: {
            line: 331,
            column: 41
          }
        }],
        line: 331
      },
      "69": {
        loc: {
          start: {
            line: 335,
            column: 20
          },
          end: {
            line: 335,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 335,
            column: 20
          },
          end: {
            line: 335,
            column: 47
          }
        }, {
          start: {
            line: 335,
            column: 51
          },
          end: {
            line: 335,
            column: 53
          }
        }],
        line: 335
      },
      "70": {
        loc: {
          start: {
            line: 336,
            column: 20
          },
          end: {
            line: 336,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 20
          },
          end: {
            line: 336,
            column: 41
          }
        }, {
          start: {
            line: 336,
            column: 45
          },
          end: {
            line: 336,
            column: 47
          }
        }],
        line: 336
      },
      "71": {
        loc: {
          start: {
            line: 347,
            column: 30
          },
          end: {
            line: 347,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 347,
            column: 38
          },
          end: {
            line: 347,
            column: 40
          }
        }],
        line: 347
      },
      "72": {
        loc: {
          start: {
            line: 355,
            column: 53
          },
          end: {
            line: 355,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 355,
            column: 53
          },
          end: {
            line: 355,
            column: 64
          }
        }, {
          start: {
            line: 355,
            column: 68
          },
          end: {
            line: 355,
            column: 94
          }
        }],
        line: 355
      },
      "73": {
        loc: {
          start: {
            line: 358,
            column: 33
          },
          end: {
            line: 358,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 358,
            column: 33
          },
          end: {
            line: 358,
            column: 55
          }
        }, {
          start: {
            line: 358,
            column: 59
          },
          end: {
            line: 358,
            column: 69
          }
        }, {
          start: {
            line: 358,
            column: 73
          },
          end: {
            line: 358,
            column: 81
          }
        }],
        line: 358
      },
      "74": {
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 365,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "75": {
        loc: {
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 12
          },
          end: {
            line: 369,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "76": {
        loc: {
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 377,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 12
          },
          end: {
            line: 377,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "77": {
        loc: {
          start: {
            line: 379,
            column: 19
          },
          end: {
            line: 379,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 379,
            column: 19
          },
          end: {
            line: 379,
            column: 27
          }
        }, {
          start: {
            line: 379,
            column: 31
          },
          end: {
            line: 379,
            column: 40
          }
        }],
        line: 379
      },
      "78": {
        loc: {
          start: {
            line: 382,
            column: 60
          },
          end: {
            line: 382,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 382,
            column: 60
          },
          end: {
            line: 382,
            column: 75
          }
        }, {
          start: {
            line: 382,
            column: 79
          },
          end: {
            line: 382,
            column: 121
          }
        }],
        line: 382
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0, 0],
      "26": [0, 0],
      "27": [0, 0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0, 0, 0, 0, 0, 0],
      "61": [0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0],
      "72": [0, 0],
      "73": [0, 0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\enhancedAuditLog.ts"],
      sourcesContent: ["import { auditLogService, type AuditLogEntry } from './auditLogService';\n\nexport interface EnhancedAuditEvent {\n  id?: string;\n  timestamp?: Date;\n  eventType: 'auth' | 'data_access' | 'data_modification' | 'security_violation' | 'system_event' | 'user_action';\n  severity: 'critical' | 'high' | 'medium' | 'low' | 'info';\n  userId?: string;\n  userEmail?: string;\n  ipAddress?: string;\n  userAgent?: string;\n  action: string;\n  resource: string;\n  details: Record<string, any>;\n  success: boolean;\n  sessionId?: string;\n  location?: {\n    country?: string;\n    city?: string;\n    coordinates?: [number, number];\n  };\n  riskScore?: number;\n  tags?: string[];\n}\n\nexport interface AuditSearchFilters {\n  eventType?: string[];\n  severity?: string[];\n  userId?: string;\n  userEmail?: string;\n  ipAddress?: string;\n  dateFrom?: Date;\n  dateTo?: Date;\n  success?: boolean;\n  riskScoreMin?: number;\n  riskScoreMax?: number;\n  tags?: string[];\n  searchText?: string;\n}\n\nexport interface AuditMetrics {\n  totalEvents: number;\n  eventsByType: Record<string, number>;\n  eventsBySeverity: Record<string, number>;\n  uniqueUsers: number;\n  uniqueIPs: number;\n  failedLogins: number;\n  successfulLogins: number;\n  highRiskEvents: number;\n  recentActivity: EnhancedAuditEvent[];\n  topUsers: { userId: string; userEmail: string; eventCount: number }[];\n  topIPs: { ipAddress: string; eventCount: number; riskScore: number }[];\n}\n\nclass EnhancedAuditLogService {\n  private events: EnhancedAuditEvent[] = [];\n  private maxEvents = 10000; // Keep last 10k events in memory\n  private riskThresholds = {\n    low: 0.3,\n    medium: 0.6,\n    high: 0.8\n  };\n\n  /**\n   * Log an enhanced audit event\n   */\n  async logEvent(event: EnhancedAuditEvent): Promise<void> {\n    const enhancedEvent: EnhancedAuditEvent = {\n      ...event,\n      id: this.generateEventId(),\n      timestamp: event.timestamp || new Date(),\n      riskScore: event.riskScore || this.calculateRiskScore(event),\n      tags: event.tags || this.generateTags(event)\n    };\n\n    // Add to in-memory storage\n    this.events.unshift(enhancedEvent);\n    \n    // Maintain max events limit\n    if (this.events.length > this.maxEvents) {\n      this.events = this.events.slice(0, this.maxEvents);\n    }\n\n    // Also log to the existing audit service\n    try {\n      await auditLogService.log({\n        userId: event.userId,\n        userEmail: event.userEmail,\n        action: event.action,\n        resource: event.resource,\n        details: event.details,\n        severity: event.severity === 'info' ? 'low' : event.severity,\n        category: this.mapEventTypeToCategory(event.eventType),\n        success: event.success\n      });\n    } catch (error) {\n      console.error('Failed to log to audit service:', error);\n    }\n\n    // Trigger real-time alerts for high-risk events\n    if (enhancedEvent.riskScore && enhancedEvent.riskScore > this.riskThresholds.high) {\n      this.triggerSecurityAlert(enhancedEvent);\n    }\n  }\n\n  /**\n   * Search and filter audit events\n   */\n  searchEvents(filters: AuditSearchFilters, limit = 100, offset = 0): {\n    events: EnhancedAuditEvent[];\n    total: number;\n    hasMore: boolean;\n  } {\n    let filteredEvents = [...this.events];\n\n    // Apply filters\n    if (filters.eventType?.length) {\n      filteredEvents = filteredEvents.filter(e => filters.eventType!.includes(e.eventType));\n    }\n\n    if (filters.severity?.length) {\n      filteredEvents = filteredEvents.filter(e => filters.severity!.includes(e.severity));\n    }\n\n    if (filters.userId) {\n      filteredEvents = filteredEvents.filter(e => e.userId === filters.userId);\n    }\n\n    if (filters.userEmail) {\n      filteredEvents = filteredEvents.filter(e => \n        e.userEmail?.toLowerCase().includes(filters.userEmail!.toLowerCase())\n      );\n    }\n\n    if (filters.ipAddress) {\n      filteredEvents = filteredEvents.filter(e => e.ipAddress === filters.ipAddress);\n    }\n\n    if (filters.dateFrom) {\n      filteredEvents = filteredEvents.filter(e => \n        e.timestamp && e.timestamp >= filters.dateFrom!\n      );\n    }\n\n    if (filters.dateTo) {\n      filteredEvents = filteredEvents.filter(e => \n        e.timestamp && e.timestamp <= filters.dateTo!\n      );\n    }\n\n    if (filters.success !== undefined) {\n      filteredEvents = filteredEvents.filter(e => e.success === filters.success);\n    }\n\n    if (filters.riskScoreMin !== undefined) {\n      filteredEvents = filteredEvents.filter(e => \n        e.riskScore && e.riskScore >= filters.riskScoreMin!\n      );\n    }\n\n    if (filters.riskScoreMax !== undefined) {\n      filteredEvents = filteredEvents.filter(e => \n        e.riskScore && e.riskScore <= filters.riskScoreMax!\n      );\n    }\n\n    if (filters.tags?.length) {\n      filteredEvents = filteredEvents.filter(e => \n        e.tags?.some(tag => filters.tags!.includes(tag))\n      );\n    }\n\n    if (filters.searchText) {\n      const searchLower = filters.searchText.toLowerCase();\n      filteredEvents = filteredEvents.filter(e => \n        e.action.toLowerCase().includes(searchLower) ||\n        e.resource.toLowerCase().includes(searchLower) ||\n        JSON.stringify(e.details).toLowerCase().includes(searchLower)\n      );\n    }\n\n    const total = filteredEvents.length;\n    const paginatedEvents = filteredEvents.slice(offset, offset + limit);\n    const hasMore = offset + limit < total;\n\n    return {\n      events: paginatedEvents,\n      total,\n      hasMore\n    };\n  }\n\n  /**\n   * Get audit metrics and analytics\n   */\n  getMetrics(timeRange?: { from: Date; to: Date }): AuditMetrics {\n    let events = this.events;\n\n    if (timeRange) {\n      events = events.filter(e => \n        e.timestamp && \n        e.timestamp >= timeRange.from && \n        e.timestamp <= timeRange.to\n      );\n    }\n\n    const eventsByType: Record<string, number> = {};\n    const eventsBySeverity: Record<string, number> = {};\n    const userCounts: Record<string, { userId: string; userEmail: string; count: number }> = {};\n    const ipCounts: Record<string, { count: number; riskScore: number }> = {};\n    \n    let failedLogins = 0;\n    let successfulLogins = 0;\n    let highRiskEvents = 0;\n\n    events.forEach(event => {\n      // Count by type\n      eventsByType[event.eventType] = (eventsByType[event.eventType] || 0) + 1;\n      \n      // Count by severity\n      eventsBySeverity[event.severity] = (eventsBySeverity[event.severity] || 0) + 1;\n      \n      // Count users\n      if (event.userId && event.userEmail) {\n        const key = event.userId;\n        if (!userCounts[key]) {\n          userCounts[key] = { userId: event.userId, userEmail: event.userEmail, count: 0 };\n        }\n        userCounts[key].count++;\n      }\n      \n      // Count IPs\n      if (event.ipAddress) {\n        if (!ipCounts[event.ipAddress]) {\n          ipCounts[event.ipAddress] = { count: 0, riskScore: 0 };\n        }\n        ipCounts[event.ipAddress].count++;\n        ipCounts[event.ipAddress].riskScore = Math.max(\n          ipCounts[event.ipAddress].riskScore,\n          event.riskScore || 0\n        );\n      }\n      \n      // Count login events\n      if (event.eventType === 'auth') {\n        if (event.success) {\n          successfulLogins++;\n        } else {\n          failedLogins++;\n        }\n      }\n      \n      // Count high-risk events\n      if (event.riskScore && event.riskScore > this.riskThresholds.high) {\n        highRiskEvents++;\n      }\n    });\n\n    const topUsers = Object.values(userCounts)\n      .sort((a, b) => b.count - a.count)\n      .slice(0, 10)\n      .map(user => ({ userId: user.userId, userEmail: user.userEmail, eventCount: user.count }));\n\n    const topIPs = Object.entries(ipCounts)\n      .map(([ip, data]) => ({ ipAddress: ip, eventCount: data.count, riskScore: data.riskScore }))\n      .sort((a, b) => b.eventCount - a.eventCount)\n      .slice(0, 10);\n\n    const recentActivity = events.slice(0, 20);\n\n    return {\n      totalEvents: events.length,\n      eventsByType,\n      eventsBySeverity,\n      uniqueUsers: Object.keys(userCounts).length,\n      uniqueIPs: Object.keys(ipCounts).length,\n      failedLogins,\n      successfulLogins,\n      highRiskEvents,\n      recentActivity,\n      topUsers,\n      topIPs\n    };\n  }\n\n  /**\n   * Calculate risk score for an event\n   */\n  private calculateRiskScore(event: EnhancedAuditEvent): number {\n    let score = 0;\n\n    // Base score by event type\n    const typeScores = {\n      'security_violation': 0.8,\n      'auth': event.success ? 0.1 : 0.6,\n      'data_modification': 0.4,\n      'data_access': 0.2,\n      'user_action': 0.1,\n      'system_event': 0.1\n    };\n    \n    score += typeScores[event.eventType] || 0.1;\n\n    // Severity multiplier\n    const severityMultipliers = {\n      'critical': 1.0,\n      'high': 0.8,\n      'medium': 0.6,\n      'low': 0.4,\n      'info': 0.2\n    };\n    \n    score *= severityMultipliers[event.severity] || 0.5;\n\n    // Failed action penalty\n    if (!event.success) {\n      score += 0.3;\n    }\n\n    // Time-based factors (higher risk for off-hours)\n    if (event.timestamp) {\n      const hour = event.timestamp.getHours();\n      if (hour < 6 || hour > 22) {\n        score += 0.2; // Off-hours activity\n      }\n    }\n\n    // Ensure score is between 0 and 1\n    return Math.min(Math.max(score, 0), 1);\n  }\n\n  /**\n   * Generate tags for an event\n   */\n  private generateTags(event: EnhancedAuditEvent): string[] {\n    const tags: string[] = [];\n\n    // Add severity tag\n    tags.push(`severity:${event.severity}`);\n    \n    // Add success/failure tag\n    tags.push(event.success ? 'success' : 'failure');\n    \n    // Add time-based tags\n    if (event.timestamp) {\n      const hour = event.timestamp.getHours();\n      if (hour < 6 || hour > 22) {\n        tags.push('off-hours');\n      }\n      \n      const day = event.timestamp.getDay();\n      if (day === 0 || day === 6) {\n        tags.push('weekend');\n      }\n    }\n    \n    // Add event-specific tags\n    if (event.eventType === 'auth') {\n      if (event.action.includes('login')) {\n        tags.push('login');\n      }\n      if (event.action.includes('2fa')) {\n        tags.push('2fa');\n      }\n    }\n    \n    if (event.eventType === 'security_violation') {\n      tags.push('security-alert');\n    }\n    \n    // Add risk level tags\n    const riskScore = event.riskScore || this.calculateRiskScore(event);\n    if (riskScore > this.riskThresholds.high) {\n      tags.push('high-risk');\n    } else if (riskScore > this.riskThresholds.medium) {\n      tags.push('medium-risk');\n    } else {\n      tags.push('low-risk');\n    }\n\n    return tags;\n  }\n\n  /**\n   * Generate unique event ID\n   */\n  private generateEventId(): string {\n    return `audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  private mapEventTypeToCategory(eventType: EnhancedAuditEvent['eventType']): AuditLogEntry['category'] {\n    switch (eventType) {\n      case 'data_access':\n      case 'data_modification':\n        return 'data';\n      case 'security_violation':\n        return 'security';\n      case 'system_event':\n        return 'system';\n      case 'user_action':\n        return 'user';\n      case 'auth':\n        return 'auth';\n      default:\n        return 'system';\n    }\n  }\n\n  /**\n   * Trigger security alert for high-risk events\n   */\n  private triggerSecurityAlert(event: EnhancedAuditEvent): void {\n    // In a real implementation, this would send notifications\n    // to security team, trigger automated responses, etc.\n    console.warn('\uD83D\uDEA8 High-risk security event detected:', {\n      id: event.id,\n      action: event.action,\n      userId: event.userId,\n      ipAddress: event.ipAddress,\n      riskScore: event.riskScore,\n      timestamp: event.timestamp\n    });\n  }\n\n  /**\n   * Export audit data for compliance\n   */\n  exportAuditData(filters?: AuditSearchFilters, format: 'json' | 'csv' = 'json'): string {\n    const { events } = this.searchEvents(filters || {}, 10000, 0);\n    \n    if (format === 'csv') {\n      const headers = [\n        'ID', 'Timestamp', 'Event Type', 'Severity', 'User ID', 'User Email',\n        'IP Address', 'Action', 'Resource', 'Success', 'Risk Score', 'Tags'\n      ];\n      \n      const csvRows = events.map(event => [\n        event.id || '',\n        event.timestamp?.toISOString() || '',\n        event.eventType,\n        event.severity,\n        event.userId || '',\n        event.userEmail || '',\n        event.ipAddress || '',\n        event.action,\n        event.resource,\n        event.success.toString(),\n        event.riskScore?.toString() || '',\n        event.tags?.join(';') || ''\n      ]);\n      \n      return [headers, ...csvRows].map(row => \n        row.map(cell => `\"${cell.replace(/\"/g, '\"\"')}\"`).join(',')\n      ).join('\\n');\n    }\n    \n    return JSON.stringify(events, null, 2);\n  }\n\n  /**\n   * Get events for a specific user\n   */\n  getUserActivity(userId: string, limit = 50): EnhancedAuditEvent[] {\n    return this.events\n      .filter(event => event.userId === userId)\n      .slice(0, limit);\n  }\n\n  /**\n   * Get suspicious activity patterns\n   */\n  getSuspiciousActivity(): {\n    multipleFailedLogins: { userId: string; count: number; lastAttempt: Date }[];\n    unusualLocations: { userId: string; ipAddress: string; location?: string }[];\n    offHoursActivity: EnhancedAuditEvent[];\n    highRiskEvents: EnhancedAuditEvent[];\n  } {\n    const now = new Date();\n    const last24Hours = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n    \n    const recentEvents = this.events.filter(e => \n      e.timestamp && e.timestamp >= last24Hours\n    );\n    \n    // Multiple failed logins\n    const failedLogins: Record<string, { count: number; lastAttempt: Date }> = {};\n    recentEvents\n      .filter(e => e.eventType === 'auth' && !e.success && e.userId)\n      .forEach(event => {\n        const userId = event.userId!;\n        if (!failedLogins[userId]) {\n          failedLogins[userId] = { count: 0, lastAttempt: event.timestamp! };\n        }\n        failedLogins[userId].count++;\n        if (event.timestamp! > failedLogins[userId].lastAttempt) {\n          failedLogins[userId].lastAttempt = event.timestamp!;\n        }\n      });\n    \n    const multipleFailedLogins = Object.entries(failedLogins)\n      .filter(([_, data]) => data.count >= 3)\n      .map(([userId, data]) => ({ userId, ...data }));\n    \n    // Off-hours activity\n    const offHoursActivity = recentEvents.filter(event => {\n      if (!event.timestamp) return false;\n      const hour = event.timestamp.getHours();\n      return hour < 6 || hour > 22;\n    });\n    \n    // High-risk events\n    const highRiskEvents = recentEvents.filter(event => \n      event.riskScore && event.riskScore > this.riskThresholds.high\n    );\n    \n    return {\n      multipleFailedLogins,\n      unusualLocations: [], // Would need geolocation service\n      offHoursActivity,\n      highRiskEvents\n    };\n  }\n}\n\nexport const enhancedAuditLogService = new EnhancedAuditLogService();\nexport default enhancedAuditLogService;"],
      names: ["enhancedAuditLogService", "EnhancedAuditLogService", "logEvent", "event", "enhancedEvent", "id", "generateEventId", "timestamp", "Date", "riskScore", "calculateRiskScore", "tags", "generateTags", "events", "unshift", "length", "maxEvents", "slice", "auditLogService", "log", "userId", "userEmail", "action", "resource", "details", "severity", "category", "mapEventTypeToCategory", "eventType", "success", "error", "console", "riskThresholds", "high", "triggerSecurityAlert", "searchEvents", "filters", "limit", "offset", "filteredEvents", "filter", "e", "includes", "toLowerCase", "ipAddress", "dateFrom", "dateTo", "undefined", "riskScoreMin", "riskScoreMax", "some", "tag", "searchText", "searchLower", "JSON", "stringify", "total", "paginatedEvents", "hasMore", "getMetrics", "timeRange", "from", "to", "eventsByType", "eventsBySeverity", "userCounts", "ipCounts", "failedLogins", "successfulLogins", "highRiskEvents", "forEach", "key", "count", "Math", "max", "topUsers", "Object", "values", "sort", "a", "b", "map", "user", "eventCount", "topIPs", "entries", "ip", "data", "recentActivity", "totalEvents", "uniqueUsers", "keys", "uniqueIPs", "score", "typeScores", "severityMultipliers", "hour", "getHours", "min", "push", "day", "getDay", "medium", "now", "random", "toString", "substr", "warn", "exportAuditData", "format", "headers", "csvRows", "toISOString", "join", "row", "cell", "replace", "getUserActivity", "getSuspiciousActivity", "last24Hours", "getTime", "recentEvents", "lastAttempt", "multipleFailedLogins", "_", "offHoursActivity", "unusualLocations", "low"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "58ac80fc083ae899d0ff261d4827ec642e2b7772"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13uwxwng13 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13uwxwng13();
cov_13uwxwng13().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_13uwxwng13().f[0]++;
  cov_13uwxwng13().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_13uwxwng13().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_13uwxwng13().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_13uwxwng13().f[1]++;
    cov_13uwxwng13().s[4]++;
    return _default;
  },
  get enhancedAuditLogService() {
    /* istanbul ignore next */
    cov_13uwxwng13().f[2]++;
    cov_13uwxwng13().s[5]++;
    return enhancedAuditLogService;
  }
});
const _auditLogService =
/* istanbul ignore next */
(cov_13uwxwng13().s[6]++, require("./auditLogService"));
class EnhancedAuditLogService {
  /**
  * Log an enhanced audit event
  */
  async logEvent(event) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[3]++;
    const enhancedEvent =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[7]++, {
      ...event,
      id: this.generateEventId(),
      timestamp:
      /* istanbul ignore next */
      (cov_13uwxwng13().b[0][0]++, event.timestamp) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[0][1]++, new Date()),
      riskScore:
      /* istanbul ignore next */
      (cov_13uwxwng13().b[1][0]++, event.riskScore) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[1][1]++, this.calculateRiskScore(event)),
      tags:
      /* istanbul ignore next */
      (cov_13uwxwng13().b[2][0]++, event.tags) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[2][1]++, this.generateTags(event))
    });
    // Add to in-memory storage
    /* istanbul ignore next */
    cov_13uwxwng13().s[8]++;
    this.events.unshift(enhancedEvent);
    // Maintain max events limit
    /* istanbul ignore next */
    cov_13uwxwng13().s[9]++;
    if (this.events.length > this.maxEvents) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[3][0]++;
      cov_13uwxwng13().s[10]++;
      this.events = this.events.slice(0, this.maxEvents);
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[3][1]++;
    }
    // Also log to the existing audit service
    cov_13uwxwng13().s[11]++;
    try {
      /* istanbul ignore next */
      cov_13uwxwng13().s[12]++;
      await _auditLogService.auditLogService.log({
        userId: event.userId,
        userEmail: event.userEmail,
        action: event.action,
        resource: event.resource,
        details: event.details,
        severity: event.severity === 'info' ?
        /* istanbul ignore next */
        (cov_13uwxwng13().b[4][0]++, 'low') :
        /* istanbul ignore next */
        (cov_13uwxwng13().b[4][1]++, event.severity),
        category: this.mapEventTypeToCategory(event.eventType),
        success: event.success
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_13uwxwng13().s[13]++;
      console.error('Failed to log to audit service:', error);
    }
    // Trigger real-time alerts for high-risk events
    /* istanbul ignore next */
    cov_13uwxwng13().s[14]++;
    if (
    /* istanbul ignore next */
    (cov_13uwxwng13().b[6][0]++, enhancedEvent.riskScore) &&
    /* istanbul ignore next */
    (cov_13uwxwng13().b[6][1]++, enhancedEvent.riskScore > this.riskThresholds.high)) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[5][0]++;
      cov_13uwxwng13().s[15]++;
      this.triggerSecurityAlert(enhancedEvent);
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[5][1]++;
    }
  }
  /**
  * Search and filter audit events
  */
  searchEvents(filters, limit =
  /* istanbul ignore next */
  (cov_13uwxwng13().b[7][0]++, 100), offset =
  /* istanbul ignore next */
  (cov_13uwxwng13().b[8][0]++, 0)) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[4]++;
    let filteredEvents =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[16]++, [...this.events]);
    // Apply filters
    /* istanbul ignore next */
    cov_13uwxwng13().s[17]++;
    if (filters.eventType?.length) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[9][0]++;
      cov_13uwxwng13().s[18]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[5]++;
        cov_13uwxwng13().s[19]++;
        return filters.eventType.includes(e.eventType);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[9][1]++;
    }
    cov_13uwxwng13().s[20]++;
    if (filters.severity?.length) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[10][0]++;
      cov_13uwxwng13().s[21]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[6]++;
        cov_13uwxwng13().s[22]++;
        return filters.severity.includes(e.severity);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[10][1]++;
    }
    cov_13uwxwng13().s[23]++;
    if (filters.userId) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[11][0]++;
      cov_13uwxwng13().s[24]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[7]++;
        cov_13uwxwng13().s[25]++;
        return e.userId === filters.userId;
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[11][1]++;
    }
    cov_13uwxwng13().s[26]++;
    if (filters.userEmail) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[12][0]++;
      cov_13uwxwng13().s[27]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[8]++;
        cov_13uwxwng13().s[28]++;
        return e.userEmail?.toLowerCase().includes(filters.userEmail.toLowerCase());
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[12][1]++;
    }
    cov_13uwxwng13().s[29]++;
    if (filters.ipAddress) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[13][0]++;
      cov_13uwxwng13().s[30]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[9]++;
        cov_13uwxwng13().s[31]++;
        return e.ipAddress === filters.ipAddress;
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[13][1]++;
    }
    cov_13uwxwng13().s[32]++;
    if (filters.dateFrom) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[14][0]++;
      cov_13uwxwng13().s[33]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[10]++;
        cov_13uwxwng13().s[34]++;
        return /* istanbul ignore next */(cov_13uwxwng13().b[15][0]++, e.timestamp) &&
        /* istanbul ignore next */
        (cov_13uwxwng13().b[15][1]++, e.timestamp >= filters.dateFrom);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[14][1]++;
    }
    cov_13uwxwng13().s[35]++;
    if (filters.dateTo) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[16][0]++;
      cov_13uwxwng13().s[36]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[11]++;
        cov_13uwxwng13().s[37]++;
        return /* istanbul ignore next */(cov_13uwxwng13().b[17][0]++, e.timestamp) &&
        /* istanbul ignore next */
        (cov_13uwxwng13().b[17][1]++, e.timestamp <= filters.dateTo);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[16][1]++;
    }
    cov_13uwxwng13().s[38]++;
    if (filters.success !== undefined) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[18][0]++;
      cov_13uwxwng13().s[39]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[12]++;
        cov_13uwxwng13().s[40]++;
        return e.success === filters.success;
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[18][1]++;
    }
    cov_13uwxwng13().s[41]++;
    if (filters.riskScoreMin !== undefined) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[19][0]++;
      cov_13uwxwng13().s[42]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[13]++;
        cov_13uwxwng13().s[43]++;
        return /* istanbul ignore next */(cov_13uwxwng13().b[20][0]++, e.riskScore) &&
        /* istanbul ignore next */
        (cov_13uwxwng13().b[20][1]++, e.riskScore >= filters.riskScoreMin);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[19][1]++;
    }
    cov_13uwxwng13().s[44]++;
    if (filters.riskScoreMax !== undefined) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[21][0]++;
      cov_13uwxwng13().s[45]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[14]++;
        cov_13uwxwng13().s[46]++;
        return /* istanbul ignore next */(cov_13uwxwng13().b[22][0]++, e.riskScore) &&
        /* istanbul ignore next */
        (cov_13uwxwng13().b[22][1]++, e.riskScore <= filters.riskScoreMax);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[21][1]++;
    }
    cov_13uwxwng13().s[47]++;
    if (filters.tags?.length) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[23][0]++;
      cov_13uwxwng13().s[48]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[15]++;
        cov_13uwxwng13().s[49]++;
        return e.tags?.some(tag => {
          /* istanbul ignore next */
          cov_13uwxwng13().f[16]++;
          cov_13uwxwng13().s[50]++;
          return filters.tags.includes(tag);
        });
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[23][1]++;
    }
    cov_13uwxwng13().s[51]++;
    if (filters.searchText) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[24][0]++;
      const searchLower =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[52]++, filters.searchText.toLowerCase());
      /* istanbul ignore next */
      cov_13uwxwng13().s[53]++;
      filteredEvents = filteredEvents.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[17]++;
        cov_13uwxwng13().s[54]++;
        return /* istanbul ignore next */(cov_13uwxwng13().b[25][0]++, e.action.toLowerCase().includes(searchLower)) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[25][1]++, e.resource.toLowerCase().includes(searchLower)) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[25][2]++, JSON.stringify(e.details).toLowerCase().includes(searchLower));
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[24][1]++;
    }
    const total =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[55]++, filteredEvents.length);
    const paginatedEvents =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[56]++, filteredEvents.slice(offset, offset + limit));
    const hasMore =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[57]++, offset + limit < total);
    /* istanbul ignore next */
    cov_13uwxwng13().s[58]++;
    return {
      events: paginatedEvents,
      total,
      hasMore
    };
  }
  /**
  * Get audit metrics and analytics
  */
  getMetrics(timeRange) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[18]++;
    let events =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[59]++, this.events);
    /* istanbul ignore next */
    cov_13uwxwng13().s[60]++;
    if (timeRange) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[26][0]++;
      cov_13uwxwng13().s[61]++;
      events = events.filter(e => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[19]++;
        cov_13uwxwng13().s[62]++;
        return /* istanbul ignore next */(cov_13uwxwng13().b[27][0]++, e.timestamp) &&
        /* istanbul ignore next */
        (cov_13uwxwng13().b[27][1]++, e.timestamp >= timeRange.from) &&
        /* istanbul ignore next */
        (cov_13uwxwng13().b[27][2]++, e.timestamp <= timeRange.to);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[26][1]++;
    }
    const eventsByType =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[63]++, {});
    const eventsBySeverity =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[64]++, {});
    const userCounts =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[65]++, {});
    const ipCounts =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[66]++, {});
    let failedLogins =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[67]++, 0);
    let successfulLogins =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[68]++, 0);
    let highRiskEvents =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[69]++, 0);
    /* istanbul ignore next */
    cov_13uwxwng13().s[70]++;
    events.forEach(event => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[20]++;
      cov_13uwxwng13().s[71]++;
      // Count by type
      eventsByType[event.eventType] = (
      /* istanbul ignore next */
      (cov_13uwxwng13().b[28][0]++, eventsByType[event.eventType]) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[28][1]++, 0)) + 1;
      // Count by severity
      /* istanbul ignore next */
      cov_13uwxwng13().s[72]++;
      eventsBySeverity[event.severity] = (
      /* istanbul ignore next */
      (cov_13uwxwng13().b[29][0]++, eventsBySeverity[event.severity]) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[29][1]++, 0)) + 1;
      // Count users
      /* istanbul ignore next */
      cov_13uwxwng13().s[73]++;
      if (
      /* istanbul ignore next */
      (cov_13uwxwng13().b[31][0]++, event.userId) &&
      /* istanbul ignore next */
      (cov_13uwxwng13().b[31][1]++, event.userEmail)) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[30][0]++;
        const key =
        /* istanbul ignore next */
        (cov_13uwxwng13().s[74]++, event.userId);
        /* istanbul ignore next */
        cov_13uwxwng13().s[75]++;
        if (!userCounts[key]) {
          /* istanbul ignore next */
          cov_13uwxwng13().b[32][0]++;
          cov_13uwxwng13().s[76]++;
          userCounts[key] = {
            userId: event.userId,
            userEmail: event.userEmail,
            count: 0
          };
        } else
        /* istanbul ignore next */
        {
          cov_13uwxwng13().b[32][1]++;
        }
        cov_13uwxwng13().s[77]++;
        userCounts[key].count++;
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[30][1]++;
      }
      // Count IPs
      cov_13uwxwng13().s[78]++;
      if (event.ipAddress) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[33][0]++;
        cov_13uwxwng13().s[79]++;
        if (!ipCounts[event.ipAddress]) {
          /* istanbul ignore next */
          cov_13uwxwng13().b[34][0]++;
          cov_13uwxwng13().s[80]++;
          ipCounts[event.ipAddress] = {
            count: 0,
            riskScore: 0
          };
        } else
        /* istanbul ignore next */
        {
          cov_13uwxwng13().b[34][1]++;
        }
        cov_13uwxwng13().s[81]++;
        ipCounts[event.ipAddress].count++;
        /* istanbul ignore next */
        cov_13uwxwng13().s[82]++;
        ipCounts[event.ipAddress].riskScore = Math.max(ipCounts[event.ipAddress].riskScore,
        /* istanbul ignore next */
        (cov_13uwxwng13().b[35][0]++, event.riskScore) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[35][1]++, 0));
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[33][1]++;
      }
      // Count login events
      cov_13uwxwng13().s[83]++;
      if (event.eventType === 'auth') {
        /* istanbul ignore next */
        cov_13uwxwng13().b[36][0]++;
        cov_13uwxwng13().s[84]++;
        if (event.success) {
          /* istanbul ignore next */
          cov_13uwxwng13().b[37][0]++;
          cov_13uwxwng13().s[85]++;
          successfulLogins++;
        } else {
          /* istanbul ignore next */
          cov_13uwxwng13().b[37][1]++;
          cov_13uwxwng13().s[86]++;
          failedLogins++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[36][1]++;
      }
      // Count high-risk events
      cov_13uwxwng13().s[87]++;
      if (
      /* istanbul ignore next */
      (cov_13uwxwng13().b[39][0]++, event.riskScore) &&
      /* istanbul ignore next */
      (cov_13uwxwng13().b[39][1]++, event.riskScore > this.riskThresholds.high)) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[38][0]++;
        cov_13uwxwng13().s[88]++;
        highRiskEvents++;
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[38][1]++;
      }
    });
    const topUsers =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[89]++, Object.values(userCounts).sort((a, b) => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[21]++;
      cov_13uwxwng13().s[90]++;
      return b.count - a.count;
    }).slice(0, 10).map(user => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[22]++;
      cov_13uwxwng13().s[91]++;
      return {
        userId: user.userId,
        userEmail: user.userEmail,
        eventCount: user.count
      };
    }));
    const topIPs =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[92]++, Object.entries(ipCounts).map(([ip, data]) => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[23]++;
      cov_13uwxwng13().s[93]++;
      return {
        ipAddress: ip,
        eventCount: data.count,
        riskScore: data.riskScore
      };
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[24]++;
      cov_13uwxwng13().s[94]++;
      return b.eventCount - a.eventCount;
    }).slice(0, 10));
    const recentActivity =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[95]++, events.slice(0, 20));
    /* istanbul ignore next */
    cov_13uwxwng13().s[96]++;
    return {
      totalEvents: events.length,
      eventsByType,
      eventsBySeverity,
      uniqueUsers: Object.keys(userCounts).length,
      uniqueIPs: Object.keys(ipCounts).length,
      failedLogins,
      successfulLogins,
      highRiskEvents,
      recentActivity,
      topUsers,
      topIPs
    };
  }
  /**
  * Calculate risk score for an event
  */
  calculateRiskScore(event) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[25]++;
    let score =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[97]++, 0);
    // Base score by event type
    const typeScores =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[98]++, {
      'security_violation': 0.8,
      'auth': event.success ?
      /* istanbul ignore next */
      (cov_13uwxwng13().b[40][0]++, 0.1) :
      /* istanbul ignore next */
      (cov_13uwxwng13().b[40][1]++, 0.6),
      'data_modification': 0.4,
      'data_access': 0.2,
      'user_action': 0.1,
      'system_event': 0.1
    });
    /* istanbul ignore next */
    cov_13uwxwng13().s[99]++;
    score +=
    /* istanbul ignore next */
    (cov_13uwxwng13().b[41][0]++, typeScores[event.eventType]) ||
    /* istanbul ignore next */
    (cov_13uwxwng13().b[41][1]++, 0.1);
    // Severity multiplier
    const severityMultipliers =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[100]++, {
      'critical': 1.0,
      'high': 0.8,
      'medium': 0.6,
      'low': 0.4,
      'info': 0.2
    });
    /* istanbul ignore next */
    cov_13uwxwng13().s[101]++;
    score *=
    /* istanbul ignore next */
    (cov_13uwxwng13().b[42][0]++, severityMultipliers[event.severity]) ||
    /* istanbul ignore next */
    (cov_13uwxwng13().b[42][1]++, 0.5);
    // Failed action penalty
    /* istanbul ignore next */
    cov_13uwxwng13().s[102]++;
    if (!event.success) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[43][0]++;
      cov_13uwxwng13().s[103]++;
      score += 0.3;
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[43][1]++;
    }
    // Time-based factors (higher risk for off-hours)
    cov_13uwxwng13().s[104]++;
    if (event.timestamp) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[44][0]++;
      const hour =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[105]++, event.timestamp.getHours());
      /* istanbul ignore next */
      cov_13uwxwng13().s[106]++;
      if (
      /* istanbul ignore next */
      (cov_13uwxwng13().b[46][0]++, hour < 6) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[46][1]++, hour > 22)) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[45][0]++;
        cov_13uwxwng13().s[107]++;
        score += 0.2; // Off-hours activity
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[45][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[44][1]++;
    }
    // Ensure score is between 0 and 1
    cov_13uwxwng13().s[108]++;
    return Math.min(Math.max(score, 0), 1);
  }
  /**
  * Generate tags for an event
  */
  generateTags(event) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[26]++;
    const tags =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[109]++, []);
    // Add severity tag
    /* istanbul ignore next */
    cov_13uwxwng13().s[110]++;
    tags.push(`severity:${event.severity}`);
    // Add success/failure tag
    /* istanbul ignore next */
    cov_13uwxwng13().s[111]++;
    tags.push(event.success ?
    /* istanbul ignore next */
    (cov_13uwxwng13().b[47][0]++, 'success') :
    /* istanbul ignore next */
    (cov_13uwxwng13().b[47][1]++, 'failure'));
    // Add time-based tags
    /* istanbul ignore next */
    cov_13uwxwng13().s[112]++;
    if (event.timestamp) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[48][0]++;
      const hour =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[113]++, event.timestamp.getHours());
      /* istanbul ignore next */
      cov_13uwxwng13().s[114]++;
      if (
      /* istanbul ignore next */
      (cov_13uwxwng13().b[50][0]++, hour < 6) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[50][1]++, hour > 22)) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[49][0]++;
        cov_13uwxwng13().s[115]++;
        tags.push('off-hours');
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[49][1]++;
      }
      const day =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[116]++, event.timestamp.getDay());
      /* istanbul ignore next */
      cov_13uwxwng13().s[117]++;
      if (
      /* istanbul ignore next */
      (cov_13uwxwng13().b[52][0]++, day === 0) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[52][1]++, day === 6)) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[51][0]++;
        cov_13uwxwng13().s[118]++;
        tags.push('weekend');
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[51][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[48][1]++;
    }
    // Add event-specific tags
    cov_13uwxwng13().s[119]++;
    if (event.eventType === 'auth') {
      /* istanbul ignore next */
      cov_13uwxwng13().b[53][0]++;
      cov_13uwxwng13().s[120]++;
      if (event.action.includes('login')) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[54][0]++;
        cov_13uwxwng13().s[121]++;
        tags.push('login');
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[54][1]++;
      }
      cov_13uwxwng13().s[122]++;
      if (event.action.includes('2fa')) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[55][0]++;
        cov_13uwxwng13().s[123]++;
        tags.push('2fa');
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[55][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[53][1]++;
    }
    cov_13uwxwng13().s[124]++;
    if (event.eventType === 'security_violation') {
      /* istanbul ignore next */
      cov_13uwxwng13().b[56][0]++;
      cov_13uwxwng13().s[125]++;
      tags.push('security-alert');
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[56][1]++;
    }
    // Add risk level tags
    const riskScore =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[126]++,
    /* istanbul ignore next */
    (cov_13uwxwng13().b[57][0]++, event.riskScore) ||
    /* istanbul ignore next */
    (cov_13uwxwng13().b[57][1]++, this.calculateRiskScore(event)));
    /* istanbul ignore next */
    cov_13uwxwng13().s[127]++;
    if (riskScore > this.riskThresholds.high) {
      /* istanbul ignore next */
      cov_13uwxwng13().b[58][0]++;
      cov_13uwxwng13().s[128]++;
      tags.push('high-risk');
    } else {
      /* istanbul ignore next */
      cov_13uwxwng13().b[58][1]++;
      cov_13uwxwng13().s[129]++;
      if (riskScore > this.riskThresholds.medium) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[59][0]++;
        cov_13uwxwng13().s[130]++;
        tags.push('medium-risk');
      } else {
        /* istanbul ignore next */
        cov_13uwxwng13().b[59][1]++;
        cov_13uwxwng13().s[131]++;
        tags.push('low-risk');
      }
    }
    /* istanbul ignore next */
    cov_13uwxwng13().s[132]++;
    return tags;
  }
  /**
  * Generate unique event ID
  */
  generateEventId() {
    /* istanbul ignore next */
    cov_13uwxwng13().f[27]++;
    cov_13uwxwng13().s[133]++;
    return `audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
  }
  mapEventTypeToCategory(eventType) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[28]++;
    cov_13uwxwng13().s[134]++;
    switch (eventType) {
      case 'data_access':
        /* istanbul ignore next */
        cov_13uwxwng13().b[60][0]++;
      case 'data_modification':
        /* istanbul ignore next */
        cov_13uwxwng13().b[60][1]++;
        cov_13uwxwng13().s[135]++;
        return 'data';
      case 'security_violation':
        /* istanbul ignore next */
        cov_13uwxwng13().b[60][2]++;
        cov_13uwxwng13().s[136]++;
        return 'security';
      case 'system_event':
        /* istanbul ignore next */
        cov_13uwxwng13().b[60][3]++;
        cov_13uwxwng13().s[137]++;
        return 'system';
      case 'user_action':
        /* istanbul ignore next */
        cov_13uwxwng13().b[60][4]++;
        cov_13uwxwng13().s[138]++;
        return 'user';
      case 'auth':
        /* istanbul ignore next */
        cov_13uwxwng13().b[60][5]++;
        cov_13uwxwng13().s[139]++;
        return 'auth';
      default:
        /* istanbul ignore next */
        cov_13uwxwng13().b[60][6]++;
        cov_13uwxwng13().s[140]++;
        return 'system';
    }
  }
  /**
  * Trigger security alert for high-risk events
  */
  triggerSecurityAlert(event) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[29]++;
    cov_13uwxwng13().s[141]++;
    // In a real implementation, this would send notifications
    // to security team, trigger automated responses, etc.
    console.warn('🚨 High-risk security event detected:', {
      id: event.id,
      action: event.action,
      userId: event.userId,
      ipAddress: event.ipAddress,
      riskScore: event.riskScore,
      timestamp: event.timestamp
    });
  }
  /**
  * Export audit data for compliance
  */
  exportAuditData(filters, format =
  /* istanbul ignore next */
  (cov_13uwxwng13().b[61][0]++, 'json')) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[30]++;
    const {
      events
    } =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[142]++, this.searchEvents(
    /* istanbul ignore next */
    (cov_13uwxwng13().b[62][0]++, filters) ||
    /* istanbul ignore next */
    (cov_13uwxwng13().b[62][1]++, {}), 10000, 0));
    /* istanbul ignore next */
    cov_13uwxwng13().s[143]++;
    if (format === 'csv') {
      /* istanbul ignore next */
      cov_13uwxwng13().b[63][0]++;
      const headers =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[144]++, ['ID', 'Timestamp', 'Event Type', 'Severity', 'User ID', 'User Email', 'IP Address', 'Action', 'Resource', 'Success', 'Risk Score', 'Tags']);
      const csvRows =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[145]++, events.map(event => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[31]++;
        cov_13uwxwng13().s[146]++;
        return [
        /* istanbul ignore next */
        (cov_13uwxwng13().b[64][0]++, event.id) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[64][1]++, ''),
        /* istanbul ignore next */
        (cov_13uwxwng13().b[65][0]++, event.timestamp?.toISOString()) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[65][1]++, ''), event.eventType, event.severity,
        /* istanbul ignore next */
        (cov_13uwxwng13().b[66][0]++, event.userId) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[66][1]++, ''),
        /* istanbul ignore next */
        (cov_13uwxwng13().b[67][0]++, event.userEmail) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[67][1]++, ''),
        /* istanbul ignore next */
        (cov_13uwxwng13().b[68][0]++, event.ipAddress) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[68][1]++, ''), event.action, event.resource, event.success.toString(),
        /* istanbul ignore next */
        (cov_13uwxwng13().b[69][0]++, event.riskScore?.toString()) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[69][1]++, ''),
        /* istanbul ignore next */
        (cov_13uwxwng13().b[70][0]++, event.tags?.join(';')) ||
        /* istanbul ignore next */
        (cov_13uwxwng13().b[70][1]++, '')];
      }));
      /* istanbul ignore next */
      cov_13uwxwng13().s[147]++;
      return [headers, ...csvRows].map(row => {
        /* istanbul ignore next */
        cov_13uwxwng13().f[32]++;
        cov_13uwxwng13().s[148]++;
        return row.map(cell => {
          /* istanbul ignore next */
          cov_13uwxwng13().f[33]++;
          cov_13uwxwng13().s[149]++;
          return `"${cell.replace(/"/g, '""')}"`;
        }).join(',');
      }).join('\n');
    } else
    /* istanbul ignore next */
    {
      cov_13uwxwng13().b[63][1]++;
    }
    cov_13uwxwng13().s[150]++;
    return JSON.stringify(events, null, 2);
  }
  /**
  * Get events for a specific user
  */
  getUserActivity(userId, limit =
  /* istanbul ignore next */
  (cov_13uwxwng13().b[71][0]++, 50)) {
    /* istanbul ignore next */
    cov_13uwxwng13().f[34]++;
    cov_13uwxwng13().s[151]++;
    return this.events.filter(event => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[35]++;
      cov_13uwxwng13().s[152]++;
      return event.userId === userId;
    }).slice(0, limit);
  }
  /**
  * Get suspicious activity patterns
  */
  getSuspiciousActivity() {
    /* istanbul ignore next */
    cov_13uwxwng13().f[36]++;
    const now =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[153]++, new Date());
    const last24Hours =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[154]++, new Date(now.getTime() - 24 * 60 * 60 * 1000));
    const recentEvents =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[155]++, this.events.filter(e => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[37]++;
      cov_13uwxwng13().s[156]++;
      return /* istanbul ignore next */(cov_13uwxwng13().b[72][0]++, e.timestamp) &&
      /* istanbul ignore next */
      (cov_13uwxwng13().b[72][1]++, e.timestamp >= last24Hours);
    }));
    // Multiple failed logins
    const failedLogins =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[157]++, {});
    /* istanbul ignore next */
    cov_13uwxwng13().s[158]++;
    recentEvents.filter(e => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[38]++;
      cov_13uwxwng13().s[159]++;
      return /* istanbul ignore next */(cov_13uwxwng13().b[73][0]++, e.eventType === 'auth') &&
      /* istanbul ignore next */
      (cov_13uwxwng13().b[73][1]++, !e.success) &&
      /* istanbul ignore next */
      (cov_13uwxwng13().b[73][2]++, e.userId);
    }).forEach(event => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[39]++;
      const userId =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[160]++, event.userId);
      /* istanbul ignore next */
      cov_13uwxwng13().s[161]++;
      if (!failedLogins[userId]) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[74][0]++;
        cov_13uwxwng13().s[162]++;
        failedLogins[userId] = {
          count: 0,
          lastAttempt: event.timestamp
        };
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[74][1]++;
      }
      cov_13uwxwng13().s[163]++;
      failedLogins[userId].count++;
      /* istanbul ignore next */
      cov_13uwxwng13().s[164]++;
      if (event.timestamp > failedLogins[userId].lastAttempt) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[75][0]++;
        cov_13uwxwng13().s[165]++;
        failedLogins[userId].lastAttempt = event.timestamp;
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[75][1]++;
      }
    });
    const multipleFailedLogins =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[166]++, Object.entries(failedLogins).filter(([_, data]) => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[40]++;
      cov_13uwxwng13().s[167]++;
      return data.count >= 3;
    }).map(([userId, data]) => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[41]++;
      cov_13uwxwng13().s[168]++;
      return {
        userId,
        ...data
      };
    }));
    // Off-hours activity
    const offHoursActivity =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[169]++, recentEvents.filter(event => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[42]++;
      cov_13uwxwng13().s[170]++;
      if (!event.timestamp) {
        /* istanbul ignore next */
        cov_13uwxwng13().b[76][0]++;
        cov_13uwxwng13().s[171]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_13uwxwng13().b[76][1]++;
      }
      const hour =
      /* istanbul ignore next */
      (cov_13uwxwng13().s[172]++, event.timestamp.getHours());
      /* istanbul ignore next */
      cov_13uwxwng13().s[173]++;
      return /* istanbul ignore next */(cov_13uwxwng13().b[77][0]++, hour < 6) ||
      /* istanbul ignore next */
      (cov_13uwxwng13().b[77][1]++, hour > 22);
    }));
    // High-risk events
    const highRiskEvents =
    /* istanbul ignore next */
    (cov_13uwxwng13().s[174]++, recentEvents.filter(event => {
      /* istanbul ignore next */
      cov_13uwxwng13().f[43]++;
      cov_13uwxwng13().s[175]++;
      return /* istanbul ignore next */(cov_13uwxwng13().b[78][0]++, event.riskScore) &&
      /* istanbul ignore next */
      (cov_13uwxwng13().b[78][1]++, event.riskScore > this.riskThresholds.high);
    }));
    /* istanbul ignore next */
    cov_13uwxwng13().s[176]++;
    return {
      multipleFailedLogins,
      unusualLocations: [],
      offHoursActivity,
      highRiskEvents
    };
  }
  constructor() {
    /* istanbul ignore next */
    cov_13uwxwng13().f[44]++;
    cov_13uwxwng13().s[177]++;
    this.events = [];
    /* istanbul ignore next */
    cov_13uwxwng13().s[178]++;
    this.maxEvents = 10000; // Keep last 10k events in memory
    /* istanbul ignore next */
    cov_13uwxwng13().s[179]++;
    this.riskThresholds = {
      low: 0.3,
      medium: 0.6,
      high: 0.8
    };
  }
}
const enhancedAuditLogService =
/* istanbul ignore next */
(cov_13uwxwng13().s[180]++, new EnhancedAuditLogService());
const _default =
/* istanbul ignore next */
(cov_13uwxwng13().s[181]++, enhancedAuditLogService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0IiwiY292XzEzdXd4d25nMTMiLCJmIiwicyIsIl9kZWZhdWx0IiwiZW5oYW5jZWRBdWRpdExvZ1NlcnZpY2UiLCJFbmhhbmNlZEF1ZGl0TG9nU2VydmljZSIsImxvZ0V2ZW50IiwiZXZlbnQiLCJlbmhhbmNlZEV2ZW50IiwiaWQiLCJnZW5lcmF0ZUV2ZW50SWQiLCJ0aW1lc3RhbXAiLCJiIiwiRGF0ZSIsInJpc2tTY29yZSIsImNhbGN1bGF0ZVJpc2tTY29yZSIsInRhZ3MiLCJnZW5lcmF0ZVRhZ3MiLCJldmVudHMiLCJ1bnNoaWZ0IiwibGVuZ3RoIiwibWF4RXZlbnRzIiwic2xpY2UiLCJfYXVkaXRMb2dTZXJ2aWNlIiwiYXVkaXRMb2dTZXJ2aWNlIiwibG9nIiwidXNlcklkIiwidXNlckVtYWlsIiwiYWN0aW9uIiwicmVzb3VyY2UiLCJkZXRhaWxzIiwic2V2ZXJpdHkiLCJjYXRlZ29yeSIsIm1hcEV2ZW50VHlwZVRvQ2F0ZWdvcnkiLCJldmVudFR5cGUiLCJzdWNjZXNzIiwiZXJyb3IiLCJjb25zb2xlIiwicmlza1RocmVzaG9sZHMiLCJoaWdoIiwidHJpZ2dlclNlY3VyaXR5QWxlcnQiLCJzZWFyY2hFdmVudHMiLCJmaWx0ZXJzIiwibGltaXQiLCJvZmZzZXQiLCJmaWx0ZXJlZEV2ZW50cyIsImZpbHRlciIsImUiLCJpbmNsdWRlcyIsInRvTG93ZXJDYXNlIiwiaXBBZGRyZXNzIiwiZGF0ZUZyb20iLCJkYXRlVG8iLCJ1bmRlZmluZWQiLCJyaXNrU2NvcmVNaW4iLCJyaXNrU2NvcmVNYXgiLCJzb21lIiwidGFnIiwic2VhcmNoVGV4dCIsInNlYXJjaExvd2VyIiwiSlNPTiIsInN0cmluZ2lmeSIsInRvdGFsIiwicGFnaW5hdGVkRXZlbnRzIiwiaGFzTW9yZSIsImdldE1ldHJpY3MiLCJ0aW1lUmFuZ2UiLCJmcm9tIiwidG8iLCJldmVudHNCeVR5cGUiLCJldmVudHNCeVNldmVyaXR5IiwidXNlckNvdW50cyIsImlwQ291bnRzIiwiZmFpbGVkTG9naW5zIiwic3VjY2Vzc2Z1bExvZ2lucyIsImhpZ2hSaXNrRXZlbnRzIiwiZm9yRWFjaCIsImtleSIsImNvdW50IiwiTWF0aCIsIm1heCIsInRvcFVzZXJzIiwiT2JqZWN0IiwidmFsdWVzIiwic29ydCIsImEiLCJtYXAiLCJ1c2VyIiwiZXZlbnRDb3VudCIsInRvcElQcyIsImVudHJpZXMiLCJpcCIsImRhdGEiLCJyZWNlbnRBY3Rpdml0eSIsInRvdGFsRXZlbnRzIiwidW5pcXVlVXNlcnMiLCJrZXlzIiwidW5pcXVlSVBzIiwic2NvcmUiLCJ0eXBlU2NvcmVzIiwic2V2ZXJpdHlNdWx0aXBsaWVycyIsImhvdXIiLCJnZXRIb3VycyIsIm1pbiIsInB1c2giLCJkYXkiLCJnZXREYXkiLCJtZWRpdW0iLCJub3ciLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0ciIsIndhcm4iLCJleHBvcnRBdWRpdERhdGEiLCJmb3JtYXQiLCJoZWFkZXJzIiwiY3N2Um93cyIsInRvSVNPU3RyaW5nIiwiam9pbiIsInJvdyIsImNlbGwiLCJyZXBsYWNlIiwiZ2V0VXNlckFjdGl2aXR5IiwiZ2V0U3VzcGljaW91c0FjdGl2aXR5IiwibGFzdDI0SG91cnMiLCJnZXRUaW1lIiwicmVjZW50RXZlbnRzIiwibGFzdEF0dGVtcHQiLCJtdWx0aXBsZUZhaWxlZExvZ2lucyIsIl8iLCJvZmZIb3Vyc0FjdGl2aXR5IiwidW51c3VhbExvY2F0aW9ucyIsImxvdyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY2hhc2VcXERvd25sb2Fkc1xcY3JtICgzMilcXHNyY1xcc2VydmljZXNcXGVuaGFuY2VkQXVkaXRMb2cudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXVkaXRMb2dTZXJ2aWNlLCB0eXBlIEF1ZGl0TG9nRW50cnkgfSBmcm9tICcuL2F1ZGl0TG9nU2VydmljZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW5oYW5jZWRBdWRpdEV2ZW50IHtcbiAgaWQ/OiBzdHJpbmc7XG4gIHRpbWVzdGFtcD86IERhdGU7XG4gIGV2ZW50VHlwZTogJ2F1dGgnIHwgJ2RhdGFfYWNjZXNzJyB8ICdkYXRhX21vZGlmaWNhdGlvbicgfCAnc2VjdXJpdHlfdmlvbGF0aW9uJyB8ICdzeXN0ZW1fZXZlbnQnIHwgJ3VzZXJfYWN0aW9uJztcbiAgc2V2ZXJpdHk6ICdjcml0aWNhbCcgfCAnaGlnaCcgfCAnbWVkaXVtJyB8ICdsb3cnIHwgJ2luZm8nO1xuICB1c2VySWQ/OiBzdHJpbmc7XG4gIHVzZXJFbWFpbD86IHN0cmluZztcbiAgaXBBZGRyZXNzPzogc3RyaW5nO1xuICB1c2VyQWdlbnQ/OiBzdHJpbmc7XG4gIGFjdGlvbjogc3RyaW5nO1xuICByZXNvdXJjZTogc3RyaW5nO1xuICBkZXRhaWxzOiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuICBzdWNjZXNzOiBib29sZWFuO1xuICBzZXNzaW9uSWQ/OiBzdHJpbmc7XG4gIGxvY2F0aW9uPzoge1xuICAgIGNvdW50cnk/OiBzdHJpbmc7XG4gICAgY2l0eT86IHN0cmluZztcbiAgICBjb29yZGluYXRlcz86IFtudW1iZXIsIG51bWJlcl07XG4gIH07XG4gIHJpc2tTY29yZT86IG51bWJlcjtcbiAgdGFncz86IHN0cmluZ1tdO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF1ZGl0U2VhcmNoRmlsdGVycyB7XG4gIGV2ZW50VHlwZT86IHN0cmluZ1tdO1xuICBzZXZlcml0eT86IHN0cmluZ1tdO1xuICB1c2VySWQ/OiBzdHJpbmc7XG4gIHVzZXJFbWFpbD86IHN0cmluZztcbiAgaXBBZGRyZXNzPzogc3RyaW5nO1xuICBkYXRlRnJvbT86IERhdGU7XG4gIGRhdGVUbz86IERhdGU7XG4gIHN1Y2Nlc3M/OiBib29sZWFuO1xuICByaXNrU2NvcmVNaW4/OiBudW1iZXI7XG4gIHJpc2tTY29yZU1heD86IG51bWJlcjtcbiAgdGFncz86IHN0cmluZ1tdO1xuICBzZWFyY2hUZXh0Pzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF1ZGl0TWV0cmljcyB7XG4gIHRvdGFsRXZlbnRzOiBudW1iZXI7XG4gIGV2ZW50c0J5VHlwZTogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcbiAgZXZlbnRzQnlTZXZlcml0eTogUmVjb3JkPHN0cmluZywgbnVtYmVyPjtcbiAgdW5pcXVlVXNlcnM6IG51bWJlcjtcbiAgdW5pcXVlSVBzOiBudW1iZXI7XG4gIGZhaWxlZExvZ2luczogbnVtYmVyO1xuICBzdWNjZXNzZnVsTG9naW5zOiBudW1iZXI7XG4gIGhpZ2hSaXNrRXZlbnRzOiBudW1iZXI7XG4gIHJlY2VudEFjdGl2aXR5OiBFbmhhbmNlZEF1ZGl0RXZlbnRbXTtcbiAgdG9wVXNlcnM6IHsgdXNlcklkOiBzdHJpbmc7IHVzZXJFbWFpbDogc3RyaW5nOyBldmVudENvdW50OiBudW1iZXIgfVtdO1xuICB0b3BJUHM6IHsgaXBBZGRyZXNzOiBzdHJpbmc7IGV2ZW50Q291bnQ6IG51bWJlcjsgcmlza1Njb3JlOiBudW1iZXIgfVtdO1xufVxuXG5jbGFzcyBFbmhhbmNlZEF1ZGl0TG9nU2VydmljZSB7XG4gIHByaXZhdGUgZXZlbnRzOiBFbmhhbmNlZEF1ZGl0RXZlbnRbXSA9IFtdO1xuICBwcml2YXRlIG1heEV2ZW50cyA9IDEwMDAwOyAvLyBLZWVwIGxhc3QgMTBrIGV2ZW50cyBpbiBtZW1vcnlcbiAgcHJpdmF0ZSByaXNrVGhyZXNob2xkcyA9IHtcbiAgICBsb3c6IDAuMyxcbiAgICBtZWRpdW06IDAuNixcbiAgICBoaWdoOiAwLjhcbiAgfTtcblxuICAvKipcbiAgICogTG9nIGFuIGVuaGFuY2VkIGF1ZGl0IGV2ZW50XG4gICAqL1xuICBhc3luYyBsb2dFdmVudChldmVudDogRW5oYW5jZWRBdWRpdEV2ZW50KTogUHJvbWlzZTx2b2lkPiB7XG4gICAgY29uc3QgZW5oYW5jZWRFdmVudDogRW5oYW5jZWRBdWRpdEV2ZW50ID0ge1xuICAgICAgLi4uZXZlbnQsXG4gICAgICBpZDogdGhpcy5nZW5lcmF0ZUV2ZW50SWQoKSxcbiAgICAgIHRpbWVzdGFtcDogZXZlbnQudGltZXN0YW1wIHx8IG5ldyBEYXRlKCksXG4gICAgICByaXNrU2NvcmU6IGV2ZW50LnJpc2tTY29yZSB8fCB0aGlzLmNhbGN1bGF0ZVJpc2tTY29yZShldmVudCksXG4gICAgICB0YWdzOiBldmVudC50YWdzIHx8IHRoaXMuZ2VuZXJhdGVUYWdzKGV2ZW50KVxuICAgIH07XG5cbiAgICAvLyBBZGQgdG8gaW4tbWVtb3J5IHN0b3JhZ2VcbiAgICB0aGlzLmV2ZW50cy51bnNoaWZ0KGVuaGFuY2VkRXZlbnQpO1xuICAgIFxuICAgIC8vIE1haW50YWluIG1heCBldmVudHMgbGltaXRcbiAgICBpZiAodGhpcy5ldmVudHMubGVuZ3RoID4gdGhpcy5tYXhFdmVudHMpIHtcbiAgICAgIHRoaXMuZXZlbnRzID0gdGhpcy5ldmVudHMuc2xpY2UoMCwgdGhpcy5tYXhFdmVudHMpO1xuICAgIH1cblxuICAgIC8vIEFsc28gbG9nIHRvIHRoZSBleGlzdGluZyBhdWRpdCBzZXJ2aWNlXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IGF1ZGl0TG9nU2VydmljZS5sb2coe1xuICAgICAgICB1c2VySWQ6IGV2ZW50LnVzZXJJZCxcbiAgICAgICAgdXNlckVtYWlsOiBldmVudC51c2VyRW1haWwsXG4gICAgICAgIGFjdGlvbjogZXZlbnQuYWN0aW9uLFxuICAgICAgICByZXNvdXJjZTogZXZlbnQucmVzb3VyY2UsXG4gICAgICAgIGRldGFpbHM6IGV2ZW50LmRldGFpbHMsXG4gICAgICAgIHNldmVyaXR5OiBldmVudC5zZXZlcml0eSA9PT0gJ2luZm8nID8gJ2xvdycgOiBldmVudC5zZXZlcml0eSxcbiAgICAgICAgY2F0ZWdvcnk6IHRoaXMubWFwRXZlbnRUeXBlVG9DYXRlZ29yeShldmVudC5ldmVudFR5cGUpLFxuICAgICAgICBzdWNjZXNzOiBldmVudC5zdWNjZXNzXG4gICAgICB9KTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIGxvZyB0byBhdWRpdCBzZXJ2aWNlOicsIGVycm9yKTtcbiAgICB9XG5cbiAgICAvLyBUcmlnZ2VyIHJlYWwtdGltZSBhbGVydHMgZm9yIGhpZ2gtcmlzayBldmVudHNcbiAgICBpZiAoZW5oYW5jZWRFdmVudC5yaXNrU2NvcmUgJiYgZW5oYW5jZWRFdmVudC5yaXNrU2NvcmUgPiB0aGlzLnJpc2tUaHJlc2hvbGRzLmhpZ2gpIHtcbiAgICAgIHRoaXMudHJpZ2dlclNlY3VyaXR5QWxlcnQoZW5oYW5jZWRFdmVudCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFNlYXJjaCBhbmQgZmlsdGVyIGF1ZGl0IGV2ZW50c1xuICAgKi9cbiAgc2VhcmNoRXZlbnRzKGZpbHRlcnM6IEF1ZGl0U2VhcmNoRmlsdGVycywgbGltaXQgPSAxMDAsIG9mZnNldCA9IDApOiB7XG4gICAgZXZlbnRzOiBFbmhhbmNlZEF1ZGl0RXZlbnRbXTtcbiAgICB0b3RhbDogbnVtYmVyO1xuICAgIGhhc01vcmU6IGJvb2xlYW47XG4gIH0ge1xuICAgIGxldCBmaWx0ZXJlZEV2ZW50cyA9IFsuLi50aGlzLmV2ZW50c107XG5cbiAgICAvLyBBcHBseSBmaWx0ZXJzXG4gICAgaWYgKGZpbHRlcnMuZXZlbnRUeXBlPy5sZW5ndGgpIHtcbiAgICAgIGZpbHRlcmVkRXZlbnRzID0gZmlsdGVyZWRFdmVudHMuZmlsdGVyKGUgPT4gZmlsdGVycy5ldmVudFR5cGUhLmluY2x1ZGVzKGUuZXZlbnRUeXBlKSk7XG4gICAgfVxuXG4gICAgaWYgKGZpbHRlcnMuc2V2ZXJpdHk/Lmxlbmd0aCkge1xuICAgICAgZmlsdGVyZWRFdmVudHMgPSBmaWx0ZXJlZEV2ZW50cy5maWx0ZXIoZSA9PiBmaWx0ZXJzLnNldmVyaXR5IS5pbmNsdWRlcyhlLnNldmVyaXR5KSk7XG4gICAgfVxuXG4gICAgaWYgKGZpbHRlcnMudXNlcklkKSB7XG4gICAgICBmaWx0ZXJlZEV2ZW50cyA9IGZpbHRlcmVkRXZlbnRzLmZpbHRlcihlID0+IGUudXNlcklkID09PSBmaWx0ZXJzLnVzZXJJZCk7XG4gICAgfVxuXG4gICAgaWYgKGZpbHRlcnMudXNlckVtYWlsKSB7XG4gICAgICBmaWx0ZXJlZEV2ZW50cyA9IGZpbHRlcmVkRXZlbnRzLmZpbHRlcihlID0+IFxuICAgICAgICBlLnVzZXJFbWFpbD8udG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhmaWx0ZXJzLnVzZXJFbWFpbCEudG9Mb3dlckNhc2UoKSlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZpbHRlcnMuaXBBZGRyZXNzKSB7XG4gICAgICBmaWx0ZXJlZEV2ZW50cyA9IGZpbHRlcmVkRXZlbnRzLmZpbHRlcihlID0+IGUuaXBBZGRyZXNzID09PSBmaWx0ZXJzLmlwQWRkcmVzcyk7XG4gICAgfVxuXG4gICAgaWYgKGZpbHRlcnMuZGF0ZUZyb20pIHtcbiAgICAgIGZpbHRlcmVkRXZlbnRzID0gZmlsdGVyZWRFdmVudHMuZmlsdGVyKGUgPT4gXG4gICAgICAgIGUudGltZXN0YW1wICYmIGUudGltZXN0YW1wID49IGZpbHRlcnMuZGF0ZUZyb20hXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmaWx0ZXJzLmRhdGVUbykge1xuICAgICAgZmlsdGVyZWRFdmVudHMgPSBmaWx0ZXJlZEV2ZW50cy5maWx0ZXIoZSA9PiBcbiAgICAgICAgZS50aW1lc3RhbXAgJiYgZS50aW1lc3RhbXAgPD0gZmlsdGVycy5kYXRlVG8hXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmaWx0ZXJzLnN1Y2Nlc3MgIT09IHVuZGVmaW5lZCkge1xuICAgICAgZmlsdGVyZWRFdmVudHMgPSBmaWx0ZXJlZEV2ZW50cy5maWx0ZXIoZSA9PiBlLnN1Y2Nlc3MgPT09IGZpbHRlcnMuc3VjY2Vzcyk7XG4gICAgfVxuXG4gICAgaWYgKGZpbHRlcnMucmlza1Njb3JlTWluICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIGZpbHRlcmVkRXZlbnRzID0gZmlsdGVyZWRFdmVudHMuZmlsdGVyKGUgPT4gXG4gICAgICAgIGUucmlza1Njb3JlICYmIGUucmlza1Njb3JlID49IGZpbHRlcnMucmlza1Njb3JlTWluIVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoZmlsdGVycy5yaXNrU2NvcmVNYXggIT09IHVuZGVmaW5lZCkge1xuICAgICAgZmlsdGVyZWRFdmVudHMgPSBmaWx0ZXJlZEV2ZW50cy5maWx0ZXIoZSA9PiBcbiAgICAgICAgZS5yaXNrU2NvcmUgJiYgZS5yaXNrU2NvcmUgPD0gZmlsdGVycy5yaXNrU2NvcmVNYXghXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmaWx0ZXJzLnRhZ3M/Lmxlbmd0aCkge1xuICAgICAgZmlsdGVyZWRFdmVudHMgPSBmaWx0ZXJlZEV2ZW50cy5maWx0ZXIoZSA9PiBcbiAgICAgICAgZS50YWdzPy5zb21lKHRhZyA9PiBmaWx0ZXJzLnRhZ3MhLmluY2x1ZGVzKHRhZykpXG4gICAgICApO1xuICAgIH1cblxuICAgIGlmIChmaWx0ZXJzLnNlYXJjaFRleHQpIHtcbiAgICAgIGNvbnN0IHNlYXJjaExvd2VyID0gZmlsdGVycy5zZWFyY2hUZXh0LnRvTG93ZXJDYXNlKCk7XG4gICAgICBmaWx0ZXJlZEV2ZW50cyA9IGZpbHRlcmVkRXZlbnRzLmZpbHRlcihlID0+IFxuICAgICAgICBlLmFjdGlvbi50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaExvd2VyKSB8fFxuICAgICAgICBlLnJlc291cmNlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoTG93ZXIpIHx8XG4gICAgICAgIEpTT04uc3RyaW5naWZ5KGUuZGV0YWlscykudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhzZWFyY2hMb3dlcilcbiAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3QgdG90YWwgPSBmaWx0ZXJlZEV2ZW50cy5sZW5ndGg7XG4gICAgY29uc3QgcGFnaW5hdGVkRXZlbnRzID0gZmlsdGVyZWRFdmVudHMuc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBsaW1pdCk7XG4gICAgY29uc3QgaGFzTW9yZSA9IG9mZnNldCArIGxpbWl0IDwgdG90YWw7XG5cbiAgICByZXR1cm4ge1xuICAgICAgZXZlbnRzOiBwYWdpbmF0ZWRFdmVudHMsXG4gICAgICB0b3RhbCxcbiAgICAgIGhhc01vcmVcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhdWRpdCBtZXRyaWNzIGFuZCBhbmFseXRpY3NcbiAgICovXG4gIGdldE1ldHJpY3ModGltZVJhbmdlPzogeyBmcm9tOiBEYXRlOyB0bzogRGF0ZSB9KTogQXVkaXRNZXRyaWNzIHtcbiAgICBsZXQgZXZlbnRzID0gdGhpcy5ldmVudHM7XG5cbiAgICBpZiAodGltZVJhbmdlKSB7XG4gICAgICBldmVudHMgPSBldmVudHMuZmlsdGVyKGUgPT4gXG4gICAgICAgIGUudGltZXN0YW1wICYmIFxuICAgICAgICBlLnRpbWVzdGFtcCA+PSB0aW1lUmFuZ2UuZnJvbSAmJiBcbiAgICAgICAgZS50aW1lc3RhbXAgPD0gdGltZVJhbmdlLnRvXG4gICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IGV2ZW50c0J5VHlwZTogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9IHt9O1xuICAgIGNvbnN0IGV2ZW50c0J5U2V2ZXJpdHk6IFJlY29yZDxzdHJpbmcsIG51bWJlcj4gPSB7fTtcbiAgICBjb25zdCB1c2VyQ291bnRzOiBSZWNvcmQ8c3RyaW5nLCB7IHVzZXJJZDogc3RyaW5nOyB1c2VyRW1haWw6IHN0cmluZzsgY291bnQ6IG51bWJlciB9PiA9IHt9O1xuICAgIGNvbnN0IGlwQ291bnRzOiBSZWNvcmQ8c3RyaW5nLCB7IGNvdW50OiBudW1iZXI7IHJpc2tTY29yZTogbnVtYmVyIH0+ID0ge307XG4gICAgXG4gICAgbGV0IGZhaWxlZExvZ2lucyA9IDA7XG4gICAgbGV0IHN1Y2Nlc3NmdWxMb2dpbnMgPSAwO1xuICAgIGxldCBoaWdoUmlza0V2ZW50cyA9IDA7XG5cbiAgICBldmVudHMuZm9yRWFjaChldmVudCA9PiB7XG4gICAgICAvLyBDb3VudCBieSB0eXBlXG4gICAgICBldmVudHNCeVR5cGVbZXZlbnQuZXZlbnRUeXBlXSA9IChldmVudHNCeVR5cGVbZXZlbnQuZXZlbnRUeXBlXSB8fCAwKSArIDE7XG4gICAgICBcbiAgICAgIC8vIENvdW50IGJ5IHNldmVyaXR5XG4gICAgICBldmVudHNCeVNldmVyaXR5W2V2ZW50LnNldmVyaXR5XSA9IChldmVudHNCeVNldmVyaXR5W2V2ZW50LnNldmVyaXR5XSB8fCAwKSArIDE7XG4gICAgICBcbiAgICAgIC8vIENvdW50IHVzZXJzXG4gICAgICBpZiAoZXZlbnQudXNlcklkICYmIGV2ZW50LnVzZXJFbWFpbCkge1xuICAgICAgICBjb25zdCBrZXkgPSBldmVudC51c2VySWQ7XG4gICAgICAgIGlmICghdXNlckNvdW50c1trZXldKSB7XG4gICAgICAgICAgdXNlckNvdW50c1trZXldID0geyB1c2VySWQ6IGV2ZW50LnVzZXJJZCwgdXNlckVtYWlsOiBldmVudC51c2VyRW1haWwsIGNvdW50OiAwIH07XG4gICAgICAgIH1cbiAgICAgICAgdXNlckNvdW50c1trZXldLmNvdW50Kys7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIENvdW50IElQc1xuICAgICAgaWYgKGV2ZW50LmlwQWRkcmVzcykge1xuICAgICAgICBpZiAoIWlwQ291bnRzW2V2ZW50LmlwQWRkcmVzc10pIHtcbiAgICAgICAgICBpcENvdW50c1tldmVudC5pcEFkZHJlc3NdID0geyBjb3VudDogMCwgcmlza1Njb3JlOiAwIH07XG4gICAgICAgIH1cbiAgICAgICAgaXBDb3VudHNbZXZlbnQuaXBBZGRyZXNzXS5jb3VudCsrO1xuICAgICAgICBpcENvdW50c1tldmVudC5pcEFkZHJlc3NdLnJpc2tTY29yZSA9IE1hdGgubWF4KFxuICAgICAgICAgIGlwQ291bnRzW2V2ZW50LmlwQWRkcmVzc10ucmlza1Njb3JlLFxuICAgICAgICAgIGV2ZW50LnJpc2tTY29yZSB8fCAwXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIENvdW50IGxvZ2luIGV2ZW50c1xuICAgICAgaWYgKGV2ZW50LmV2ZW50VHlwZSA9PT0gJ2F1dGgnKSB7XG4gICAgICAgIGlmIChldmVudC5zdWNjZXNzKSB7XG4gICAgICAgICAgc3VjY2Vzc2Z1bExvZ2lucysrO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZhaWxlZExvZ2lucysrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIENvdW50IGhpZ2gtcmlzayBldmVudHNcbiAgICAgIGlmIChldmVudC5yaXNrU2NvcmUgJiYgZXZlbnQucmlza1Njb3JlID4gdGhpcy5yaXNrVGhyZXNob2xkcy5oaWdoKSB7XG4gICAgICAgIGhpZ2hSaXNrRXZlbnRzKys7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBjb25zdCB0b3BVc2VycyA9IE9iamVjdC52YWx1ZXModXNlckNvdW50cylcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLmNvdW50IC0gYS5jb3VudClcbiAgICAgIC5zbGljZSgwLCAxMClcbiAgICAgIC5tYXAodXNlciA9PiAoeyB1c2VySWQ6IHVzZXIudXNlcklkLCB1c2VyRW1haWw6IHVzZXIudXNlckVtYWlsLCBldmVudENvdW50OiB1c2VyLmNvdW50IH0pKTtcblxuICAgIGNvbnN0IHRvcElQcyA9IE9iamVjdC5lbnRyaWVzKGlwQ291bnRzKVxuICAgICAgLm1hcCgoW2lwLCBkYXRhXSkgPT4gKHsgaXBBZGRyZXNzOiBpcCwgZXZlbnRDb3VudDogZGF0YS5jb3VudCwgcmlza1Njb3JlOiBkYXRhLnJpc2tTY29yZSB9KSlcbiAgICAgIC5zb3J0KChhLCBiKSA9PiBiLmV2ZW50Q291bnQgLSBhLmV2ZW50Q291bnQpXG4gICAgICAuc2xpY2UoMCwgMTApO1xuXG4gICAgY29uc3QgcmVjZW50QWN0aXZpdHkgPSBldmVudHMuc2xpY2UoMCwgMjApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRvdGFsRXZlbnRzOiBldmVudHMubGVuZ3RoLFxuICAgICAgZXZlbnRzQnlUeXBlLFxuICAgICAgZXZlbnRzQnlTZXZlcml0eSxcbiAgICAgIHVuaXF1ZVVzZXJzOiBPYmplY3Qua2V5cyh1c2VyQ291bnRzKS5sZW5ndGgsXG4gICAgICB1bmlxdWVJUHM6IE9iamVjdC5rZXlzKGlwQ291bnRzKS5sZW5ndGgsXG4gICAgICBmYWlsZWRMb2dpbnMsXG4gICAgICBzdWNjZXNzZnVsTG9naW5zLFxuICAgICAgaGlnaFJpc2tFdmVudHMsXG4gICAgICByZWNlbnRBY3Rpdml0eSxcbiAgICAgIHRvcFVzZXJzLFxuICAgICAgdG9wSVBzXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWxjdWxhdGUgcmlzayBzY29yZSBmb3IgYW4gZXZlbnRcbiAgICovXG4gIHByaXZhdGUgY2FsY3VsYXRlUmlza1Njb3JlKGV2ZW50OiBFbmhhbmNlZEF1ZGl0RXZlbnQpOiBudW1iZXIge1xuICAgIGxldCBzY29yZSA9IDA7XG5cbiAgICAvLyBCYXNlIHNjb3JlIGJ5IGV2ZW50IHR5cGVcbiAgICBjb25zdCB0eXBlU2NvcmVzID0ge1xuICAgICAgJ3NlY3VyaXR5X3Zpb2xhdGlvbic6IDAuOCxcbiAgICAgICdhdXRoJzogZXZlbnQuc3VjY2VzcyA/IDAuMSA6IDAuNixcbiAgICAgICdkYXRhX21vZGlmaWNhdGlvbic6IDAuNCxcbiAgICAgICdkYXRhX2FjY2Vzcyc6IDAuMixcbiAgICAgICd1c2VyX2FjdGlvbic6IDAuMSxcbiAgICAgICdzeXN0ZW1fZXZlbnQnOiAwLjFcbiAgICB9O1xuICAgIFxuICAgIHNjb3JlICs9IHR5cGVTY29yZXNbZXZlbnQuZXZlbnRUeXBlXSB8fCAwLjE7XG5cbiAgICAvLyBTZXZlcml0eSBtdWx0aXBsaWVyXG4gICAgY29uc3Qgc2V2ZXJpdHlNdWx0aXBsaWVycyA9IHtcbiAgICAgICdjcml0aWNhbCc6IDEuMCxcbiAgICAgICdoaWdoJzogMC44LFxuICAgICAgJ21lZGl1bSc6IDAuNixcbiAgICAgICdsb3cnOiAwLjQsXG4gICAgICAnaW5mbyc6IDAuMlxuICAgIH07XG4gICAgXG4gICAgc2NvcmUgKj0gc2V2ZXJpdHlNdWx0aXBsaWVyc1tldmVudC5zZXZlcml0eV0gfHwgMC41O1xuXG4gICAgLy8gRmFpbGVkIGFjdGlvbiBwZW5hbHR5XG4gICAgaWYgKCFldmVudC5zdWNjZXNzKSB7XG4gICAgICBzY29yZSArPSAwLjM7XG4gICAgfVxuXG4gICAgLy8gVGltZS1iYXNlZCBmYWN0b3JzIChoaWdoZXIgcmlzayBmb3Igb2ZmLWhvdXJzKVxuICAgIGlmIChldmVudC50aW1lc3RhbXApIHtcbiAgICAgIGNvbnN0IGhvdXIgPSBldmVudC50aW1lc3RhbXAuZ2V0SG91cnMoKTtcbiAgICAgIGlmIChob3VyIDwgNiB8fCBob3VyID4gMjIpIHtcbiAgICAgICAgc2NvcmUgKz0gMC4yOyAvLyBPZmYtaG91cnMgYWN0aXZpdHlcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFbnN1cmUgc2NvcmUgaXMgYmV0d2VlbiAwIGFuZCAxXG4gICAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KHNjb3JlLCAwKSwgMSk7XG4gIH1cblxuICAvKipcbiAgICogR2VuZXJhdGUgdGFncyBmb3IgYW4gZXZlbnRcbiAgICovXG4gIHByaXZhdGUgZ2VuZXJhdGVUYWdzKGV2ZW50OiBFbmhhbmNlZEF1ZGl0RXZlbnQpOiBzdHJpbmdbXSB7XG4gICAgY29uc3QgdGFnczogc3RyaW5nW10gPSBbXTtcblxuICAgIC8vIEFkZCBzZXZlcml0eSB0YWdcbiAgICB0YWdzLnB1c2goYHNldmVyaXR5OiR7ZXZlbnQuc2V2ZXJpdHl9YCk7XG4gICAgXG4gICAgLy8gQWRkIHN1Y2Nlc3MvZmFpbHVyZSB0YWdcbiAgICB0YWdzLnB1c2goZXZlbnQuc3VjY2VzcyA/ICdzdWNjZXNzJyA6ICdmYWlsdXJlJyk7XG4gICAgXG4gICAgLy8gQWRkIHRpbWUtYmFzZWQgdGFnc1xuICAgIGlmIChldmVudC50aW1lc3RhbXApIHtcbiAgICAgIGNvbnN0IGhvdXIgPSBldmVudC50aW1lc3RhbXAuZ2V0SG91cnMoKTtcbiAgICAgIGlmIChob3VyIDwgNiB8fCBob3VyID4gMjIpIHtcbiAgICAgICAgdGFncy5wdXNoKCdvZmYtaG91cnMnKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgZGF5ID0gZXZlbnQudGltZXN0YW1wLmdldERheSgpO1xuICAgICAgaWYgKGRheSA9PT0gMCB8fCBkYXkgPT09IDYpIHtcbiAgICAgICAgdGFncy5wdXNoKCd3ZWVrZW5kJyk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIEFkZCBldmVudC1zcGVjaWZpYyB0YWdzXG4gICAgaWYgKGV2ZW50LmV2ZW50VHlwZSA9PT0gJ2F1dGgnKSB7XG4gICAgICBpZiAoZXZlbnQuYWN0aW9uLmluY2x1ZGVzKCdsb2dpbicpKSB7XG4gICAgICAgIHRhZ3MucHVzaCgnbG9naW4nKTtcbiAgICAgIH1cbiAgICAgIGlmIChldmVudC5hY3Rpb24uaW5jbHVkZXMoJzJmYScpKSB7XG4gICAgICAgIHRhZ3MucHVzaCgnMmZhJyk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGlmIChldmVudC5ldmVudFR5cGUgPT09ICdzZWN1cml0eV92aW9sYXRpb24nKSB7XG4gICAgICB0YWdzLnB1c2goJ3NlY3VyaXR5LWFsZXJ0Jyk7XG4gICAgfVxuICAgIFxuICAgIC8vIEFkZCByaXNrIGxldmVsIHRhZ3NcbiAgICBjb25zdCByaXNrU2NvcmUgPSBldmVudC5yaXNrU2NvcmUgfHwgdGhpcy5jYWxjdWxhdGVSaXNrU2NvcmUoZXZlbnQpO1xuICAgIGlmIChyaXNrU2NvcmUgPiB0aGlzLnJpc2tUaHJlc2hvbGRzLmhpZ2gpIHtcbiAgICAgIHRhZ3MucHVzaCgnaGlnaC1yaXNrJyk7XG4gICAgfSBlbHNlIGlmIChyaXNrU2NvcmUgPiB0aGlzLnJpc2tUaHJlc2hvbGRzLm1lZGl1bSkge1xuICAgICAgdGFncy5wdXNoKCdtZWRpdW0tcmlzaycpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0YWdzLnB1c2goJ2xvdy1yaXNrJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhZ3M7XG4gIH1cblxuICAvKipcbiAgICogR2VuZXJhdGUgdW5pcXVlIGV2ZW50IElEXG4gICAqL1xuICBwcml2YXRlIGdlbmVyYXRlRXZlbnRJZCgpOiBzdHJpbmcge1xuICAgIHJldHVybiBgYXVkaXRfJHtEYXRlLm5vdygpfV8ke01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnN1YnN0cigyLCA5KX1gO1xuICB9XG5cbiAgcHJpdmF0ZSBtYXBFdmVudFR5cGVUb0NhdGVnb3J5KGV2ZW50VHlwZTogRW5oYW5jZWRBdWRpdEV2ZW50WydldmVudFR5cGUnXSk6IEF1ZGl0TG9nRW50cnlbJ2NhdGVnb3J5J10ge1xuICAgIHN3aXRjaCAoZXZlbnRUeXBlKSB7XG4gICAgICBjYXNlICdkYXRhX2FjY2Vzcyc6XG4gICAgICBjYXNlICdkYXRhX21vZGlmaWNhdGlvbic6XG4gICAgICAgIHJldHVybiAnZGF0YSc7XG4gICAgICBjYXNlICdzZWN1cml0eV92aW9sYXRpb24nOlxuICAgICAgICByZXR1cm4gJ3NlY3VyaXR5JztcbiAgICAgIGNhc2UgJ3N5c3RlbV9ldmVudCc6XG4gICAgICAgIHJldHVybiAnc3lzdGVtJztcbiAgICAgIGNhc2UgJ3VzZXJfYWN0aW9uJzpcbiAgICAgICAgcmV0dXJuICd1c2VyJztcbiAgICAgIGNhc2UgJ2F1dGgnOlxuICAgICAgICByZXR1cm4gJ2F1dGgnO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuICdzeXN0ZW0nO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBUcmlnZ2VyIHNlY3VyaXR5IGFsZXJ0IGZvciBoaWdoLXJpc2sgZXZlbnRzXG4gICAqL1xuICBwcml2YXRlIHRyaWdnZXJTZWN1cml0eUFsZXJ0KGV2ZW50OiBFbmhhbmNlZEF1ZGl0RXZlbnQpOiB2b2lkIHtcbiAgICAvLyBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHRoaXMgd291bGQgc2VuZCBub3RpZmljYXRpb25zXG4gICAgLy8gdG8gc2VjdXJpdHkgdGVhbSwgdHJpZ2dlciBhdXRvbWF0ZWQgcmVzcG9uc2VzLCBldGMuXG4gICAgY29uc29sZS53YXJuKCfwn5qoIEhpZ2gtcmlzayBzZWN1cml0eSBldmVudCBkZXRlY3RlZDonLCB7XG4gICAgICBpZDogZXZlbnQuaWQsXG4gICAgICBhY3Rpb246IGV2ZW50LmFjdGlvbixcbiAgICAgIHVzZXJJZDogZXZlbnQudXNlcklkLFxuICAgICAgaXBBZGRyZXNzOiBldmVudC5pcEFkZHJlc3MsXG4gICAgICByaXNrU2NvcmU6IGV2ZW50LnJpc2tTY29yZSxcbiAgICAgIHRpbWVzdGFtcDogZXZlbnQudGltZXN0YW1wXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogRXhwb3J0IGF1ZGl0IGRhdGEgZm9yIGNvbXBsaWFuY2VcbiAgICovXG4gIGV4cG9ydEF1ZGl0RGF0YShmaWx0ZXJzPzogQXVkaXRTZWFyY2hGaWx0ZXJzLCBmb3JtYXQ6ICdqc29uJyB8ICdjc3YnID0gJ2pzb24nKTogc3RyaW5nIHtcbiAgICBjb25zdCB7IGV2ZW50cyB9ID0gdGhpcy5zZWFyY2hFdmVudHMoZmlsdGVycyB8fCB7fSwgMTAwMDAsIDApO1xuICAgIFxuICAgIGlmIChmb3JtYXQgPT09ICdjc3YnKSB7XG4gICAgICBjb25zdCBoZWFkZXJzID0gW1xuICAgICAgICAnSUQnLCAnVGltZXN0YW1wJywgJ0V2ZW50IFR5cGUnLCAnU2V2ZXJpdHknLCAnVXNlciBJRCcsICdVc2VyIEVtYWlsJyxcbiAgICAgICAgJ0lQIEFkZHJlc3MnLCAnQWN0aW9uJywgJ1Jlc291cmNlJywgJ1N1Y2Nlc3MnLCAnUmlzayBTY29yZScsICdUYWdzJ1xuICAgICAgXTtcbiAgICAgIFxuICAgICAgY29uc3QgY3N2Um93cyA9IGV2ZW50cy5tYXAoZXZlbnQgPT4gW1xuICAgICAgICBldmVudC5pZCB8fCAnJyxcbiAgICAgICAgZXZlbnQudGltZXN0YW1wPy50b0lTT1N0cmluZygpIHx8ICcnLFxuICAgICAgICBldmVudC5ldmVudFR5cGUsXG4gICAgICAgIGV2ZW50LnNldmVyaXR5LFxuICAgICAgICBldmVudC51c2VySWQgfHwgJycsXG4gICAgICAgIGV2ZW50LnVzZXJFbWFpbCB8fCAnJyxcbiAgICAgICAgZXZlbnQuaXBBZGRyZXNzIHx8ICcnLFxuICAgICAgICBldmVudC5hY3Rpb24sXG4gICAgICAgIGV2ZW50LnJlc291cmNlLFxuICAgICAgICBldmVudC5zdWNjZXNzLnRvU3RyaW5nKCksXG4gICAgICAgIGV2ZW50LnJpc2tTY29yZT8udG9TdHJpbmcoKSB8fCAnJyxcbiAgICAgICAgZXZlbnQudGFncz8uam9pbignOycpIHx8ICcnXG4gICAgICBdKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIFtoZWFkZXJzLCAuLi5jc3ZSb3dzXS5tYXAocm93ID0+IFxuICAgICAgICByb3cubWFwKGNlbGwgPT4gYFwiJHtjZWxsLnJlcGxhY2UoL1wiL2csICdcIlwiJyl9XCJgKS5qb2luKCcsJylcbiAgICAgICkuam9pbignXFxuJyk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShldmVudHMsIG51bGwsIDIpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBldmVudHMgZm9yIGEgc3BlY2lmaWMgdXNlclxuICAgKi9cbiAgZ2V0VXNlckFjdGl2aXR5KHVzZXJJZDogc3RyaW5nLCBsaW1pdCA9IDUwKTogRW5oYW5jZWRBdWRpdEV2ZW50W10ge1xuICAgIHJldHVybiB0aGlzLmV2ZW50c1xuICAgICAgLmZpbHRlcihldmVudCA9PiBldmVudC51c2VySWQgPT09IHVzZXJJZClcbiAgICAgIC5zbGljZSgwLCBsaW1pdCk7XG4gIH1cblxuICAvKipcbiAgICogR2V0IHN1c3BpY2lvdXMgYWN0aXZpdHkgcGF0dGVybnNcbiAgICovXG4gIGdldFN1c3BpY2lvdXNBY3Rpdml0eSgpOiB7XG4gICAgbXVsdGlwbGVGYWlsZWRMb2dpbnM6IHsgdXNlcklkOiBzdHJpbmc7IGNvdW50OiBudW1iZXI7IGxhc3RBdHRlbXB0OiBEYXRlIH1bXTtcbiAgICB1bnVzdWFsTG9jYXRpb25zOiB7IHVzZXJJZDogc3RyaW5nOyBpcEFkZHJlc3M6IHN0cmluZzsgbG9jYXRpb24/OiBzdHJpbmcgfVtdO1xuICAgIG9mZkhvdXJzQWN0aXZpdHk6IEVuaGFuY2VkQXVkaXRFdmVudFtdO1xuICAgIGhpZ2hSaXNrRXZlbnRzOiBFbmhhbmNlZEF1ZGl0RXZlbnRbXTtcbiAgfSB7XG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICBjb25zdCBsYXN0MjRIb3VycyA9IG5ldyBEYXRlKG5vdy5nZXRUaW1lKCkgLSAyNCAqIDYwICogNjAgKiAxMDAwKTtcbiAgICBcbiAgICBjb25zdCByZWNlbnRFdmVudHMgPSB0aGlzLmV2ZW50cy5maWx0ZXIoZSA9PiBcbiAgICAgIGUudGltZXN0YW1wICYmIGUudGltZXN0YW1wID49IGxhc3QyNEhvdXJzXG4gICAgKTtcbiAgICBcbiAgICAvLyBNdWx0aXBsZSBmYWlsZWQgbG9naW5zXG4gICAgY29uc3QgZmFpbGVkTG9naW5zOiBSZWNvcmQ8c3RyaW5nLCB7IGNvdW50OiBudW1iZXI7IGxhc3RBdHRlbXB0OiBEYXRlIH0+ID0ge307XG4gICAgcmVjZW50RXZlbnRzXG4gICAgICAuZmlsdGVyKGUgPT4gZS5ldmVudFR5cGUgPT09ICdhdXRoJyAmJiAhZS5zdWNjZXNzICYmIGUudXNlcklkKVxuICAgICAgLmZvckVhY2goZXZlbnQgPT4ge1xuICAgICAgICBjb25zdCB1c2VySWQgPSBldmVudC51c2VySWQhO1xuICAgICAgICBpZiAoIWZhaWxlZExvZ2luc1t1c2VySWRdKSB7XG4gICAgICAgICAgZmFpbGVkTG9naW5zW3VzZXJJZF0gPSB7IGNvdW50OiAwLCBsYXN0QXR0ZW1wdDogZXZlbnQudGltZXN0YW1wISB9O1xuICAgICAgICB9XG4gICAgICAgIGZhaWxlZExvZ2luc1t1c2VySWRdLmNvdW50Kys7XG4gICAgICAgIGlmIChldmVudC50aW1lc3RhbXAhID4gZmFpbGVkTG9naW5zW3VzZXJJZF0ubGFzdEF0dGVtcHQpIHtcbiAgICAgICAgICBmYWlsZWRMb2dpbnNbdXNlcklkXS5sYXN0QXR0ZW1wdCA9IGV2ZW50LnRpbWVzdGFtcCE7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIFxuICAgIGNvbnN0IG11bHRpcGxlRmFpbGVkTG9naW5zID0gT2JqZWN0LmVudHJpZXMoZmFpbGVkTG9naW5zKVxuICAgICAgLmZpbHRlcigoW18sIGRhdGFdKSA9PiBkYXRhLmNvdW50ID49IDMpXG4gICAgICAubWFwKChbdXNlcklkLCBkYXRhXSkgPT4gKHsgdXNlcklkLCAuLi5kYXRhIH0pKTtcbiAgICBcbiAgICAvLyBPZmYtaG91cnMgYWN0aXZpdHlcbiAgICBjb25zdCBvZmZIb3Vyc0FjdGl2aXR5ID0gcmVjZW50RXZlbnRzLmZpbHRlcihldmVudCA9PiB7XG4gICAgICBpZiAoIWV2ZW50LnRpbWVzdGFtcCkgcmV0dXJuIGZhbHNlO1xuICAgICAgY29uc3QgaG91ciA9IGV2ZW50LnRpbWVzdGFtcC5nZXRIb3VycygpO1xuICAgICAgcmV0dXJuIGhvdXIgPCA2IHx8IGhvdXIgPiAyMjtcbiAgICB9KTtcbiAgICBcbiAgICAvLyBIaWdoLXJpc2sgZXZlbnRzXG4gICAgY29uc3QgaGlnaFJpc2tFdmVudHMgPSByZWNlbnRFdmVudHMuZmlsdGVyKGV2ZW50ID0+IFxuICAgICAgZXZlbnQucmlza1Njb3JlICYmIGV2ZW50LnJpc2tTY29yZSA+IHRoaXMucmlza1RocmVzaG9sZHMuaGlnaFxuICAgICk7XG4gICAgXG4gICAgcmV0dXJuIHtcbiAgICAgIG11bHRpcGxlRmFpbGVkTG9naW5zLFxuICAgICAgdW51c3VhbExvY2F0aW9uczogW10sIC8vIFdvdWxkIG5lZWQgZ2VvbG9jYXRpb24gc2VydmljZVxuICAgICAgb2ZmSG91cnNBY3Rpdml0eSxcbiAgICAgIGhpZ2hSaXNrRXZlbnRzXG4gICAgfTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZW5oYW5jZWRBdWRpdExvZ1NlcnZpY2UgPSBuZXcgRW5oYW5jZWRBdWRpdExvZ1NlcnZpY2UoKTtcbmV4cG9ydCBkZWZhdWx0IGVuaGFuY2VkQXVkaXRMb2dTZXJ2aWNlOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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