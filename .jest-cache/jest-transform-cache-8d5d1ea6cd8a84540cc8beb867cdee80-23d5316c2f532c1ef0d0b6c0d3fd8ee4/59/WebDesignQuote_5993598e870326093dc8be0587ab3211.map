{"version":3,"names":["_default","WebDesignQuote","cov_1nxqeg71gp","s","_react","default","memo","f","state","appState","dispatch","appDispatch","_AppContext","useAppContext","userRole","_useRoleAccess","useRoleAccess","questionnaireState","questionnaireDispatch","useReducer","_reducer","questionnaireReducer","initialState","saveMessage","setSaveMessage","useState","estimatedCost","setEstimatedCost","form","_reacthookform","useForm","resolver","_zod","zodResolver","_schema","requirementSchema","defaultValues","businessGoals","targetAudience","additionalRequirements","useEffect","cost","_utils","calculateEstimatedCost","answers","autoSave","sessionId","saveSessionToLocalStorage","b","setTimeout","interval","setInterval","clearInterval","urlParams","URLSearchParams","window","location","search","get","savedState","loadSessionFromLocalStorage","type","ACTION_TYPES","LOAD_STATE","payload","_errorHandler","handleSuccess","handleKeyPress","e","ctrlKey","metaKey","key","preventDefault","handleSave","shiftKey","handleRedo","handleUndo","target","tagName","handlePrevStep","handleNextStep","handleToggleQuickMode","addEventListener","removeEventListener","currentStep","handleAnswer","useCallback","id","value","SAVE_PROGRESS","handleReset","confirm","quickMode","handleSaveRequirements","data","error","handleError","Error","String","canUndo","historyIndex","canRedo","history","length","_jsxruntime","jsxs","className","jsx","_tabs","Tabs","defaultValue","TabsList","TabsTrigger","_lucidereact","FileText","Calculator","TabsContent","_card","Card","CardHeader","CardTitle","CardContent","onSubmit","handleSubmit","_textarea","Textarea","register","placeholder","rows","formState","errors","message","_button","Button","_QuestionRenderer","QuestionRenderer","onAnswer","_NavigationControls","NavigationControls","onPrevStep","onNextStep","onSave","onReset","onToggleQuickMode","onUndo","onRedo","isComplete","displayName"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\WebDesignQuote.tsx"],"sourcesContent":["import React, { useState, useEffect, useReducer, useCallback } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { zodResolver } from \"@hookform/resolvers/zod\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\nimport { FileText, Calculator } from 'lucide-react'\nimport { useAppContext } from \"@/context/AppContext\"\nimport { useRoleAccess } from \"@/hooks/useRoleAccess\"\nimport { handleError, handleSuccess } from \"@/utils/errorHandler\"\n\n// Import extracted modules\nimport { QuestionnaireState, QuestionnaireAction } from './WebDesignQuote/types'\nimport { questionnaireReducer, initialState, ACTION_TYPES } from './WebDesignQuote/reducer'\nimport { requirementSchema, RequirementFormData } from './WebDesignQuote/schema'\nimport { calculateEstimatedCost, saveSessionToLocalStorage, loadSessionFromLocalStorage } from './WebDesignQuote/utils'\nimport { QuestionRenderer } from './WebDesignQuote/QuestionRenderer'\nimport { NavigationControls } from './WebDesignQuote/NavigationControls'\n\nconst WebDesignQuote = React.memo(() => {\n  const { state: appState, dispatch: appDispatch } = useAppContext()\n  const { userRole } = useRoleAccess('user')\n  \n  // Local state for the questionnaire\n  const [questionnaireState, questionnaireDispatch] = useReducer<React.Reducer<QuestionnaireState, QuestionnaireAction>>(questionnaireReducer, initialState)\n  const [saveMessage, setSaveMessage] = useState<string>('')  \n  const [estimatedCost, setEstimatedCost] = useState<number>(0)\n  \n  // Form for requirements collection\n  const form = useForm<RequirementFormData>({\n    resolver: zodResolver(requirementSchema),\n    defaultValues: {\n      businessGoals: [],\n      targetAudience: '',\n      additionalRequirements: '',\n    },\n  })\n  \n  // Calculate estimated cost based on answers\n  useEffect(() => {\n    const cost = calculateEstimatedCost(questionnaireState.answers)\n    setEstimatedCost(cost)\n  }, [questionnaireState.answers])\n  \n  // Auto-save functionality\n  useEffect(() => {\n    const autoSave = () => {\n      const sessionId = saveSessionToLocalStorage(questionnaireState)\n      if (sessionId) {\n        setSaveMessage('Progress saved automatically')\n        setTimeout(() => setSaveMessage(''), 3000)\n      }\n    }\n    \n    const interval = setInterval(autoSave, 30000) // Auto-save every 30 seconds\n    return () => clearInterval(interval)\n  }, [questionnaireState])\n  \n  // Load saved session on mount\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search)\n    const sessionId = urlParams.get('session')\n    \n    if (sessionId) {\n      const savedState = loadSessionFromLocalStorage(sessionId)\n      if (savedState) {\n        questionnaireDispatch({ type: ACTION_TYPES.LOAD_STATE, payload: savedState })\n        handleSuccess('Session restored successfully')\n      }\n    }\n  }, [])\n  \n  // Keyboard navigation\n  useEffect(() => {\n    const handleKeyPress = (e: KeyboardEvent) => {\n      if (e.ctrlKey || e.metaKey) {\n        switch (e.key) {\n          case 's':\n            e.preventDefault()\n            handleSave()\n            break\n          case 'z':\n            e.preventDefault()\n            if (e.shiftKey) {\n              handleRedo()\n            } else {\n              handleUndo()\n            }\n            break\n          case 'y':\n            e.preventDefault()\n            handleRedo()\n            break\n        }\n      } else {\n        switch (e.key) {\n          case 'ArrowLeft':\n            if (!e.target || (e.target as HTMLElement).tagName !== 'INPUT') {\n              handlePrevStep()\n            }\n            break\n          case 'ArrowRight':\n          case 'Enter':\n            if (!e.target || (e.target as HTMLElement).tagName !== 'INPUT') {\n              handleNextStep()\n            }\n            break\n          case 'q':\n          case 'Q':\n            if (!e.target || (e.target as HTMLElement).tagName !== 'INPUT') {\n              handleToggleQuickMode()\n            }\n            break\n        }\n      }\n    }\n    \n    window.addEventListener('keydown', handleKeyPress)\n    return () => window.removeEventListener('keydown', handleKeyPress)\n  }, [questionnaireState.currentStep])\n  \n  // Event handlers\n  const handleAnswer = useCallback((id: string, value: any) => {\n    questionnaireDispatch({ type: 'SET_ANSWER', payload: { id, value } })\n  }, [])\n  \n  const handleNextStep = useCallback(() => {\n    questionnaireDispatch({ type: 'NEXT_STEP' })\n  }, [])\n  \n  const handlePrevStep = useCallback(() => {\n    questionnaireDispatch({ type: 'PREV_STEP' })\n  }, [])\n  \n  const handleSave = useCallback(() => {\n    questionnaireDispatch({ type: ACTION_TYPES.SAVE_PROGRESS })\n    setSaveMessage('Progress saved successfully!')\n    setTimeout(() => setSaveMessage(''), 3000)\n  }, [])\n  \n  const handleReset = useCallback(() => {\n    if (confirm('Are you sure you want to reset all progress? This cannot be undone.')) {\n      questionnaireDispatch({ type: 'RESET' })\n      handleSuccess('Form reset successfully')\n    }\n  }, [])\n  \n  const handleUndo = useCallback(() => {\n    questionnaireDispatch({ type: 'UNDO' })\n  }, [])\n  \n  const handleRedo = useCallback(() => {\n    questionnaireDispatch({ type: 'REDO' })\n  }, [])\n  \n  const handleToggleQuickMode = useCallback(() => {\n    questionnaireDispatch({ type: 'SET_QUICK_MODE', payload: !questionnaireState.quickMode })\n  }, [questionnaireState.quickMode])\n  \n  const handleSaveRequirements = async (data: RequirementFormData) => {\n    try {\n      // Save requirements logic here\n      handleSuccess('Requirements saved successfully!')\n    } catch (error) {\n      handleError(error instanceof Error ? error : new Error(String(error)), 'Failed to save requirements')\n    }\n  }\n  \n  const canUndo = questionnaireState.historyIndex > 0\n  const canRedo = questionnaireState.historyIndex < questionnaireState.history.length - 1\n  \n  return (\n    <div className=\"container mx-auto p-6 max-w-4xl\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n          Web Design Quote Generator\n        </h1>\n        <p className=\"text-gray-600\">\n          Get an instant quote for your web design project by answering a few questions.\n        </p>\n      </div>\n      \n      {saveMessage && (\n        <div className=\"mb-4 p-3 bg-green-50 border border-green-200 rounded-lg text-green-700\">\n          {saveMessage}\n        </div>\n      )}\n      \n      <Tabs defaultValue=\"requirements\" className=\"space-y-6\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"requirements\" className=\"flex items-center space-x-2\">\n            <FileText className=\"h-4 w-4\" />\n            <span>Requirements</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"quote\" className=\"flex items-center space-x-2\">\n            <Calculator className=\"h-4 w-4\" />\n            <span>Get Quote</span>\n          </TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"requirements\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Project Requirements</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={form.handleSubmit(handleSaveRequirements)} className=\"space-y-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Business Goals *\n                  </label>\n                  <Textarea\n                    {...form.register('businessGoals')}\n                    placeholder=\"Describe your primary business goals for this website...\"\n                    rows={4}\n                  />\n                  {form.formState.errors.businessGoals && (\n                    <p className=\"text-red-500 text-sm mt-1\">\n                      {form.formState.errors.businessGoals.message}\n                    </p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Target Audience *\n                  </label>\n                  <Textarea\n                    {...form.register('targetAudience')}\n                    placeholder=\"Describe your target audience and ideal customers...\"\n                    rows={4}\n                  />\n                  {form.formState.errors.targetAudience && (\n                    <p className=\"text-red-500 text-sm mt-1\">\n                      {form.formState.errors.targetAudience.message}\n                    </p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Additional Requirements\n                  </label>\n                  <Textarea\n                    {...form.register('additionalRequirements')}\n                    placeholder=\"Any specific features, integrations, or special requirements...\"\n                    rows={3}\n                  />\n                </div>\n                \n                <Button type=\"submit\" className=\"w-full\">\n                  Save Requirements\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"quote\" className=\"space-y-6\">\n          <div className=\"grid gap-6\">\n            <QuestionRenderer\n              currentStep={questionnaireState.currentStep}\n              answers={questionnaireState.answers}\n              onAnswer={handleAnswer}\n              estimatedCost={estimatedCost}\n            />\n            \n            <NavigationControls\n              currentStep={questionnaireState.currentStep}\n              answers={questionnaireState.answers}\n              onPrevStep={handlePrevStep}\n              onNextStep={handleNextStep}\n              onSave={handleSave}\n              onReset={handleReset}\n              quickMode={questionnaireState.quickMode}\n              onToggleQuickMode={handleToggleQuickMode}\n              canUndo={canUndo}\n              canRedo={canRedo}\n              onUndo={handleUndo}\n              onRedo={handleRedo}\n              isComplete={questionnaireState.isComplete}\n            />\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  )\n})\n\nWebDesignQuote.displayName = 'WebDesignQuote'\n\nexport default WebDesignQuote\n"],"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","ignoreList":[]}