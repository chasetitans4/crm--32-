{"version":3,"names":["_default","ProductivityAdmin","cov_86d4d662p","f","state","s","_AppContext","useAppContext","clients","tasks","events","notificationSettings","setNotificationSettings","_react","useState","taskReminders","meetingAlerts","meetingReminderTime","overdueTaskAlerts","dailySummary","weeklyReport","soundEnabled","focusModeSettings","setFocusModeSettings","defaultDuration","autoBreakReminders","breakDuration","blockNotifications","blockSocialMedia","allowedApps","teamSettings","setTeamSettings","showLeaderboard","anonymizeRankings","enableChallenges","showProductivityMetrics","managerInsights","customRules","setCustomRules","id","name","condition","action","enabled","settings","setSettings","notifications","calendarAlerts","aiSuggestions","adminAlerts","advanceNoticeMinutes","productivity","dailyGoals","calls","emails","meetings","proposals","workHours","start","end","workDays","focusMode","duration","motivation","rewardsEnabled","celebrateAchievements","activeTab","setActiveTab","toggleNotificationSetting","setting","toggleFocusModeSetting","b","toggleTeamSetting","toggleCustomRule","map","rule","handleSettingsChange","section","subsection","value","prev","handleNestedSettingsChange","key","addCustomRule","newId","length","Math","max","deleteCustomRule","filter","saveSettings","console","log","alert","getProductivityStats","today","Date","toISOString","split","total","completed","t","status","overdue","due_date","dueToday","e","date","upcoming","active","c","needsFollowUp","lastContact","now","daysSinceContact","floor","getTime","stats","saveAllSettings","ToggleSwitch","onChange","_jsxruntime","jsxs","onClick","className","jsx","_lucidereact","Save","size","Bell","Clock","Users","Sliders","Number","parseInt","target","app","index","_","i","X","newApp","prompt","includes","Plus","type","r","Trash2","placeholder","AlertTriangle"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ProductivityAdmin.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState } from \"react\"\nimport { Bell, Clock, Users, Sliders, Save, X, Plus, Trash2, AlertTriangle } from \"lucide-react\"\nimport { useAppContext } from \"../context/AppContext\"\n// import aiAssistant, { type AIAssistantConfig } from \"../services/aiAssistant\"\n\ninterface ProductivitySettings {\n  notifications: {\n    enabled: boolean\n    taskReminders: boolean\n    calendarAlerts: boolean\n    aiSuggestions: boolean\n    adminAlerts: boolean\n    soundEnabled: boolean\n    advanceNoticeMinutes: number\n  }\n  // ai: AIAssistantConfig\n  productivity: {\n    dailyGoals: {\n      calls: number\n      emails: number\n      meetings: number\n      proposals: number\n    }\n    workHours: {\n      start: string\n      end: string\n      workDays: string[]\n    }\n    focusMode: {\n      enabled: boolean\n      duration: number\n      blockNotifications: boolean\n    }\n  }\n  motivation: {\n    showLeaderboard: boolean\n    enableChallenges: boolean\n    rewardsEnabled: boolean\n    celebrateAchievements: boolean\n  }\n}\n\nconst ProductivityAdmin: React.FC = () => {\n  const { state } = useAppContext()\n  const { clients, tasks, events } = state\n\n  // State for various settings\n  const [notificationSettings, setNotificationSettings] = useState({\n    taskReminders: true,\n    meetingAlerts: true,\n    meetingReminderTime: 30, // minutes\n    overdueTaskAlerts: true,\n    dailySummary: true,\n    weeklyReport: true,\n    soundEnabled: true,\n  })\n\n  const [focusModeSettings, setFocusModeSettings] = useState({\n    defaultDuration: 25, // minutes\n    autoBreakReminders: true,\n    breakDuration: 5, // minutes\n    blockNotifications: true,\n    blockSocialMedia: true,\n    allowedApps: [\"email\", \"crm\", \"documents\"],\n  })\n\n  const [teamSettings, setTeamSettings] = useState({\n    showLeaderboard: true,\n    anonymizeRankings: false,\n    enableChallenges: true,\n    showProductivityMetrics: true,\n    managerInsights: true,\n  })\n\n  const [customRules, setCustomRules] = useState([\n    { id: 1, name: \"Morning Check-in\", condition: \"Time is 9:00 AM\", action: \"Show daily task summary\", enabled: true },\n    { id: 2, name: \"End of Day\", condition: \"Time is 5:00 PM\", action: \"Prompt for daily report\", enabled: true },\n    {\n      id: 3,\n      name: \"Inactive Alert\",\n      condition: \"No activity for 30 minutes\",\n      action: \"Send reminder notification\",\n      enabled: false,\n    },\n  ])\n\n  // Initial settings\n  const [settings, setSettings] = useState<ProductivitySettings>({\n    notifications: {\n      enabled: true,\n      taskReminders: true,\n      calendarAlerts: true,\n      aiSuggestions: true,\n      adminAlerts: true,\n      soundEnabled: true,\n      advanceNoticeMinutes: 45,\n    },\n    // ai: aiAssistant.getConfig(),\n    productivity: {\n      dailyGoals: {\n        calls: 10,\n        emails: 15,\n        meetings: 3,\n        proposals: 2,\n      },\n      workHours: {\n        start: \"09:00\",\n        end: \"17:00\",\n        workDays: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\n      },\n      focusMode: {\n        enabled: true,\n        duration: 25,\n        blockNotifications: true,\n      },\n    },\n    motivation: {\n      showLeaderboard: true,\n      enableChallenges: true,\n      rewardsEnabled: true,\n      celebrateAchievements: true,\n    },\n  })\n\n  // Active tab state\n  const [activeTab, setActiveTab] = useState(\"notifications\")\n\n  // Toggle handlers\n  const toggleNotificationSetting = (setting: keyof typeof notificationSettings) => {\n    setNotificationSettings({\n      ...notificationSettings,\n      [setting]: !notificationSettings[setting as keyof typeof notificationSettings],\n    })\n  }\n\n  const toggleFocusModeSetting = (setting: keyof typeof focusModeSettings) => {\n    setFocusModeSettings({\n      ...focusModeSettings,\n      [setting]:\n        typeof focusModeSettings[setting] === \"boolean\" ? !focusModeSettings[setting] : focusModeSettings[setting],\n    })\n  }\n\n  const toggleTeamSetting = (setting: keyof typeof teamSettings) => {\n    setTeamSettings({\n      ...teamSettings,\n      [setting]: !teamSettings[setting],\n    })\n  }\n\n  const toggleCustomRule = (id: number) => {\n    setCustomRules(customRules.map((rule) => (rule.id === id ? { ...rule, enabled: !rule.enabled } : rule)))\n  }\n\n  // Handle settings change\n  const handleSettingsChange = (section: keyof ProductivitySettings, subsection: string, value: any) => {\n    setSettings((prev) => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [subsection]: value,\n      },\n    }))\n  }\n\n  // Handle nested settings change\n  const handleNestedSettingsChange = (section: keyof ProductivitySettings, subsection: string, key: string, value: any) => {\n    setSettings((prev) => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [subsection]: {\n          ...(prev[section] as any)[subsection],\n          [key]: value,\n        },\n      },\n    }))\n  }\n\n  // Add new custom rule\n  const addCustomRule = () => {\n    const newId = customRules.length > 0 ? Math.max(...customRules.map((rule) => rule.id)) + 1 : 1\n\n    setCustomRules([\n      ...customRules,\n      {\n        id: newId,\n        name: \"New Rule\",\n        condition: \"Define condition...\",\n        action: \"Define action...\",\n        enabled: true,\n      },\n    ])\n  }\n\n  // Delete custom rule\n  const deleteCustomRule = (id: number) => {\n    setCustomRules(customRules.filter((rule) => rule.id !== id))\n  }\n\n  // Save settings\n  const saveSettings = () => {\n    // Update AI Assistant config\n    // aiAssistant.updateConfig(settings.ai)\n\n    // In a real implementation, you would save these settings to your backend\n    console.log(\"Saving settings:\", settings)\n\n    // Show success message\n    alert(\"Settings saved successfully!\")\n  }\n\n  // Get productivity stats\n  const getProductivityStats = () => {\n    const today = new Date().toISOString().split(\"T\")[0]\n\n    return {\n      tasks: {\n        total: tasks.length,\n        completed: tasks.filter((t) => t.status === \"completed\").length,\n        overdue: tasks.filter((t) => t.status !== \"completed\" && t.due_date < today).length,\n        dueToday: tasks.filter((t) => t.status !== \"completed\" && t.due_date === today).length,\n      },\n      events: {\n        total: events.length,\n        today: events.filter((e) => e.date === today).length,\n        upcoming: events.filter((e) => e.date > today).length,\n      },\n      clients: {\n        total: clients.length,\n        active: clients.filter((c) => c.status === \"active\").length,\n        needsFollowUp: clients.filter((c) => {\n          if (!c.lastContact) return true; // No contact date means needs follow up\n          const lastContact = new Date(c.lastContact)\n          const now = new Date()\n          const daysSinceContact = Math.floor((now.getTime() - lastContact.getTime()) / (1000 * 60 * 60 * 24))\n          return daysSinceContact > 14\n        }).length,\n      },\n    }\n  }\n\n  const stats = getProductivityStats()\n\n  // Save all settings\n  const saveAllSettings = () => {\n    // In a real app, this would save to backend/API\n    alert(\"Settings saved successfully!\")\n  }\n\n  // Render toggle switch\n  const ToggleSwitch = ({ enabled, onChange }: { enabled: boolean; onChange: () => void }) => (\n    <button\n      onClick={onChange}\n      className={`relative inline-flex h-6 w-11 items-center rounded-full ${enabled ? \"bg-blue-600\" : \"bg-gray-200\"}`}\n    >\n      <span className=\"sr-only\">Toggle</span>\n      <span\n        className={`inline-block h-4 w-4 transform rounded-full bg-white transition ${enabled ? \"translate-x-6\" : \"translate-x-1\"}`}\n      />\n    </button>\n  )\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Productivity System Administration</h1>\n        <button\n          onClick={saveAllSettings}\n          className=\"flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\n        >\n          <Save size={16} />\n          Save All Settings\n        </button>\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n        {/* Tabs */}\n        <div className=\"flex border-b\">\n          <button\n            onClick={() => setActiveTab(\"notifications\")}\n            className={`px-4 py-3 text-sm font-medium flex items-center gap-2 ${\n              activeTab === \"notifications\"\n                ? \"border-b-2 border-blue-600 text-blue-600\"\n                : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            <Bell size={16} />\n            Notifications\n          </button>\n          <button\n            onClick={() => setActiveTab(\"focus\")}\n            className={`px-4 py-3 text-sm font-medium flex items-center gap-2 ${\n              activeTab === \"focus\" ? \"border-b-2 border-blue-600 text-blue-600\" : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            <Clock size={16} />\n            Focus Mode\n          </button>\n          <button\n            onClick={() => setActiveTab(\"team\")}\n            className={`px-4 py-3 text-sm font-medium flex items-center gap-2 ${\n              activeTab === \"team\" ? \"border-b-2 border-blue-600 text-blue-600\" : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            <Users size={16} />\n            Team Settings\n          </button>\n          <button\n            onClick={() => setActiveTab(\"rules\")}\n            className={`px-4 py-3 text-sm font-medium flex items-center gap-2 ${\n              activeTab === \"rules\" ? \"border-b-2 border-blue-600 text-blue-600\" : \"text-gray-500 hover:text-gray-700\"\n            }`}\n          >\n            <Sliders size={16} />\n            Custom Rules\n          </button>\n        </div>\n\n        {/* Tab Content */}\n        <div className=\"p-6\">\n          {/* Notifications Settings */}\n          {activeTab === \"notifications\" && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-lg font-medium\">Notification Settings</h2>\n              <p className=\"text-gray-500\">Configure how and when notifications are displayed to sales agents.</p>\n\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Task Reminders</h3>\n                    <p className=\"text-sm text-gray-500\">Notify agents about upcoming and overdue tasks</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={notificationSettings.taskReminders}\n                    onChange={() => toggleNotificationSetting(\"taskReminders\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Meeting Alerts</h3>\n                    <p className=\"text-sm text-gray-500\">Notify agents about upcoming meetings</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={notificationSettings.meetingAlerts}\n                    onChange={() => toggleNotificationSetting(\"meetingAlerts\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Meeting Reminder Time</h3>\n                    <p className=\"text-sm text-gray-500\">How many minutes before a meeting to show a reminder</p>\n                  </div>\n                  <select\n                    value={notificationSettings.meetingReminderTime}\n                    onChange={(e) =>\n                      setNotificationSettings({\n                        ...notificationSettings,\n                        meetingReminderTime: Number.parseInt(e.target.value),\n                      })\n                    }\n                    className=\"border rounded-md px-3 py-2\"\n                  >\n                    <option value={15}>15 minutes</option>\n                    <option value={30}>30 minutes</option>\n                    <option value={45}>45 minutes</option>\n                    <option value={60}>60 minutes</option>\n                  </select>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Overdue Task Alerts</h3>\n                    <p className=\"text-sm text-gray-500\">Show alerts for tasks that are past their due date</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={notificationSettings.overdueTaskAlerts}\n                    onChange={() => toggleNotificationSetting(\"overdueTaskAlerts\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Daily Summary</h3>\n                    <p className=\"text-sm text-gray-500\">Send a daily summary of tasks and meetings</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={notificationSettings.dailySummary}\n                    onChange={() => toggleNotificationSetting(\"dailySummary\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Weekly Report</h3>\n                    <p className=\"text-sm text-gray-500\">Send a weekly productivity report</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={notificationSettings.weeklyReport}\n                    onChange={() => toggleNotificationSetting(\"weeklyReport\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Sound Enabled</h3>\n                    <p className=\"text-sm text-gray-500\">Play sound with notifications</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={notificationSettings.soundEnabled}\n                    onChange={() => toggleNotificationSetting(\"soundEnabled\")}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Focus Mode Settings */}\n          {activeTab === \"focus\" && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-lg font-medium\">Focus Mode Settings</h2>\n              <p className=\"text-gray-500\">Configure how Focus Mode works to help sales agents concentrate.</p>\n\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Default Focus Duration</h3>\n                    <p className=\"text-sm text-gray-500\">Default length of focus sessions in minutes</p>\n                  </div>\n                  <select\n                    value={focusModeSettings.defaultDuration}\n                    onChange={(e) =>\n                      setFocusModeSettings({\n                        ...focusModeSettings,\n                        defaultDuration: Number.parseInt(e.target.value),\n                      })\n                    }\n                    className=\"border rounded-md px-3 py-2\"\n                  >\n                    <option value={15}>15 minutes</option>\n                    <option value={25}>25 minutes</option>\n                    <option value={30}>30 minutes</option>\n                    <option value={45}>45 minutes</option>\n                    <option value={60}>60 minutes</option>\n                  </select>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Auto Break Reminders</h3>\n                    <p className=\"text-sm text-gray-500\">Automatically suggest breaks after focus sessions</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={focusModeSettings.autoBreakReminders}\n                    onChange={() => toggleFocusModeSetting(\"autoBreakReminders\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Break Duration</h3>\n                    <p className=\"text-sm text-gray-500\">Default length of breaks in minutes</p>\n                  </div>\n                  <select\n                    value={focusModeSettings.breakDuration}\n                    onChange={(e) =>\n                      setFocusModeSettings({\n                        ...focusModeSettings,\n                        breakDuration: Number.parseInt(e.target.value),\n                      })\n                    }\n                    className=\"border rounded-md px-3 py-2\"\n                  >\n                    <option value={5}>5 minutes</option>\n                    <option value={10}>10 minutes</option>\n                    <option value={15}>15 minutes</option>\n                  </select>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Block Notifications</h3>\n                    <p className=\"text-sm text-gray-500\">Block all notifications during focus sessions</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={focusModeSettings.blockNotifications}\n                    onChange={() => toggleFocusModeSetting(\"blockNotifications\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Block Social Media</h3>\n                    <p className=\"text-sm text-gray-500\">Block access to social media during focus sessions</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={focusModeSettings.blockSocialMedia}\n                    onChange={() => toggleFocusModeSetting(\"blockSocialMedia\")}\n                  />\n                </div>\n\n                <div>\n                  <h3 className=\"font-medium mb-2\">Allowed Applications</h3>\n                  <p className=\"text-sm text-gray-500 mb-2\">Applications that remain accessible during focus mode</p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {focusModeSettings.allowedApps.map((app, index) => (\n                      <div key={index} className=\"bg-gray-100 px-3 py-1 rounded-full text-sm flex items-center\">\n                        {app}\n                        <button\n                          onClick={() =>\n                            setFocusModeSettings({\n                              ...focusModeSettings,\n                              allowedApps: focusModeSettings.allowedApps.filter((_, i) => i !== index),\n                            })\n                          }\n                          className=\"ml-2 text-gray-500 hover:text-gray-700\"\n                        >\n                          <X size={14} />\n                        </button>\n                      </div>\n                    ))}\n                    <button\n                      onClick={() => {\n                        const newApp = prompt(\"Enter application name:\")\n                        if (newApp && !focusModeSettings.allowedApps.includes(newApp)) {\n                          setFocusModeSettings({\n                            ...focusModeSettings,\n                            allowedApps: [...focusModeSettings.allowedApps, newApp],\n                          })\n                        }\n                      }}\n                      className=\"bg-blue-100 text-blue-600 px-3 py-1 rounded-full text-sm flex items-center\"\n                    >\n                      <Plus size={14} className=\"mr-1\" /> Add App\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Team Settings */}\n          {activeTab === \"team\" && (\n            <div className=\"space-y-6\">\n              <h2 className=\"text-lg font-medium\">Team Productivity Settings</h2>\n              <p className=\"text-gray-500\">Configure team-wide productivity features and gamification.</p>\n\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Show Leaderboard</h3>\n                    <p className=\"text-sm text-gray-500\">Display productivity leaderboard to motivate the team</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={teamSettings.showLeaderboard}\n                    onChange={() => toggleTeamSetting(\"showLeaderboard\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Anonymize Rankings</h3>\n                    <p className=\"text-sm text-gray-500\">Hide names on leaderboard to reduce competitive pressure</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={teamSettings.anonymizeRankings}\n                    onChange={() => toggleTeamSetting(\"anonymizeRankings\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Enable Challenges</h3>\n                    <p className=\"text-sm text-gray-500\">Create team challenges and goals to boost productivity</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={teamSettings.enableChallenges}\n                    onChange={() => toggleTeamSetting(\"enableChallenges\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Show Productivity Metrics</h3>\n                    <p className=\"text-sm text-gray-500\">Display individual productivity metrics to team members</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={teamSettings.showProductivityMetrics}\n                    onChange={() => toggleTeamSetting(\"showProductivityMetrics\")}\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <h3 className=\"font-medium\">Manager Insights</h3>\n                    <p className=\"text-sm text-gray-500\">Provide detailed productivity insights to managers</p>\n                  </div>\n                  <ToggleSwitch\n                    enabled={teamSettings.managerInsights}\n                    onChange={() => toggleTeamSetting(\"managerInsights\")}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Custom Rules */}\n          {activeTab === \"rules\" && (\n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-center\">\n                <h2 className=\"text-lg font-medium\">Custom Productivity Rules</h2>\n                <button\n                  onClick={addCustomRule}\n                  className=\"flex items-center gap-1 bg-blue-600 text-white px-3 py-1.5 rounded-lg text-sm hover:bg-blue-700\"\n                >\n                  <Plus size={14} />\n                  Add Rule\n                </button>\n              </div>\n              <p className=\"text-gray-500\">Create custom rules to automate productivity workflows.</p>\n\n              <div className=\"space-y-4\">\n                {customRules.map((rule) => (\n                  <div key={rule.id} className=\"border rounded-lg p-4 bg-gray-50\">\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <div>\n                        <input\n                          type=\"text\"\n                          value={rule.name}\n                          onChange={(e) =>\n                            setCustomRules(\n                              customRules.map((r) => (r.id === rule.id ? { ...r, name: e.target.value } : r)),\n                            )\n                          }\n                          className=\"font-medium bg-transparent border-b border-transparent hover:border-gray-300 focus:border-blue-500 focus:outline-none\"\n                        />\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        <ToggleSwitch enabled={rule.enabled} onChange={() => toggleCustomRule(rule.id)} />\n                        <button onClick={() => deleteCustomRule(rule.id)} className=\"text-gray-400 hover:text-red-500\">\n                          <Trash2 size={16} />\n                        </button>\n                      </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">When</label>\n                        <input\n                          type=\"text\"\n                          value={rule.condition}\n                          onChange={(e) =>\n                            setCustomRules(\n                              customRules.map((r) => (r.id === rule.id ? { ...r, condition: e.target.value } : r)),\n                            )\n                          }\n                          className=\"w-full border rounded-md px-3 py-2 text-sm\"\n                          placeholder=\"Define condition...\"\n                        />\n                      </div>\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Then</label>\n                        <input\n                          type=\"text\"\n                          value={rule.action}\n                          onChange={(e) =>\n                            setCustomRules(\n                              customRules.map((r) => (r.id === rule.id ? { ...r, action: e.target.value } : r)),\n                            )\n                          }\n                          className=\"w-full border rounded-md px-3 py-2 text-sm\"\n                          placeholder=\"Define action...\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                ))}\n\n                {customRules.length === 0 && (\n                  <div className=\"text-center py-8 text-gray-500\">\n                    <AlertTriangle className=\"h-12 w-12 mx-auto mb-3 text-gray-400\" />\n                    <p>No custom rules defined yet.</p>\n                    <p className=\"text-sm\">Click \"Add Rule\" to create your first automation rule.</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProductivityAdmin\n"],"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","ignoreList":[]}