{"version":3,"names":["cov_2bza9p17a4","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","KeyManager","cleanupOldKeys","generateMasterKey","getActiveKey","getKeyHealthStatus","keyManager","performAutoRotation","rotateKey","constructor","config","keyPrefix","metadataPrefix","rotationIntervalDays","maxKeyAge","backupCount","purpose","keyId","generateKeyId","key","generateSecureKey","metadata","id","createdAt","Date","lastUsed","rotationDue","now","algorithm","status","storeKey","console","log","error","Error","oldMetadata","getKeyMetadata","newKeyId","newKey","newMetadata","updateKeyMetadata","keys","getAllKeys","activeKey","find","isRotationDue","dueKeys","filter","keyInfo","length","cutoffDate","keysToRemove","deleteKey","getTime","totalKeys","activeKeys","k","deprecatedKeys","revokedKeys","oldKeys","timestamp","toString","random","Math","substring","Uint8Array","crypto","getRandomValues","Array","from","byte","padStart","join","encryptedKey","_encryption","advancedEncryption","encrypt","localStorage","setItem","JSON","stringify","metadataStr","getItem","parse","i","storageKey","startsWith","decryptedKey","decrypt","push","removeItem"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\keyManagement.ts"],"sourcesContent":["/**\n * Advanced Key Management System\n * Provides secure key generation, rotation, storage, and lifecycle management\n */\n\nimport { advancedEncryption } from './encryption'\n\ninterface KeyMetadata {\n  id: string\n  version: number\n  createdAt: Date\n  lastUsed: Date\n  rotationDue: Date\n  algorithm: string\n  purpose: string\n  status: 'active' | 'deprecated' | 'revoked'\n}\n\ninterface MasterKeyConfig {\n  rotationIntervalDays: number\n  maxKeyAge: number\n  backupCount: number\n}\n\nclass KeyManager {\n  private readonly config: MasterKeyConfig\n  private readonly keyPrefix = 'km_'\n  private readonly metadataPrefix = 'km_meta_'\n  \n  constructor(config: Partial<MasterKeyConfig> = {}) {\n    this.config = {\n      rotationIntervalDays: 90, // Rotate keys every 90 days\n      maxKeyAge: 365, // Maximum key age in days\n      backupCount: 3, // Keep 3 backup keys\n      ...config\n    }\n  }\n\n  /**\n   * Generate a new master key with metadata\n   */\n  async generateMasterKey(purpose: string = 'encryption'): Promise<string> {\n    try {\n      const keyId = this.generateKeyId()\n      const key = await this.generateSecureKey()\n      \n      const metadata: KeyMetadata = {\n        id: keyId,\n        version: 1,\n        createdAt: new Date(),\n        lastUsed: new Date(),\n        rotationDue: new Date(Date.now() + this.config.rotationIntervalDays * 24 * 60 * 60 * 1000),\n        algorithm: 'AES-256-GCM',\n        purpose,\n        status: 'active'\n      }\n\n      // Store encrypted key and metadata\n      await this.storeKey(keyId, key, metadata)\n      \n      console.log(`✅ Generated new master key: ${keyId}`)\n      return keyId\n    } catch (error) {\n      console.error('Failed to generate master key:', error)\n      throw new Error('Master key generation failed')\n    }\n  }\n\n  /**\n   * Rotate an existing key\n   */\n  async rotateKey(keyId: string): Promise<string> {\n    try {\n      const oldMetadata = await this.getKeyMetadata(keyId)\n      if (!oldMetadata) {\n        throw new Error(`Key ${keyId} not found`)\n      }\n\n      // Generate new key\n      const newKeyId = this.generateKeyId()\n      const newKey = await this.generateSecureKey()\n      \n      const newMetadata: KeyMetadata = {\n        ...oldMetadata,\n        id: newKeyId,\n        version: oldMetadata.version + 1,\n        createdAt: new Date(),\n        lastUsed: new Date(),\n        rotationDue: new Date(Date.now() + this.config.rotationIntervalDays * 24 * 60 * 60 * 1000),\n        status: 'active'\n      }\n\n      // Store new key\n      await this.storeKey(newKeyId, newKey, newMetadata)\n      \n      // Mark old key as deprecated\n      oldMetadata.status = 'deprecated'\n      await this.updateKeyMetadata(keyId, oldMetadata)\n      \n      console.log(`✅ Rotated key ${keyId} → ${newKeyId}`)\n      return newKeyId\n    } catch (error) {\n      console.error(`Failed to rotate key ${keyId}:`, error)\n      throw new Error(`Key rotation failed for ${keyId}`)\n    }\n  }\n\n  /**\n   * Get active key for a purpose\n   */\n  async getActiveKey(purpose: string = 'encryption'): Promise<string | null> {\n    try {\n      const keys = await this.getAllKeys()\n      const activeKey = keys.find(key => \n        key.metadata.purpose === purpose && \n        key.metadata.status === 'active'\n      )\n      \n      if (activeKey) {\n        // Update last used timestamp\n        activeKey.metadata.lastUsed = new Date()\n        await this.updateKeyMetadata(activeKey.metadata.id, activeKey.metadata)\n        return activeKey.key\n      }\n      \n      return null\n    } catch (error) {\n      console.error(`Failed to get active key for ${purpose}:`, error)\n      return null\n    }\n  }\n\n  /**\n   * Check if key rotation is due\n   */\n  async isRotationDue(keyId: string): Promise<boolean> {\n    try {\n      const metadata = await this.getKeyMetadata(keyId)\n      if (!metadata) return false\n      \n      return new Date() >= metadata.rotationDue\n    } catch (error) {\n      console.error(`Failed to check rotation status for ${keyId}:`, error)\n      return false\n    }\n  }\n\n  /**\n   * Perform automatic key rotation for all due keys\n   */\n  async performAutoRotation(): Promise<void> {\n    try {\n      const keys = await this.getAllKeys()\n      const dueKeys = keys.filter(key => \n        key.metadata.status === 'active' && \n        new Date() >= key.metadata.rotationDue\n      )\n\n      for (const keyInfo of dueKeys) {\n        try {\n          await this.rotateKey(keyInfo.metadata.id)\n        } catch (error) {\n          console.error(`Auto-rotation failed for key ${keyInfo.metadata.id}:`, error)\n        }\n      }\n\n      console.log(`✅ Auto-rotation completed for ${dueKeys.length} keys`)\n    } catch (error) {\n      console.error('Auto-rotation process failed:', error)\n    }\n  }\n\n  /**\n   * Cleanup old and revoked keys\n   */\n  async cleanupOldKeys(): Promise<void> {\n    try {\n      const keys = await this.getAllKeys()\n      const cutoffDate = new Date(Date.now() - this.config.maxKeyAge * 24 * 60 * 60 * 1000)\n      \n      const keysToRemove = keys.filter(key => \n        (key.metadata.status === 'deprecated' || key.metadata.status === 'revoked') &&\n        key.metadata.createdAt < cutoffDate\n      )\n\n      for (const keyInfo of keysToRemove) {\n        await this.deleteKey(keyInfo.metadata.id)\n      }\n\n      console.log(`✅ Cleaned up ${keysToRemove.length} old keys`)\n    } catch (error) {\n      console.error('Key cleanup failed:', error)\n    }\n  }\n\n  /**\n   * Get key health status\n   */\n  async getKeyHealthStatus(): Promise<{\n    totalKeys: number\n    activeKeys: number\n    deprecatedKeys: number\n    revokedKeys: number\n    rotationDue: number\n    oldKeys: number\n  }> {\n    try {\n      const keys = await this.getAllKeys()\n      const now = new Date()\n      const cutoffDate = new Date(now.getTime() - this.config.maxKeyAge * 24 * 60 * 60 * 1000)\n\n      return {\n        totalKeys: keys.length,\n        activeKeys: keys.filter(k => k.metadata.status === 'active').length,\n        deprecatedKeys: keys.filter(k => k.metadata.status === 'deprecated').length,\n        revokedKeys: keys.filter(k => k.metadata.status === 'revoked').length,\n        rotationDue: keys.filter(k => k.metadata.status === 'active' && now >= k.metadata.rotationDue).length,\n        oldKeys: keys.filter(k => k.metadata.createdAt < cutoffDate).length\n      }\n    } catch (error) {\n      console.error('Failed to get key health status:', error)\n      return {\n        totalKeys: 0,\n        activeKeys: 0,\n        deprecatedKeys: 0,\n        revokedKeys: 0,\n        rotationDue: 0,\n        oldKeys: 0\n      }\n    }\n  }\n\n  // Private helper methods\n\n  private generateKeyId(): string {\n    const timestamp = Date.now().toString(36)\n    const random = Math.random().toString(36).substring(2, 8)\n    return `key_${timestamp}_${random}`\n  }\n\n  private async generateSecureKey(): Promise<string> {\n    // Generate a 256-bit (32 byte) key\n    const key = new Uint8Array(32)\n    crypto.getRandomValues(key)\n    return Array.from(key, byte => byte.toString(16).padStart(2, '0')).join('')\n  }\n\n  private async storeKey(keyId: string, key: string, metadata: KeyMetadata): Promise<void> {\n    try {\n      // Encrypt the key before storage\n      const encryptedKey = await advancedEncryption.encrypt(key)\n      localStorage.setItem(this.keyPrefix + keyId, encryptedKey)\n      localStorage.setItem(this.metadataPrefix + keyId, JSON.stringify(metadata))\n    } catch (error) {\n      throw new Error(`Failed to store key ${keyId}: ${error}`)\n    }\n  }\n\n  private async getKeyMetadata(keyId: string): Promise<KeyMetadata | null> {\n    try {\n      const metadataStr = localStorage.getItem(this.metadataPrefix + keyId)\n      if (!metadataStr) return null\n      \n      const metadata = JSON.parse(metadataStr) as KeyMetadata\n      // Convert date strings back to Date objects\n      metadata.createdAt = new Date(metadata.createdAt)\n      metadata.lastUsed = new Date(metadata.lastUsed)\n      metadata.rotationDue = new Date(metadata.rotationDue)\n      \n      return metadata\n    } catch (error) {\n      console.error(`Failed to get metadata for key ${keyId}:`, error)\n      return null\n    }\n  }\n\n  private async updateKeyMetadata(keyId: string, metadata: KeyMetadata): Promise<void> {\n    try {\n      localStorage.setItem(this.metadataPrefix + keyId, JSON.stringify(metadata))\n    } catch (error) {\n      throw new Error(`Failed to update metadata for key ${keyId}: ${error}`)\n    }\n  }\n\n  private async getAllKeys(): Promise<Array<{key: string, metadata: KeyMetadata}>> {\n    try {\n      const keys: Array<{key: string, metadata: KeyMetadata}> = []\n      \n      for (let i = 0; i < localStorage.length; i++) {\n        const storageKey = localStorage.key(i)\n        if (storageKey?.startsWith(this.metadataPrefix)) {\n          const keyId = storageKey.substring(this.metadataPrefix.length)\n          const metadata = await this.getKeyMetadata(keyId)\n          \n          if (metadata) {\n            const encryptedKey = localStorage.getItem(this.keyPrefix + keyId)\n            if (encryptedKey) {\n              const decryptedKey = await advancedEncryption.decrypt(encryptedKey)\n              keys.push({ key: decryptedKey, metadata })\n            }\n          }\n        }\n      }\n      \n      return keys\n    } catch (error) {\n      console.error('Failed to get all keys:', error)\n      return []\n    }\n  }\n\n  private async deleteKey(keyId: string): Promise<void> {\n    try {\n      localStorage.removeItem(this.keyPrefix + keyId)\n      localStorage.removeItem(this.metadataPrefix + keyId)\n    } catch (error) {\n      throw new Error(`Failed to delete key ${keyId}: ${error}`)\n    }\n  }\n}\n\n// Create singleton instance\nexport const keyManager = new KeyManager()\n\n// Export types and class\nexport { KeyManager }\nexport type { KeyMetadata, MasterKeyConfig }\n\n// Convenience functions\nexport const generateMasterKey = (purpose?: string) => keyManager.generateMasterKey(purpose)\nexport const rotateKey = (keyId: string) => keyManager.rotateKey(keyId)\nexport const getActiveKey = (purpose?: string) => keyManager.getActiveKey(purpose)\nexport const performAutoRotation = () => keyManager.performAutoRotation()\nexport const cleanupOldKeys = () => keyManager.cleanupOldKeys()\nexport const getKeyHealthStatus = () => keyManager.getKeyHealthStatus()"],"mappings":"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","ignoreList":[]}