{"version":3,"names":["_default","cov_13ynut8x31","s","StatCard","title","value","change","icon","color","f","_jsxruntime","jsx","_framermotion","motion","div","className","whileHover","scale","transition","duration","jsxs","b","startsWith","AdminDashboard","activeSection","setActiveSection","_react","useState","searchTerm","setSearchTerm","filterStatus","setFilterStatus","showModal","setShowModal","selectedItem","setSelectedItem","showNewProposalModal","setShowNewProposalModal","showNewContractModal","setShowNewContractModal","showNewInvoiceModal","setShowNewInvoiceModal","showNewTemplateModal","setShowNewTemplateModal","showExportModal","setShowExportModal","showCreateReportModal","setShowCreateReportModal","showViewProposalModal","setShowViewProposalModal","showEditProposalModal","setShowEditProposalModal","selectedProposal","setSelectedProposal","showCreateCampaignModal","setShowCreateCampaignModal","showAddUserModal","setShowAddUserModal","showAddRoleModal","setShowAddRoleModal","showAddArticleModal","setShowAddArticleModal","showCreateRoleModal","setShowCreateRoleModal","showCreateAnnouncementModal","setShowCreateAnnouncementModal","showViewAllReceiptsModal","setShowViewAllReceiptsModal","showNewExportModal","setShowNewExportModal","showNewCampaignModal","setShowNewCampaignModal","showAddTaskModal","setShowAddTaskModal","showEditSkillModal","setShowEditSkillModal","selectedEmployee","setSelectedEmployee","selectedAnnouncement","setSelectedAnnouncement","showUploadLeadsModal","setShowUploadLeadsModal","showAssignLeadModal","setShowAssignLeadModal","selectedLead","setSelectedLead","selectedAgent","setSelectedAgent","leadFilter","setLeadFilter","agentFilter","setAgentFilter","newRoleName","setNewRoleName","newRoleDescription","setNewRoleDescription","newRoleCategory","setNewRoleCategory","selectedBaseRole","setSelectedBaseRole","newRolePermissions","setNewRolePermissions","showPermissionModal","setShowPermissionModal","selectedRole","setSelectedRole","selectedPermissions","setSelectedPermissions","userRoles","setUserRoles","id","name","permissions","userCount","description","leadSources","leads","conversions","revenue","cost","roi","proposals","clientName","projectType","status","createdDate","expiryDate","projectProfitability","client","costs","profit","margin","teamMembers","role","capacity","utilization","currentProjects","availability","clientHealthScores","score","lastContact","projectProgress","paymentStatus","qaChecklists","projectName","type","items","completed","assignee","overallProgress","npsSurveys","feedback","date","category","contracts","startDate","endDate","renewalDate","complianceRecords","lastReview","nextReview","email","phone","company","source","notes","assignedAgent","agents","leadsAssigned","leadsConverted","conversionRate","totalRevenue","predefinedRoles","availablePermissions","permissionCategories","reduce","acc","permission","push","auditLogs","userId","userName","action","resource","timestamp","ipAddress","details","dataExports","format","createdBy","createdAt","downloadUrl","customReports","schedule","recipients","lastRun","emailCampaigns","openRate","clickRate","scheduledDate","integrations","lastSync","apiCalls","monthlyLimit","systemHealth","component","uptime","responseTime","lastCheck","issues","knowledgeBase","author","lastUpdated","views","manualTasks","frequency","timeSpent","automationPotential","estimatedSavings","salesKPIs","currentValue","target","unit","trend","period","skillMatrix","employeeId","employeeName","skills","skillName","level","certified","lastAssessed","vendorContractors","services","contractValue","contractStart","contractEnd","performanceScore","lastPayment","nextPayment","processBottlenecks","processName","stage","avgWaitTime","affectedProjects","impact","rootCause","suggestedSolution","projectRisks","projectId","riskType","severity","probability","mitigation","owner","clientPaymentRisks","clientId","riskScore","factors","outstandingAmount","daysPastDue","paymentHistory","recommendedAction","workflowPerformance","workflowName","successRate","avgExecutionTime","errorCount","improvements","complianceMonitoring","requirement","lastAudit","nextAudit","findings","actionItems","responsible","announcements","setAnnouncements","content","authorRole","priority","targetAudience","expiresAt","isActive","requiresAcknowledgment","attachments","readReceipts","announcementId","userRole","readAt","acknowledged","acknowledgedAt","useEffect","handlePermissionChange","permissionId","prev","includes","filter","p","handleSavePermissions","updatedRoles","map","r","renderOverview","_lucidereact","DollarSign","Briefcase","Users","Star","toLocaleString","slice","project","toFixed","renderSalesProcess","onClick","Upload","Plus","sum","lead","length","Math","round","TrendingUp","Target","statusLeads","statusValue","_safeFormatters","formatCurrency","onChange","e","find","a","agent","l","style","width","min","proposal","renderManagement","member","renderQuality","checklist","replace","item","CheckCircle","Clock","survey","renderCompliance","contract","record","renderSecurity","UserPlus","Settings","index","Download","log","History","renderDataTools","exportItem","window","open","report","renderCommunications","Mail","campaign","article","Eye","renderSystemMonitoring","Server","issue","integration","Plug","renderOperationalIntelligence","task","kpi","TrendingDown","Gauge","renderTeamOptimization","employee","Edit","skill","CheckSquare","join","vendor","renderRiskManagement","bottleneck","risk","workflow","improvement","renderAdvancedCompliance","compliance","finding","renderLeads","filteredLeads","matchesStatus","matchesAgent","matchesSearch","toLowerCase","unassignedLeads","totalLeadValue","toString","AlertTriangle","placeholder","agentLeads","Phone","renderAnnouncementSystem","Bell","announcement","totalEmployees","readCount","acknowledgedCount","readPercentage","acknowledgedPercentage","Date","toLocaleDateString","Fragment","MoreHorizontal","attachment","Paperclip","receipt","split","n","renderActiveSection","_AgentOnboarding","default","accept","htmlFor","disabled","readOnly","updatedSkills","label","BarChart3","Award","Shield","Lock","Database","Activity","Brain","Wrench","AlertOctagon","UserCog","tab","Icon","defaultValue","XCircle","Object","entries","checked","baseRole","alert","newRole","now"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\AdminDashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport AgentOnboarding from './AgentOnboarding';\nimport { formatCurrency, formatNumber } from '@/utils/safeFormatters';\nimport {\n  Users, DollarSign, TrendingUp, AlertTriangle, CheckCircle, XCircle,\n  Search, Filter, Calendar, FileText, BarChart3, PieChart, Target,\n  Clock, Award, Briefcase, Settings, Shield, Database, Globe,\n  MessageSquare, Star, ThumbsUp, ThumbsDown, Eye, Edit, Trash2,\n  Plus, Download, Upload, RefreshCw, Bell, Activity, Zap, UserCheck,\n  History, FileSpreadsheet, Mail, Plug, Server, BookOpen, Key,\n  Monitor, Cpu, HardDrive, Wifi, AlertCircle, Info, Lock, Wrench,\n  UserCog,\n  Brain, TrendingDown, MapPin, Gauge, AlertOctagon, CheckSquare,\n  MoreHorizontal, Paperclip, UserPlus, Phone\n} from 'lucide-react';\n\n// Interfaces\ninterface LeadSource {\n  id: string;\n  name: string;\n  leads: number;\n  conversions: number;\n  revenue: number;\n  cost: number;\n  roi: number;\n}\n\ninterface Proposal {\n  id: string;\n  clientName: string;\n  projectType: string;\n  value: number;\n  status: 'draft' | 'sent' | 'approved' | 'rejected';\n  createdDate: string;\n  expiryDate: string;\n}\n\ninterface ProjectProfitability {\n  id: string;\n  name: string;\n  client: string;\n  revenue: number;\n  costs: number;\n  profit: number;\n  margin: number;\n  status: 'active' | 'completed' | 'on-hold';\n}\n\ninterface TeamMember {\n  id: string;\n  name: string;\n  role: string;\n  capacity: number;\n  utilization: number;\n  currentProjects: number;\n  availability: 'available' | 'busy' | 'overloaded';\n}\n\ninterface ClientHealthScore {\n  id: string;\n  clientName: string;\n  score: number;\n  status: 'excellent' | 'good' | 'at-risk' | 'critical';\n  lastContact: string;\n  projectProgress: number;\n  paymentStatus: 'current' | 'overdue' | 'pending';\n}\n\ninterface QAChecklist {\n  id: string;\n  projectName: string;\n  type: 'web-design' | 'seo-campaign';\n  items: {\n    id: string;\n    description: string;\n    completed: boolean;\n    assignee: string;\n  }[];\n  overallProgress: number;\n  status: 'pending' | 'in-review' | 'approved' | 'rejected';\n}\n\ninterface NPSSurvey {\n  id: string;\n  clientName: string;\n  projectName: string;\n  score: number;\n  feedback: string;\n  date: string;\n  category: 'promoter' | 'passive' | 'detractor';\n}\n\ninterface Contract {\n  id: string;\n  clientName: string;\n  type: string;\n  startDate: string;\n  endDate: string;\n  value: number;\n  status: 'active' | 'expired' | 'pending-renewal';\n  renewalDate?: string;\n}\n\ninterface ComplianceRecord {\n  id: string;\n  type: 'gdpr' | 'ccpa' | 'data-processing';\n  description: string;\n  status: 'compliant' | 'pending' | 'non-compliant';\n  lastReview: string;\n  nextReview: string;\n}\n\ninterface UserRole {\n  id: string;\n  name: string;\n  permissions: string[];\n  userCount: number;\n  description: string;\n  category?: string;\n}\n\ninterface AuditLog {\n  id: string;\n  userId: string;\n  userName: string;\n  action: string;\n  resource: string;\n  timestamp: string;\n  ipAddress: string;\n  details: string;\n}\n\ninterface DataExport {\n  id: string;\n  type: 'clients' | 'projects' | 'invoices' | 'reports';\n  format: 'csv' | 'xlsx' | 'pdf';\n  status: 'pending' | 'processing' | 'completed' | 'failed';\n  createdBy: string;\n  createdAt: string;\n  downloadUrl?: string;\n}\n\ninterface CustomReport {\n  id: string;\n  name: string;\n  type: 'sales' | 'financial' | 'operational' | 'client';\n  schedule: 'daily' | 'weekly' | 'monthly' | 'custom';\n  recipients: string[];\n  lastRun: string;\n  status: 'active' | 'paused';\n}\n\ninterface Lead {\n  id: string;\n  name: string;\n  company: string;\n  email: string;\n  phone: string;\n  source: string;\n  status: 'new' | 'contacted' | 'qualified' | 'converted' | 'lost';\n  value: number;\n  createdDate: string;\n  assignedAgent?: string;\n  lastContact?: string;\n  notes?: string;\n}\n\ninterface Agent {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  leadsAssigned: number;\n  leadsConverted: number;\n  conversionRate: number;\n  totalRevenue: number;\n}\n\ninterface EmailCampaign {\n  id: string;\n  name: string;\n  type: 'newsletter' | 'promotional' | 'follow-up' | 'onboarding';\n  status: 'draft' | 'scheduled' | 'sent' | 'paused';\n  recipients: number;\n  openRate: number;\n  clickRate: number;\n  scheduledDate?: string;\n}\n\ninterface Integration {\n  id: string;\n  name: string;\n  type: 'crm' | 'accounting' | 'marketing' | 'analytics';\n  status: 'connected' | 'disconnected' | 'error';\n  lastSync: string;\n  apiCalls: number;\n  monthlyLimit: number;\n}\n\ninterface SystemHealth {\n  id: string;\n  component: string;\n  status: 'healthy' | 'warning' | 'critical';\n  uptime: number;\n  responseTime: number;\n  lastCheck: string;\n  issues?: string[];\n}\n\ninterface KnowledgeBaseArticle {\n  id: string;\n  title: string;\n  category: 'procedures' | 'training' | 'troubleshooting' | 'policies';\n  author: string;\n  lastUpdated: string;\n  views: number;\n  status: 'published' | 'draft' | 'archived';\n}\n\n// New Operational Features Interfaces\ninterface ManualTask {\n  id: string;\n  description: string;\n  frequency: 'daily' | 'weekly' | 'monthly';\n  timeSpent: number; // minutes\n  assignee: string;\n  automationPotential: 'high' | 'medium' | 'low';\n  estimatedSavings: number; // hours per month\n  status: 'identified' | 'analyzing' | 'automating' | 'automated';\n}\n\ninterface SalesKPI {\n  id: string;\n  name: string;\n  currentValue: number;\n  target: number;\n  unit: string;\n  trend: 'up' | 'down' | 'stable';\n  period: 'daily' | 'weekly' | 'monthly' | 'quarterly';\n  lastUpdated: string;\n}\n\ninterface SkillMatrix {\n  id: string;\n  employeeId: string;\n  employeeName: string;\n  skills: {\n    skillName: string;\n    level: 'beginner' | 'intermediate' | 'advanced' | 'expert';\n    certified: boolean;\n    lastAssessed: string;\n  }[];\n  availability: 'available' | 'busy' | 'training';\n  currentProjects: string[];\n}\n\ninterface VendorContractor {\n  id: string;\n  name: string;\n  type: 'vendor' | 'contractor' | 'freelancer';\n  services: string[];\n  contractValue: number;\n  contractStart: string;\n  contractEnd: string;\n  paymentStatus: 'current' | 'overdue' | 'pending';\n  performanceScore: number;\n  lastPayment: string;\n  nextPayment: string;\n}\n\ninterface ProcessBottleneck {\n  id: string;\n  processName: string;\n  stage: string;\n  avgWaitTime: number; // hours\n  affectedProjects: number;\n  impact: 'high' | 'medium' | 'low';\n  rootCause: string;\n  suggestedSolution: string;\n  status: 'identified' | 'investigating' | 'resolving' | 'resolved';\n}\n\ninterface ProjectRisk {\n  id: string;\n  projectId: string;\n  projectName: string;\n  riskType: 'budget' | 'timeline' | 'scope' | 'quality' | 'resource';\n  severity: 'low' | 'medium' | 'high' | 'critical';\n  probability: number; // percentage\n  impact: string;\n  mitigation: string;\n  owner: string;\n  status: 'open' | 'monitoring' | 'mitigated' | 'closed';\n}\n\ninterface ClientPaymentRisk {\n  id: string;\n  clientId: string;\n  clientName: string;\n  riskScore: number;\n  factors: string[];\n  outstandingAmount: number;\n  daysPastDue: number;\n  paymentHistory: 'excellent' | 'good' | 'poor' | 'critical';\n  recommendedAction: string;\n  lastContact: string;\n}\n\ninterface WorkflowPerformance {\n  id: string;\n  workflowName: string;\n  type: 'automated' | 'manual';\n  successRate: number;\n  avgExecutionTime: number; // minutes\n  errorCount: number;\n  lastRun: string;\n  status: 'healthy' | 'warning' | 'failing';\n  improvements: string[];\n}\n\ninterface ComplianceMonitoring {\n  id: string;\n  requirement: string;\n  category: 'accessibility' | 'gdpr' | 'ccpa' | 'industry-specific';\n  status: 'compliant' | 'partial' | 'non-compliant';\n  lastAudit: string;\n  nextAudit: string;\n  findings: string[];\n  actionItems: string[];\n  responsible: string;\n}\n\ninterface InternalAnnouncement {\n  id: string;\n  title: string;\n  content: string;\n  author: string;\n  authorRole: string;\n  priority: 'low' | 'medium' | 'high' | 'urgent';\n  category: 'general' | 'policy' | 'system' | 'hr' | 'emergency';\n  targetAudience: 'all' | 'management' | 'sales' | 'development' | 'support';\n  createdAt: string;\n  expiresAt?: string;\n  isActive: boolean;\n  requiresAcknowledgment: boolean;\n  attachments?: string[];\n  readReceipts: ReadReceipt[];\n}\n\ninterface ReadReceipt {\n  id: string;\n  announcementId: string;\n  userId: string;\n  userName: string;\n  userRole: string;\n  readAt: string;\n  acknowledged: boolean;\n  acknowledgedAt?: string;\n  ipAddress?: string;\n}\n\n// StatCard Component\nconst StatCard: React.FC<{\n  title: string;\n  value: string | number;\n  change?: string;\n  icon: React.ReactNode;\n  color: string;\n}> = ({ title, value, change, icon, color }) => (\n  <motion.div\n    className=\"bg-white rounded-lg shadow-sm border p-6\"\n    whileHover={{ scale: 1.02 }}\n    transition={{ duration: 0.2 }}\n  >\n    <div className=\"flex items-center justify-between\">\n      <div>\n        <p className=\"text-sm font-medium text-gray-600\">{title}</p>\n        <p className=\"text-2xl font-bold text-gray-900\">{value}</p>\n        {change && (\n          <p className={`text-sm ${change.startsWith('+') ? 'text-green-600' : 'text-red-600'}`}>\n            {change}\n          </p>\n        )}\n      </div>\n      <div className={`p-3 rounded-full ${color}`}>\n        {icon}\n      </div>\n    </div>\n  </motion.div>\n);\n\nconst AdminDashboard: React.FC = () => {\n  const [activeSection, setActiveSection] = useState('overview');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterStatus, setFilterStatus] = useState('all');\n  const [showModal, setShowModal] = useState(false);\n  const [selectedItem, setSelectedItem] = useState<any>(null);\n  const [showNewProposalModal, setShowNewProposalModal] = useState(false);\n  const [showNewContractModal, setShowNewContractModal] = useState(false);\n  const [showNewInvoiceModal, setShowNewInvoiceModal] = useState(false);\n  const [showNewTemplateModal, setShowNewTemplateModal] = useState(false);\n  const [showExportModal, setShowExportModal] = useState(false);\n  const [showCreateReportModal, setShowCreateReportModal] = useState(false);\n  const [showViewProposalModal, setShowViewProposalModal] = useState(false);\n  const [showEditProposalModal, setShowEditProposalModal] = useState(false);\n  const [selectedProposal, setSelectedProposal] = useState<Proposal | null>(null);\n  const [showCreateCampaignModal, setShowCreateCampaignModal] = useState(false);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [showAddRoleModal, setShowAddRoleModal] = useState(false);\n  const [showAddArticleModal, setShowAddArticleModal] = useState(false);\n  const [showCreateRoleModal, setShowCreateRoleModal] = useState(false);\n  const [showCreateAnnouncementModal, setShowCreateAnnouncementModal] = useState(false);\n  const [showViewAllReceiptsModal, setShowViewAllReceiptsModal] = useState(false);\n  const [showNewExportModal, setShowNewExportModal] = useState(false);\n  const [showNewCampaignModal, setShowNewCampaignModal] = useState(false);\n  const [showAddTaskModal, setShowAddTaskModal] = useState(false);\n  const [showEditSkillModal, setShowEditSkillModal] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState<any>(null);\n  const [selectedAnnouncement, setSelectedAnnouncement] = useState<InternalAnnouncement | null>(null);\n  const [showUploadLeadsModal, setShowUploadLeadsModal] = useState(false);\n  const [showAssignLeadModal, setShowAssignLeadModal] = useState(false);\n  const [selectedLead, setSelectedLead] = useState<Lead | null>(null);\n  const [selectedAgent, setSelectedAgent] = useState<string>('');\n  const [leadFilter, setLeadFilter] = useState('all');\n  const [agentFilter, setAgentFilter] = useState('all');\n  \n  // Role management state\n  const [newRoleName, setNewRoleName] = useState('');\n  const [newRoleDescription, setNewRoleDescription] = useState('');\n  const [newRoleCategory, setNewRoleCategory] = useState('');\n  const [selectedBaseRole, setSelectedBaseRole] = useState<string | null>(null);\n  const [newRolePermissions, setNewRolePermissions] = useState<string[]>([]);\n  const [showPermissionModal, setShowPermissionModal] = useState(false);\n  const [selectedRole, setSelectedRole] = useState<UserRole | null>(null);\n  const [selectedPermissions, setSelectedPermissions] = useState<string[]>([]);\n\n\n\n  const [userRoles, setUserRoles] = useState<UserRole[]>([\n    { id: '1', name: 'Administrator', permissions: ['all'], userCount: 2, description: 'Has full access to all system features.' },\n    { id: '2', name: 'Sales Manager', permissions: ['view-leads', 'assign-leads', 'view-reports'], userCount: 5, description: 'Manages sales team and performance.' },\n    { id: '3', name: 'Agent', permissions: ['view-leads', 'edit-leads'], userCount: 20, description: 'Handles assigned leads.' },\n  ]);\n\n\n\n\n\n  // Sample data\n  const [leadSources] = useState<LeadSource[]>([\n    { id: '1', name: 'Google Ads', leads: 45, conversions: 12, revenue: 24000, cost: 3000, roi: 700 },\n    { id: '2', name: 'Facebook Ads', leads: 32, conversions: 8, revenue: 16000, cost: 2000, roi: 700 },\n    { id: '3', name: 'SEO Organic', leads: 28, conversions: 15, revenue: 30000, cost: 1000, roi: 2900 },\n    { id: '4', name: 'Referrals', leads: 18, conversions: 12, revenue: 24000, cost: 500, roi: 4700 }\n  ]);\n\n  const [proposals] = useState<Proposal[]>([\n    { id: '1', clientName: 'Tech Startup Inc', projectType: 'E-commerce Website', value: 15000, status: 'sent', createdDate: '2024-01-15', expiryDate: '2024-02-15' },\n    { id: '2', clientName: 'Local Restaurant', projectType: 'Local SEO Package', value: 3000, status: 'approved', createdDate: '2024-01-10', expiryDate: '2024-02-10' },\n    { id: '3', clientName: 'Medical Practice', projectType: 'Website Redesign', value: 8000, status: 'draft', createdDate: '2024-01-20', expiryDate: '2024-02-20' }\n  ]);\n\n  const [projectProfitability] = useState<ProjectProfitability[]>([\n    { id: '1', name: 'E-commerce Platform', client: 'Tech Startup Inc', revenue: 15000, costs: 8000, profit: 7000, margin: 46.7, status: 'active' },\n    { id: '2', name: 'SEO Campaign', client: 'Local Restaurant', revenue: 3000, costs: 1200, profit: 1800, margin: 60, status: 'completed' },\n    { id: '3', name: 'Website Redesign', client: 'Medical Practice', revenue: 8000, costs: 4500, profit: 3500, margin: 43.8, status: 'active' }\n  ]);\n\n  const [teamMembers] = useState<TeamMember[]>([\n    { id: '1', name: 'Sarah Johnson', role: 'Web Designer', capacity: 40, utilization: 85, currentProjects: 3, availability: 'busy' },\n    { id: '2', name: 'Mike Chen', role: 'SEO Specialist', capacity: 40, utilization: 70, currentProjects: 2, availability: 'available' },\n    { id: '3', name: 'Emily Davis', role: 'Developer', capacity: 40, utilization: 95, currentProjects: 4, availability: 'overloaded' }\n  ]);\n\n  const [clientHealthScores] = useState<ClientHealthScore[]>([\n    { id: '1', clientName: 'Tech Startup Inc', score: 85, status: 'good', lastContact: '2024-01-18', projectProgress: 75, paymentStatus: 'current' },\n    { id: '2', clientName: 'Local Restaurant', score: 95, status: 'excellent', lastContact: '2024-01-20', projectProgress: 100, paymentStatus: 'current' },\n    { id: '3', clientName: 'Medical Practice', score: 60, status: 'at-risk', lastContact: '2024-01-10', projectProgress: 45, paymentStatus: 'overdue' }\n  ]);\n\n  const [qaChecklists] = useState<QAChecklist[]>([\n    {\n      id: '1',\n      projectName: 'E-commerce Platform',\n      type: 'web-design',\n      items: [\n        { id: '1', description: 'Cross-browser compatibility', completed: true, assignee: 'Sarah Johnson' },\n        { id: '2', description: 'Mobile responsiveness', completed: true, assignee: 'Sarah Johnson' },\n        { id: '3', description: 'Performance optimization', completed: false, assignee: 'Emily Davis' }\n      ],\n      overallProgress: 67,\n      status: 'in-review'\n    }\n  ]);\n\n  const [npsSurveys] = useState<NPSSurvey[]>([\n    { id: '1', clientName: 'Local Restaurant', projectName: 'SEO Campaign', score: 9, feedback: 'Excellent service and results!', date: '2024-01-15', category: 'promoter' },\n    { id: '2', clientName: 'Tech Startup Inc', projectName: 'E-commerce Platform', score: 7, feedback: 'Good work, minor delays', date: '2024-01-12', category: 'passive' }\n  ]);\n\n  const [contracts] = useState<Contract[]>([\n    { id: '1', clientName: 'Tech Startup Inc', type: 'Web Development', startDate: '2024-01-01', endDate: '2024-12-31', value: 50000, status: 'active' },\n    { id: '2', clientName: 'Local Restaurant', type: 'SEO Services', startDate: '2023-06-01', endDate: '2024-05-31', value: 12000, status: 'pending-renewal', renewalDate: '2024-05-31' }\n  ]);\n\n  const [complianceRecords] = useState<ComplianceRecord[]>([\n    { id: '1', type: 'gdpr', description: 'Data Processing Agreement Review', status: 'compliant', lastReview: '2024-01-01', nextReview: '2024-07-01' },\n    { id: '2', type: 'ccpa', description: 'Privacy Policy Update', status: 'pending', lastReview: '2023-12-01', nextReview: '2024-06-01' }\n  ]);\n\n  const [leads] = useState<Lead[]>([\n    { id: '1', name: 'John Smith', email: 'john@techcorp.com', phone: '+1-555-0101', company: 'TechCorp Solutions', source: 'Google Ads', status: 'new', value: 15000, createdDate: '2024-01-20', notes: 'Interested in e-commerce platform' },\n    { id: '2', name: 'Sarah Wilson', email: 'sarah@healthplus.com', phone: '+1-555-0102', company: 'HealthPlus Clinic', source: 'Referral', status: 'contacted', assignedAgent: 'agent1', value: 8000, createdDate: '2024-01-18', lastContact: '2024-01-19', notes: 'Needs website redesign urgently' },\n    { id: '3', name: 'Mike Johnson', email: 'mike@retailstore.com', phone: '+1-555-0103', company: 'Retail Store Inc', source: 'Facebook Ads', status: 'qualified', assignedAgent: 'agent2', value: 5000, createdDate: '2024-01-15', lastContact: '2024-01-17', notes: 'Looking for SEO services' },\n    { id: '4', name: 'Lisa Brown', email: 'lisa@startup.com', phone: '+1-555-0104', company: 'Startup Ventures', source: 'SEO Organic', status: 'new', value: 12000, createdDate: '2024-01-22', notes: 'Interested in full digital marketing package' },\n    { id: '5', name: 'David Lee', email: 'david@restaurant.com', phone: '+1-555-0105', company: 'Fine Dining Restaurant', source: 'Referral', status: 'converted', assignedAgent: 'agent1', value: 3000, createdDate: '2024-01-10', lastContact: '2024-01-20', notes: 'Completed local SEO project' }\n  ]);\n\n  const [agents] = useState<Agent[]>([\n    { id: 'agent1', name: 'Alex Thompson', email: 'alex@company.com', role: 'Senior Sales Agent', leadsAssigned: 8, leadsConverted: 3, conversionRate: 37.5, totalRevenue: 45000 },\n    { id: 'agent2', name: 'Jessica Martinez', email: 'jessica@company.com', role: 'Sales Agent', leadsAssigned: 6, leadsConverted: 2, conversionRate: 33.3, totalRevenue: 28000 },\n    { id: 'agent3', name: 'Ryan Davis', email: 'ryan@company.com', role: 'Junior Sales Agent', leadsAssigned: 4, leadsConverted: 1, conversionRate: 25.0, totalRevenue: 15000 }\n  ]);\n\n  // Enhanced role management with comprehensive permissions\n  const [predefinedRoles] = useState<UserRole[]>([\n    {\n      id: 'super_admin',\n      name: 'Super Administrator',\n      description: 'Complete system access with all administrative privileges',\n      category: 'administrative',\n      userCount: 1,\n      permissions: ['all']\n    },\n    {\n      id: 'admin',\n      name: 'Administrator',\n      description: 'Administrative access with user and system management',\n      category: 'administrative',\n      userCount: 3,\n      permissions: [\n        'user_management', 'role_management', 'system_settings',\n        'audit_logs', 'security_settings', 'backup_restore'\n      ]\n    },\n    {\n      id: 'manager',\n      name: 'Manager',\n      description: 'Management level access for overseeing operations',\n      category: 'management',\n      userCount: 5,\n      permissions: [\n        'view_all_reports', 'manage_projects', 'manage_clients',\n        'manage_team', 'approve_proposals', 'financial_reports'\n      ]\n    },\n    {\n      id: 'team_lead',\n      name: 'Team Lead',\n      description: 'Lead team members and manage project workflows',\n      category: 'management',\n      userCount: 8,\n      permissions: [\n        'manage_team_projects', 'assign_tasks', 'view_team_reports',\n        'quality_assurance', 'client_communication'\n      ]\n    },\n    {\n      id: 'senior_employee',\n      name: 'Senior Employee',\n      description: 'Experienced team member with extended privileges',\n      category: 'operational',\n      userCount: 12,\n      permissions: [\n        'edit_all_projects', 'create_proposals', 'client_communication',\n        'mentor_junior', 'quality_review'\n      ]\n    },\n    {\n      id: 'employee',\n      name: 'Employee',\n      description: 'Standard employee with basic operational access',\n      category: 'operational',\n      userCount: 25,\n      permissions: [\n        'view_assigned_projects', 'edit_own_tasks', 'time_tracking',\n        'basic_reporting'\n      ]\n    },\n    {\n      id: 'contractor',\n      name: 'Contractor',\n      description: 'External contractor with limited project access',\n      category: 'external',\n      userCount: 7,\n      permissions: [\n        'view_assigned_projects', 'edit_assigned_tasks', 'time_tracking'\n      ]\n    },\n    {\n      id: 'client_admin',\n      name: 'Client Administrator',\n      description: 'Client with administrative access to their account',\n      category: 'client',\n      userCount: 15,\n      permissions: [\n        'view_own_projects', 'manage_client_users', 'client_reporting',\n        'invoice_management'\n      ]\n    },\n    {\n      id: 'client_user',\n      name: 'Client User',\n      description: 'Standard client access to view their projects',\n      category: 'client',\n      userCount: 45,\n      permissions: [\n        'view_own_projects', 'basic_communication', 'view_invoices'\n      ]\n    }\n  ]);\n\n  const [availablePermissions] = useState([\n    // User Management\n    { id: 'user_management', name: 'User Management', category: 'Users', description: 'Create, edit, and delete user accounts' },\n    { id: 'role_management', name: 'Role Management', category: 'Users', description: 'Manage user roles and permissions' },\n    { id: 'manage_team', name: 'Team Management', category: 'Users', description: 'Manage team members and assignments' },\n    \n    // Project Management\n    { id: 'manage_projects', name: 'Project Management', category: 'Projects', description: 'Create and manage all projects' },\n    { id: 'manage_team_projects', name: 'Team Project Management', category: 'Projects', description: 'Manage projects assigned to team' },\n    { id: 'view_assigned_projects', name: 'View Assigned Projects', category: 'Projects', description: 'View projects assigned to user' },\n    { id: 'edit_all_projects', name: 'Edit All Projects', category: 'Projects', description: 'Edit any project in the system' },\n    { id: 'view_own_projects', name: 'View Own Projects', category: 'Projects', description: 'View only own projects' },\n    \n    // Task Management\n    { id: 'assign_tasks', name: 'Task Assignment', category: 'Tasks', description: 'Assign tasks to team members' },\n    { id: 'edit_own_tasks', name: 'Edit Own Tasks', category: 'Tasks', description: 'Edit tasks assigned to user' },\n    { id: 'edit_assigned_tasks', name: 'Edit Assigned Tasks', category: 'Tasks', description: 'Edit tasks assigned by others' },\n    \n    // Client Management\n    { id: 'manage_clients', name: 'Client Management', category: 'Clients', description: 'Manage client accounts and information' },\n    { id: 'client_communication', name: 'Client Communication', category: 'Clients', description: 'Communicate with clients' },\n    { id: 'basic_communication', name: 'Basic Communication', category: 'Clients', description: 'Basic client communication' },\n    { id: 'manage_client_users', name: 'Manage Client Users', category: 'Clients', description: 'Manage users within client account' },\n    \n    // Financial\n    { id: 'financial_reports', name: 'Financial Reports', category: 'Financial', description: 'Access financial reports and data' },\n    { id: 'invoice_management', name: 'Invoice Management', category: 'Financial', description: 'Manage invoices and billing' },\n    { id: 'view_invoices', name: 'View Invoices', category: 'Financial', description: 'View invoice information' },\n    \n    // Reporting\n    { id: 'view_all_reports', name: 'All Reports', category: 'Reporting', description: 'Access all system reports' },\n    { id: 'view_team_reports', name: 'Team Reports', category: 'Reporting', description: 'View reports for team members' },\n    { id: 'basic_reporting', name: 'Basic Reporting', category: 'Reporting', description: 'Access basic reports' },\n    { id: 'client_reporting', name: 'Client Reporting', category: 'Reporting', description: 'Access client-specific reports' },\n    \n    // Quality & Proposals\n    { id: 'quality_assurance', name: 'Quality Assurance', category: 'Quality', description: 'Perform quality assurance tasks' },\n    { id: 'quality_review', name: 'Quality Review', category: 'Quality', description: 'Review and approve quality checks' },\n    { id: 'create_proposals', name: 'Create Proposals', category: 'Sales', description: 'Create and edit proposals' },\n    { id: 'approve_proposals', name: 'Approve Proposals', category: 'Sales', description: 'Approve and finalize proposals' },\n    \n    // System Administration\n    { id: 'system_settings', name: 'System Settings', category: 'System', description: 'Configure system settings' },\n    { id: 'security_settings', name: 'Security Settings', category: 'System', description: 'Manage security configurations' },\n    { id: 'audit_logs', name: 'Audit Logs', category: 'System', description: 'View system audit logs' },\n    { id: 'backup_restore', name: 'Backup & Restore', category: 'System', description: 'Manage system backups' },\n    \n    // Miscellaneous\n    { id: 'time_tracking', name: 'Time Tracking', category: 'Productivity', description: 'Track time and productivity' },\n    { id: 'mentor_junior', name: 'Mentor Junior Staff', category: 'Development', description: 'Mentor and guide junior team members' }\n  ]);\n\n  const permissionCategories = availablePermissions.reduce((acc, permission) => {\n    const { category } = permission;\n    if (!acc[category]) {\n      acc[category] = [];\n    }\n    acc[category].push(permission);\n    return acc;\n  }, {} as Record<string, typeof availablePermissions>);\n\n  const [auditLogs] = useState<AuditLog[]>([\n    { id: '1', userId: '1', userName: 'John Admin', action: 'LOGIN', resource: 'System', timestamp: '2024-01-20 09:15:00', ipAddress: '192.168.1.100', details: 'Successful login' },\n    { id: '2', userId: '2', userName: 'Sarah Manager', action: 'UPDATE', resource: 'Client Record', timestamp: '2024-01-20 10:30:00', ipAddress: '192.168.1.101', details: 'Updated client contact information' },\n    { id: '3', userId: '3', userName: 'Mike Employee', action: 'CREATE', resource: 'Project Task', timestamp: '2024-01-20 11:45:00', ipAddress: '192.168.1.102', details: 'Created new task for Project #123' }\n  ]);\n\n  const [dataExports] = useState<DataExport[]>([\n    { id: '1', type: 'clients', format: 'xlsx', status: 'completed', createdBy: 'John Admin', createdAt: '2024-01-20 08:00:00', downloadUrl: '/exports/clients_2024.xlsx' },\n    { id: '2', type: 'projects', format: 'csv', status: 'processing', createdBy: 'Sarah Manager', createdAt: '2024-01-20 09:30:00' },\n    { id: '3', type: 'invoices', format: 'pdf', status: 'pending', createdBy: 'John Admin', createdAt: '2024-01-20 10:15:00' }\n  ]);\n\n  const [customReports] = useState<CustomReport[]>([\n    { id: '1', name: 'Weekly Sales Report', type: 'sales', schedule: 'weekly', recipients: ['manager@company.com'], lastRun: '2024-01-15', status: 'active' },\n    { id: '2', name: 'Monthly Financial Summary', type: 'financial', schedule: 'monthly', recipients: ['cfo@company.com', 'manager@company.com'], lastRun: '2024-01-01', status: 'active' },\n    { id: '3', name: 'Client Satisfaction Report', type: 'client', schedule: 'monthly', recipients: ['support@company.com'], lastRun: '2024-01-01', status: 'paused' }\n  ]);\n\n  const [emailCampaigns] = useState<EmailCampaign[]>([\n    { id: '1', name: 'Monthly Newsletter', type: 'newsletter', status: 'sent', recipients: 150, openRate: 24.5, clickRate: 3.2 },\n    { id: '2', name: 'New Service Promotion', type: 'promotional', status: 'scheduled', recipients: 200, openRate: 0, clickRate: 0, scheduledDate: '2024-01-25' },\n    { id: '3', name: 'Client Onboarding Series', type: 'onboarding', status: 'draft', recipients: 0, openRate: 0, clickRate: 0 }\n  ]);\n\n  const [integrations] = useState<Integration[]>([\n    { id: '1', name: 'Stripe Payment', type: 'accounting', status: 'connected', lastSync: '2024-01-20 12:00:00', apiCalls: 1250, monthlyLimit: 5000 },\n    { id: '2', name: 'Google Analytics', type: 'analytics', status: 'connected', lastSync: '2024-01-20 11:30:00', apiCalls: 890, monthlyLimit: 10000 },\n    { id: '3', name: 'Mailchimp', type: 'marketing', status: 'error', lastSync: '2024-01-19 15:45:00', apiCalls: 450, monthlyLimit: 2000 },\n    { id: '4', name: 'QuickBooks', type: 'accounting', status: 'disconnected', lastSync: '2024-01-18 09:00:00', apiCalls: 0, monthlyLimit: 1000 }\n  ]);\n\n  const [systemHealth] = useState<SystemHealth[]>([\n    { id: '1', component: 'Web Server', status: 'healthy', uptime: 99.9, responseTime: 120, lastCheck: '2024-01-20 12:00:00' },\n    { id: '2', component: 'Database', status: 'healthy', uptime: 99.8, responseTime: 45, lastCheck: '2024-01-20 12:00:00' },\n    { id: '3', component: 'Email Service', status: 'warning', uptime: 98.5, responseTime: 200, lastCheck: '2024-01-20 12:00:00', issues: ['High response time'] },\n    { id: '4', component: 'File Storage', status: 'critical', uptime: 95.2, responseTime: 500, lastCheck: '2024-01-20 12:00:00', issues: ['Disk space low', 'Slow response'] }\n  ]);\n\n  const [knowledgeBase] = useState<KnowledgeBaseArticle[]>([\n    { id: '1', title: 'Client Onboarding Process', category: 'procedures', author: 'Sarah Manager', lastUpdated: '2024-01-15', views: 45, status: 'published' },\n    { id: '2', title: 'SEO Best Practices Guide', category: 'training', author: 'Mike SEO', lastUpdated: '2024-01-10', views: 78, status: 'published' },\n    { id: '3', title: 'Troubleshooting Payment Issues', category: 'troubleshooting', author: 'John Admin', lastUpdated: '2024-01-18', views: 23, status: 'published' },\n    { id: '4', title: 'Data Privacy Policy', category: 'policies', author: 'Legal Team', lastUpdated: '2024-01-05', views: 12, status: 'draft' }\n  ]);\n\n  // New Operational Features Data\n  const [manualTasks] = useState<ManualTask[]>([\n    { id: '1', description: 'Weekly client status report compilation', frequency: 'weekly', timeSpent: 120, assignee: 'Sarah Johnson', automationPotential: 'high', estimatedSavings: 8, status: 'identified' },\n    { id: '2', description: 'Monthly invoice generation and sending', frequency: 'monthly', timeSpent: 180, assignee: 'Mike Chen', automationPotential: 'high', estimatedSavings: 12, status: 'analyzing' },\n    { id: '3', description: 'Daily social media posting', frequency: 'daily', timeSpent: 30, assignee: 'Emily Davis', automationPotential: 'medium', estimatedSavings: 10, status: 'automating' },\n    { id: '4', description: 'Client onboarding document preparation', frequency: 'weekly', timeSpent: 90, assignee: 'Sarah Johnson', automationPotential: 'medium', estimatedSavings: 6, status: 'identified' }\n  ]);\n\n  const [salesKPIs] = useState<SalesKPI[]>([\n    { id: '1', name: 'Monthly Recurring Revenue', currentValue: 45000, target: 50000, unit: '$', trend: 'up', period: 'monthly', lastUpdated: '2024-01-20' },\n    { id: '2', name: 'Lead Conversion Rate', currentValue: 24, target: 30, unit: '%', trend: 'up', period: 'monthly', lastUpdated: '2024-01-20' },\n    { id: '3', name: 'Average Deal Size', currentValue: 8500, target: 10000, unit: '$', trend: 'stable', period: 'quarterly', lastUpdated: '2024-01-20' },\n    { id: '4', name: 'Sales Cycle Length', currentValue: 45, target: 35, unit: 'days', trend: 'down', period: 'monthly', lastUpdated: '2024-01-20' },\n    { id: '5', name: 'Customer Acquisition Cost', currentValue: 1200, target: 1000, unit: '$', trend: 'down', period: 'monthly', lastUpdated: '2024-01-20' }\n  ]);\n\n  const [skillMatrix] = useState<SkillMatrix[]>([\n    {\n      id: '1', employeeId: 'emp1', employeeName: 'Sarah Johnson',\n      skills: [\n        { skillName: 'Web Design', level: 'expert', certified: true, lastAssessed: '2024-01-15' },\n        { skillName: 'UI/UX Design', level: 'advanced', certified: true, lastAssessed: '2024-01-10' },\n        { skillName: 'React Development', level: 'intermediate', certified: false, lastAssessed: '2024-01-05' }\n      ],\n      availability: 'busy', currentProjects: ['E-commerce Platform', 'Website Redesign']\n    },\n    {\n      id: '2', employeeId: 'emp2', employeeName: 'Mike Chen',\n      skills: [\n        { skillName: 'SEO Optimization', level: 'expert', certified: true, lastAssessed: '2024-01-12' },\n        { skillName: 'Content Marketing', level: 'advanced', certified: true, lastAssessed: '2024-01-08' },\n        { skillName: 'Google Analytics', level: 'expert', certified: true, lastAssessed: '2024-01-15' }\n      ],\n      availability: 'available', currentProjects: ['SEO Campaign']\n    },\n    {\n      id: '3', employeeId: 'emp3', employeeName: 'Emily Davis',\n      skills: [\n        { skillName: 'Frontend Development', level: 'expert', certified: true, lastAssessed: '2024-01-18' },\n        { skillName: 'Backend Development', level: 'advanced', certified: false, lastAssessed: '2024-01-10' },\n        { skillName: 'Database Management', level: 'intermediate', certified: false, lastAssessed: '2024-01-05' }\n      ],\n      availability: 'training', currentProjects: ['E-commerce Platform', 'API Development']\n    }\n  ]);\n\n  const [vendorContractors] = useState<VendorContractor[]>([\n    { id: '1', name: 'CloudHost Solutions', type: 'vendor', services: ['Web Hosting', 'Domain Management'], contractValue: 12000, contractStart: '2024-01-01', contractEnd: '2024-12-31', paymentStatus: 'current', performanceScore: 95, lastPayment: '2024-01-15', nextPayment: '2024-02-15' },\n    { id: '2', name: 'Design Freelancer Pro', type: 'freelancer', services: ['Graphic Design', 'Logo Creation'], contractValue: 5000, contractStart: '2024-01-10', contractEnd: '2024-06-10', paymentStatus: 'pending', performanceScore: 88, lastPayment: '2024-01-10', nextPayment: '2024-02-10' },\n    { id: '3', name: 'Content Writing Agency', type: 'contractor', services: ['Content Creation', 'Copywriting'], contractValue: 8000, contractStart: '2023-12-01', contractEnd: '2024-11-30', paymentStatus: 'overdue', performanceScore: 72, lastPayment: '2023-12-15', nextPayment: '2024-01-15' }\n  ]);\n\n  const [processBottlenecks] = useState<ProcessBottleneck[]>([\n    { id: '1', processName: 'Client Approval Workflow', stage: 'Design Review', avgWaitTime: 72, affectedProjects: 5, impact: 'high', rootCause: 'Client unavailability for reviews', suggestedSolution: 'Implement automated reminder system', status: 'identified' },\n    { id: '2', processName: 'Content Creation Pipeline', stage: 'Content Review', avgWaitTime: 48, affectedProjects: 3, impact: 'medium', rootCause: 'Limited reviewer availability', suggestedSolution: 'Add additional content reviewers', status: 'investigating' },\n    { id: '3', processName: 'Development Deployment', stage: 'Testing Phase', avgWaitTime: 24, affectedProjects: 2, impact: 'low', rootCause: 'Manual testing procedures', suggestedSolution: 'Implement automated testing', status: 'resolving' }\n  ]);\n\n  const [projectRisks] = useState<ProjectRisk[]>([\n    { id: '1', projectId: 'proj1', projectName: 'E-commerce Platform', riskType: 'timeline', severity: 'high', probability: 75, impact: 'Project may delay by 2 weeks', mitigation: 'Add additional developer resources', owner: 'Sarah Johnson', status: 'open' },\n    { id: '2', projectId: 'proj2', projectName: 'SEO Campaign', riskType: 'budget', severity: 'medium', probability: 40, impact: 'May exceed budget by 15%', mitigation: 'Renegotiate scope with client', owner: 'Mike Chen', status: 'monitoring' },\n    { id: '3', projectId: 'proj3', projectName: 'Website Redesign', riskType: 'scope', severity: 'medium', probability: 60, impact: 'Scope creep affecting timeline', mitigation: 'Implement change request process', owner: 'Emily Davis', status: 'mitigated' }\n  ]);\n\n  const [clientPaymentRisks] = useState<ClientPaymentRisk[]>([\n    { id: '1', clientId: 'client1', clientName: 'Tech Startup Inc', riskScore: 25, factors: ['New business', 'Limited credit history'], outstandingAmount: 0, daysPastDue: 0, paymentHistory: 'good', recommendedAction: 'Monitor closely', lastContact: '2024-01-18' },\n    { id: '2', clientId: 'client2', clientName: 'Local Restaurant', riskScore: 10, factors: ['Established business', 'Excellent payment history'], outstandingAmount: 0, daysPastDue: 0, paymentHistory: 'excellent', recommendedAction: 'Continue normal terms', lastContact: '2024-01-20' },\n    { id: '3', clientId: 'client3', clientName: 'Medical Practice', riskScore: 85, factors: ['Late payments', 'Financial difficulties'], outstandingAmount: 5000, daysPastDue: 15, paymentHistory: 'poor', recommendedAction: 'Require payment before work', lastContact: '2024-01-10' }\n  ]);\n\n  const [workflowPerformance] = useState<WorkflowPerformance[]>([\n    { id: '1', workflowName: 'Client Onboarding', type: 'automated', successRate: 95, avgExecutionTime: 15, errorCount: 2, lastRun: '2024-01-20 10:30:00', status: 'healthy', improvements: ['Add email validation'] },\n    { id: '2', workflowName: 'Invoice Generation', type: 'automated', successRate: 88, avgExecutionTime: 5, errorCount: 5, lastRun: '2024-01-20 09:00:00', status: 'warning', improvements: ['Fix tax calculation', 'Improve error handling'] },\n    { id: '3', workflowName: 'Project Status Updates', type: 'manual', successRate: 75, avgExecutionTime: 30, errorCount: 8, lastRun: '2024-01-19 16:00:00', status: 'failing', improvements: ['Automate status collection', 'Add validation rules'] }\n  ]);\n\n  const [complianceMonitoring] = useState<ComplianceMonitoring[]>([\n    { id: '1', requirement: 'WCAG 2.1 AA Compliance', category: 'accessibility', status: 'compliant', lastAudit: '2024-01-01', nextAudit: '2024-07-01', findings: [], actionItems: [], responsible: 'Sarah Johnson' },\n    { id: '2', requirement: 'GDPR Data Processing', category: 'gdpr', status: 'partial', lastAudit: '2024-01-15', nextAudit: '2024-04-15', findings: ['Missing consent forms'], actionItems: ['Update privacy policy', 'Implement consent management'], responsible: 'Legal Team' },\n    { id: '3', requirement: 'PCI DSS Compliance', category: 'industry-specific', status: 'non-compliant', lastAudit: '2023-12-01', nextAudit: '2024-03-01', findings: ['Outdated security protocols'], actionItems: ['Update payment processing', 'Security audit'], responsible: 'IT Team' }\n  ]);\n\n  const [announcements, setAnnouncements] = useState<InternalAnnouncement[]>([\n    {\n      id: '1',\n      title: 'New Company Policy: Remote Work Guidelines',\n      content: 'We are implementing new remote work guidelines effective immediately. All employees must review and acknowledge these changes by end of week.',\n      author: 'HR Department',\n      authorRole: 'Human Resources',\n      priority: 'high',\n      category: 'policy',\n      targetAudience: 'all',\n      createdAt: '2024-01-15T09:00:00Z',\n      expiresAt: '2024-02-15T23:59:59Z',\n      isActive: true,\n      requiresAcknowledgment: true,\n      attachments: ['remote-work-policy.pdf'],\n      readReceipts: [\n        { id: 'r1', announcementId: '1', userId: 'u1', userName: 'John Smith', userRole: 'Developer', readAt: '2024-01-15T10:30:00Z', acknowledged: true, acknowledgedAt: '2024-01-15T10:35:00Z' },\n        { id: 'r2', announcementId: '1', userId: 'u2', userName: 'Sarah Johnson', userRole: 'Manager', readAt: '2024-01-15T11:00:00Z', acknowledged: false }\n      ]\n    },\n    {\n      id: '2',\n      title: 'System Maintenance Scheduled',\n      content: 'Our CRM system will undergo maintenance this Saturday from 2 AM to 6 AM EST. Please save your work and log out before this time.',\n      author: 'IT Department',\n      authorRole: 'System Administrator',\n      priority: 'medium',\n      category: 'system',\n      targetAudience: 'all',\n      createdAt: '2024-01-14T14:00:00Z',\n      isActive: true,\n      requiresAcknowledgment: false,\n      readReceipts: [\n        { id: 'r3', announcementId: '2', userId: 'u1', userName: 'John Smith', userRole: 'Developer', readAt: '2024-01-14T14:15:00Z', acknowledged: false },\n        { id: 'r4', announcementId: '2', userId: 'u3', userName: 'Mike Wilson', userRole: 'Sales', readAt: '2024-01-14T15:30:00Z', acknowledged: false }\n      ]\n    },\n    {\n      id: '3',\n      title: 'Q1 Sales Targets Released',\n      content: 'The Q1 sales targets have been finalized and are now available in the sales dashboard. Team leads should review with their teams.',\n      author: 'Sales Management',\n      authorRole: 'Sales Director',\n      priority: 'medium',\n      category: 'general',\n      targetAudience: 'sales',\n      createdAt: '2024-01-13T08:00:00Z',\n      isActive: true,\n      requiresAcknowledgment: true,\n      readReceipts: [\n        { id: 'r5', announcementId: '3', userId: 'u3', userName: 'Mike Wilson', userRole: 'Sales', readAt: '2024-01-13T08:30:00Z', acknowledged: true, acknowledgedAt: '2024-01-13T08:45:00Z' }\n      ]\n    }\n  ]);\n\n  // Functions that depend on state variables\n  useEffect(() => {\n    if (selectedRole) {\n      setSelectedPermissions(selectedRole.permissions);\n    } else {\n      setSelectedPermissions([]);\n    }\n  }, [selectedRole]);\n\n  const handlePermissionChange = (permissionId: string) => {\n    setSelectedPermissions(prev => {\n      if (prev.includes(permissionId)) {\n        return prev.filter(p => p !== permissionId);\n      } else {\n        return [...prev, permissionId];\n      }\n    });\n  };\n\n  const handleSavePermissions = () => {\n    if (selectedRole) {\n      // Save permissions for role\n      // Here you would typically call an API to save the updated role permissions\n      // For this example, we'll just update the local state\n      const updatedRoles = userRoles.map(r => \n        r.id === selectedRole.id ? { ...r, permissions: selectedPermissions } : r\n      );\n      setUserRoles(updatedRoles);\n      setShowPermissionModal(false);\n      setSelectedRole(null);\n    }\n  };\n\n  const renderOverview = () => (\n    <div className=\"space-y-6\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <StatCard\n          title=\"Total Revenue\"\n          value=\"$94,000\"\n          change=\"+12%\"\n          icon={<DollarSign className=\"h-6 w-6 text-white\" />}\n          color=\"bg-green-500\"\n        />\n        <StatCard\n          title=\"Active Projects\"\n          value=\"12\"\n          change=\"+3\"\n          icon={<Briefcase className=\"h-6 w-6 text-white\" />}\n          color=\"bg-blue-500\"\n        />\n        <StatCard\n          title=\"Team Utilization\"\n          value=\"83%\"\n          change=\"+5%\"\n          icon={<Users className=\"h-6 w-6 text-white\" />}\n          color=\"bg-purple-500\"\n        />\n        <StatCard\n          title=\"Client Satisfaction\"\n          value=\"8.2/10\"\n          change=\"+0.3\"\n          icon={<Star className=\"h-6 w-6 text-white\" />}\n          color=\"bg-yellow-500\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Lead Source ROI</h3>\n          <div className=\"space-y-3\">\n            {leadSources.map((source) => (\n              <div key={source.id} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\n                <div>\n                  <p className=\"font-medium\">{source.name}</p>\n                  <p className=\"text-sm text-gray-600\">{source.leads} leads, {source.conversions} conversions</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-bold text-green-600\">{source.roi}% ROI</p>\n                  <p className=\"text-sm text-gray-600\">${source.revenue.toLocaleString()}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Project Profitability</h3>\n          <div className=\"space-y-3\">\n            {projectProfitability.slice(0, 3).map((project) => (\n              <div key={project.id} className=\"flex justify-between items-center p-3 bg-gray-50 rounded\">\n                <div>\n                  <p className=\"font-medium\">{project.name}</p>\n                  <p className=\"text-sm text-gray-600\">{project.client}</p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-bold\">{project.margin.toFixed(1)}% margin</p>\n                  <p className=\"text-sm text-green-600\">${project.profit.toLocaleString()} profit</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSalesProcess = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">Sales Process Management</h2>\n        <div className=\"flex gap-2\">\n          <button \n            onClick={() => setShowUploadLeadsModal(true)}\n            className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\n          >\n            <Upload className=\"h-4 w-4\" /> Import Leads\n          </button>\n          <button \n            onClick={() => setShowNewProposalModal(true)}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n          >\n            <Plus className=\"h-4 w-4\" /> New Proposal\n          </button>\n        </div>\n      </div>\n\n      {/* Sales Pipeline Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <StatCard\n          title=\"Total Pipeline Value\"\n          value={`$${leads.reduce((sum, lead) => sum + lead.value, 0).toLocaleString()}`}\n          change=\"+12.5%\"\n          icon={<DollarSign className=\"h-5 w-5 text-white\" />}\n          color=\"bg-green-500\"\n        />\n        <StatCard\n          title=\"Active Leads\"\n          value={leads.filter(lead => ['new', 'contacted', 'qualified'].includes(lead.status)).length}\n          change=\"+8\"\n          icon={<Users className=\"h-5 w-5 text-white\" />}\n          color=\"bg-blue-500\"\n        />\n        <StatCard\n          title=\"Conversion Rate\"\n          value={`${Math.round((leads.filter(lead => lead.status === 'converted').length / leads.length) * 100)}%`}\n          change=\"+2.3%\"\n          icon={<TrendingUp className=\"h-5 w-5 text-white\" />}\n          color=\"bg-purple-500\"\n        />\n        <StatCard\n          title=\"Avg Deal Size\"\n          value={`$${Math.round(leads.reduce((sum, lead) => sum + lead.value, 0) / leads.length).toLocaleString()}`}\n          change=\"+5.2%\"\n          icon={<Target className=\"h-5 w-5 text-white\" />}\n          color=\"bg-orange-500\"\n        />\n      </div>\n\n      {/* Sales Pipeline Stages */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Sales Pipeline</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n          {['new', 'contacted', 'qualified', 'converted', 'lost'].map((status) => {\n            const statusLeads = leads.filter(lead => lead.status === status);\n            const statusValue = statusLeads.reduce((sum, lead) => sum + lead.value, 0);\n            return (\n              <div key={status} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h4 className=\"font-medium capitalize\">{status}</h4>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    status === 'new' ? 'bg-gray-100 text-gray-800' :\n                    status === 'contacted' ? 'bg-blue-100 text-blue-800' :\n                    status === 'qualified' ? 'bg-yellow-100 text-yellow-800' :\n                    status === 'converted' ? 'bg-green-100 text-green-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {statusLeads.length}\n                  </span>\n                </div>\n                <p className=\"text-sm font-bold\">{formatCurrency(statusValue)}</p>\n                <div className=\"mt-2 space-y-1\">\n                  {statusLeads.slice(0, 3).map((lead) => (\n                    <div key={lead.id} className=\"text-xs p-2 bg-gray-50 rounded cursor-pointer hover:bg-gray-100\"\n                         onClick={() => {\n                           setSelectedLead(lead);\n                           setShowAssignLeadModal(true);\n                         }}>\n                      <p className=\"font-medium\">{lead.name}</p>\n                      <p className=\"text-gray-600\">${lead.value.toLocaleString()}</p>\n                    </div>\n                  ))}\n                  {statusLeads.length > 3 && (\n                    <p className=\"text-xs text-gray-500 text-center\">+{statusLeads.length - 3} more</p>\n                  )}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Lead Management */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Lead Management</h3>\n            <div className=\"flex gap-2\">\n              <select \n                value={leadFilter} \n                onChange={(e) => setLeadFilter(e.target.value)}\n                className=\"text-sm border rounded px-2 py-1\"\n              >\n                <option value=\"all\">All Leads</option>\n                <option value=\"new\">New</option>\n                <option value=\"contacted\">Contacted</option>\n                <option value=\"qualified\">Qualified</option>\n                <option value=\"converted\">Converted</option>\n                <option value=\"lost\">Lost</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {leads\n              .filter(lead => leadFilter === 'all' || lead.status === leadFilter)\n              .map((lead) => (\n              <div key={lead.id} className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{lead.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{lead.company}</p>\n                    <p className=\"text-xs text-gray-500\">{lead.source}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <span className={`px-2 py-1 rounded text-xs ${\n                      lead.status === 'new' ? 'bg-gray-100 text-gray-800' :\n                      lead.status === 'contacted' ? 'bg-blue-100 text-blue-800' :\n                      lead.status === 'qualified' ? 'bg-yellow-100 text-yellow-800' :\n                      lead.status === 'converted' ? 'bg-green-100 text-green-800' :\n                      'bg-red-100 text-red-800'\n                    }`}>\n                      {lead.status}\n                    </span>\n                    <p className=\"text-sm font-bold mt-1\">${lead.value.toLocaleString()}</p>\n                  </div>\n                </div>\n                <div className=\"flex justify-between items-center text-xs text-gray-600\">\n                  <span>Created: {lead.createdDate}</span>\n                  {lead.assignedAgent && (\n                    <span>Agent: {agents.find(a => a.id === lead.assignedAgent)?.name}</span>\n                  )}\n                </div>\n                <div className=\"flex gap-2 mt-2\">\n                  <button\n                    onClick={() => {\n                      setSelectedLead(lead);\n                      setShowAssignLeadModal(true);\n                    }}\n                    className=\"bg-blue-100 text-blue-700 px-2 py-1 rounded text-xs hover:bg-blue-200\"\n                  >\n                    {lead.assignedAgent ? 'Reassign' : 'Assign'}\n                  </button>\n                  <button className=\"bg-green-100 text-green-700 px-2 py-1 rounded text-xs hover:bg-green-200\">\n                    Contact\n                  </button>\n                  <button className=\"bg-purple-100 text-purple-700 px-2 py-1 rounded text-xs hover:bg-purple-200\">\n                    Notes\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Sales Agent Performance */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Sales Agent Performance</h3>\n          <div className=\"space-y-4\">\n            {agents.map((agent) => (\n              <div key={agent.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <div>\n                    <h4 className=\"font-medium\">{agent.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{agent.email}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className={`text-lg font-bold ${\n                  agent.conversionRate >= 35 ? 'text-green-600' :\n                  agent.conversionRate >= 25 ? 'text-yellow-600' :\n                  'text-red-600'\n                }`}>\n                      {agent.conversionRate}%\n                    </div>\n                    <p className=\"text-xs text-gray-500\">Conversion Rate</p>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-gray-600\">Assigned: {agent.leadsAssigned}</p>\n                    <p className=\"text-gray-600\">Converted: {agent.leadsConverted}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Active: {leads.filter(l => l.assignedAgent === agent.id && ['new', 'contacted', 'qualified'].includes(l.status)).length}</p>\n                    <p className=\"text-gray-600\">Pipeline: ${leads.filter(l => l.assignedAgent === agent.id).reduce((sum, l) => sum + l.value, 0).toLocaleString()}</p>\n                  </div>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2 mt-3\">\n                  <div \n                    className={`h-2 rounded-full ${\n                      agent.conversionRate >= 35 ? 'bg-green-500' :\n                      agent.conversionRate >= 25 ? 'bg-yellow-500' :\n                      'bg-red-500'\n                    }`}\n                    style={{ width: `${Math.min(agent.conversionRate * 2, 100)}%` }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Lead Source Performance */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Lead Source Performance</h3>\n          <div className=\"space-y-4\">\n            {leadSources.map((source) => (\n              <div key={source.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <h4 className=\"font-medium\">{source.name}</h4>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    source.roi > 1000 ? 'bg-green-100 text-green-800' :\n                    source.roi > 500 ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {source.roi}% ROI\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-gray-600\">Leads: {source.leads}</p>\n                    <p className=\"text-gray-600\">Conversions: {source.conversions}</p>\n                    <p className=\"text-gray-600\">Conv. Rate: {Math.round((source.conversions / source.leads) * 100)}%</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Revenue: {formatCurrency(source.revenue)}</p>\n                    <p className=\"text-gray-600\">Cost: {formatCurrency(source.cost)}</p>\n                    <p className=\"text-gray-600\">Profit: {formatCurrency(source.revenue - source.cost)}</p>\n                  </div>\n                </div>\n                <div className=\"mt-3\">\n                  <div className=\"flex justify-between text-xs text-gray-600 mb-1\">\n                    <span>Performance</span>\n                    <span>{Math.round((source.conversions / source.leads) * 100)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className={`h-2 rounded-full ${\n                        (source.conversions / source.leads) > 0.3 ? 'bg-green-500' :\n                        (source.conversions / source.leads) > 0.2 ? 'bg-yellow-500' :\n                        'bg-red-500'\n                      }`}\n                      style={{ width: `${Math.min((source.conversions / source.leads) * 100 * 3, 100)}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Proposals & Quotes */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Proposals & Quotes</h3>\n          <div className=\"space-y-3\">\n            {proposals.map((proposal) => (\n              <div key={proposal.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{proposal.clientName}</h4>\n                    <p className=\"text-sm text-gray-600\">{proposal.projectType}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    proposal.status === 'approved' ? 'bg-green-100 text-green-800' :\n                    proposal.status === 'sent' ? 'bg-blue-100 text-blue-800' :\n                    proposal.status === 'rejected' ? 'bg-red-100 text-red-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {proposal.status}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm mb-2\">\n                  <p className=\"font-bold\">{formatCurrency(proposal.value)}</p>\n                  <p className=\"text-gray-600\">Expires: {proposal.expiryDate}</p>\n                </div>\n                <div className=\"text-xs text-gray-600 mb-3\">\n                  <p>Created: {proposal.createdDate}</p>\n                  {proposal.status === 'sent' && (\n                    <p className=\"text-yellow-600\">⏰ Awaiting client response</p>\n                  )}\n                </div>\n                <div className=\"flex gap-2\">\n                  <button\n                    onClick={() => {\n                      setSelectedProposal(proposal);\n                      setShowViewProposalModal(true);\n                    }}\n                    className=\"bg-blue-100 text-blue-700 px-3 py-1 rounded text-xs hover:bg-blue-200\"\n                  >\n                    View\n                  </button>\n                  {proposal.status === 'draft' && (\n                    <button\n                      onClick={() => {\n                        setSelectedProposal(proposal);\n                        setShowEditProposalModal(true);\n                      }}\n                      className=\"bg-green-100 text-green-700 px-3 py-1 rounded text-xs hover:bg-green-200\"\n                    >\n                      Edit\n                    </button>\n                  )}\n                  {proposal.status === 'sent' && (\n                    <button className=\"bg-yellow-100 text-yellow-700 px-3 py-1 rounded text-xs hover:bg-yellow-200\">\n                      Follow Up\n                    </button>\n                  )}\n                  <button className=\"bg-purple-100 text-purple-700 px-3 py-1 rounded text-xs hover:bg-purple-200\">\n                    Duplicate\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Sales Forecasting */}\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Sales Forecasting & Analytics</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <div className=\"border rounded-lg p-4\">\n            <h4 className=\"font-medium mb-3\">Monthly Forecast</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Projected Revenue</span>\n                <span className=\"font-bold\">${(leads.filter(l => l.status === 'qualified').reduce((sum, l) => sum + l.value, 0) * 0.7).toLocaleString()}</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Confidence Level</span>\n                <span className=\"text-green-600 font-medium\">78%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Expected Deals</span>\n                <span className=\"font-medium\">{Math.round(leads.filter(l => l.status === 'qualified').length * 0.7)}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border rounded-lg p-4\">\n            <h4 className=\"font-medium mb-3\">Pipeline Health</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Pipeline Velocity</span>\n                <span className=\"font-bold\">32 days</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Win Rate</span>\n                <span className=\"text-green-600 font-medium\">{Math.round((leads.filter(l => l.status === 'converted').length / leads.length) * 100)}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Avg Deal Size</span>\n                <span className=\"font-medium\">${Math.round(leads.reduce((sum, l) => sum + l.value, 0) / leads.length).toLocaleString()}</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border rounded-lg p-4\">\n            <h4 className=\"font-medium mb-3\">Performance Trends</h4>\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">MoM Growth</span>\n                <span className=\"text-green-600 font-bold\">+12.5%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Lead Quality</span>\n                <span className=\"text-blue-600 font-medium\">Improving</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm text-gray-600\">Team Efficiency</span>\n                <span className=\"text-green-600 font-medium\">+8.3%</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderManagement = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Management Dashboard</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Team Capacity & Utilization</h3>\n          <div className=\"space-y-4\">\n            {teamMembers.map((member) => (\n              <div key={member.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{member.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{member.role}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    member.availability === 'available' ? 'bg-green-100 text-green-800' :\n                    member.availability === 'busy' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {member.availability}\n                  </span>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Utilization</span>\n                    <span>{member.utilization}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className={`h-2 rounded-full ${\n                        member.utilization > 90 ? 'bg-red-500' :\n                        member.utilization > 75 ? 'bg-yellow-500' :\n                        'bg-green-500'\n                      }`}\n                      style={{ width: `${member.utilization}%` }}\n                    ></div>\n                  </div>\n                  <p className=\"text-sm text-gray-600\">{member.currentProjects} active projects</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Client Health Scores</h3>\n          <div className=\"space-y-3\">\n            {clientHealthScores.map((client) => (\n              <div key={client.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{client.clientName}</h4>\n                    <p className=\"text-sm text-gray-600\">Last contact: {client.lastContact}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className={`text-2xl font-bold ${\n                      client.status === 'excellent' ? 'text-green-600' :\n                      client.status === 'good' ? 'text-blue-600' :\n                      client.status === 'at-risk' ? 'text-yellow-600' :\n                      'text-red-600'\n                    }`}>\n                      {client.score}\n                    </div>\n                    <span className={`px-2 py-1 rounded text-xs ${\n                      client.status === 'excellent' ? 'bg-green-100 text-green-800' :\n                      client.status === 'good' ? 'bg-blue-100 text-blue-800' :\n                      client.status === 'at-risk' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-red-100 text-red-800'\n                    }`}>\n                      {client.status}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-gray-600\">Project Progress: {client.projectProgress}%</p>\n                  </div>\n                  <div>\n                    <p className={`${\n                      client.paymentStatus === 'current' ? 'text-green-600' :\n                      client.paymentStatus === 'pending' ? 'text-yellow-600' :\n                      'text-red-600'\n                    }`}>\n                      Payment: {client.paymentStatus}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderQuality = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Quality Management</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">QA Checklists & Workflows</h3>\n          <div className=\"space-y-4\">\n            {qaChecklists.map((checklist) => (\n              <div key={checklist.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <div>\n                    <h4 className=\"font-medium\">{checklist.projectName}</h4>\n                    <p className=\"text-sm text-gray-600 capitalize\">{checklist.type.replace('-', ' ')}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    checklist.status === 'approved' ? 'bg-green-100 text-green-800' :\n                    checklist.status === 'in-review' ? 'bg-blue-100 text-blue-800' :\n                    checklist.status === 'rejected' ? 'bg-red-100 text-red-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {checklist.status}\n                  </span>\n                </div>\n                <div className=\"space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span>Progress</span>\n                    <span>{checklist.overallProgress}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div \n                      className=\"bg-blue-500 h-2 rounded-full\"\n                      style={{ width: `${checklist.overallProgress}%` }}\n                    ></div>\n                  </div>\n                  <div className=\"space-y-1\">\n                    {checklist.items.map((item) => (\n                      <div key={item.id} className=\"flex items-center justify-between text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          {item.completed ? (\n                            <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                          ) : (\n                            <Clock className=\"h-4 w-4 text-gray-400\" />\n                          )}\n                          <span className={item.completed ? 'line-through text-gray-500' : ''}>\n                            {item.description}\n                          </span>\n                        </div>\n                        <span className=\"text-gray-500\">{item.assignee}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Client Satisfaction (NPS)</h3>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-3 gap-4 text-center\">\n              <div className=\"p-3 bg-green-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-green-600\">67%</div>\n                <div className=\"text-sm text-gray-600\">Promoters</div>\n              </div>\n              <div className=\"p-3 bg-yellow-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-yellow-600\">25%</div>\n                <div className=\"text-sm text-gray-600\">Passives</div>\n              </div>\n              <div className=\"p-3 bg-red-50 rounded-lg\">\n                <div className=\"text-2xl font-bold text-red-600\">8%</div>\n                <div className=\"text-sm text-gray-600\">Detractors</div>\n              </div>\n            </div>\n            \n            <div className=\"space-y-3\">\n              {npsSurveys.map((survey) => (\n                <div key={survey.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h4 className=\"font-medium\">{survey.clientName}</h4>\n                      <p className=\"text-sm text-gray-600\">{survey.projectName}</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className={`text-xl font-bold ${\n                        survey.category === 'promoter' ? 'text-green-600' :\n                        survey.category === 'passive' ? 'text-yellow-600' :\n                        'text-red-600'\n                      }`}>\n                        {survey.score}/10\n                      </div>\n                      <span className={`px-2 py-1 rounded text-xs ${\n                        survey.category === 'promoter' ? 'bg-green-100 text-green-800' :\n                        survey.category === 'passive' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-red-100 text-red-800'\n                      }`}>\n                        {survey.category}\n                      </span>\n                    </div>\n                  </div>\n                  <p className=\"text-sm text-gray-700 italic\">\"{survey.feedback}\"</p>\n                  <p className=\"text-xs text-gray-500 mt-2\">{survey.date}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderCompliance = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Compliance Management</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Contract & SOW Management</h3>\n          <div className=\"space-y-3\">\n            {contracts.map((contract) => (\n              <div key={contract.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{contract.clientName}</h4>\n                    <p className=\"text-sm text-gray-600\">{contract.type}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    contract.status === 'active' ? 'bg-green-100 text-green-800' :\n                    contract.status === 'pending-renewal' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {contract.status}\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-gray-600\">Start: {contract.startDate}</p>\n                    <p className=\"text-gray-600\">End: {contract.endDate}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Value: ${contract.value.toLocaleString()}</p>\n                    {contract.renewalDate && (\n                      <p className=\"text-yellow-600\">Renewal: {contract.renewalDate}</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">GDPR/CCPA Compliance</h3>\n          <div className=\"space-y-3\">\n            {complianceRecords.map((record) => (\n              <div key={record.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium uppercase\">{record.type}</h4>\n                    <p className=\"text-sm text-gray-600\">{record.description}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    record.status === 'compliant' ? 'bg-green-100 text-green-800' :\n                    record.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {record.status}\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-gray-600\">Last Review: {record.lastReview}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Next Review: {record.nextReview}</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSecurity = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Security & Access Control</h2>\n\n      {/* Role Management Section */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Predefined Roles */}\n        <div className=\"lg:col-span-2 bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Predefined Roles</h3>\n            <div className=\"flex gap-2\">\n              <button \n                onClick={() => setShowCreateRoleModal(true)}\n                className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700 flex items-center gap-1\"\n              >\n                <Plus className=\"h-3 w-3\" /> Create Custom Role\n              </button>\n              <button \n                onClick={() => setShowAddRoleModal(true)}\n                className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700 flex items-center gap-1\"\n              >\n                <UserPlus className=\"h-3 w-3\" /> Assign Role\n              </button>\n            </div>\n          </div>\n          \n          {/* Role Categories */}\n          {['administrative', 'management', 'operational', 'external', 'client'].map((category) => (\n            <div key={category} className=\"mb-6\">\n              <h4 className=\"text-md font-medium text-gray-700 mb-3 capitalize\">{category} Roles</h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {predefinedRoles.filter(role => role.category === category).map((role) => (\n                  <div key={role.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <div>\n                        <h5 className=\"font-medium\">{role.name}</h5>\n                        <p className=\"text-sm text-gray-600\">{role.description}</p>\n                      </div>\n                      <button\n                        onClick={() => {\n                          setSelectedRole(role);\n                          setShowPermissionModal(true);\n                        }}\n                        className=\"text-blue-600 hover:text-blue-800 text-sm flex items-center gap-1\"\n                      >\n                        <Settings className=\"h-3 w-3\" /> Manage\n                      </button>\n                    </div>\n                    <div className=\"flex flex-wrap gap-1 mt-2\">\n                      {role.permissions.slice(0, 3).map((permission, index) => (\n                        <span key={index} className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\">\n                          {permission === 'all' ? 'All Permissions' : permission.replace('_', ' ')}\n                        </span>\n                      ))}\n                      {role.permissions.length > 3 && (\n                        <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded\">\n                          +{role.permissions.length - 3} more\n                        </span>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Current User Roles */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Active User Roles</h3>\n          <div className=\"space-y-3\">\n            {userRoles.map((role) => (\n              <div key={role.id} className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium text-sm\">{role.name}</h4>\n                    <p className=\"text-xs text-gray-600\">{role.description}</p>\n                  </div>\n                  <span className=\"text-xs font-medium bg-gray-100 px-2 py-1 rounded\">\n                    {role.userCount} users\n                  </span>\n                </div>\n                <div className=\"flex flex-wrap gap-1 mt-2\">\n                  {role.permissions.slice(0, 2).map((permission, index) => (\n                    <span key={index} className=\"px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded\">\n                      {permission === 'all' ? 'All' : permission.replace('_', ' ')}\n                    </span>\n                  ))}\n                  {role.permissions.length > 2 && (\n                    <span className=\"px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded\">\n                      +{role.permissions.length - 2}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      {/* Security Monitoring */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Audit Logs */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Security Audit Logs</h3>\n            <button className=\"text-blue-600 hover:text-blue-800 text-sm flex items-center gap-1\">\n              <Download className=\"h-3 w-3\" /> Export Logs\n            </button>\n          </div>\n          <div className=\"space-y-3 max-h-96 overflow-y-auto\">\n            {auditLogs.map((log) => (\n              <div key={log.id} className=\"border rounded-lg p-3\">\n                <div className=\"flex justify-between items-start mb-1\">\n                  <div className=\"flex items-center gap-2\">\n                    <History className=\"h-4 w-4 text-gray-500\" />\n                    <span className=\"font-medium text-sm\">{log.userName}</span>\n                  </div>\n                  <span className=\"text-xs text-gray-500\">{log.timestamp}</span>\n                </div>\n                <div className=\"text-sm text-gray-700 mb-1\">\n                  <span className=\"font-medium\">{log.action}</span> on {log.resource}\n                </div>\n                <div className=\"text-xs text-gray-500\">\n                  IP: {log.ipAddress} • {log.details}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Security Settings */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Security Settings</h3>\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n              <div>\n                <h4 className=\"font-medium text-sm\">Two-Factor Authentication</h4>\n                <p className=\"text-xs text-gray-600\">Require 2FA for all admin accounts</p>\n              </div>\n              <div className=\"flex items-center\">\n                <span className=\"text-xs text-green-600 mr-2\">Enabled</span>\n                <div className=\"w-8 h-4 bg-green-500 rounded-full relative\">\n                  <div className=\"w-3 h-3 bg-white rounded-full absolute top-0.5 right-0.5\"></div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n              <div>\n                <h4 className=\"font-medium text-sm\">Session Timeout</h4>\n                <p className=\"text-xs text-gray-600\">Auto-logout after inactivity</p>\n              </div>\n              <select className=\"text-xs border rounded px-2 py-1\">\n                <option>30 minutes</option>\n                <option>1 hour</option>\n                <option>2 hours</option>\n                <option>4 hours</option>\n              </select>\n            </div>\n            \n            <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n              <div>\n                <h4 className=\"font-medium text-sm\">Password Policy</h4>\n                <p className=\"text-xs text-gray-600\">Minimum 8 chars, special characters</p>\n              </div>\n              <button className=\"text-blue-600 hover:text-blue-800 text-xs\">\n                Configure\n              </button>\n            </div>\n            \n            <div className=\"flex justify-between items-center p-3 border rounded-lg\">\n              <div>\n                <h4 className=\"font-medium text-sm\">IP Whitelist</h4>\n                <p className=\"text-xs text-gray-600\">Restrict access by IP address</p>\n              </div>\n              <button className=\"text-blue-600 hover:text-blue-800 text-xs\">\n                Manage\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderDataTools = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Data Import/Export Tools</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Data Exports</h3>\n            <button \n              onClick={() => setShowNewExportModal(true)}\n              className=\"bg-green-600 text-white px-3 py-1 rounded text-sm hover:bg-green-700 flex items-center gap-1\"\n            >\n              <Download className=\"h-3 w-3\" /> New Export\n            </button>\n          </div>\n          <div className=\"space-y-3\">\n            {dataExports.map((exportItem) => (\n              <div key={exportItem.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium capitalize\">{exportItem.type} Export</h4>\n                    <p className=\"text-sm text-gray-600\">Created by {exportItem.createdBy}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    exportItem.status === 'completed' ? 'bg-green-100 text-green-800' :\n                    exportItem.status === 'processing' ? 'bg-blue-100 text-blue-800' :\n                    exportItem.status === 'failed' ? 'bg-red-100 text-red-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {exportItem.status}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <div>\n                    <span className=\"text-gray-600\">Format: </span>\n                    <span className=\"font-medium uppercase\">{exportItem.format}</span>\n                  </div>\n                  <div>\n                    {exportItem.status === 'completed' && exportItem.downloadUrl ? (\n                      <button \n                        onClick={() => window.open(exportItem.downloadUrl, '_blank')}\n                        className=\"text-blue-600 hover:text-blue-800 flex items-center gap-1\"\n                      >\n                        <Download className=\"h-3 w-3\" /> Download\n                      </button>\n                    ) : (\n                      <span className=\"text-gray-500\">{exportItem.createdAt}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Custom Reports</h3>\n            <button \n              onClick={() => setShowCreateReportModal(true)}\n              className=\"bg-purple-600 text-white px-3 py-1 rounded text-sm hover:bg-purple-700 flex items-center gap-1\"\n            >\n              <Plus className=\"h-3 w-3\" /> Create Report\n            </button>\n          </div>\n          <div className=\"space-y-3\">\n            {customReports.map((report) => (\n              <div key={report.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{report.name}</h4>\n                    <p className=\"text-sm text-gray-600 capitalize\">{report.type} • {report.schedule}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    report.status === 'active' ? 'bg-green-100 text-green-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {report.status}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600\">\n                  <p>Recipients: {report.recipients.length}</p>\n                  <p>Last run: {report.lastRun}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderCommunications = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Communications & Marketing</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Email Campaigns</h3>\n            <button \n              onClick={() => setShowNewCampaignModal(true)}\n              className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700 flex items-center gap-1\"\n            >\n              <Mail className=\"h-3 w-3\" /> New Campaign\n            </button>\n          </div>\n          <div className=\"space-y-3\">\n            {emailCampaigns.map((campaign) => (\n              <div key={campaign.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{campaign.name}</h4>\n                    <p className=\"text-sm text-gray-600 capitalize\">{campaign.type}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    campaign.status === 'sent' ? 'bg-green-100 text-green-800' :\n                    campaign.status === 'scheduled' ? 'bg-blue-100 text-blue-800' :\n                    campaign.status === 'draft' ? 'bg-gray-100 text-gray-800' :\n                    'bg-yellow-100 text-yellow-800'\n                  }`}>\n                    {campaign.status}\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-3 gap-2 text-sm\">\n                  <div>\n                    <p className=\"text-gray-600\">Recipients</p>\n                    <p className=\"font-medium\">{campaign.recipients}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Open Rate</p>\n                    <p className=\"font-medium\">{campaign.openRate}%</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Click Rate</p>\n                    <p className=\"font-medium\">{campaign.clickRate}%</p>\n                  </div>\n                </div>\n                {campaign.scheduledDate && (\n                  <p className=\"text-xs text-blue-600 mt-2\">Scheduled: {campaign.scheduledDate}</p>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Knowledge Base</h3>\n          <div className=\"space-y-3\">\n            {knowledgeBase.map((article) => (\n              <div key={article.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{article.title}</h4>\n                    <p className=\"text-sm text-gray-600\">by {article.author}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    article.status === 'published' ? 'bg-green-100 text-green-800' :\n                    article.status === 'draft' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {article.status}\n                  </span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <div className=\"flex items-center gap-4\">\n                    <span className=\"text-gray-600 capitalize\">{article.category}</span>\n                    <span className=\"text-gray-600 flex items-center gap-1\">\n                      <Eye className=\"h-3 w-3\" /> {article.views}\n                    </span>\n                  </div>\n                  <span className=\"text-gray-500\">{article.lastUpdated}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderSystemMonitoring = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">System Monitoring</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">System Health</h3>\n          <div className=\"space-y-3\">\n            {systemHealth.map((component) => (\n              <div key={component.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <Server className=\"h-4 w-4 text-gray-500\" />\n                    <h4 className=\"font-medium\">{component.component}</h4>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    component.status === 'healthy' ? 'bg-green-100 text-green-800' :\n                    component.status === 'warning' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {component.status}\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm mb-2\">\n                  <div>\n                    <p className=\"text-gray-600\">Uptime: {component.uptime}%</p>\n                    <p className=\"text-gray-600\">Response: {component.responseTime}ms</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Last Check: {component.lastCheck}</p>\n                  </div>\n                </div>\n                {component.issues && component.issues.length > 0 && (\n                  <div className=\"mt-2\">\n                    <p className=\"text-xs text-red-600 font-medium\">Issues:</p>\n                    {component.issues.map((issue, index) => (\n                      <p key={index} className=\"text-xs text-red-600\">• {issue}</p>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Integration Management</h3>\n          <div className=\"space-y-3\">\n            {integrations.map((integration) => (\n              <div key={integration.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <Plug className=\"h-4 w-4 text-gray-500\" />\n                    <div>\n                      <h4 className=\"font-medium\">{integration.name}</h4>\n                      <p className=\"text-sm text-gray-600 capitalize\">{integration.type}</p>\n                    </div>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    integration.status === 'connected' ? 'bg-green-100 text-green-800' :\n                    integration.status === 'error' ? 'bg-red-100 text-red-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {integration.status}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600\">\n                  <p>Last sync: {integration.lastSync}</p>\n                  <div className=\"flex justify-between mt-1\">\n                    <span>API calls: {integration.apiCalls}/{integration.monthlyLimit}</span>\n                    <span>{Math.round((integration.apiCalls / integration.monthlyLimit) * 100)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-1 mt-1\">\n                    <div \n                      className={`h-1 rounded-full ${\n                        (integration.apiCalls / integration.monthlyLimit) > 0.8 ? 'bg-red-500' :\n                        (integration.apiCalls / integration.monthlyLimit) > 0.6 ? 'bg-yellow-500' :\n                        'bg-green-500'\n                      }`}\n                      style={{ width: `${(integration.apiCalls / integration.monthlyLimit) * 100}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // New Operational Features Render Functions\n  const renderOperationalIntelligence = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Operational Intelligence</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Manual Task Identification</h3>\n            <button \n              onClick={() => setShowAddTaskModal(true)}\n              className=\"bg-blue-600 text-white px-3 py-1 rounded text-sm hover:bg-blue-700 flex items-center gap-1\"\n            >\n              <Plus className=\"h-3 w-3\" /> Add Task\n            </button>\n          </div>\n          <div className=\"space-y-3\">\n            {manualTasks.map((task) => (\n              <div key={task.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{task.description}</h4>\n                    <p className=\"text-sm text-gray-600\">{task.assignee} • {task.frequency}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    task.automationPotential === 'high' ? 'bg-red-100 text-red-800' :\n                    task.automationPotential === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-green-100 text-green-800'\n                  }`}>\n                    {task.automationPotential} potential\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-gray-600\">Time spent: {task.timeSpent} min</p>\n                    <p className=\"text-gray-600\">Savings: {task.estimatedSavings}h/month</p>\n                  </div>\n                  <div>\n                    <span className={`px-2 py-1 rounded text-xs ${\n                      task.status === 'automated' ? 'bg-green-100 text-green-800' :\n                      task.status === 'automating' ? 'bg-blue-100 text-blue-800' :\n                      task.status === 'analyzing' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-gray-100 text-gray-800'\n                    }`}>\n                      {task.status}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Sales KPIs</h3>\n          <div className=\"space-y-3\">\n            {salesKPIs.map((kpi) => (\n              <div key={kpi.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{kpi.name}</h4>\n                    <p className=\"text-sm text-gray-600\">{kpi.period}</p>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {kpi.trend === 'up' ? (\n                      <TrendingUp className=\"h-4 w-4 text-green-500\" />\n                    ) : kpi.trend === 'down' ? (\n                      <TrendingDown className=\"h-4 w-4 text-red-500\" />\n                    ) : (\n                      <Gauge className=\"h-4 w-4 text-gray-500\" />\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between items-center\">\n                  <div>\n                    <p className=\"text-2xl font-bold\">{kpi.currentValue.toLocaleString()}{kpi.unit}</p>\n                    <p className=\"text-sm text-gray-600\">Target: {kpi.target.toLocaleString()}{kpi.unit}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className={`text-sm font-medium ${\n                      kpi.currentValue >= kpi.target ? 'text-green-600' : 'text-red-600'\n                    }`}>\n                      {Math.round((kpi.currentValue / kpi.target) * 100)}%\n                    </div>\n                  </div>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\n                  <div \n                    className={`h-2 rounded-full ${\n                      kpi.currentValue >= kpi.target ? 'bg-green-500' : 'bg-blue-500'\n                    }`}\n                    style={{ width: `${Math.min((kpi.currentValue / kpi.target) * 100, 100)}%` }}\n                  ></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderTeamOptimization = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Team Optimization</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Skill Matrix Management</h3>\n          <div className=\"space-y-4\">\n            {skillMatrix.map((employee) => (\n              <div key={employee.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-3\">\n                  <div>\n                    <h4 className=\"font-medium\">{employee.employeeName}</h4>\n                    <span className={`px-2 py-1 rounded text-xs ${\n                      employee.availability === 'available' ? 'bg-green-100 text-green-800' :\n                      employee.availability === 'busy' ? 'bg-yellow-100 text-yellow-800' :\n                      'bg-blue-100 text-blue-800'\n                    }`}>\n                      {employee.availability}\n                    </span>\n                  </div>\n                  <button \n                    onClick={() => {\n                      setSelectedEmployee(employee);\n                      setShowEditSkillModal(true);\n                    }}\n                    className=\"text-blue-600 hover:text-blue-800\"\n                  >\n                    <Edit className=\"h-4 w-4\" />\n                  </button>\n                </div>\n                <div className=\"space-y-2\">\n                  {employee.skills.map((skill, index) => (\n                    <div key={index} className=\"flex justify-between items-center text-sm\">\n                      <div className=\"flex items-center gap-2\">\n                        <span>{skill.skillName}</span>\n                        {skill.certified && <CheckSquare className=\"h-3 w-3 text-green-500\" />}\n                      </div>\n                      <span className={`px-2 py-1 rounded text-xs ${\n                        skill.level === 'expert' ? 'bg-purple-100 text-purple-800' :\n                        skill.level === 'advanced' ? 'bg-blue-100 text-blue-800' :\n                        skill.level === 'intermediate' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {skill.level}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n                <div className=\"mt-3 text-sm text-gray-600\">\n                  <p>Current Projects: {employee.currentProjects.join(', ')}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Vendor/Contractor Management</h3>\n          <div className=\"space-y-3\">\n            {vendorContractors.map((vendor) => (\n              <div key={vendor.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{vendor.name}</h4>\n                    <p className=\"text-sm text-gray-600 capitalize\">{vendor.type}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    vendor.paymentStatus === 'current' ? 'bg-green-100 text-green-800' :\n                    vendor.paymentStatus === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {vendor.paymentStatus}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600 mb-2\">\n                  <p>Services: {vendor.services.join(', ')}</p>\n                  <p>Contract: ${vendor.contractValue.toLocaleString()}</p>\n                </div>\n                <div className=\"flex justify-between items-center text-sm\">\n                  <div>\n                    <p>Performance: {vendor.performanceScore}%</p>\n                    <p>Next Payment: {vendor.nextPayment}</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className={`font-medium ${\n                      vendor.performanceScore >= 90 ? 'text-green-600' :\n                      vendor.performanceScore >= 70 ? 'text-yellow-600' :\n                      'text-red-600'\n                    }`}>\n                      {vendor.performanceScore >= 90 ? 'Excellent' :\n                     vendor.performanceScore >= 70 ? 'Good' : 'Needs Improvement'}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderRiskManagement = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Risk Management</h2>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Process Bottleneck Detection</h3>\n          <div className=\"space-y-3\">\n            {processBottlenecks.map((bottleneck) => (\n              <div key={bottleneck.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{bottleneck.processName}</h4>\n                    <p className=\"text-sm text-gray-600\">{bottleneck.stage}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    bottleneck.impact === 'high' ? 'bg-red-100 text-red-800' :\n                    bottleneck.impact === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-green-100 text-green-800'\n                  }`}>\n                    {bottleneck.impact} impact\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600 mb-2\">\n                  <p>Avg Wait Time: {bottleneck.avgWaitTime}h</p>\n                  <p>Affected Projects: {bottleneck.affectedProjects}</p>\n                  <p>Root Cause: {bottleneck.rootCause}</p>\n                </div>\n                <div className=\"text-sm\">\n                  <p className=\"font-medium text-blue-600\">Suggested Solution:</p>\n                  <p className=\"text-gray-600\">{bottleneck.suggestedSolution}</p>\n                </div>\n                <div className=\"mt-2\">\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    bottleneck.status === 'resolved' ? 'bg-green-100 text-green-800' :\n                    bottleneck.status === 'resolving' ? 'bg-blue-100 text-blue-800' :\n                    bottleneck.status === 'investigating' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-gray-100 text-gray-800'\n                  }`}>\n                    {bottleneck.status}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Project Risk Assessment</h3>\n          <div className=\"space-y-3\">\n            {projectRisks.map((risk) => (\n              <div key={risk.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{risk.projectName}</h4>\n                    <p className=\"text-sm text-gray-600 capitalize\">{risk.riskType} risk</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    risk.severity === 'critical' ? 'bg-red-100 text-red-800' :\n                    risk.severity === 'high' ? 'bg-orange-100 text-orange-800' :\n                    risk.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-green-100 text-green-800'\n                  }`}>\n                    {risk.severity}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600 mb-2\">\n                  <p>Probability: {risk.probability}%</p>\n                  <p>Impact: {risk.impact}</p>\n                  <p>Owner: {risk.owner}</p>\n                </div>\n                <div className=\"text-sm\">\n                  <p className=\"font-medium text-blue-600\">Mitigation:</p>\n                  <p className=\"text-gray-600\">{risk.mitigation}</p>\n                </div>\n                <div className=\"mt-2\">\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    risk.status === 'closed' ? 'bg-green-100 text-green-800' :\n                    risk.status === 'mitigated' ? 'bg-blue-100 text-blue-800' :\n                    risk.status === 'monitoring' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {risk.status}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Client Payment Risk</h3>\n          <div className=\"space-y-3\">\n            {clientPaymentRisks.map((client) => (\n              <div key={client.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{client.clientName}</h4>\n                    <p className=\"text-sm text-gray-600\">Risk Score: {client.riskScore}/100</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    client.riskScore >= 70 ? 'bg-red-100 text-red-800' :\n                      client.riskScore >= 40 ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-green-100 text-green-800'\n                  }`}>\n                    {client.riskScore >= 70 ? 'High Risk' :\n                     client.riskScore >= 40 ? 'Medium Risk' : 'Low Risk'}\n                  </span>\n                </div>\n                <div className=\"text-sm text-gray-600 mb-2\">\n                  <p>Outstanding: ${client.outstandingAmount.toLocaleString()}</p>\n                  <p>Days Past Due: {client.daysPastDue}</p>\n                  <p>Payment History: {client.paymentHistory}</p>\n                </div>\n                <div className=\"text-sm\">\n                  <p className=\"font-medium text-blue-600\">Recommended Action:</p>\n                  <p className=\"text-gray-600\">{client.recommendedAction}</p>\n                </div>\n                <div className=\"text-xs text-gray-500 mt-2\">\n                  Last Contact: {client.lastContact}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Workflow Performance Analytics</h3>\n          <div className=\"space-y-3\">\n            {workflowPerformance.map((workflow) => (\n              <div key={workflow.id} className=\"border rounded-lg p-4\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h4 className=\"font-medium\">{workflow.workflowName}</h4>\n                    <p className=\"text-sm text-gray-600 capitalize\">{workflow.type}</p>\n                  </div>\n                  <span className={`px-2 py-1 rounded text-xs ${\n                    workflow.status === 'healthy' ? 'bg-green-100 text-green-800' :\n                    workflow.status === 'warning' ? 'bg-yellow-100 text-yellow-800' :\n                    'bg-red-100 text-red-800'\n                  }`}>\n                    {workflow.status}\n                  </span>\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 text-sm mb-2\">\n                  <div>\n                    <p className=\"text-gray-600\">Success Rate: {workflow.successRate}%</p>\n                    <p className=\"text-gray-600\">Avg Time: {workflow.avgExecutionTime}min</p>\n                  </div>\n                  <div>\n                    <p className=\"text-gray-600\">Errors: {workflow.errorCount}</p>\n                    <p className=\"text-gray-600\">Last Run: {workflow.lastRun}</p>\n                  </div>\n                </div>\n                {workflow.improvements.length > 0 && (\n                  <div className=\"text-sm\">\n                    <p className=\"font-medium text-blue-600\">Improvements:</p>\n                    <ul className=\"text-gray-600 list-disc list-inside\">\n                      {workflow.improvements.map((improvement, index) => (\n                        <li key={index}>{improvement}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderAdvancedCompliance = () => (\n    <div className=\"space-y-6\">\n      <h2 className=\"text-2xl font-bold\">Advanced Compliance Monitoring</h2>\n\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Compliance Requirements Tracking</h3>\n        <div className=\"space-y-3\">\n          {complianceMonitoring.map((compliance) => (\n            <div key={compliance.id} className=\"border rounded-lg p-4\">\n              <div className=\"flex justify-between items-start mb-2\">\n                <div>\n                  <h4 className=\"font-medium\">{compliance.requirement}</h4>\n                  <p className=\"text-sm text-gray-600 capitalize\">{compliance.category}</p>\n                </div>\n                <span className={`px-2 py-1 rounded text-xs ${\n                  compliance.status === 'compliant' ? 'bg-green-100 text-green-800' :\n                  compliance.status === 'partial' ? 'bg-yellow-100 text-yellow-800' :\n                  'bg-red-100 text-red-800'\n                }`}>\n                  {compliance.status}\n                </span>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4 text-sm mb-2\">\n                <div>\n                  <p className=\"text-gray-600\">Last Audit: {compliance.lastAudit}</p>\n                  <p className=\"text-gray-600\">Next Audit: {compliance.nextAudit}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-600\">Responsible: {compliance.responsible}</p>\n                </div>\n              </div>\n              {compliance.findings.length > 0 && (\n                <div className=\"text-sm mb-2\">\n                  <p className=\"font-medium text-red-600\">Findings:</p>\n                  <ul className=\"text-gray-600 list-disc list-inside\">\n                    {compliance.findings.map((finding, index) => (\n                      <li key={index}>{finding}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n              {compliance.actionItems.length > 0 && (\n                <div className=\"text-sm\">\n                  <p className=\"font-medium text-blue-600\">Action Items:</p>\n                  <ul className=\"text-gray-600 list-disc list-inside\">\n                    {compliance.actionItems.map((action, index) => (\n                      <li key={index}>{action}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderLeads = () => {\n    const filteredLeads = leads.filter(lead => {\n      const matchesStatus = leadFilter === 'all' || lead.status === leadFilter;\n      const matchesAgent = agentFilter === 'all' || lead.assignedAgent === agentFilter;\n      const matchesSearch = lead.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           lead.company.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                           lead.email.toLowerCase().includes(searchTerm.toLowerCase());\n      return matchesStatus && matchesAgent && matchesSearch;\n    });\n\n    const unassignedLeads = leads.filter(lead => !lead.assignedAgent);\n    const totalLeadValue = filteredLeads.reduce((sum, lead) => sum + lead.value, 0);\n    const conversionRate = leads.filter(lead => lead.status === 'converted').length / leads.length * 100;\n\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex justify-between items-center\">\n          <h2 className=\"text-2xl font-bold\">Lead Management</h2>\n          <div className=\"flex gap-2\">\n            <button \n              onClick={() => setShowUploadLeadsModal(true)}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n            >\n              <Upload className=\"h-4 w-4\" /> Upload Leads\n            </button>\n            <button \n              onClick={() => setShowAssignLeadModal(true)}\n              className=\"bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 flex items-center gap-2\"\n            >\n              <UserPlus className=\"h-4 w-4\" /> Assign Lead\n            </button>\n          </div>\n        </div>\n\n        {/* Lead Statistics */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <StatCard\n            title=\"Total Leads\"\n            value={leads.length.toString()}\n            icon={<Users className=\"h-6 w-6 text-white\" />}\n            color=\"bg-blue-500\"\n          />\n          <StatCard\n            title=\"Unassigned Leads\"\n            value={unassignedLeads.length.toString()}\n            icon={<AlertTriangle className=\"h-6 w-6 text-white\" />}\n            color={unassignedLeads.length > 0 ? \"bg-red-500\" : \"bg-green-500\"}\n            change={unassignedLeads.length > 0 ? `${unassignedLeads.length} need assignment` : \"All assigned\"}\n          />\n          <StatCard\n            title=\"Total Value\"\n            value={`$${totalLeadValue.toLocaleString()}`}\n            icon={<DollarSign className=\"h-6 w-6 text-white\" />}\n            color=\"bg-green-500\"\n          />\n          <StatCard\n            title=\"Conversion Rate\"\n            value={`${conversionRate.toFixed(1)}%`}\n            icon={<TrendingUp className=\"h-6 w-6 text-white\" />}\n            color=\"bg-purple-500\"\n          />\n        </div>\n\n        {/* Filters and Search */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <div className=\"flex flex-wrap gap-4 mb-4\">\n            <div className=\"flex-1 min-w-64\">\n              <input\n                type=\"text\"\n                placeholder=\"Search leads...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full p-2 border rounded-lg\"\n              />\n            </div>\n            <select\n              value={leadFilter}\n              onChange={(e) => setLeadFilter(e.target.value)}\n              className=\"p-2 border rounded-lg\"\n            >\n              <option value=\"all\">All Status</option>\n              <option value=\"new\">New</option>\n              <option value=\"contacted\">Contacted</option>\n              <option value=\"qualified\">Qualified</option>\n              <option value=\"converted\">Converted</option>\n              <option value=\"lost\">Lost</option>\n            </select>\n            <select\n              value={agentFilter}\n              onChange={(e) => setAgentFilter(e.target.value)}\n              className=\"p-2 border rounded-lg\"\n            >\n              <option value=\"all\">All Agents</option>\n              <option value=\"\">Unassigned</option>\n              {agents.map(agent => (\n                <option key={agent.id} value={agent.id}>{agent.name}</option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Agent Performance */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Agent Performance</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {agents.map(agent => {\n              const agentLeads = leads.filter(lead => lead.assignedAgent === agent.id);\n              return (\n                <div key={agent.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"font-medium\">{agent.name}</h4>\n                    <span className=\"text-sm text-gray-600\">{agentLeads.length} leads</span>\n                  </div>\n                  <div className=\"space-y-1 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span>Assigned:</span>\n                      <span>{agent.leadsAssigned}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Converted:</span>\n                      <span>{agent.leadsConverted}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span>Rate:</span>\n                      <span className={`${agent.conversionRate >= 35 ? 'text-green-600' : agent.conversionRate >= 25 ? 'text-yellow-600' : 'text-red-600'}`}>\n                        {agent.conversionRate}%\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Leads Table */}\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold mb-4\">Leads ({filteredLeads.length})</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"border-b\">\n                  <th className=\"text-left p-2\">Name</th>\n                  <th className=\"text-left p-2\">Company</th>\n                  <th className=\"text-left p-2\">Contact</th>\n                  <th className=\"text-left p-2\">Source</th>\n                  <th className=\"text-left p-2\">Status</th>\n                  <th className=\"text-left p-2\">Assigned Agent</th>\n                  <th className=\"text-left p-2\">Value</th>\n                  <th className=\"text-left p-2\">Created</th>\n                  <th className=\"text-left p-2\">Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {filteredLeads.map(lead => {\n                  const agent = agents.find(a => a.id === lead.assignedAgent);\n                  return (\n                    <tr key={lead.id} className={`border-b hover:bg-gray-50 ${!lead.assignedAgent ? 'bg-red-50' : ''}`}>\n                      <td className=\"p-2\">\n                        <div>\n                          <div className=\"font-medium\">{lead.name}</div>\n                          <div className=\"text-sm text-gray-600\">{lead.email}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-2\">{lead.company}</td>\n                      <td className=\"p-2\">\n                        <div className=\"text-sm\">\n                          <div>{lead.phone}</div>\n                          <div className=\"text-gray-600\">{lead.email}</div>\n                        </div>\n                      </td>\n                      <td className=\"p-2\">{lead.source}</td>\n                      <td className=\"p-2\">\n                        <span className={`px-2 py-1 rounded text-xs ${\n                          lead.status === 'new' ? 'bg-blue-100 text-blue-800' :\n                          lead.status === 'contacted' ? 'bg-yellow-100 text-yellow-800' :\n                          lead.status === 'qualified' ? 'bg-purple-100 text-purple-800' :\n                          lead.status === 'converted' ? 'bg-green-100 text-green-800' :\n                          'bg-red-100 text-red-800'\n                        }`}>\n                          {lead.status}\n                        </span>\n                      </td>\n                      <td className=\"p-2\">\n                        {agent ? (\n                          <div className=\"text-sm\">\n                            <div>{agent.name}</div>\n                            <div className=\"text-gray-600\">{agent.email}</div>\n                          </div>\n                        ) : (\n                          <span className=\"text-red-600 font-medium\">Unassigned</span>\n                        )}\n                      </td>\n                      <td className=\"p-2\">{formatCurrency(lead.value)}</td>\n                      <td className=\"p-2 text-sm text-gray-600\">{lead.createdDate}</td>\n                      <td className=\"p-2\">\n                        <div className=\"flex gap-1\">\n                          <button \n                            onClick={() => {\n                              setSelectedLead(lead);\n                              setShowAssignLeadModal(true);\n                            }}\n                            className=\"p-1 text-blue-600 hover:bg-blue-100 rounded\"\n                            title=\"Assign/Reassign\"\n                          >\n                            <UserPlus className=\"h-4 w-4\" />\n                          </button>\n                          <button \n                            className=\"p-1 text-green-600 hover:bg-green-100 rounded\"\n                            title=\"Call\"\n                          >\n                            <Phone className=\"h-4 w-4\" />\n                          </button>\n                          <button \n                            className=\"p-1 text-gray-600 hover:bg-gray-100 rounded\"\n                            title=\"View Details\"\n                          >\n                            <Eye className=\"h-4 w-4\" />\n                          </button>\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderAnnouncementSystem = () => (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h2 className=\"text-2xl font-bold\">Internal Announcement System</h2>\n        <button \n          onClick={() => setShowCreateAnnouncementModal(true)}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center gap-2\"\n        >\n          <Plus className=\"h-4 w-4\" /> New Announcement\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <StatCard\n          title=\"Active Announcements\"\n          value={announcements.filter(a => a.isActive).length.toString()}\n          change=\"+2 this week\"\n          icon={<Bell className=\"h-6 w-6 text-white\" />}\n          color=\"bg-blue-500\"\n        />\n        <StatCard\n          title=\"Pending Acknowledgments\"\n          value={announcements.reduce((acc, a) => acc + a.readReceipts.filter(r => a.requiresAcknowledgment && !r.acknowledged).length, 0).toString()}\n          change=\"-5 from yesterday\"\n          icon={<CheckSquare className=\"h-6 w-6 text-white\" />}\n          color=\"bg-orange-500\"\n        />\n        <StatCard\n          title=\"Read Rate\"\n          value={`${Math.round((announcements.reduce((acc, a) => acc + a.readReceipts.length, 0) / (announcements.length * 10)) * 100)}%`}\n          change=\"+8% this month\"\n          icon={<Eye className=\"h-6 w-6 text-white\" />}\n          color=\"bg-green-500\"\n        />\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n        <h3 className=\"text-lg font-semibold mb-4\">Company Announcements</h3>\n        <div className=\"space-y-4\">\n          {announcements.map((announcement) => {\n            const totalEmployees = 10; // Mock total employee count\n            const readCount = announcement.readReceipts.length;\n            const acknowledgedCount = announcement.readReceipts.filter(r => r.acknowledged).length;\n            const readPercentage = Math.round((readCount / totalEmployees) * 100);\n            const acknowledgedPercentage = announcement.requiresAcknowledgment ? Math.round((acknowledgedCount / totalEmployees) * 100) : 100;\n\n            return (\n              <div key={announcement.id} className=\"border rounded-lg p-6\">\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-2\">\n                      <h4 className=\"text-lg font-semibold\">{announcement.title}</h4>\n                      <span className={`px-2 py-1 rounded text-xs font-medium ${\n                        announcement.priority === 'urgent' ? 'bg-red-100 text-red-800' :\n                        announcement.priority === 'high' ? 'bg-orange-100 text-orange-800' :\n                        announcement.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {announcement.priority}\n                      </span>\n                      <span className={`px-2 py-1 rounded text-xs ${\n                        announcement.category === 'emergency' ? 'bg-red-100 text-red-800' :\n                        announcement.category === 'policy' ? 'bg-blue-100 text-blue-800' :\n                        announcement.category === 'system' ? 'bg-purple-100 text-purple-800' :\n                        announcement.category === 'hr' ? 'bg-green-100 text-green-800' :\n                        'bg-gray-100 text-gray-800'\n                      }`}>\n                        {announcement.category}\n                      </span>\n                    </div>\n                    <p className=\"text-gray-600 mb-3\">{announcement.content}</p>\n                    <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                      <span>By {announcement.author}</span>\n                      <span>•</span>\n                      <span>{new Date(announcement.createdAt).toLocaleDateString()}</span>\n                      <span>•</span>\n                      <span>Target: {announcement.targetAudience}</span>\n                      {announcement.expiresAt && (\n                        <>\n                          <span>•</span>\n                          <span>Expires: {new Date(announcement.expiresAt).toLocaleDateString()}</span>\n                        </>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <button className=\"text-gray-400 hover:text-gray-600\">\n                      <Edit className=\"h-4 w-4\" />\n                    </button>\n                    <button className=\"text-gray-400 hover:text-gray-600\">\n                      <MoreHorizontal className=\"h-4 w-4\" />\n                    </button>\n                  </div>\n                </div>\n\n                {announcement.attachments && announcement.attachments.length > 0 && (\n                  <div className=\"mb-4\">\n                    <p className=\"text-sm font-medium text-gray-700 mb-2\">Attachments:</p>\n                    <div className=\"flex gap-2\">\n                      {announcement.attachments.map((attachment, index) => (\n                        <span key={index} className=\"inline-flex items-center gap-1 px-2 py-1 bg-gray-100 rounded text-sm\">\n                          <Paperclip className=\"h-3 w-3\" />\n                          {attachment}\n                        </span>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n                  <div className=\"bg-gray-50 rounded-lg p-3\">\n                    <div className=\"flex justify-between items-center mb-2\">\n                      <span className=\"text-sm font-medium text-gray-700\">Read Status</span>\n                      <span className=\"text-sm text-gray-600\">{readCount}/{totalEmployees} ({readPercentage}%)</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div className=\"bg-blue-500 h-2 rounded-full\" style={{ width: `${readPercentage}%` }}></div>\n                    </div>\n                  </div>\n\n                  {announcement.requiresAcknowledgment && (\n                    <div className=\"bg-gray-50 rounded-lg p-3\">\n                      <div className=\"flex justify-between items-center mb-2\">\n                        <span className=\"text-sm font-medium text-gray-700\">Acknowledgment Status</span>\n                        <span className=\"text-sm text-gray-600\">{acknowledgedCount}/{totalEmployees} ({acknowledgedPercentage}%)</span>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div className=\"bg-green-500 h-2 rounded-full\" style={{ width: `${acknowledgedPercentage}%` }}></div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"border-t pt-4\">\n                  <div className=\"flex justify-between items-center mb-3\">\n                    <h5 className=\"font-medium text-gray-700\">Read Receipts</h5>\n                    <button \n                      onClick={() => setShowViewAllReceiptsModal(true)}\n                      className=\"text-blue-600 hover:text-blue-800 text-sm\"\n                    >\n                      View All\n                    </button>\n                  </div>\n                  <div className=\"space-y-2 max-h-32 overflow-y-auto\">\n                    {announcement.readReceipts.map((receipt) => (\n                      <div key={receipt.id} className=\"flex justify-between items-center text-sm\">\n                        <div className=\"flex items-center gap-2\">\n                          <div className=\"w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center text-xs font-medium\">\n                            {receipt.userName.split(' ').map(n => n[0]).join('')}\n                          </div>\n                          <span>{receipt.userName}</span>\n                          <span className=\"text-gray-500\">({receipt.userRole})</span>\n                        </div>\n                        <div className=\"flex items-center gap-3\">\n                          <span className=\"text-gray-500\">{new Date(receipt.readAt).toLocaleString()}</span>\n                          {announcement.requiresAcknowledgment && (\n                            <span className={`px-2 py-1 rounded text-xs ${\n                              receipt.acknowledged ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\n                            }`}>\n                              {receipt.acknowledged ? 'Acknowledged' : 'Pending'}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderActiveSection = () => {\n    switch (activeSection) {\n      case 'overview':\n        return renderOverview();\n      case 'sales':\n        return renderSalesProcess();\n      case 'management':\n        return renderManagement();\n      case 'quality':\n        return renderQuality();\n      case 'compliance':\n        return renderCompliance();\n      case 'security':\n        return renderSecurity();\n      case 'data':\n        return renderDataTools();\n      case 'communications':\n        return renderCommunications();\n      case 'monitoring':\n        return renderSystemMonitoring();\n      case 'operational':\n        return renderOperationalIntelligence();\n      case 'team':\n        return renderTeamOptimization();\n      case 'risk':\n        return renderRiskManagement();\n      case 'advanced-compliance':\n        return renderAdvancedCompliance();\n      case 'leads':\n        return renderLeads();\n      case 'announcements':\n        return renderAnnouncementSystem();\n      case 'onboarding':\n        return <AgentOnboarding />;\n      default:\n        return renderOverview();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Modal Components */}\n      {showAddRoleModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Add New Role</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Role Name\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <textarea\n                placeholder=\"Role Description\"\n                className=\"w-full p-2 border rounded h-20\"\n              />\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowAddRoleModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Add role logic here\n                    setShowAddRoleModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  Add Role\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showNewExportModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Create New Export</h3>\n            <div className=\"space-y-4\">\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Select Data Type</option>\n                <option value=\"clients\">Clients</option>\n                <option value=\"projects\">Projects</option>\n                <option value=\"invoices\">Invoices</option>\n                <option value=\"contracts\">Contracts</option>\n              </select>\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"csv\">CSV</option>\n                <option value=\"xlsx\">Excel</option>\n                <option value=\"pdf\">PDF</option>\n              </select>\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowNewExportModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Export logic here\n                    setShowNewExportModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n                >\n                  Create Export\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showNewCampaignModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Create New Campaign</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Campaign Name\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Campaign Type</option>\n                <option value=\"newsletter\">Newsletter</option>\n                <option value=\"promotional\">Promotional</option>\n                <option value=\"follow-up\">Follow-up</option>\n              </select>\n              <textarea\n                placeholder=\"Campaign Description\"\n                className=\"w-full p-2 border rounded h-20\"\n              />\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowNewCampaignModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Campaign creation logic here\n                    setShowNewCampaignModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  Create Campaign\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showAddTaskModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Add Manual Task</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Task Description\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Assignee\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Frequency</option>\n                <option value=\"daily\">Daily</option>\n                <option value=\"weekly\">Weekly</option>\n                <option value=\"monthly\">Monthly</option>\n              </select>\n              <input\n                type=\"number\"\n                placeholder=\"Time Spent (minutes)\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowAddTaskModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Task creation logic here\n                    setShowAddTaskModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  Add Task\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showUploadLeadsModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Upload Leads</h3>\n            <div className=\"space-y-4\">\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n                <Upload className=\"h-8 w-8 mx-auto text-gray-400 mb-2\" />\n                <p className=\"text-gray-600 mb-2\">Drop your CSV file here or click to browse</p>\n                <input\n                  type=\"file\"\n                  accept=\".csv,.xlsx\"\n                  className=\"hidden\"\n                  id=\"lead-upload\"\n                />\n                <label\n                  htmlFor=\"lead-upload\"\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded cursor-pointer hover:bg-blue-700\"\n                >\n                  Choose File\n                </label>\n              </div>\n              <div className=\"text-sm text-gray-600\">\n                <p className=\"font-medium mb-1\">Required columns:</p>\n                <ul className=\"list-disc list-inside space-y-1\">\n                  <li>Name</li>\n                  <li>Email</li>\n                  <li>Phone</li>\n                  <li>Company</li>\n                  <li>Source</li>\n                  <li>Value (optional)</li>\n                </ul>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowUploadLeadsModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Upload logic here\n                    setShowUploadLeadsModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  Upload Leads\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showAssignLeadModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">\n              {selectedLead ? `Assign Lead: ${selectedLead.name}` : 'Assign Lead'}\n            </h3>\n            <div className=\"space-y-4\">\n              {!selectedLead && (\n                <select \n                  className=\"w-full p-2 border rounded\"\n                  onChange={(e) => {\n                    const lead = leads.find(l => l.id === e.target.value);\n                    setSelectedLead(lead || null);\n                  }}\n                >\n                  <option value=\"\">Select a lead...</option>\n                  {leads.filter(lead => !lead.assignedAgent).map(lead => (\n                    <option key={lead.id} value={lead.id}>\n                      {lead.name} - {lead.company}\n                    </option>\n                  ))}\n                </select>\n              )}\n              \n              <select\n                value={selectedAgent}\n                onChange={(e) => setSelectedAgent(e.target.value)}\n                className=\"w-full p-2 border rounded\"\n              >\n                <option value=\"\">Select an agent...</option>\n                {agents.map(agent => (\n                  <option key={agent.id} value={agent.id}>\n                    {agent.name} ({agent.leadsAssigned} leads assigned)\n                  </option>\n                ))}\n              </select>\n              \n              {selectedLead && (\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <h4 className=\"font-medium mb-2\">Lead Details:</h4>\n                  <div className=\"text-sm space-y-1\">\n                    <p><span className=\"font-medium\">Company:</span> {selectedLead.company}</p>\n                    <p><span className=\"font-medium\">Email:</span> {selectedLead.email}</p>\n                    <p><span className=\"font-medium\">Value:</span> {formatCurrency(selectedLead.value)}</p>\n                    <p><span className=\"font-medium\">Status:</span> {selectedLead.status}</p>\n                  </div>\n                </div>\n              )}\n              \n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => {\n                    setShowAssignLeadModal(false);\n                    setSelectedLead(null);\n                    setSelectedAgent('');\n                  }}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Assignment logic here\n                    setShowAssignLeadModal(false);\n                    setSelectedLead(null);\n                    setSelectedAgent('');\n                  }}\n                  disabled={!selectedLead || !selectedAgent}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed\"\n                >\n                  Assign Lead\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showEditSkillModal && selectedEmployee && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Edit Skills - {selectedEmployee.employeeName}</h3>\n            <div className=\"space-y-4\">\n              <div className=\"max-h-60 overflow-y-auto\">\n                {selectedEmployee.skills.map((skill: any, index: number) => (\n                  <div key={index} className=\"flex items-center gap-2 p-2 border rounded mb-2\">\n                    <input\n                      type=\"text\"\n                      value={skill.skillName}\n                      className=\"flex-1 p-1 border rounded\"\n                      readOnly\n                    />\n                    <select \n                      className=\"p-1 border rounded\" \n                      value={skill.level}\n                      onChange={(e) => {\n                        const updatedSkills = [...selectedEmployee.skills];\n                        updatedSkills[index] = { ...skill, level: e.target.value };\n                        setSelectedEmployee({ ...selectedEmployee, skills: updatedSkills });\n                      }}\n                    >\n                      <option value=\"beginner\">Beginner</option>\n                      <option value=\"intermediate\">Intermediate</option>\n                      <option value=\"advanced\">Advanced</option>\n                      <option value=\"expert\">Expert</option>\n                    </select>\n                  </div>\n                ))}\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => {\n                    setShowEditSkillModal(false);\n                    setSelectedEmployee(null);\n                  }}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Save skill changes logic here\n                    setShowEditSkillModal(false);\n                    setSelectedEmployee(null);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  Save Changes\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">Admin Dashboard</h1>\n          <p className=\"text-gray-600 mt-2\">Comprehensive management for your digital agency</p>\n        </div>\n\n        {/* Navigation Tabs */}\n        <div className=\"mb-8\">\n          <nav className=\"flex flex-wrap gap-x-6 gap-y-2 border-b border-gray-200\">\n            {[\n              { id: 'overview', label: 'Overview', icon: BarChart3 },\n              { id: 'sales', label: 'Sales Process', icon: Target },\n              { id: 'management', label: 'Management', icon: Users },\n              { id: 'quality', label: 'Quality', icon: Award },\n              { id: 'compliance', label: 'Compliance', icon: Shield },\n              { id: 'security', label: 'Security & Access', icon: Lock },\n              { id: 'data', label: 'Data Tools', icon: Database },\n              { id: 'communications', label: 'Communications', icon: Mail },\n              { id: 'monitoring', label: 'System Monitoring', icon: Activity },\n              { id: 'operational', label: 'Operational Intelligence', icon: Brain },\n              { id: 'team', label: 'Team Optimization', icon: Wrench },\n              { id: 'risk', label: 'Risk Management', icon: AlertOctagon },\n              { id: 'advanced-compliance', label: 'Advanced Compliance', icon: CheckSquare },\n              { id: 'leads', label: 'Lead Management', icon: UserPlus },\n              { id: 'announcements', label: 'Announcements', icon: Bell },\n              { id: 'onboarding', label: 'Agent Onboarding', icon: UserCog }\n            ].map((tab) => {\n              const Icon = tab.icon;\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveSection(tab.id)}\n                  className={`flex items-center gap-2 py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap ${\n                    activeSection === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"h-4 w-4\" />\n                  {tab.label}\n                </button>\n              );\n            })}\n          </nav>\n        </div>\n\n        {/* Active Section Content */}\n        {renderActiveSection()}\n      </div>\n\n      {/* Modals */}\n      {showNewProposalModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Create New Proposal</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Client Name\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <input\n                type=\"text\"\n                placeholder=\"Project Type\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Project Value\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <input\n                type=\"date\"\n                placeholder=\"Expiry Date\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <textarea\n                placeholder=\"Project Description\"\n                className=\"w-full p-2 border rounded h-20\"\n              />\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowNewProposalModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Proposal creation logic here\n                    setShowNewProposalModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  Create Proposal\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showCreateAnnouncementModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Create New Announcement</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Announcement Title\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Select Priority</option>\n                <option value=\"low\">Low</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"high\">High</option>\n                <option value=\"urgent\">Urgent</option>\n              </select>\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Select Category</option>\n                <option value=\"general\">General</option>\n                <option value=\"policy\">Policy</option>\n                <option value=\"system\">System</option>\n                <option value=\"hr\">HR</option>\n                <option value=\"emergency\">Emergency</option>\n              </select>\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Target Audience</option>\n                <option value=\"all\">All Staff</option>\n                <option value=\"management\">Management</option>\n                <option value=\"sales\">Sales Team</option>\n                <option value=\"development\">Development Team</option>\n                <option value=\"support\">Support Team</option>\n              </select>\n              <textarea\n                placeholder=\"Announcement Content\"\n                className=\"w-full p-2 border rounded h-24\"\n              />\n              <input\n                type=\"date\"\n                placeholder=\"Expiry Date (Optional)\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"requiresAck\"\n                  className=\"rounded\"\n                />\n                <label htmlFor=\"requiresAck\" className=\"text-sm text-gray-700\">\n                  Requires Acknowledgment\n                </label>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowCreateAnnouncementModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Announcement creation logic here\n                    setShowCreateAnnouncementModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                >\n                  Create Announcement\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {showCreateReportModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-md\">\n            <h3 className=\"text-lg font-semibold mb-4\">Create Custom Report</h3>\n            <div className=\"space-y-4\">\n              <input\n                type=\"text\"\n                placeholder=\"Report Name\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Select Report Type</option>\n                <option value=\"sales\">Sales</option>\n                <option value=\"financial\">Financial</option>\n                <option value=\"operational\">Operational</option>\n                <option value=\"client\">Client</option>\n              </select>\n              <select className=\"w-full p-2 border rounded\">\n                <option value=\"\">Select Schedule</option>\n                <option value=\"daily\">Daily</option>\n                <option value=\"weekly\">Weekly</option>\n                <option value=\"monthly\">Monthly</option>\n                <option value=\"custom\">Custom</option>\n              </select>\n              <input\n                type=\"email\"\n                placeholder=\"Recipients (comma-separated emails)\"\n                className=\"w-full p-2 border rounded\"\n              />\n              <textarea\n                placeholder=\"Report Description\"\n                className=\"w-full p-2 border rounded h-20\"\n              />\n              <div className=\"flex items-center gap-2\">\n                <input\n                  type=\"checkbox\"\n                  id=\"autoSend\"\n                  className=\"rounded\"\n                />\n                <label htmlFor=\"autoSend\" className=\"text-sm text-gray-700\">\n                  Auto-send reports\n                </label>\n              </div>\n              <div className=\"flex justify-end gap-2\">\n                <button\n                  onClick={() => setShowCreateReportModal(false)}\n                  className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={() => {\n                    // Report creation logic here\n                    setShowCreateReportModal(false);\n                  }}\n                  className=\"px-4 py-2 bg-purple-600 text-white rounded hover:bg-purple-700\"\n                >\n                  Create Report\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* View Proposal Modal */}\n      {showViewProposalModal && selectedProposal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold\">View Proposal</h3>\n              <button\n                onClick={() => setShowViewProposalModal(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Client Name</label>\n                  <p className=\"p-2 bg-gray-50 rounded border\">{selectedProposal.clientName}</p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Project Type</label>\n                  <p className=\"p-2 bg-gray-50 rounded border\">{selectedProposal.projectType}</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Value</label>\n                  <p className=\"p-2 bg-gray-50 rounded border\">${selectedProposal.value.toLocaleString()}</p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                  <p className={`p-2 rounded border capitalize ${\n                    selectedProposal.status === 'approved' ? 'bg-green-50 text-green-800' :\n                    selectedProposal.status === 'sent' ? 'bg-blue-50 text-blue-800' :\n                    selectedProposal.status === 'rejected' ? 'bg-red-50 text-red-800' :\n                    'bg-gray-50 text-gray-800'\n                  }`}>{selectedProposal.status}</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Created Date</label>\n                  <p className=\"p-2 bg-gray-50 rounded border\">{selectedProposal.createdDate}</p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Expiry Date</label>\n                  <p className=\"p-2 bg-gray-50 rounded border\">{selectedProposal.expiryDate}</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex justify-end gap-2 mt-6\">\n              <button\n                onClick={() => setShowViewProposalModal(false)}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                Close\n              </button>\n              {selectedProposal.status === 'draft' && (\n                <button\n                  onClick={() => {\n                    setShowViewProposalModal(false);\n                    setShowEditProposalModal(true);\n                  }}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n                >\n                  Edit Proposal\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Edit Proposal Modal */}\n      {showEditProposalModal && selectedProposal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h3 className=\"text-lg font-semibold\">Edit Proposal</h3>\n              <button\n                onClick={() => setShowEditProposalModal(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Client Name</label>\n                  <input\n                    type=\"text\"\n                    defaultValue={selectedProposal.clientName}\n                    className=\"w-full p-2 border rounded\"\n                    placeholder=\"Enter client name\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Project Type</label>\n                  <input\n                    type=\"text\"\n                    defaultValue={selectedProposal.projectType}\n                    className=\"w-full p-2 border rounded\"\n                    placeholder=\"Enter project type\"\n                  />\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Value ($)</label>\n                  <input\n                    type=\"number\"\n                    defaultValue={selectedProposal.value}\n                    className=\"w-full p-2 border rounded\"\n                    placeholder=\"Enter proposal value\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\n                  <select\n                    defaultValue={selectedProposal.status}\n                    className=\"w-full p-2 border rounded\"\n                  >\n                    <option value=\"draft\">Draft</option>\n                    <option value=\"sent\">Sent</option>\n                    <option value=\"approved\">Approved</option>\n                    <option value=\"rejected\">Rejected</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Created Date</label>\n                  <input\n                    type=\"date\"\n                    defaultValue={selectedProposal.createdDate}\n                    className=\"w-full p-2 border rounded\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Expiry Date</label>\n                  <input\n                    type=\"date\"\n                    defaultValue={selectedProposal.expiryDate}\n                    className=\"w-full p-2 border rounded\"\n                  />\n                </div>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Proposal Details</label>\n                <textarea\n                  className=\"w-full p-2 border rounded h-32\"\n                  placeholder=\"Enter detailed proposal description, scope of work, deliverables, etc.\"\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end gap-2 mt-6\">\n              <button\n                onClick={() => setShowEditProposalModal(false)}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => {\n                  // Save proposal logic here\n                  setShowEditProposalModal(false);\n                }}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              >\n                Save Changes\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Permission Management Modal */}\n      {showPermissionModal && selectedRole && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-xl font-semibold\">Manage Permissions - {selectedRole.name}</h3>\n              <button\n                onClick={() => {\n                  setShowPermissionModal(false);\n                  setSelectedRole(null);\n                }}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <XCircle className=\"h-6 w-6\" />\n              </button>\n            </div>\n            \n            <div className=\"mb-4\">\n              <p className=\"text-gray-600\">{selectedRole.description}</p>\n            </div>\n            \n            {/* Permission Categories */}\n            <div className=\"space-y-6\">\n              {Object.entries(permissionCategories).map(([category, permissions]) => {\n                \n                \n                return (\n                  <div key={category} className=\"border rounded-lg p-4\">\n                    <h4 className=\"font-medium text-lg mb-3 text-gray-800\">{category}</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                      {permissions.map((permission) => (\n                        <div key={permission.id} className=\"flex items-center\">\n                          <input\n                            type=\"checkbox\"\n                            id={permission.id}\n                            checked={selectedPermissions.includes('all') || selectedPermissions.includes(permission.id)}\n                            disabled={selectedPermissions.includes('all') && permission.id !== 'all'}\n                            onChange={() => handlePermissionChange(permission.id)}\n                            className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                          />\n                          <label htmlFor={permission.id} className=\"ml-2 text-sm text-gray-700\">{permission.name}</label>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            \n            <div className=\"flex justify-end gap-2 mt-6 pt-4 border-t\">\n              <button\n                onClick={() => {\n                  setShowPermissionModal(false);\n                  setSelectedRole(null);\n                }}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleSavePermissions}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n              >\n                Save Permissions\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Create Custom Role Modal */}\n      {showCreateRoleModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h3 className=\"text-xl font-semibold\">Create Custom Role</h3>\n              <button\n                onClick={() => setShowCreateRoleModal(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <XCircle className=\"h-6 w-6\" />\n              </button>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Role Name</label>\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter role name\"\n                  className=\"w-full p-3 border rounded-lg\"\n                  value={newRoleName}\n                  onChange={(e) => setNewRoleName(e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n                <textarea\n                  placeholder=\"Describe the role and its responsibilities\"\n                  className=\"w-full p-3 border rounded-lg h-24\"\n                  value={newRoleDescription}\n                  onChange={(e) => setNewRoleDescription(e.target.value)}\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Category</label>\n                <select \n                  className=\"w-full p-3 border rounded-lg\"\n                  value={newRoleCategory}\n                  onChange={(e) => setNewRoleCategory(e.target.value)}\n                >\n                  <option value=\"\">Select category</option>\n                  <option value=\"administrative\">Administrative</option>\n                  <option value=\"management\">Management</option>\n                  <option value=\"operational\">Operational</option>\n                  <option value=\"external\">External</option>\n                  <option value=\"client\">Client</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Base Role Template</label>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2\">\n                  {predefinedRoles.slice(0, 6).map((role) => (\n                    <button\n                      key={role.id}\n                      onClick={() => {\n                        const baseRole = predefinedRoles.find(r => r.id === role.id);\n                        if (baseRole) {\n                          setSelectedBaseRole(role.id);\n                          setNewRolePermissions(baseRole.permissions);\n                        }\n                      }}\n                      className={`p-3 border rounded-lg text-left hover:bg-blue-50 hover:border-blue-300 ${\n                        selectedBaseRole === role.id ? 'bg-blue-100 border-blue-400' : ''\n                      }`}\n                    >\n                      <div className=\"font-medium text-sm\">{role.name}</div>\n                      <div className=\"text-xs text-gray-600\">{role.permissions.length} permissions</div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end gap-2 mt-6 pt-4 border-t\">\n              <button\n                onClick={() => setShowCreateRoleModal(false)}\n                className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={() => {\n                  // Basic validation\n                  if (!newRoleName || !newRoleDescription || !newRoleCategory || !selectedBaseRole) {\n                    alert('Please fill all fields and select a base role.');\n                    return;\n                  }\n\n                  // Create new role object\n                  const newRole = {\n                    id: `role_${Date.now()}`,\n                    name: newRoleName,\n                    description: newRoleDescription,\n                    category: newRoleCategory,\n                    permissions: newRolePermissions\n                  };\n\n                  // Create new role\n                  // Add role creation logic here (e.g., API call)\n\n                  // Reset form and close modal\n                  setNewRoleName('');\n                  setNewRoleDescription('');\n                  setNewRoleCategory('');\n                  setSelectedBaseRole(null);\n                  setNewRolePermissions([]);\n                  setShowCreateRoleModal(false);\n                }}\n                className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n              >\n                Create Role\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]}