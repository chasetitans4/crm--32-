404a2ab4d6336e0444e921f793450e56
"use strict";

/* istanbul ignore next */
function cov_22ml0eggkh() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\context\\AppContext.tsx";
  var hash = "b5e32496a14962ccd92773aa2f93cc99f66487ef";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\context\\AppContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 26
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "7": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 48
        }
      },
      "8": {
        start: {
          line: 23,
          column: 29
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "9": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 49
        }
      },
      "10": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 45
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "12": {
        start: {
          line: 27,
          column: 39
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "13": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "14": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "19": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "21": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "24": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "25": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "26": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "27": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "28": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "29": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "30": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "31": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "32": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "34": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "35": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "36": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 327,
          column: 1
        }
      },
      "37": {
        start: {
          line: 329,
          column: 33
        },
        end: {
          line: 329,
          column: 69
        }
      },
      "38": {
        start: {
          line: 331,
          column: 19
        },
        end: {
          line: 743,
          column: 1
        }
      },
      "39": {
        start: {
          line: 332,
          column: 4
        },
        end: {
          line: 742,
          column: 5
        }
      },
      "40": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 735,
          column: 9
        }
      },
      "41": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 345,
          column: 18
        }
      },
      "42": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 353,
          column: 18
        }
      },
      "43": {
        start: {
          line: 349,
          column: 51
        },
        end: {
          line: 352,
          column: 32
        }
      },
      "44": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 358,
          column: 18
        }
      },
      "45": {
        start: {
          line: 357,
          column: 54
        },
        end: {
          line: 357,
          column: 80
        }
      },
      "46": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 367,
          column: 18
        }
      },
      "47": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 375,
          column: 18
        }
      },
      "48": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 384,
          column: 18
        }
      },
      "49": {
        start: {
          line: 379,
          column: 51
        },
        end: {
          line: 383,
          column: 32
        }
      },
      "50": {
        start: {
          line: 386,
          column: 16
        },
        end: {
          line: 393,
          column: 18
        }
      },
      "51": {
        start: {
          line: 388,
          column: 51
        },
        end: {
          line: 392,
          column: 32
        }
      },
      "52": {
        start: {
          line: 396,
          column: 16
        },
        end: {
          line: 398,
          column: 18
        }
      },
      "53": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 420,
          column: 18
        }
      },
      "54": {
        start: {
          line: 405,
          column: 39
        },
        end: {
          line: 405,
          column: 53
        }
      },
      "55": {
        start: {
          line: 406,
          column: 24
        },
        end: {
          line: 417,
          column: 25
        }
      },
      "56": {
        start: {
          line: 407,
          column: 28
        },
        end: {
          line: 407,
          column: 109
        }
      },
      "57": {
        start: {
          line: 408,
          column: 31
        },
        end: {
          line: 417,
          column: 25
        }
      },
      "58": {
        start: {
          line: 409,
          column: 50
        },
        end: {
          line: 413,
          column: 29
        }
      },
      "59": {
        start: {
          line: 414,
          column: 28
        },
        end: {
          line: 414,
          column: 103
        }
      },
      "60": {
        start: {
          line: 415,
          column: 31
        },
        end: {
          line: 417,
          column: 25
        }
      },
      "61": {
        start: {
          line: 416,
          column: 28
        },
        end: {
          line: 416,
          column: 113
        }
      },
      "62": {
        start: {
          line: 418,
          column: 24
        },
        end: {
          line: 418,
          column: 33
        }
      },
      "63": {
        start: {
          line: 423,
          column: 16
        },
        end: {
          line: 429,
          column: 18
        }
      },
      "64": {
        start: {
          line: 431,
          column: 16
        },
        end: {
          line: 437,
          column: 18
        }
      },
      "65": {
        start: {
          line: 433,
          column: 57
        },
        end: {
          line: 436,
          column: 34
        }
      },
      "66": {
        start: {
          line: 439,
          column: 16
        },
        end: {
          line: 442,
          column: 18
        }
      },
      "67": {
        start: {
          line: 441,
          column: 60
        },
        end: {
          line: 441,
          column: 88
        }
      },
      "68": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 451,
          column: 18
        }
      },
      "69": {
        start: {
          line: 453,
          column: 16
        },
        end: {
          line: 459,
          column: 18
        }
      },
      "70": {
        start: {
          line: 461,
          column: 16
        },
        end: {
          line: 473,
          column: 18
        }
      },
      "71": {
        start: {
          line: 463,
          column: 57
        },
        end: {
          line: 472,
          column: 34
        }
      },
      "72": {
        start: {
          line: 476,
          column: 16
        },
        end: {
          line: 490,
          column: 18
        }
      },
      "73": {
        start: {
          line: 478,
          column: 57
        },
        end: {
          line: 489,
          column: 34
        }
      },
      "74": {
        start: {
          line: 493,
          column: 16
        },
        end: {
          line: 502,
          column: 18
        }
      },
      "75": {
        start: {
          line: 504,
          column: 16
        },
        end: {
          line: 510,
          column: 18
        }
      },
      "76": {
        start: {
          line: 506,
          column: 54
        },
        end: {
          line: 509,
          column: 33
        }
      },
      "77": {
        start: {
          line: 512,
          column: 16
        },
        end: {
          line: 515,
          column: 18
        }
      },
      "78": {
        start: {
          line: 514,
          column: 57
        },
        end: {
          line: 514,
          column: 84
        }
      },
      "79": {
        start: {
          line: 517,
          column: 16
        },
        end: {
          line: 524,
          column: 18
        }
      },
      "80": {
        start: {
          line: 526,
          column: 16
        },
        end: {
          line: 532,
          column: 18
        }
      },
      "81": {
        start: {
          line: 535,
          column: 16
        },
        end: {
          line: 542,
          column: 18
        }
      },
      "82": {
        start: {
          line: 544,
          column: 16
        },
        end: {
          line: 550,
          column: 18
        }
      },
      "83": {
        start: {
          line: 553,
          column: 16
        },
        end: {
          line: 559,
          column: 18
        }
      },
      "84": {
        start: {
          line: 561,
          column: 16
        },
        end: {
          line: 567,
          column: 18
        }
      },
      "85": {
        start: {
          line: 563,
          column: 54
        },
        end: {
          line: 566,
          column: 33
        }
      },
      "86": {
        start: {
          line: 569,
          column: 16
        },
        end: {
          line: 572,
          column: 18
        }
      },
      "87": {
        start: {
          line: 571,
          column: 57
        },
        end: {
          line: 571,
          column: 84
        }
      },
      "88": {
        start: {
          line: 574,
          column: 16
        },
        end: {
          line: 581,
          column: 18
        }
      },
      "89": {
        start: {
          line: 583,
          column: 16
        },
        end: {
          line: 589,
          column: 18
        }
      },
      "90": {
        start: {
          line: 592,
          column: 16
        },
        end: {
          line: 598,
          column: 18
        }
      },
      "91": {
        start: {
          line: 600,
          column: 16
        },
        end: {
          line: 606,
          column: 18
        }
      },
      "92": {
        start: {
          line: 602,
          column: 73
        },
        end: {
          line: 605,
          column: 36
        }
      },
      "93": {
        start: {
          line: 608,
          column: 16
        },
        end: {
          line: 611,
          column: 18
        }
      },
      "94": {
        start: {
          line: 610,
          column: 76
        },
        end: {
          line: 610,
          column: 106
        }
      },
      "95": {
        start: {
          line: 613,
          column: 16
        },
        end: {
          line: 620,
          column: 18
        }
      },
      "96": {
        start: {
          line: 622,
          column: 16
        },
        end: {
          line: 628,
          column: 18
        }
      },
      "97": {
        start: {
          line: 631,
          column: 16
        },
        end: {
          line: 637,
          column: 18
        }
      },
      "98": {
        start: {
          line: 639,
          column: 16
        },
        end: {
          line: 645,
          column: 18
        }
      },
      "99": {
        start: {
          line: 641,
          column: 63
        },
        end: {
          line: 644,
          column: 36
        }
      },
      "100": {
        start: {
          line: 647,
          column: 16
        },
        end: {
          line: 650,
          column: 18
        }
      },
      "101": {
        start: {
          line: 649,
          column: 66
        },
        end: {
          line: 649,
          column: 96
        }
      },
      "102": {
        start: {
          line: 652,
          column: 16
        },
        end: {
          line: 659,
          column: 18
        }
      },
      "103": {
        start: {
          line: 661,
          column: 16
        },
        end: {
          line: 667,
          column: 18
        }
      },
      "104": {
        start: {
          line: 670,
          column: 16
        },
        end: {
          line: 676,
          column: 18
        }
      },
      "105": {
        start: {
          line: 678,
          column: 16
        },
        end: {
          line: 684,
          column: 18
        }
      },
      "106": {
        start: {
          line: 680,
          column: 60
        },
        end: {
          line: 683,
          column: 35
        }
      },
      "107": {
        start: {
          line: 686,
          column: 16
        },
        end: {
          line: 689,
          column: 18
        }
      },
      "108": {
        start: {
          line: 688,
          column: 63
        },
        end: {
          line: 688,
          column: 92
        }
      },
      "109": {
        start: {
          line: 691,
          column: 16
        },
        end: {
          line: 698,
          column: 18
        }
      },
      "110": {
        start: {
          line: 700,
          column: 16
        },
        end: {
          line: 706,
          column: 18
        }
      },
      "111": {
        start: {
          line: 709,
          column: 16
        },
        end: {
          line: 715,
          column: 18
        }
      },
      "112": {
        start: {
          line: 718,
          column: 16
        },
        end: {
          line: 721,
          column: 18
        }
      },
      "113": {
        start: {
          line: 724,
          column: 16
        },
        end: {
          line: 727,
          column: 18
        }
      },
      "114": {
        start: {
          line: 729,
          column: 16
        },
        end: {
          line: 732,
          column: 18
        }
      },
      "115": {
        start: {
          line: 734,
          column: 16
        },
        end: {
          line: 734,
          column: 29
        }
      },
      "116": {
        start: {
          line: 737,
          column: 8
        },
        end: {
          line: 737,
          column: 47
        }
      },
      "117": {
        start: {
          line: 738,
          column: 8
        },
        end: {
          line: 741,
          column: 10
        }
      },
      "118": {
        start: {
          line: 744,
          column: 20
        },
        end: {
          line: 938,
          column: 1
        }
      },
      "119": {
        start: {
          line: 745,
          column: 31
        },
        end: {
          line: 748,
          column: 20
        }
      },
      "120": {
        start: {
          line: 749,
          column: 30
        },
        end: {
          line: 749,
          column: 84
        }
      },
      "121": {
        start: {
          line: 750,
          column: 23
        },
        end: {
          line: 750,
          column: 55
        }
      },
      "122": {
        start: {
          line: 751,
          column: 50
        },
        end: {
          line: 751,
          column: 83
        }
      },
      "123": {
        start: {
          line: 752,
          column: 38
        },
        end: {
          line: 752,
          column: 64
        }
      },
      "124": {
        start: {
          line: 753,
          column: 25
        },
        end: {
          line: 765,
          column: 6
        }
      },
      "125": {
        start: {
          line: 753,
          column: 50
        },
        end: {
          line: 760,
          column: 9
        }
      },
      "126": {
        start: {
          line: 767,
          column: 4
        },
        end: {
          line: 868,
          column: 7
        }
      },
      "127": {
        start: {
          line: 769,
          column: 8
        },
        end: {
          line: 771,
          column: 9
        }
      },
      "128": {
        start: {
          line: 770,
          column: 12
        },
        end: {
          line: 770,
          column: 19
        }
      },
      "129": {
        start: {
          line: 772,
          column: 31
        },
        end: {
          line: 864,
          column: 9
        }
      },
      "130": {
        start: {
          line: 773,
          column: 12
        },
        end: {
          line: 863,
          column: 13
        }
      },
      "131": {
        start: {
          line: 775,
          column: 42
        },
        end: {
          line: 775,
          column: 83
        }
      },
      "132": {
        start: {
          line: 776,
          column: 16
        },
        end: {
          line: 790,
          column: 17
        }
      },
      "133": {
        start: {
          line: 777,
          column: 20
        },
        end: {
          line: 789,
          column: 21
        }
      },
      "134": {
        start: {
          line: 778,
          column: 42
        },
        end: {
          line: 778,
          column: 71
        }
      },
      "135": {
        start: {
          line: 779,
          column: 24
        },
        end: {
          line: 779,
          column: 95
        }
      },
      "136": {
        start: {
          line: 780,
          column: 24
        },
        end: {
          line: 783,
          column: 27
        }
      },
      "137": {
        start: {
          line: 785,
          column: 24
        },
        end: {
          line: 785,
          column: 69
        }
      },
      "138": {
        start: {
          line: 787,
          column: 24
        },
        end: {
          line: 787,
          column: 81
        }
      },
      "139": {
        start: {
          line: 788,
          column: 24
        },
        end: {
          line: 788,
          column: 69
        }
      },
      "140": {
        start: {
          line: 792,
          column: 36
        },
        end: {
          line: 792,
          column: 72
        }
      },
      "141": {
        start: {
          line: 793,
          column: 36
        },
        end: {
          line: 793,
          column: 77
        }
      },
      "142": {
        start: {
          line: 794,
          column: 16
        },
        end: {
          line: 797,
          column: 17
        }
      },
      "143": {
        start: {
          line: 795,
          column: 20
        },
        end: {
          line: 795,
          column: 77
        }
      },
      "144": {
        start: {
          line: 796,
          column: 20
        },
        end: {
          line: 796,
          column: 27
        }
      },
      "145": {
        start: {
          line: 799,
          column: 33
        },
        end: {
          line: 817,
          column: 17
        }
      },
      "146": {
        start: {
          line: 800,
          column: 20
        },
        end: {
          line: 803,
          column: 23
        }
      },
      "147": {
        start: {
          line: 804,
          column: 20
        },
        end: {
          line: 816,
          column: 21
        }
      },
      "148": {
        start: {
          line: 805,
          column: 37
        },
        end: {
          line: 805,
          column: 51
        }
      },
      "149": {
        start: {
          line: 806,
          column: 24
        },
        end: {
          line: 809,
          column: 27
        }
      },
      "150": {
        start: {
          line: 811,
          column: 24
        },
        end: {
          line: 811,
          column: 116
        }
      },
      "151": {
        start: {
          line: 812,
          column: 24
        },
        end: {
          line: 815,
          column: 27
        }
      },
      "152": {
        start: {
          line: 818,
          column: 16
        },
        end: {
          line: 823,
          column: 19
        }
      },
      "153": {
        start: {
          line: 819,
          column: 55
        },
        end: {
          line: 819,
          column: 91
        }
      },
      "154": {
        start: {
          line: 820,
          column: 59
        },
        end: {
          line: 820,
          column: 97
        }
      },
      "155": {
        start: {
          line: 821,
          column: 57
        },
        end: {
          line: 821,
          column: 94
        }
      },
      "156": {
        start: {
          line: 822,
          column: 69
        },
        end: {
          line: 822,
          column: 111
        }
      },
      "157": {
        start: {
          line: 825,
          column: 16
        },
        end: {
          line: 825,
          column: 67
        }
      },
      "158": {
        start: {
          line: 826,
          column: 16
        },
        end: {
          line: 829,
          column: 19
        }
      },
      "159": {
        start: {
          line: 831,
          column: 16
        },
        end: {
          line: 834,
          column: 19
        }
      },
      "160": {
        start: {
          line: 835,
          column: 16
        },
        end: {
          line: 838,
          column: 19
        }
      },
      "161": {
        start: {
          line: 839,
          column: 16
        },
        end: {
          line: 842,
          column: 19
        }
      },
      "162": {
        start: {
          line: 843,
          column: 16
        },
        end: {
          line: 846,
          column: 19
        }
      },
      "163": {
        start: {
          line: 847,
          column: 16
        },
        end: {
          line: 850,
          column: 19
        }
      },
      "164": {
        start: {
          line: 851,
          column: 16
        },
        end: {
          line: 854,
          column: 19
        }
      },
      "165": {
        start: {
          line: 855,
          column: 16
        },
        end: {
          line: 858,
          column: 19
        }
      },
      "166": {
        start: {
          line: 859,
          column: 16
        },
        end: {
          line: 862,
          column: 19
        }
      },
      "167": {
        start: {
          line: 865,
          column: 8
        },
        end: {
          line: 865,
          column: 25
        }
      },
      "168": {
        start: {
          line: 870,
          column: 4
        },
        end: {
          line: 890,
          column: 11
        }
      },
      "169": {
        start: {
          line: 871,
          column: 8
        },
        end: {
          line: 871,
          column: 50
        }
      },
      "170": {
        start: {
          line: 871,
          column: 43
        },
        end: {
          line: 871,
          column: 50
        }
      },
      "171": {
        start: {
          line: 872,
          column: 29
        },
        end: {
          line: 875,
          column: 14
        }
      },
      "172": {
        start: {
          line: 872,
          column: 33
        },
        end: {
          line: 875,
          column: 14
        }
      },
      "173": {
        start: {
          line: 876,
          column: 30
        },
        end: {
          line: 879,
          column: 14
        }
      },
      "174": {
        start: {
          line: 876,
          column: 34
        },
        end: {
          line: 879,
          column: 14
        }
      },
      "175": {
        start: {
          line: 880,
          column: 8
        },
        end: {
          line: 889,
          column: 9
        }
      },
      "176": {
        start: {
          line: 881,
          column: 12
        },
        end: {
          line: 881,
          column: 60
        }
      },
      "177": {
        start: {
          line: 882,
          column: 12
        },
        end: {
          line: 882,
          column: 62
        }
      },
      "178": {
        start: {
          line: 883,
          column: 12
        },
        end: {
          line: 886,
          column: 14
        }
      },
      "179": {
        start: {
          line: 884,
          column: 16
        },
        end: {
          line: 884,
          column: 67
        }
      },
      "180": {
        start: {
          line: 885,
          column: 16
        },
        end: {
          line: 885,
          column: 69
        }
      },
      "181": {
        start: {
          line: 888,
          column: 12
        },
        end: {
          line: 888,
          column: 78
        }
      },
      "182": {
        start: {
          line: 892,
          column: 4
        },
        end: {
          line: 933,
          column: 11
        }
      },
      "183": {
        start: {
          line: 893,
          column: 28
        },
        end: {
          line: 893,
          column: 64
        }
      },
      "184": {
        start: {
          line: 894,
          column: 28
        },
        end: {
          line: 894,
          column: 69
        }
      },
      "185": {
        start: {
          line: 895,
          column: 8
        },
        end: {
          line: 897,
          column: 9
        }
      },
      "186": {
        start: {
          line: 896,
          column: 12
        },
        end: {
          line: 896,
          column: 19
        }
      },
      "187": {
        start: {
          line: 898,
          column: 30
        },
        end: {
          line: 898,
          column: 32
        }
      },
      "188": {
        start: {
          line: 899,
          column: 8
        },
        end: {
          line: 923,
          column: 9
        }
      },
      "189": {
        start: {
          line: 900,
          column: 38
        },
        end: {
          line: 912,
          column: 13
        }
      },
      "190": {
        start: {
          line: 901,
          column: 16
        },
        end: {
          line: 911,
          column: 17
        }
      },
      "191": {
        start: {
          line: 902,
          column: 40
        },
        end: {
          line: 907,
          column: 22
        }
      },
      "192": {
        start: {
          line: 903,
          column: 24
        },
        end: {
          line: 906,
          column: 27
        }
      },
      "193": {
        start: {
          line: 908,
          column: 20
        },
        end: {
          line: 908,
          column: 69
        }
      },
      "194": {
        start: {
          line: 908,
          column: 37
        },
        end: {
          line: 908,
          column: 69
        }
      },
      "195": {
        start: {
          line: 910,
          column: 20
        },
        end: {
          line: 910,
          column: 82
        }
      },
      "196": {
        start: {
          line: 913,
          column: 12
        },
        end: {
          line: 913,
          column: 96
        }
      },
      "197": {
        start: {
          line: 914,
          column: 12
        },
        end: {
          line: 914,
          column: 102
        }
      },
      "198": {
        start: {
          line: 915,
          column: 12
        },
        end: {
          line: 915,
          column: 99
        }
      },
      "199": {
        start: {
          line: 922,
          column: 12
        },
        end: {
          line: 922,
          column: 77
        }
      },
      "200": {
        start: {
          line: 924,
          column: 8
        },
        end: {
          line: 932,
          column: 10
        }
      },
      "201": {
        start: {
          line: 925,
          column: 12
        },
        end: {
          line: 931,
          column: 15
        }
      },
      "202": {
        start: {
          line: 926,
          column: 16
        },
        end: {
          line: 930,
          column: 17
        }
      },
      "203": {
        start: {
          line: 927,
          column: 20
        },
        end: {
          line: 927,
          column: 34
        }
      },
      "204": {
        start: {
          line: 929,
          column: 20
        },
        end: {
          line: 929,
          column: 64
        }
      },
      "205": {
        start: {
          line: 934,
          column: 4
        },
        end: {
          line: 937,
          column: 7
        }
      },
      "206": {
        start: {
          line: 939,
          column: 22
        },
        end: {
          line: 945,
          column: 1
        }
      },
      "207": {
        start: {
          line: 940,
          column: 20
        },
        end: {
          line: 940,
          column: 54
        }
      },
      "208": {
        start: {
          line: 941,
          column: 4
        },
        end: {
          line: 943,
          column: 5
        }
      },
      "209": {
        start: {
          line: 942,
          column: 8
        },
        end: {
          line: 942,
          column: 76
        }
      },
      "210": {
        start: {
          line: 944,
          column: 4
        },
        end: {
          line: 944,
          column: 19
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 22
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 34
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 331,
            column: 19
          },
          end: {
            line: 331,
            column: 20
          }
        },
        loc: {
          start: {
            line: 331,
            column: 36
          },
          end: {
            line: 743,
            column: 1
          }
        },
        line: 331
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 349,
            column: 43
          },
          end: {
            line: 349,
            column: 44
          }
        },
        loc: {
          start: {
            line: 349,
            column: 51
          },
          end: {
            line: 352,
            column: 32
          }
        },
        line: 349
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 357,
            column: 46
          },
          end: {
            line: 357,
            column: 47
          }
        },
        loc: {
          start: {
            line: 357,
            column: 54
          },
          end: {
            line: 357,
            column: 80
          }
        },
        line: 357
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 379,
            column: 43
          },
          end: {
            line: 379,
            column: 44
          }
        },
        loc: {
          start: {
            line: 379,
            column: 51
          },
          end: {
            line: 383,
            column: 32
          }
        },
        line: 379
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 388,
            column: 43
          },
          end: {
            line: 388,
            column: 44
          }
        },
        loc: {
          start: {
            line: 388,
            column: 51
          },
          end: {
            line: 392,
            column: 32
          }
        },
        line: 388
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 404,
            column: 27
          },
          end: {
            line: 404,
            column: 28
          }
        },
        loc: {
          start: {
            line: 404,
            column: 35
          },
          end: {
            line: 419,
            column: 21
          }
        },
        line: 404
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 433,
            column: 47
          },
          end: {
            line: 433,
            column: 48
          }
        },
        loc: {
          start: {
            line: 433,
            column: 57
          },
          end: {
            line: 436,
            column: 34
          }
        },
        line: 433
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 441,
            column: 50
          },
          end: {
            line: 441,
            column: 51
          }
        },
        loc: {
          start: {
            line: 441,
            column: 60
          },
          end: {
            line: 441,
            column: 88
          }
        },
        line: 441
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 463,
            column: 47
          },
          end: {
            line: 463,
            column: 48
          }
        },
        loc: {
          start: {
            line: 463,
            column: 57
          },
          end: {
            line: 472,
            column: 34
          }
        },
        line: 463
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 478,
            column: 47
          },
          end: {
            line: 478,
            column: 48
          }
        },
        loc: {
          start: {
            line: 478,
            column: 57
          },
          end: {
            line: 489,
            column: 34
          }
        },
        line: 478
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 506,
            column: 45
          },
          end: {
            line: 506,
            column: 46
          }
        },
        loc: {
          start: {
            line: 506,
            column: 54
          },
          end: {
            line: 509,
            column: 33
          }
        },
        line: 506
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 514,
            column: 48
          },
          end: {
            line: 514,
            column: 49
          }
        },
        loc: {
          start: {
            line: 514,
            column: 57
          },
          end: {
            line: 514,
            column: 84
          }
        },
        line: 514
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 563,
            column: 45
          },
          end: {
            line: 563,
            column: 46
          }
        },
        loc: {
          start: {
            line: 563,
            column: 54
          },
          end: {
            line: 566,
            column: 33
          }
        },
        line: 563
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 571,
            column: 48
          },
          end: {
            line: 571,
            column: 49
          }
        },
        loc: {
          start: {
            line: 571,
            column: 57
          },
          end: {
            line: 571,
            column: 84
          }
        },
        line: 571
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 602,
            column: 61
          },
          end: {
            line: 602,
            column: 62
          }
        },
        loc: {
          start: {
            line: 602,
            column: 73
          },
          end: {
            line: 605,
            column: 36
          }
        },
        line: 602
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 610,
            column: 64
          },
          end: {
            line: 610,
            column: 65
          }
        },
        loc: {
          start: {
            line: 610,
            column: 76
          },
          end: {
            line: 610,
            column: 106
          }
        },
        line: 610
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 641,
            column: 51
          },
          end: {
            line: 641,
            column: 52
          }
        },
        loc: {
          start: {
            line: 641,
            column: 63
          },
          end: {
            line: 644,
            column: 36
          }
        },
        line: 641
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 649,
            column: 54
          },
          end: {
            line: 649,
            column: 55
          }
        },
        loc: {
          start: {
            line: 649,
            column: 66
          },
          end: {
            line: 649,
            column: 96
          }
        },
        line: 649
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 680,
            column: 49
          },
          end: {
            line: 680,
            column: 50
          }
        },
        loc: {
          start: {
            line: 680,
            column: 60
          },
          end: {
            line: 683,
            column: 35
          }
        },
        line: 680
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 688,
            column: 52
          },
          end: {
            line: 688,
            column: 53
          }
        },
        loc: {
          start: {
            line: 688,
            column: 63
          },
          end: {
            line: 688,
            column: 92
          }
        },
        line: 688
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 744,
            column: 20
          },
          end: {
            line: 744,
            column: 21
          }
        },
        loc: {
          start: {
            line: 744,
            column: 70
          },
          end: {
            line: 938,
            column: 1
          }
        },
        line: 744
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 753,
            column: 45
          },
          end: {
            line: 753,
            column: 46
          }
        },
        loc: {
          start: {
            line: 753,
            column: 50
          },
          end: {
            line: 760,
            column: 9
          }
        },
        line: 753
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 767,
            column: 26
          },
          end: {
            line: 767,
            column: 27
          }
        },
        loc: {
          start: {
            line: 767,
            column: 30
          },
          end: {
            line: 866,
            column: 5
          }
        },
        line: 767
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 772,
            column: 31
          },
          end: {
            line: 772,
            column: 32
          }
        },
        loc: {
          start: {
            line: 772,
            column: 41
          },
          end: {
            line: 864,
            column: 9
          }
        },
        line: 772
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 799,
            column: 33
          },
          end: {
            line: 799,
            column: 34
          }
        },
        loc: {
          start: {
            line: 799,
            column: 63
          },
          end: {
            line: 817,
            column: 17
          }
        },
        line: 799
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 819,
            column: 51
          },
          end: {
            line: 819,
            column: 52
          }
        },
        loc: {
          start: {
            line: 819,
            column: 55
          },
          end: {
            line: 819,
            column: 91
          }
        },
        line: 819
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 820,
            column: 55
          },
          end: {
            line: 820,
            column: 56
          }
        },
        loc: {
          start: {
            line: 820,
            column: 59
          },
          end: {
            line: 820,
            column: 97
          }
        },
        line: 820
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 821,
            column: 53
          },
          end: {
            line: 821,
            column: 54
          }
        },
        loc: {
          start: {
            line: 821,
            column: 57
          },
          end: {
            line: 821,
            column: 94
          }
        },
        line: 821
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 822,
            column: 65
          },
          end: {
            line: 822,
            column: 66
          }
        },
        loc: {
          start: {
            line: 822,
            column: 69
          },
          end: {
            line: 822,
            column: 111
          }
        },
        line: 822
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 870,
            column: 26
          },
          end: {
            line: 870,
            column: 27
          }
        },
        loc: {
          start: {
            line: 870,
            column: 30
          },
          end: {
            line: 890,
            column: 5
          }
        },
        line: 870
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 872,
            column: 29
          },
          end: {
            line: 872,
            column: 30
          }
        },
        loc: {
          start: {
            line: 872,
            column: 33
          },
          end: {
            line: 875,
            column: 14
          }
        },
        line: 872
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 876,
            column: 30
          },
          end: {
            line: 876,
            column: 31
          }
        },
        loc: {
          start: {
            line: 876,
            column: 34
          },
          end: {
            line: 879,
            column: 14
          }
        },
        line: 876
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 883,
            column: 19
          },
          end: {
            line: 883,
            column: 20
          }
        },
        loc: {
          start: {
            line: 883,
            column: 23
          },
          end: {
            line: 886,
            column: 13
          }
        },
        line: 883
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 892,
            column: 26
          },
          end: {
            line: 892,
            column: 27
          }
        },
        loc: {
          start: {
            line: 892,
            column: 30
          },
          end: {
            line: 933,
            column: 5
          }
        },
        line: 892
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 900,
            column: 38
          },
          end: {
            line: 900,
            column: 39
          }
        },
        loc: {
          start: {
            line: 900,
            column: 66
          },
          end: {
            line: 912,
            column: 13
          }
        },
        line: 900
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 902,
            column: 51
          },
          end: {
            line: 902,
            column: 52
          }
        },
        loc: {
          start: {
            line: 902,
            column: 59
          },
          end: {
            line: 907,
            column: 21
          }
        },
        line: 902
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 924,
            column: 15
          },
          end: {
            line: 924,
            column: 16
          }
        },
        loc: {
          start: {
            line: 924,
            column: 19
          },
          end: {
            line: 932,
            column: 9
          }
        },
        line: 924
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 925,
            column: 34
          },
          end: {
            line: 925,
            column: 35
          }
        },
        loc: {
          start: {
            line: 925,
            column: 49
          },
          end: {
            line: 931,
            column: 13
          }
        },
        line: 925
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 939,
            column: 22
          },
          end: {
            line: 939,
            column: 23
          }
        },
        loc: {
          start: {
            line: 939,
            column: 26
          },
          end: {
            line: 945,
            column: 1
          }
        },
        line: 939
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 31,
            column: 65
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 45
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 31
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 88
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 29
          }
        }, {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 79
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 88
          }
        }, {
          start: {
            line: 53,
            column: 91
          },
          end: {
            line: 53,
            column: 95
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 54
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 33
          }
        }, {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 326,
            column: 14
          },
          end: {
            line: 326,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 326,
            column: 49
          },
          end: {
            line: 326,
            column: 65
          }
        }, {
          start: {
            line: 326,
            column: 68
          },
          end: {
            line: 326,
            column: 72
          }
        }],
        line: 326
      },
      "16": {
        loc: {
          start: {
            line: 333,
            column: 8
          },
          end: {
            line: 735,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 335,
            column: 12
          },
          end: {
            line: 345,
            column: 18
          }
        }, {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 353,
            column: 18
          }
        }, {
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 358,
            column: 18
          }
        }, {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 367,
            column: 18
          }
        }, {
          start: {
            line: 368,
            column: 12
          },
          end: {
            line: 375,
            column: 18
          }
        }, {
          start: {
            line: 376,
            column: 12
          },
          end: {
            line: 384,
            column: 18
          }
        }, {
          start: {
            line: 385,
            column: 12
          },
          end: {
            line: 393,
            column: 18
          }
        }, {
          start: {
            line: 394,
            column: 12
          },
          end: {
            line: 398,
            column: 18
          }
        }, {
          start: {
            line: 399,
            column: 12
          },
          end: {
            line: 420,
            column: 18
          }
        }, {
          start: {
            line: 422,
            column: 12
          },
          end: {
            line: 429,
            column: 18
          }
        }, {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 437,
            column: 18
          }
        }, {
          start: {
            line: 438,
            column: 12
          },
          end: {
            line: 442,
            column: 18
          }
        }, {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 451,
            column: 18
          }
        }, {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 459,
            column: 18
          }
        }, {
          start: {
            line: 460,
            column: 12
          },
          end: {
            line: 473,
            column: 18
          }
        }, {
          start: {
            line: 475,
            column: 12
          },
          end: {
            line: 490,
            column: 18
          }
        }, {
          start: {
            line: 492,
            column: 12
          },
          end: {
            line: 502,
            column: 18
          }
        }, {
          start: {
            line: 503,
            column: 12
          },
          end: {
            line: 510,
            column: 18
          }
        }, {
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 515,
            column: 18
          }
        }, {
          start: {
            line: 516,
            column: 12
          },
          end: {
            line: 524,
            column: 18
          }
        }, {
          start: {
            line: 525,
            column: 12
          },
          end: {
            line: 532,
            column: 18
          }
        }, {
          start: {
            line: 534,
            column: 12
          },
          end: {
            line: 542,
            column: 18
          }
        }, {
          start: {
            line: 543,
            column: 12
          },
          end: {
            line: 550,
            column: 18
          }
        }, {
          start: {
            line: 552,
            column: 12
          },
          end: {
            line: 559,
            column: 18
          }
        }, {
          start: {
            line: 560,
            column: 12
          },
          end: {
            line: 567,
            column: 18
          }
        }, {
          start: {
            line: 568,
            column: 12
          },
          end: {
            line: 572,
            column: 18
          }
        }, {
          start: {
            line: 573,
            column: 12
          },
          end: {
            line: 581,
            column: 18
          }
        }, {
          start: {
            line: 582,
            column: 12
          },
          end: {
            line: 589,
            column: 18
          }
        }, {
          start: {
            line: 591,
            column: 12
          },
          end: {
            line: 598,
            column: 18
          }
        }, {
          start: {
            line: 599,
            column: 12
          },
          end: {
            line: 606,
            column: 18
          }
        }, {
          start: {
            line: 607,
            column: 12
          },
          end: {
            line: 611,
            column: 18
          }
        }, {
          start: {
            line: 612,
            column: 12
          },
          end: {
            line: 620,
            column: 18
          }
        }, {
          start: {
            line: 621,
            column: 12
          },
          end: {
            line: 628,
            column: 18
          }
        }, {
          start: {
            line: 630,
            column: 12
          },
          end: {
            line: 637,
            column: 18
          }
        }, {
          start: {
            line: 638,
            column: 12
          },
          end: {
            line: 645,
            column: 18
          }
        }, {
          start: {
            line: 646,
            column: 12
          },
          end: {
            line: 650,
            column: 18
          }
        }, {
          start: {
            line: 651,
            column: 12
          },
          end: {
            line: 659,
            column: 18
          }
        }, {
          start: {
            line: 660,
            column: 12
          },
          end: {
            line: 667,
            column: 18
          }
        }, {
          start: {
            line: 669,
            column: 12
          },
          end: {
            line: 676,
            column: 18
          }
        }, {
          start: {
            line: 677,
            column: 12
          },
          end: {
            line: 684,
            column: 18
          }
        }, {
          start: {
            line: 685,
            column: 12
          },
          end: {
            line: 689,
            column: 18
          }
        }, {
          start: {
            line: 690,
            column: 12
          },
          end: {
            line: 698,
            column: 18
          }
        }, {
          start: {
            line: 699,
            column: 12
          },
          end: {
            line: 706,
            column: 18
          }
        }, {
          start: {
            line: 708,
            column: 12
          },
          end: {
            line: 715,
            column: 18
          }
        }, {
          start: {
            line: 717,
            column: 12
          },
          end: {
            line: 721,
            column: 18
          }
        }, {
          start: {
            line: 723,
            column: 12
          },
          end: {
            line: 727,
            column: 18
          }
        }, {
          start: {
            line: 728,
            column: 12
          },
          end: {
            line: 732,
            column: 18
          }
        }, {
          start: {
            line: 733,
            column: 12
          },
          end: {
            line: 734,
            column: 29
          }
        }],
        line: 333
      },
      "17": {
        loc: {
          start: {
            line: 349,
            column: 51
          },
          end: {
            line: 352,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 83
          },
          end: {
            line: 352,
            column: 25
          }
        }, {
          start: {
            line: 352,
            column: 28
          },
          end: {
            line: 352,
            column: 32
          }
        }],
        line: 349
      },
      "18": {
        loc: {
          start: {
            line: 362,
            column: 27
          },
          end: {
            line: 362,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 362,
            column: 27
          },
          end: {
            line: 362,
            column: 41
          }
        }, {
          start: {
            line: 362,
            column: 45
          },
          end: {
            line: 362,
            column: 47
          }
        }],
        line: 362
      },
      "19": {
        loc: {
          start: {
            line: 379,
            column: 51
          },
          end: {
            line: 383,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 379,
            column: 80
          },
          end: {
            line: 383,
            column: 25
          }
        }, {
          start: {
            line: 383,
            column: 28
          },
          end: {
            line: 383,
            column: 32
          }
        }],
        line: 379
      },
      "20": {
        loc: {
          start: {
            line: 381,
            column: 36
          },
          end: {
            line: 381,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 381,
            column: 66
          },
          end: {
            line: 381,
            column: 75
          }
        }, {
          start: {
            line: 381,
            column: 78
          },
          end: {
            line: 381,
            column: 89
          }
        }],
        line: 381
      },
      "21": {
        loc: {
          start: {
            line: 388,
            column: 51
          },
          end: {
            line: 392,
            column: 32
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 388,
            column: 87
          },
          end: {
            line: 392,
            column: 25
          }
        }, {
          start: {
            line: 392,
            column: 28
          },
          end: {
            line: 392,
            column: 32
          }
        }],
        line: 388
      },
      "22": {
        loc: {
          start: {
            line: 406,
            column: 24
          },
          end: {
            line: 417,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 406,
            column: 24
          },
          end: {
            line: 417,
            column: 25
          }
        }, {
          start: {
            line: 408,
            column: 31
          },
          end: {
            line: 417,
            column: 25
          }
        }],
        line: 406
      },
      "23": {
        loc: {
          start: {
            line: 407,
            column: 44
          },
          end: {
            line: 407,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 44
          },
          end: {
            line: 407,
            column: 54
          }
        }, {
          start: {
            line: 407,
            column: 58
          },
          end: {
            line: 407,
            column: 59
          }
        }],
        line: 407
      },
      "24": {
        loc: {
          start: {
            line: 407,
            column: 82
          },
          end: {
            line: 407,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 407,
            column: 82
          },
          end: {
            line: 407,
            column: 92
          }
        }, {
          start: {
            line: 407,
            column: 96
          },
          end: {
            line: 407,
            column: 97
          }
        }],
        line: 407
      },
      "25": {
        loc: {
          start: {
            line: 408,
            column: 31
          },
          end: {
            line: 417,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 408,
            column: 31
          },
          end: {
            line: 417,
            column: 25
          }
        }, {
          start: {
            line: 415,
            column: 31
          },
          end: {
            line: 417,
            column: 25
          }
        }],
        line: 408
      },
      "26": {
        loc: {
          start: {
            line: 414,
            column: 36
          },
          end: {
            line: 414,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 36
          },
          end: {
            line: 414,
            column: 61
          }
        }, {
          start: {
            line: 414,
            column: 65
          },
          end: {
            line: 414,
            column: 66
          }
        }],
        line: 414
      },
      "27": {
        loc: {
          start: {
            line: 414,
            column: 71
          },
          end: {
            line: 414,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 414,
            column: 71
          },
          end: {
            line: 414,
            column: 96
          }
        }, {
          start: {
            line: 414,
            column: 100
          },
          end: {
            line: 414,
            column: 101
          }
        }],
        line: 414
      },
      "28": {
        loc: {
          start: {
            line: 415,
            column: 31
          },
          end: {
            line: 417,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 415,
            column: 31
          },
          end: {
            line: 417,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 415
      },
      "29": {
        loc: {
          start: {
            line: 416,
            column: 44
          },
          end: {
            line: 416,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 44
          },
          end: {
            line: 416,
            column: 56
          }
        }, {
          start: {
            line: 416,
            column: 60
          },
          end: {
            line: 416,
            column: 61
          }
        }],
        line: 416
      },
      "30": {
        loc: {
          start: {
            line: 416,
            column: 84
          },
          end: {
            line: 416,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 84
          },
          end: {
            line: 416,
            column: 96
          }
        }, {
          start: {
            line: 416,
            column: 100
          },
          end: {
            line: 416,
            column: 101
          }
        }],
        line: 416
      },
      "31": {
        loc: {
          start: {
            line: 433,
            column: 57
          },
          end: {
            line: 436,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 433,
            column: 91
          },
          end: {
            line: 436,
            column: 25
          }
        }, {
          start: {
            line: 436,
            column: 28
          },
          end: {
            line: 436,
            column: 34
          }
        }],
        line: 433
      },
      "32": {
        loc: {
          start: {
            line: 446,
            column: 29
          },
          end: {
            line: 446,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 446,
            column: 29
          },
          end: {
            line: 446,
            column: 43
          }
        }, {
          start: {
            line: 446,
            column: 47
          },
          end: {
            line: 446,
            column: 49
          }
        }],
        line: 446
      },
      "33": {
        loc: {
          start: {
            line: 463,
            column: 57
          },
          end: {
            line: 472,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 463,
            column: 97
          },
          end: {
            line: 472,
            column: 25
          }
        }, {
          start: {
            line: 472,
            column: 28
          },
          end: {
            line: 472,
            column: 34
          }
        }],
        line: 463
      },
      "34": {
        loc: {
          start: {
            line: 466,
            column: 35
          },
          end: {
            line: 466,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 35
          },
          end: {
            line: 466,
            column: 47
          }
        }, {
          start: {
            line: 466,
            column: 51
          },
          end: {
            line: 466,
            column: 53
          }
        }],
        line: 466
      },
      "35": {
        loc: {
          start: {
            line: 478,
            column: 57
          },
          end: {
            line: 489,
            column: 34
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 478,
            column: 97
          },
          end: {
            line: 489,
            column: 25
          }
        }, {
          start: {
            line: 489,
            column: 28
          },
          end: {
            line: 489,
            column: 34
          }
        }],
        line: 478
      },
      "36": {
        loc: {
          start: {
            line: 481,
            column: 35
          },
          end: {
            line: 481,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 481,
            column: 35
          },
          end: {
            line: 481,
            column: 50
          }
        }, {
          start: {
            line: 481,
            column: 54
          },
          end: {
            line: 481,
            column: 56
          }
        }],
        line: 481
      },
      "37": {
        loc: {
          start: {
            line: 506,
            column: 54
          },
          end: {
            line: 509,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 506,
            column: 87
          },
          end: {
            line: 509,
            column: 25
          }
        }, {
          start: {
            line: 509,
            column: 28
          },
          end: {
            line: 509,
            column: 33
          }
        }],
        line: 506
      },
      "38": {
        loc: {
          start: {
            line: 519,
            column: 28
          },
          end: {
            line: 519,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 519,
            column: 28
          },
          end: {
            line: 519,
            column: 42
          }
        }, {
          start: {
            line: 519,
            column: 46
          },
          end: {
            line: 519,
            column: 48
          }
        }],
        line: 519
      },
      "39": {
        loc: {
          start: {
            line: 537,
            column: 33
          },
          end: {
            line: 537,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 537,
            column: 33
          },
          end: {
            line: 537,
            column: 47
          }
        }, {
          start: {
            line: 537,
            column: 51
          },
          end: {
            line: 537,
            column: 53
          }
        }],
        line: 537
      },
      "40": {
        loc: {
          start: {
            line: 563,
            column: 54
          },
          end: {
            line: 566,
            column: 33
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 563,
            column: 87
          },
          end: {
            line: 566,
            column: 25
          }
        }, {
          start: {
            line: 566,
            column: 28
          },
          end: {
            line: 566,
            column: 33
          }
        }],
        line: 563
      },
      "41": {
        loc: {
          start: {
            line: 576,
            column: 28
          },
          end: {
            line: 576,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 576,
            column: 28
          },
          end: {
            line: 576,
            column: 42
          }
        }, {
          start: {
            line: 576,
            column: 46
          },
          end: {
            line: 576,
            column: 48
          }
        }],
        line: 576
      },
      "42": {
        loc: {
          start: {
            line: 602,
            column: 73
          },
          end: {
            line: 605,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 602,
            column: 109
          },
          end: {
            line: 605,
            column: 25
          }
        }, {
          start: {
            line: 605,
            column: 28
          },
          end: {
            line: 605,
            column: 36
          }
        }],
        line: 602
      },
      "43": {
        loc: {
          start: {
            line: 615,
            column: 36
          },
          end: {
            line: 615,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 615,
            column: 36
          },
          end: {
            line: 615,
            column: 50
          }
        }, {
          start: {
            line: 615,
            column: 54
          },
          end: {
            line: 615,
            column: 56
          }
        }],
        line: 615
      },
      "44": {
        loc: {
          start: {
            line: 641,
            column: 63
          },
          end: {
            line: 644,
            column: 36
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 641,
            column: 99
          },
          end: {
            line: 644,
            column: 25
          }
        }, {
          start: {
            line: 644,
            column: 28
          },
          end: {
            line: 644,
            column: 36
          }
        }],
        line: 641
      },
      "45": {
        loc: {
          start: {
            line: 654,
            column: 31
          },
          end: {
            line: 654,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 654,
            column: 31
          },
          end: {
            line: 654,
            column: 45
          }
        }, {
          start: {
            line: 654,
            column: 49
          },
          end: {
            line: 654,
            column: 51
          }
        }],
        line: 654
      },
      "46": {
        loc: {
          start: {
            line: 680,
            column: 60
          },
          end: {
            line: 683,
            column: 35
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 680,
            column: 95
          },
          end: {
            line: 683,
            column: 25
          }
        }, {
          start: {
            line: 683,
            column: 28
          },
          end: {
            line: 683,
            column: 35
          }
        }],
        line: 680
      },
      "47": {
        loc: {
          start: {
            line: 693,
            column: 30
          },
          end: {
            line: 693,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 693,
            column: 30
          },
          end: {
            line: 693,
            column: 44
          }
        }, {
          start: {
            line: 693,
            column: 48
          },
          end: {
            line: 693,
            column: 50
          }
        }],
        line: 693
      },
      "48": {
        loc: {
          start: {
            line: 745,
            column: 31
          },
          end: {
            line: 748,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 745,
            column: 52
          },
          end: {
            line: 748,
            column: 5
          }
        }, {
          start: {
            line: 748,
            column: 8
          },
          end: {
            line: 748,
            column: 20
          }
        }],
        line: 745
      },
      "49": {
        loc: {
          start: {
            line: 769,
            column: 8
          },
          end: {
            line: 771,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 769,
            column: 8
          },
          end: {
            line: 771,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 769
      },
      "50": {
        loc: {
          start: {
            line: 776,
            column: 16
          },
          end: {
            line: 790,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 776,
            column: 16
          },
          end: {
            line: 790,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 776
      },
      "51": {
        loc: {
          start: {
            line: 794,
            column: 16
          },
          end: {
            line: 797,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 794,
            column: 16
          },
          end: {
            line: 797,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 794
      },
      "52": {
        loc: {
          start: {
            line: 794,
            column: 20
          },
          end: {
            line: 794,
            column: 129
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 794,
            column: 20
          },
          end: {
            line: 794,
            column: 32
          }
        }, {
          start: {
            line: 794,
            column: 36
          },
          end: {
            line: 794,
            column: 48
          }
        }, {
          start: {
            line: 794,
            column: 52
          },
          end: {
            line: 794,
            column: 88
          }
        }, {
          start: {
            line: 794,
            column: 92
          },
          end: {
            line: 794,
            column: 129
          }
        }],
        line: 794
      },
      "53": {
        loc: {
          start: {
            line: 871,
            column: 8
          },
          end: {
            line: 871,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 871,
            column: 8
          },
          end: {
            line: 871,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 871
      },
      "54": {
        loc: {
          start: {
            line: 895,
            column: 8
          },
          end: {
            line: 897,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 895,
            column: 8
          },
          end: {
            line: 897,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 895
      },
      "55": {
        loc: {
          start: {
            line: 895,
            column: 12
          },
          end: {
            line: 895,
            column: 121
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 895,
            column: 12
          },
          end: {
            line: 895,
            column: 24
          }
        }, {
          start: {
            line: 895,
            column: 28
          },
          end: {
            line: 895,
            column: 40
          }
        }, {
          start: {
            line: 895,
            column: 44
          },
          end: {
            line: 895,
            column: 80
          }
        }, {
          start: {
            line: 895,
            column: 84
          },
          end: {
            line: 895,
            column: 121
          }
        }],
        line: 895
      },
      "56": {
        loc: {
          start: {
            line: 908,
            column: 20
          },
          end: {
            line: 908,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 908,
            column: 20
          },
          end: {
            line: 908,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 908
      },
      "57": {
        loc: {
          start: {
            line: 941,
            column: 4
          },
          end: {
            line: 943,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 941,
            column: 4
          },
          end: {
            line: 943,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 941
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0, 0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0, 0, 0],
      "56": [0, 0],
      "57": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\context\\AppContext.tsx"],
      sourcesContent: ["import * as React from \"react\"\nimport { createContext, useContext, useReducer, useEffect, type ReactNode, useState, useMemo } from \"react\"\nimport { databaseService } from \"../services/database\"\nimport { initialQuotes } from \"../data/mockData\"\nimport type {\n  Quote,\n  Contract,\n  Invoice,\n  Proposal,\n  QuoteData,\n} from \"../schemas/contractInvoiceSchemas\"\nimport type {\n  Task,\n  Client,\n  Event as CalendarEvent,\n  SalesStage,\n} from \"../types\"\n\n// Define AdminSettings interface\nexport interface AdminSettings {\n  id: string\n  companyName: string\n  companyEmail: string\n  companyPhone: string\n  companyAddress: string\n  defaultCurrency: string\n  taxRate: number\n  invoicePrefix: string\n  quotePrefix: string\n  contractPrefix: string\n  emailSignature: string\n  logoUrl?: string\n  created_at: string\n  updated_at: string\n}\n\n// Define the shape of your state with all required fields\nexport interface AppState {\n  tasks: Task[]\n  clients: Client[]\n  events: CalendarEvent[]\n  salesStages: SalesStage[]\n  quotes: Quote[]\n  savedProposals: Proposal[]\n  invoices: Invoice[]\n  contracts: Contract[] // Added contracts to state\n  adminSettings: AdminSettings\n  pendingQuoteForConversion: Quote | null // New state for workflow\n  loading: {\n    tasks: boolean\n    clients: boolean\n    events: boolean\n    salesStages: boolean\n    quotes: boolean\n    savedQuotes: boolean\n    contracts: boolean\n    invoices: boolean\n    proposals: boolean\n  }\n  error: string | null\n  isOnline: boolean\n  [key: string]: any\n}\n\n// Define action types\ntype ActionType =\n  // Task actions\n  | { type: \"ADD_TASK\"; payload: Omit<Task, \"id\"> }\n  | { type: \"UPDATE_TASK\"; payload: { id: string | number; task: Partial<Task> } }\n  | { type: \"DELETE_TASK\"; payload: string | number }\n  | { type: \"SET_TASKS\"; payload: Task[] }\n  | { type: \"SET_TASKS_LOADING\"; payload: boolean }\n  | { type: \"TOGGLE_TASK_COMPLETION\"; payload: string }\n  | { type: \"ASSIGN_TASK\"; payload: { taskId: string; assigneeId: string } }\n  | { type: \"FILTER_TASKS_BY_STATUS\"; payload: string }\n  | { type: \"SORT_TASKS\"; payload: string }\n  // Client actions\n  | { type: \"ADD_CLIENT\"; payload: Client }\n  | { type: \"UPDATE_CLIENT\"; payload: { id: string; client: Partial<Client> } }\n  | { type: \"DELETE_CLIENT\"; payload: string }\n  | { type: \"SET_CLIENTS\"; payload: Client[] }\n  | { type: \"SET_CLIENTS_LOADING\"; payload: boolean }\n  | { type: \"ADD_NOTE\"; payload: { clientId: string; note: any } }\n  | { type: \"ADD_CLIENT_NOTE\"; payload: { clientId: string; note: any } }\n  | { type: \"UPDATE_CLIENT_STAGE\"; payload: { clientId: string; stage: string } }\n  // Project actions\n  | { type: \"ADD_PROJECT\"; payload: any }\n  // Event actions\n  | { type: \"ADD_EVENT\"; payload: Omit<CalendarEvent, \"id\"> }\n  | { type: \"UPDATE_EVENT\"; payload: { id: string; event: Partial<CalendarEvent> } }\n  | { type: \"DELETE_EVENT\"; payload: string }\n  | { type: \"SET_EVENTS\"; payload: CalendarEvent[] }\n  | { type: \"SET_EVENTS_LOADING\"; payload: boolean }\n  // Sales stage actions\n  | { type: \"SET_SALES_STAGES\"; payload: SalesStage[] }\n  | { type: \"SET_SALES_STAGES_LOADING\"; payload: boolean }\n  // Quote actions\n  | { type: \"ADD_QUOTE\"; payload: Quote }\n  | { type: \"UPDATE_QUOTE\"; payload: { id: string; quote: Partial<Quote> } }\n  | { type: \"DELETE_QUOTE\"; payload: string }\n  | { type: \"SET_QUOTES\"; payload: Quote[] }\n  | { type: \"SET_QUOTES_LOADING\"; payload: boolean }\n  // Proposal actions\n  | { type: \"ADD_PROPOSAL\"; payload: Proposal }\n  | { type: \"UPDATE_PROPOSAL\"; payload: { id: string; proposal: Partial<Proposal> } }\n  | { type: \"DELETE_PROPOSAL\"; payload: string }\n  | { type: \"SET_PROPOSALS\"; payload: Proposal[] }\n  | { type: \"SET_PROPOSALS_LOADING\"; payload: boolean }\n  // Contract actions\n  | { type: \"ADD_CONTRACT\"; payload: Contract }\n  | { type: \"UPDATE_CONTRACT\"; payload: { id: string; contract: Partial<Contract> } }\n  | { type: \"DELETE_CONTRACT\"; payload: string }\n  | { type: \"SET_CONTRACTS\"; payload: Contract[] }\n  | { type: \"SET_CONTRACTS_LOADING\"; payload: boolean }\n  // Invoice actions\n  | { type: \"ADD_INVOICE\"; payload: Invoice }\n  | { type: \"UPDATE_INVOICE\"; payload: { id: string; invoice: Partial<Invoice> } }\n  | { type: \"DELETE_INVOICE\"; payload: string }\n  | { type: \"SET_INVOICES\"; payload: Invoice[] }\n  | { type: \"SET_INVOICES_LOADING\"; payload: boolean }\n  // Admin settings actions\n  | { type: \"UPDATE_ADMIN_SETTINGS\"; payload: Partial<AdminSettings> }\n  // Workflow actions\n  | { type: \"SET_PENDING_QUOTE_FOR_CONVERSION\"; payload: Quote | null }\n  // General actions\n  | { type: \"SET_ERROR\"; payload: string | null }\n  | { type: \"SET_ONLINE_STATUS\"; payload: boolean }\n  | { type: \"SYNC_WITH_DATABASE\" }\n\n// Define the context type\ninterface AppContextType {\n  state: AppState\n  dispatch: React.Dispatch<ActionType>\n  activeComponent: string\n  setActiveComponent: React.Dispatch<React.SetStateAction<string>>\n  quoteData: QuoteData | null\n  setQuoteData: React.Dispatch<React.SetStateAction<QuoteData | null>>\n}\n\n// Enhanced initial state with sample data to prevent undefined errors\nconst initialState: AppState = {\n  tasks: [\n    {\n      id: \"1\",\n      title: \"Design Homepage\",\n      description: \"Create homepage design mockup\",\n      due_date: \"2024-02-15\",\n      priority: \"high\",\n      assigned_to: \"John Doe\",\n      status: \"pending\",\n      client_id: \"1\",\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      tags: [],\n      time_estimate: 8,\n      time_spent: 0,\n    },\n    {\n      id: \"2\",\n      title: \"Client Review\",\n      description: \"Review client feedback\",\n      due_date: \"2024-02-20\",\n      priority: \"medium\",\n      assigned_to: \"Jane Smith\",\n      status: \"completed\",\n      client_id: \"2\",\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      tags: [],\n      time_estimate: 4,\n      time_spent: 4,\n    },\n  ],\n  quotes: initialQuotes,\n  savedProposals: [],\n  contracts: [\n    {\n      id: \"contract-1\",\n      quoteId: \"quote-1\",\n      clientId: \"1\",\n      contractNumber: \"CON-2024-0001\",\n      contractTitle: \"Website Redesign Project\",\n      clientName: \"Acme Corp\",\n      clientEmail: \"john@acme.com\",\n      startDate: \"2024-02-01\",\n      endDate: \"2024-02-28\",\n      terms: \"Standard terms and conditions for website development project. Payment due within 30 days of invoice. Project includes design, development, and deployment phases.\",\n      totalAmount: 7500,\n      paymentSchedule: \"50% deposit, 50% on completion\",\n      scopeOfWork: \"Complete website redesign with modern features including responsive design, content management system, and SEO optimization.\",\n      clientInfo: {\n        name: \"Acme Corp\",\n        email: \"john@acme.com\",\n        phone: \"555-0123\",\n        company: \"Acme Corp\",\n        address: \"123 Main St, City, State 12345\",\n      },\n      projectDetails: {\n        title: \"Website Redesign Project\",\n        description: \"Complete website redesign with modern features\",\n      },\n      status: \"draft\",\n      priority: \"high\",\n      createdAt: \"2024-01-16T10:00:00.000Z\",\n      updatedAt: \"2024-01-16T10:00:00.000Z\",\n      templateId: \"template-1\",\n      contractContent: \"\",\n      dynamicFieldValues: {},\n      dynamicTerms: {\n        totalCost: 7500,\n        depositPercentage: 50,\n        projectStartDate: \"2024-02-01\",\n        estimatedCompletionDate: \"2024-02-28\",\n      },\n    },\n  ],\n  invoices: [\n    {\n      id: \"invoice-1\",\n      clientId: \"1\",\n      invoiceNumber: \"INV-2024-0001\",\n      issueDate: \"2024-01-20\",\n      dueDate: \"2024-02-05\",\n      items: [\n        {\n          id: \"item-1\",\n          description: \"Website Design - Deposit\",\n          quantity: 1,\n          price: 3750,\n          total: 3750,\n        },\n      ],\n      subtotal: 3750,\n      tax: 375,\n      totalAmount: 4125,\n      status: \"Sent\",\n      notes: \"50% deposit for website project\",\n      clientName: \"Acme Corp\",\n      clientEmail: \"john@acme.com\",\n      clientAddress: \"123 Main St, City, State 12345\",\n    },\n  ],\n  clients: [\n    {\n      id: \"1\",\n      name: \"Acme Corp\",\n      email: \"john@acme.com\",\n      phone: \"555-0123\",\n      company: \"Acme Corp\",\n      stage: \"1\",\n      value: 5000,\n      status: \"active\",\n      source: \"Website\",\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      notes: [\n        {\n          type: \"call\",\n          content: \"Initial consultation call\",\n          date: \"2024-01-15\"\n        }\n      ],\n      projects: [],\n      custom_fields: {},\n    },\n    {\n      id: \"2\",\n      name: \"Tech Solutions\",\n      email: \"sarah@techsolutions.com\",\n      phone: \"555-0456\",\n      company: \"Tech Solutions Inc\",\n      stage: \"3\",\n      value: 12000,\n      status: \"active\",\n      source: \"Referral\",\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      notes: [\n        {\n          type: \"email\",\n          content: \"Sent proposal\",\n          date: \"2024-01-20\"\n        }\n      ],\n      projects: [],\n      custom_fields: {},\n    },\n  ],\n  events: [\n    {\n      id: \"1\",\n      title: \"Client Meeting\",\n      type: \"meeting\",\n      date: \"2024-02-15\",\n      time: \"10:00 AM\",\n      description: \"Discuss project requirements\",\n    },\n    {\n      id: \"2\",\n      title: \"Follow-up Call\",\n      type: \"call\",\n      date: \"2024-02-18\",\n      time: \"2:00 PM\",\n      description: \"Check on project progress\",\n    },\n    {\n      id: \"3\",\n      title: \"Project Deadline\",\n      type: \"deadline\",\n      date: \"2024-02-25\",\n      time: \"11:59 PM\",\n      description: \"Website launch deadline\",\n    },\n  ],\n  salesStages: [\n    { \n      id: \"1\", \n      name: \"Lead\", \n      color: \"#3B82F6\", \n      order: 1, \n      description: \"Initial lead stage\", \n      created_at: new Date().toISOString(), \n      updated_at: new Date().toISOString() \n    },\n    { \n      id: \"2\", \n      name: \"Qualified\", \n      color: \"#8B5CF6\", \n      order: 2, \n      description: \"Qualified prospect\", \n      created_at: new Date().toISOString(), \n      updated_at: new Date().toISOString() \n    },\n    { \n      id: \"3\", \n      name: \"Proposal\", \n      color: \"#F59E0B\", \n      order: 3, \n      description: \"Proposal sent\", \n      created_at: new Date().toISOString(), \n      updated_at: new Date().toISOString() \n    },\n    { \n      id: \"4\", \n      name: \"Negotiation\", \n      color: \"#F97316\", \n      order: 4, \n      description: \"In negotiation\", \n      created_at: new Date().toISOString(), \n      updated_at: new Date().toISOString() \n    },\n    { \n      id: \"5\", \n      name: \"Closed Won\", \n      color: \"#10B981\", \n      order: 5, \n      description: \"Deal closed successfully\", \n      created_at: new Date().toISOString(), \n      updated_at: new Date().toISOString() \n    },\n    { \n      id: \"6\", \n      name: \"Closed Lost\", \n      color: \"#EF4444\", \n      order: 6, \n      description: \"Deal lost\", \n      created_at: new Date().toISOString(), \n      updated_at: new Date().toISOString() \n    },\n  ],\n  adminSettings: {\n    id: \"admin-1\",\n    companyName: \"Your Company\",\n    companyEmail: \"admin@company.com\",\n    companyPhone: \"555-0123\",\n    companyAddress: \"123 Main St\",\n    defaultCurrency: \"USD\",\n    taxRate: 0.08,\n    invoicePrefix: \"INV\",\n    quotePrefix: \"QUO\",\n    contractPrefix: \"CON\",\n    emailSignature: \"Best regards,\\nYour Company\",\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n  },\n  pendingQuoteForConversion: null, // Initialize new state\n  loading: {\n    tasks: false,\n    clients: false,\n    events: false,\n    salesStages: false,\n    quotes: false,\n    savedQuotes: false,\n    contracts: false,\n    invoices: false,\n    proposals: false,\n  },\n  error: null,\n  isOnline: typeof navigator !== \"undefined\" ? navigator.onLine : true,\n}\n\n// Create the context\nconst AppContext = createContext<AppContextType | undefined>(undefined)\n\n// Export the context for direct usage\nexport { AppContext }\n\n// Enhanced reducer function with proper error handling\nconst appReducer = (state: AppState, action: ActionType): AppState => {\n  try {\n    switch (action.type) {\n      // Task actions\n      case \"ADD_TASK\":\n        return {\n          ...state,\n          tasks: [...state.tasks, { ...action.payload, id: Date.now().toString() }],\n        }\n      case \"UPDATE_TASK\":\n        return {\n          ...state,\n          tasks: state.tasks.map((task) =>\n            task.id === action.payload.id ? { ...task, ...action.payload.task } : task,\n          ),\n        }\n      case \"DELETE_TASK\":\n        return {\n          ...state,\n          tasks: state.tasks.filter((task) => task.id !== action.payload),\n        }\n      case \"SET_TASKS\":\n        return {\n          ...state,\n          tasks: action.payload || [],\n          loading: { ...state.loading, tasks: false },\n        }\n      case \"SET_TASKS_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, tasks: action.payload },\n        }\n      case \"TOGGLE_TASK_COMPLETION\":\n        return {\n          ...state,\n          tasks: state.tasks.map((task) =>\n            task.id === action.payload\n              ? { ...task, status: task.status === \"completed\" ? \"pending\" : \"completed\", updated_at: new Date().toISOString() }\n              : task,\n          ),\n        }\n      case \"ASSIGN_TASK\":\n        return {\n          ...state,\n          tasks: state.tasks.map((task) =>\n            task.id === action.payload.taskId\n              ? { ...task, assigned_to: action.payload.assigneeId, updated_at: new Date().toISOString() }\n              : task,\n          ),\n        }\n      case \"FILTER_TASKS_BY_STATUS\":\n        // This would typically be handled in the UI layer, but we can store the filter state\n        return {\n          ...state,\n          // You might want to add a filter state to AppState if needed\n        }\n      case \"SORT_TASKS\":\n        return {\n          ...state,\n          tasks: [...state.tasks].sort((a, b) => {\n            const sortBy = action.payload\n            if (sortBy === \"dueDate\") {\n              return new Date(a.due_date || 0).getTime() - new Date(b.due_date || 0).getTime()\n            } else if (sortBy === \"priority\") {\n              const priorityOrder = { \"HIGH\": 3, \"MEDIUM\": 2, \"LOW\": 1 }\n              return (priorityOrder[b.priority as keyof typeof priorityOrder] || 0) - (priorityOrder[a.priority as keyof typeof priorityOrder] || 0)\n            } else if (sortBy === \"createdAt\") {\n              return new Date(b.created_at || 0).getTime() - new Date(a.created_at || 0).getTime()\n            }\n            return 0\n          }),\n        }\n\n      // Client actions\n      case \"ADD_CLIENT\":\n        return {\n          ...state,\n          clients: [...state.clients, action.payload],\n        }\n      case \"UPDATE_CLIENT\":\n        return {\n          ...state,\n          clients: state.clients.map((client) =>\n            client.id === action.payload.id ? { ...client, ...action.payload.client } : client,\n          ),\n        }\n      case \"DELETE_CLIENT\":\n        return {\n          ...state,\n          clients: state.clients.filter((client) => client.id !== action.payload),\n        }\n      case \"SET_CLIENTS\":\n        return {\n          ...state,\n          clients: action.payload || [],\n          loading: { ...state.loading, clients: false },\n        }\n      case \"SET_CLIENTS_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, clients: action.payload },\n        }\n      case \"ADD_NOTE\":\n        return {\n          ...state,\n          clients: state.clients.map((client) =>\n            client.id === action.payload.clientId\n              ? {\n                  ...client,\n                  notes: [\n                    ...(client.notes || []),\n                    {\n                      ...action.payload.note,\n                      date: new Date().toISOString().split(\"T\")[0],\n                    },\n                  ],\n                }\n              : client,\n          ),\n        }\n\n      // Project actions\n      case \"ADD_PROJECT\":\n        return {\n          ...state,\n          clients: state.clients.map((client) =>\n            client.id === action.payload.clientId\n              ? {\n                  ...client,\n                  projects: [\n                    ...(client.projects || []),\n                    {\n                      ...action.payload,\n                      id: Date.now().toString(),\n                      created_at: new Date().toISOString(),\n                      updated_at: new Date().toISOString(),\n                    },\n                  ],\n                }\n              : client,\n          ),\n        }\n\n      // Event actions\n      case \"ADD_EVENT\":\n        return {\n          ...state,\n          events: [...state.events, { ...action.payload, id: Date.now().toString() }],\n        }\n      case \"UPDATE_EVENT\":\n        return {\n          ...state,\n          events: state.events.map((event) =>\n            event.id === action.payload.id ? { ...event, ...action.payload.event } : event,\n          ),\n        }\n      case \"DELETE_EVENT\":\n        return {\n          ...state,\n          events: state.events.filter((event) => event.id !== action.payload),\n        }\n      case \"SET_EVENTS\":\n        return {\n          ...state,\n          events: action.payload || [],\n          loading: { ...state.loading, events: false },\n        }\n      case \"SET_EVENTS_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, events: action.payload },\n        }\n\n      // Sales stage actions\n      case \"SET_SALES_STAGES\":\n        return {\n          ...state,\n          salesStages: action.payload || [],\n          loading: { ...state.loading, salesStages: false },\n        }\n      case \"SET_SALES_STAGES_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, salesStages: action.payload },\n        }\n\n      // Quote actions\n      case \"ADD_QUOTE\":\n        return {\n          ...state,\n          quotes: [...state.quotes, action.payload],\n        }\n      case \"UPDATE_QUOTE\":\n        return {\n          ...state,\n          quotes: state.quotes.map((quote) =>\n            quote.id === action.payload.id ? { ...quote, ...action.payload.quote } : quote,\n          ),\n        }\n      case \"DELETE_QUOTE\":\n        return {\n          ...state,\n          quotes: state.quotes.filter((quote) => quote.id !== action.payload),\n        }\n      case \"SET_QUOTES\":\n        return {\n          ...state,\n          quotes: action.payload || [],\n          loading: { ...state.loading, quotes: false },\n        }\n      case \"SET_QUOTES_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, quotes: action.payload },\n        }\n\n      // Proposal actions\n      case \"ADD_PROPOSAL\":\n        return {\n          ...state,\n          savedProposals: [...state.savedProposals, action.payload],\n        }\n      case \"UPDATE_PROPOSAL\":\n        return {\n          ...state,\n          savedProposals: state.savedProposals.map((proposal) =>\n            proposal.id === action.payload.id ? { ...proposal, ...action.payload.proposal } : proposal,\n          ),\n        }\n      case \"DELETE_PROPOSAL\":\n        return {\n          ...state,\n          savedProposals: state.savedProposals.filter((proposal) => proposal.id !== action.payload),\n        }\n      case \"SET_PROPOSALS\":\n        return {\n          ...state,\n          savedProposals: action.payload || [],\n          loading: { ...state.loading, savedQuotes: false },\n        }\n      case \"SET_PROPOSALS_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, savedQuotes: action.payload },\n        }\n\n      // Contract actions\n      case \"ADD_CONTRACT\":\n        return {\n          ...state,\n          contracts: [...state.contracts, action.payload],\n        }\n      case \"UPDATE_CONTRACT\":\n        return {\n          ...state,\n          contracts: state.contracts.map((contract) =>\n            contract.id === action.payload.id ? { ...contract, ...action.payload.contract } : contract,\n          ),\n        }\n      case \"DELETE_CONTRACT\":\n        return {\n          ...state,\n          contracts: state.contracts.filter((contract) => contract.id !== action.payload),\n        }\n      case \"SET_CONTRACTS\":\n        return {\n          ...state,\n          contracts: action.payload || [],\n          loading: { ...state.loading, contracts: false },\n        }\n      case \"SET_CONTRACTS_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, contracts: action.payload },\n        }\n\n      // Invoice actions\n      case \"ADD_INVOICE\":\n        return {\n          ...state,\n          invoices: [...state.invoices, action.payload],\n        }\n      case \"UPDATE_INVOICE\":\n        return {\n          ...state,\n          invoices: state.invoices.map((invoice) =>\n            invoice.id === action.payload.id ? { ...invoice, ...action.payload.invoice } : invoice,\n          ),\n        }\n      case \"DELETE_INVOICE\":\n        return {\n          ...state,\n          invoices: state.invoices.filter((invoice) => invoice.id !== action.payload),\n        }\n      case \"SET_INVOICES\":\n        return {\n          ...state,\n          invoices: action.payload || [],\n          loading: { ...state.loading, invoices: false },\n        }\n      case \"SET_INVOICES_LOADING\":\n        return {\n          ...state,\n          loading: { ...state.loading, invoices: action.payload },\n        }\n\n      // Admin settings actions\n      case \"UPDATE_ADMIN_SETTINGS\":\n        return {\n          ...state,\n          adminSettings: { ...state.adminSettings, ...action.payload },\n        }\n\n      // Workflow actions\n      case \"SET_PENDING_QUOTE_FOR_CONVERSION\":\n        return {\n          ...state,\n          pendingQuoteForConversion: action.payload,\n        }\n\n      // General actions\n      case \"SET_ERROR\":\n        return {\n          ...state,\n          error: action.payload,\n        }\n      case \"SET_ONLINE_STATUS\":\n        return {\n          ...state,\n          isOnline: action.payload,\n        }\n\n      default:\n        return state\n    }\n  } catch (error) {\n    console.error(\"Reducer error:\", error)\n    return {\n      ...state,\n      error: \"An error occurred while updating the application state\",\n    }\n  }\n}\n\n// Provider component with enhanced error handling\nexport const AppProvider: React.FC<{ children: ReactNode; initialState?: Partial<AppState> }> = ({ children, initialState: customInitialState }) => {\n  const mergedInitialState = customInitialState ? { ...initialState, ...customInitialState } : initialState\n  const [state, dispatch] = useReducer(appReducer, mergedInitialState)\n  const isTestMode = customInitialState !== undefined\n  const [activeComponent, setActiveComponent] = useState<string>(\"Dashboard\")\n  const [quoteData, setQuoteData] = useState<QuoteData | null>(null)\n\n  const contextValue = useMemo(\n    () => ({\n      state,\n      dispatch,\n      activeComponent,\n      setActiveComponent,\n      quoteData,\n      setQuoteData,\n    }),\n    [state, dispatch, activeComponent, quoteData],\n  )\n\n  // Initialize data from database on mount\n  useEffect(() => {\n    // Skip data loading in test mode\n    if (isTestMode) {\n      return\n    }\n\n    const initializeData = async () => {\n      try {\n        // Check for transferQuoteData in localStorage and set as pendingQuoteForConversion\n        const transferQuoteData = localStorage.getItem('transferQuoteData')\n        if (transferQuoteData) {\n          try {\n            const quoteData = JSON.parse(transferQuoteData)\n            console.log('Loading transferQuoteData from localStorage:', quoteData)\n            dispatch({ type: 'SET_PENDING_QUOTE_FOR_CONVERSION', payload: quoteData })\n            // Clear the transferQuoteData after loading\n            localStorage.removeItem('transferQuoteData')\n          } catch (error) {\n            console.error('Error parsing transferQuoteData:', error)\n            localStorage.removeItem('transferQuoteData')\n          }\n        }\n\n        // Only try to load from database if we have a real Supabase connection\n        const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\n        if (\n          !supabaseUrl ||\n          !supabaseKey ||\n          supabaseUrl.includes(\"your-project\") ||\n          supabaseKey.includes(\"your-anon-key\")\n        ) {\n          console.log(\"Using mock data - Supabase not configured\")\n          return\n        }\n\n        // Load data with proper error handling\n        const loadData = async (type: string, action: string, getter: () => Promise<any>) => {\n          dispatch({ type: `SET_${type}_LOADING` as any, payload: true })\n          try {\n            const data = await getter()\n            dispatch({ type: action as any, payload: data })\n          } catch (error) {\n            console.warn(`Failed to load ${type.toLowerCase()} from database, using mock data:`, error)\n            dispatch({ type: `SET_${type}_LOADING` as any, payload: false })\n          }\n        }\n\n        await Promise.all([\n          loadData(\"TASKS\", \"SET_TASKS\", () => databaseService.getTasks()),\n          loadData(\"CLIENTS\", \"SET_CLIENTS\", () => databaseService.getClients()),\n          loadData(\"EVENTS\", \"SET_EVENTS\", () => databaseService.getEvents()),\n          loadData(\"SALES_STAGES\", \"SET_SALES_STAGES\", () => databaseService.getSalesStages()),\n          // Note: Quotes, proposals, contracts, and invoices are not yet implemented in DatabaseService\n          // loadData(\"QUOTES\", \"SET_QUOTES\", () => databaseService.getQuotes()),\n          // loadData(\"PROPOSALS\", \"SET_PROPOSALS\", () => databaseService.getProposals()),\n          // loadData(\"CONTRACTS\", \"SET_CONTRACTS\", () => databaseService.getContracts()),\n          // loadData(\"INVOICES\", \"SET_INVOICES\", () => databaseService.getInvoices()),\n        ])\n      } catch (error) {\n        console.error(\"Failed to initialize data:\", error)\n        dispatch({ type: \"SET_ERROR\", payload: \"Failed to load data - using offline mode\" })\n        // Clear all loading states\n        dispatch({ type: \"SET_TASKS_LOADING\", payload: false })\n        dispatch({ type: \"SET_CLIENTS_LOADING\", payload: false })\n        dispatch({ type: \"SET_EVENTS_LOADING\", payload: false })\n        dispatch({ type: \"SET_SALES_STAGES_LOADING\", payload: false })\n        dispatch({ type: \"SET_QUOTES_LOADING\", payload: false })\n        dispatch({ type: \"SET_PROPOSALS_LOADING\", payload: false })\n        dispatch({ type: \"SET_CONTRACTS_LOADING\", payload: false })\n        dispatch({ type: \"SET_INVOICES_LOADING\", payload: false })\n      }\n    }\n\n    initializeData()\n  }, [isTestMode])\n\n  // Monitor online status with error handling\n  useEffect(() => {\n    if (typeof window === \"undefined\") return\n\n    const handleOnline = () => dispatch({ type: \"SET_ONLINE_STATUS\", payload: true })\n    const handleOffline = () => dispatch({ type: \"SET_ONLINE_STATUS\", payload: false })\n\n    try {\n      window.addEventListener(\"online\", handleOnline)\n      window.addEventListener(\"offline\", handleOffline)\n\n      return () => {\n        window.removeEventListener(\"online\", handleOnline)\n        window.removeEventListener(\"offline\", handleOffline)\n      }\n    } catch (error) {\n      console.warn(\"Failed to set up online status monitoring:\", error)\n    }\n  }, [])\n\n  // Set up real-time subscriptions with error handling\n  useEffect(() => {\n    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n    const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n\n    if (!supabaseUrl || !supabaseKey || supabaseUrl.includes(\"your-project\") || supabaseKey.includes(\"your-anon-key\")) {\n      return\n    }\n\n    const subscriptions: Array<() => void> = []\n\n    try {\n      const setupSubscription = (name: string, subscriber: (callback: (data: any) => void) => any, action: string) => {\n        try {\n          const unsubscribe = subscriber((data) => {\n            dispatch({ type: action as any, payload: data })\n          })\n          if (unsubscribe) subscriptions.push(unsubscribe)\n        } catch (error) {\n          console.warn(`Failed to set up ${name} subscription:`, error)\n        }\n      }\n\n      setupSubscription(\"tasks\", databaseService.subscribeToTasks, \"SET_TASKS\")\n      setupSubscription(\"clients\", databaseService.subscribeToClients, \"SET_CLIENTS\")\n      setupSubscription(\"events\", databaseService.subscribeToEvents, \"SET_EVENTS\")\n      // Note: Quotes, proposals, contracts, and invoices subscriptions are not yet implemented in DatabaseService\n      // setupSubscription(\"quotes\", databaseService.subscribeToQuotes, \"SET_QUOTES\")\n      // setupSubscription(\"proposals\", databaseService.subscribeToProposals, \"SET_PROPOSALS\")\n      // setupSubscription(\"contracts\", databaseService.subscribeToContracts, \"SET_CONTRACTS\")\n      // setupSubscription(\"invoices\", databaseService.subscribeToInvoices, \"SET_INVOICES\")\n    } catch (error) {\n      console.warn(\"Failed to set up real-time subscriptions:\", error)\n    }\n\n    return () => {\n      subscriptions.forEach((unsubscribe) => {\n        try {\n          unsubscribe()\n        } catch (error) {\n          console.warn(\"Error unsubscribing:\", error)\n        }\n      })\n    }\n  }, [])\n\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>\n}\n\n// Custom hook to use the context with error handling\nexport const useAppContext = () => {\n  const context = useContext(AppContext)\n  if (context === undefined) {\n    throw new Error(\"useAppContext must be used within an AppProvider\")\n  }\n  return context\n}\n"],
      names: ["AppContext", "AppProvider", "useAppContext", "initialState", "tasks", "id", "title", "description", "due_date", "priority", "assigned_to", "status", "client_id", "created_at", "Date", "toISOString", "updated_at", "tags", "time_estimate", "time_spent", "quotes", "initialQuotes", "savedProposals", "contracts", "quoteId", "clientId", "contractNumber", "contractTitle", "clientName", "clientEmail", "startDate", "endDate", "terms", "totalAmount", "paymentSchedule", "scopeOfWork", "clientInfo", "name", "email", "phone", "company", "address", "projectDetails", "createdAt", "updatedAt", "templateId", "contractContent", "dynamicFieldValues", "dynamicTerms", "totalCost", "depositPercentage", "projectStartDate", "estimatedCompletionDate", "invoices", "invoiceNumber", "issueDate", "dueDate", "items", "quantity", "price", "total", "subtotal", "tax", "notes", "clientAddress", "clients", "stage", "value", "source", "type", "content", "date", "projects", "custom_fields", "events", "time", "salesStages", "color", "order", "adminSettings", "companyName", "companyEmail", "companyPhone", "companyAddress", "defaultCurrency", "taxRate", "invoicePrefix", "quotePrefix", "contractPrefix", "emailSignature", "pendingQuoteForConversion", "loading", "savedQuotes", "proposals", "error", "isOnline", "navigator", "onLine", "createContext", "undefined", "appReducer", "state", "action", "payload", "now", "toString", "map", "task", "filter", "taskId", "assigneeId", "sort", "a", "b", "sortBy", "getTime", "priorityOrder", "client", "note", "split", "event", "quote", "proposal", "contract", "invoice", "console", "children", "customInitialState", "mergedInitialState", "dispatch", "useReducer", "isTestMode", "activeComponent", "setActiveComponent", "useState", "quoteData", "setQuoteData", "contextValue", "useMemo", "useEffect", "initializeData", "transferQuoteData", "localStorage", "getItem", "JSON", "parse", "log", "removeItem", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "includes", "loadData", "getter", "data", "warn", "toLowerCase", "Promise", "all", "databaseService", "getTasks", "getClients", "getEvents", "getSalesStages", "window", "handleOnline", "handleOffline", "addEventListener", "removeEventListener", "subscriptions", "setupSubscription", "subscriber", "unsubscribe", "push", "subscribeToTasks", "subscribeToClients", "subscribeToEvents", "forEach", "Provider", "context", "useContext", "Error"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b5e32496a14962ccd92773aa2f93cc99f66487ef"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22ml0eggkh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22ml0eggkh();
cov_22ml0eggkh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_22ml0eggkh().f[0]++;
  cov_22ml0eggkh().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_22ml0eggkh().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_22ml0eggkh().s[3]++;
_export(exports, {
  get AppContext() {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[1]++;
    cov_22ml0eggkh().s[4]++;
    return AppContext;
  },
  get AppProvider() {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[2]++;
    cov_22ml0eggkh().s[5]++;
    return AppProvider;
  },
  get useAppContext() {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[3]++;
    cov_22ml0eggkh().s[6]++;
    return useAppContext;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_22ml0eggkh().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_22ml0eggkh().s[8]++, _interop_require_wildcard(require("react")));
const _database =
/* istanbul ignore next */
(cov_22ml0eggkh().s[9]++, require("../services/database"));
const _mockData =
/* istanbul ignore next */
(cov_22ml0eggkh().s[10]++, require("../data/mockData"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_22ml0eggkh().f[4]++;
  cov_22ml0eggkh().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_22ml0eggkh().b[0][0]++;
    cov_22ml0eggkh().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_22ml0eggkh().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_22ml0eggkh().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[5]++;
    cov_22ml0eggkh().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_22ml0eggkh().f[6]++;
  cov_22ml0eggkh().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_22ml0eggkh().b[2][0]++;
    cov_22ml0eggkh().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_22ml0eggkh().b[2][1]++;
  }
  cov_22ml0eggkh().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_22ml0eggkh().b[4][0]++;
    cov_22ml0eggkh().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_22ml0eggkh().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_22ml0eggkh().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_22ml0eggkh().b[6][0]++;
    cov_22ml0eggkh().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_22ml0eggkh().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[25]++,
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_22ml0eggkh().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_22ml0eggkh().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_22ml0eggkh().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_22ml0eggkh().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_22ml0eggkh().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_22ml0eggkh().b[11][1]++, null));
      /* istanbul ignore next */
      cov_22ml0eggkh().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_22ml0eggkh().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_22ml0eggkh().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_22ml0eggkh().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_22ml0eggkh().b[12][0]++;
        cov_22ml0eggkh().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_22ml0eggkh().b[12][1]++;
        cov_22ml0eggkh().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_22ml0eggkh().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_22ml0eggkh().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_22ml0eggkh().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_22ml0eggkh().b[14][0]++;
    cov_22ml0eggkh().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_22ml0eggkh().b[14][1]++;
  }
  cov_22ml0eggkh().s[35]++;
  return newObj;
}
// Enhanced initial state with sample data to prevent undefined errors
const initialState =
/* istanbul ignore next */
(cov_22ml0eggkh().s[36]++, {
  tasks: [{
    id: "1",
    title: "Design Homepage",
    description: "Create homepage design mockup",
    due_date: "2024-02-15",
    priority: "high",
    assigned_to: "John Doe",
    status: "pending",
    client_id: "1",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    tags: [],
    time_estimate: 8,
    time_spent: 0
  }, {
    id: "2",
    title: "Client Review",
    description: "Review client feedback",
    due_date: "2024-02-20",
    priority: "medium",
    assigned_to: "Jane Smith",
    status: "completed",
    client_id: "2",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    tags: [],
    time_estimate: 4,
    time_spent: 4
  }],
  quotes: _mockData.initialQuotes,
  savedProposals: [],
  contracts: [{
    id: "contract-1",
    quoteId: "quote-1",
    clientId: "1",
    contractNumber: "CON-2024-0001",
    contractTitle: "Website Redesign Project",
    clientName: "Acme Corp",
    clientEmail: "john@acme.com",
    startDate: "2024-02-01",
    endDate: "2024-02-28",
    terms: "Standard terms and conditions for website development project. Payment due within 30 days of invoice. Project includes design, development, and deployment phases.",
    totalAmount: 7500,
    paymentSchedule: "50% deposit, 50% on completion",
    scopeOfWork: "Complete website redesign with modern features including responsive design, content management system, and SEO optimization.",
    clientInfo: {
      name: "Acme Corp",
      email: "john@acme.com",
      phone: "555-0123",
      company: "Acme Corp",
      address: "123 Main St, City, State 12345"
    },
    projectDetails: {
      title: "Website Redesign Project",
      description: "Complete website redesign with modern features"
    },
    status: "draft",
    priority: "high",
    createdAt: "2024-01-16T10:00:00.000Z",
    updatedAt: "2024-01-16T10:00:00.000Z",
    templateId: "template-1",
    contractContent: "",
    dynamicFieldValues: {},
    dynamicTerms: {
      totalCost: 7500,
      depositPercentage: 50,
      projectStartDate: "2024-02-01",
      estimatedCompletionDate: "2024-02-28"
    }
  }],
  invoices: [{
    id: "invoice-1",
    clientId: "1",
    invoiceNumber: "INV-2024-0001",
    issueDate: "2024-01-20",
    dueDate: "2024-02-05",
    items: [{
      id: "item-1",
      description: "Website Design - Deposit",
      quantity: 1,
      price: 3750,
      total: 3750
    }],
    subtotal: 3750,
    tax: 375,
    totalAmount: 4125,
    status: "Sent",
    notes: "50% deposit for website project",
    clientName: "Acme Corp",
    clientEmail: "john@acme.com",
    clientAddress: "123 Main St, City, State 12345"
  }],
  clients: [{
    id: "1",
    name: "Acme Corp",
    email: "john@acme.com",
    phone: "555-0123",
    company: "Acme Corp",
    stage: "1",
    value: 5000,
    status: "active",
    source: "Website",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    notes: [{
      type: "call",
      content: "Initial consultation call",
      date: "2024-01-15"
    }],
    projects: [],
    custom_fields: {}
  }, {
    id: "2",
    name: "Tech Solutions",
    email: "sarah@techsolutions.com",
    phone: "555-0456",
    company: "Tech Solutions Inc",
    stage: "3",
    value: 12000,
    status: "active",
    source: "Referral",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    notes: [{
      type: "email",
      content: "Sent proposal",
      date: "2024-01-20"
    }],
    projects: [],
    custom_fields: {}
  }],
  events: [{
    id: "1",
    title: "Client Meeting",
    type: "meeting",
    date: "2024-02-15",
    time: "10:00 AM",
    description: "Discuss project requirements"
  }, {
    id: "2",
    title: "Follow-up Call",
    type: "call",
    date: "2024-02-18",
    time: "2:00 PM",
    description: "Check on project progress"
  }, {
    id: "3",
    title: "Project Deadline",
    type: "deadline",
    date: "2024-02-25",
    time: "11:59 PM",
    description: "Website launch deadline"
  }],
  salesStages: [{
    id: "1",
    name: "Lead",
    color: "#3B82F6",
    order: 1,
    description: "Initial lead stage",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }, {
    id: "2",
    name: "Qualified",
    color: "#8B5CF6",
    order: 2,
    description: "Qualified prospect",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }, {
    id: "3",
    name: "Proposal",
    color: "#F59E0B",
    order: 3,
    description: "Proposal sent",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }, {
    id: "4",
    name: "Negotiation",
    color: "#F97316",
    order: 4,
    description: "In negotiation",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }, {
    id: "5",
    name: "Closed Won",
    color: "#10B981",
    order: 5,
    description: "Deal closed successfully",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }, {
    id: "6",
    name: "Closed Lost",
    color: "#EF4444",
    order: 6,
    description: "Deal lost",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  }],
  adminSettings: {
    id: "admin-1",
    companyName: "Your Company",
    companyEmail: "admin@company.com",
    companyPhone: "555-0123",
    companyAddress: "123 Main St",
    defaultCurrency: "USD",
    taxRate: 0.08,
    invoicePrefix: "INV",
    quotePrefix: "QUO",
    contractPrefix: "CON",
    emailSignature: "Best regards,\nYour Company",
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString()
  },
  pendingQuoteForConversion: null,
  loading: {
    tasks: false,
    clients: false,
    events: false,
    salesStages: false,
    quotes: false,
    savedQuotes: false,
    contracts: false,
    invoices: false,
    proposals: false
  },
  error: null,
  isOnline: typeof navigator !== "undefined" ?
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[15][0]++, navigator.onLine) :
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[15][1]++, true)
});
// Create the context
const AppContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_22ml0eggkh().s[37]++, (0, _react.createContext)(undefined));
// Enhanced reducer function with proper error handling
/* istanbul ignore next */
cov_22ml0eggkh().s[38]++;
const appReducer = (state, action) => {
  /* istanbul ignore next */
  cov_22ml0eggkh().f[7]++;
  cov_22ml0eggkh().s[39]++;
  try {
    /* istanbul ignore next */
    cov_22ml0eggkh().s[40]++;
    switch (action.type) {
      // Task actions
      case "ADD_TASK":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][0]++;
        cov_22ml0eggkh().s[41]++;
        return {
          ...state,
          tasks: [...state.tasks, {
            ...action.payload,
            id: Date.now().toString()
          }]
        };
      case "UPDATE_TASK":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][1]++;
        cov_22ml0eggkh().s[42]++;
        return {
          ...state,
          tasks: state.tasks.map(task => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[8]++;
            cov_22ml0eggkh().s[43]++;
            return task.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[17][0]++, {
              ...task,
              ...action.payload.task
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[17][1]++, task);
          })
        };
      case "DELETE_TASK":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][2]++;
        cov_22ml0eggkh().s[44]++;
        return {
          ...state,
          tasks: state.tasks.filter(task => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[9]++;
            cov_22ml0eggkh().s[45]++;
            return task.id !== action.payload;
          })
        };
      case "SET_TASKS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][3]++;
        cov_22ml0eggkh().s[46]++;
        return {
          ...state,
          tasks:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[18][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[18][1]++, []),
          loading: {
            ...state.loading,
            tasks: false
          }
        };
      case "SET_TASKS_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][4]++;
        cov_22ml0eggkh().s[47]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            tasks: action.payload
          }
        };
      case "TOGGLE_TASK_COMPLETION":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][5]++;
        cov_22ml0eggkh().s[48]++;
        return {
          ...state,
          tasks: state.tasks.map(task => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[10]++;
            cov_22ml0eggkh().s[49]++;
            return task.id === action.payload ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[19][0]++, {
              ...task,
              status: task.status === "completed" ?
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[20][0]++, "pending") :
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[20][1]++, "completed"),
              updated_at: new Date().toISOString()
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[19][1]++, task);
          })
        };
      case "ASSIGN_TASK":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][6]++;
        cov_22ml0eggkh().s[50]++;
        return {
          ...state,
          tasks: state.tasks.map(task => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[11]++;
            cov_22ml0eggkh().s[51]++;
            return task.id === action.payload.taskId ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[21][0]++, {
              ...task,
              assigned_to: action.payload.assigneeId,
              updated_at: new Date().toISOString()
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[21][1]++, task);
          })
        };
      case "FILTER_TASKS_BY_STATUS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][7]++;
        cov_22ml0eggkh().s[52]++;
        // This would typically be handled in the UI layer, but we can store the filter state
        return {
          ...state
        };
      case "SORT_TASKS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][8]++;
        cov_22ml0eggkh().s[53]++;
        return {
          ...state,
          tasks: [...state.tasks].sort((a, b) => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[12]++;
            const sortBy =
            /* istanbul ignore next */
            (cov_22ml0eggkh().s[54]++, action.payload);
            /* istanbul ignore next */
            cov_22ml0eggkh().s[55]++;
            if (sortBy === "dueDate") {
              /* istanbul ignore next */
              cov_22ml0eggkh().b[22][0]++;
              cov_22ml0eggkh().s[56]++;
              return new Date(
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[23][0]++, a.due_date) ||
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[23][1]++, 0)).getTime() - new Date(
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[24][0]++, b.due_date) ||
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[24][1]++, 0)).getTime();
            } else {
              /* istanbul ignore next */
              cov_22ml0eggkh().b[22][1]++;
              cov_22ml0eggkh().s[57]++;
              if (sortBy === "priority") {
                /* istanbul ignore next */
                cov_22ml0eggkh().b[25][0]++;
                const priorityOrder =
                /* istanbul ignore next */
                (cov_22ml0eggkh().s[58]++, {
                  "HIGH": 3,
                  "MEDIUM": 2,
                  "LOW": 1
                });
                /* istanbul ignore next */
                cov_22ml0eggkh().s[59]++;
                return (
                /* istanbul ignore next */
                (cov_22ml0eggkh().b[26][0]++, priorityOrder[b.priority]) ||
                /* istanbul ignore next */
                (cov_22ml0eggkh().b[26][1]++, 0)) - (
                /* istanbul ignore next */
                (cov_22ml0eggkh().b[27][0]++, priorityOrder[a.priority]) ||
                /* istanbul ignore next */
                (cov_22ml0eggkh().b[27][1]++, 0));
              } else {
                /* istanbul ignore next */
                cov_22ml0eggkh().b[25][1]++;
                cov_22ml0eggkh().s[60]++;
                if (sortBy === "createdAt") {
                  /* istanbul ignore next */
                  cov_22ml0eggkh().b[28][0]++;
                  cov_22ml0eggkh().s[61]++;
                  return new Date(
                  /* istanbul ignore next */
                  (cov_22ml0eggkh().b[29][0]++, b.created_at) ||
                  /* istanbul ignore next */
                  (cov_22ml0eggkh().b[29][1]++, 0)).getTime() - new Date(
                  /* istanbul ignore next */
                  (cov_22ml0eggkh().b[30][0]++, a.created_at) ||
                  /* istanbul ignore next */
                  (cov_22ml0eggkh().b[30][1]++, 0)).getTime();
                } else
                /* istanbul ignore next */
                {
                  cov_22ml0eggkh().b[28][1]++;
                }
              }
            }
            /* istanbul ignore next */
            cov_22ml0eggkh().s[62]++;
            return 0;
          })
        };
      // Client actions
      case "ADD_CLIENT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][9]++;
        cov_22ml0eggkh().s[63]++;
        return {
          ...state,
          clients: [...state.clients, action.payload]
        };
      case "UPDATE_CLIENT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][10]++;
        cov_22ml0eggkh().s[64]++;
        return {
          ...state,
          clients: state.clients.map(client => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[13]++;
            cov_22ml0eggkh().s[65]++;
            return client.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[31][0]++, {
              ...client,
              ...action.payload.client
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[31][1]++, client);
          })
        };
      case "DELETE_CLIENT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][11]++;
        cov_22ml0eggkh().s[66]++;
        return {
          ...state,
          clients: state.clients.filter(client => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[14]++;
            cov_22ml0eggkh().s[67]++;
            return client.id !== action.payload;
          })
        };
      case "SET_CLIENTS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][12]++;
        cov_22ml0eggkh().s[68]++;
        return {
          ...state,
          clients:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[32][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[32][1]++, []),
          loading: {
            ...state.loading,
            clients: false
          }
        };
      case "SET_CLIENTS_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][13]++;
        cov_22ml0eggkh().s[69]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            clients: action.payload
          }
        };
      case "ADD_NOTE":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][14]++;
        cov_22ml0eggkh().s[70]++;
        return {
          ...state,
          clients: state.clients.map(client => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[15]++;
            cov_22ml0eggkh().s[71]++;
            return client.id === action.payload.clientId ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[33][0]++, {
              ...client,
              notes: [...(
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[34][0]++, client.notes) ||
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[34][1]++, [])), {
                ...action.payload.note,
                date: new Date().toISOString().split("T")[0]
              }]
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[33][1]++, client);
          })
        };
      // Project actions
      case "ADD_PROJECT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][15]++;
        cov_22ml0eggkh().s[72]++;
        return {
          ...state,
          clients: state.clients.map(client => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[16]++;
            cov_22ml0eggkh().s[73]++;
            return client.id === action.payload.clientId ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[35][0]++, {
              ...client,
              projects: [...(
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[36][0]++, client.projects) ||
              /* istanbul ignore next */
              (cov_22ml0eggkh().b[36][1]++, [])), {
                ...action.payload,
                id: Date.now().toString(),
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
              }]
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[35][1]++, client);
          })
        };
      // Event actions
      case "ADD_EVENT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][16]++;
        cov_22ml0eggkh().s[74]++;
        return {
          ...state,
          events: [...state.events, {
            ...action.payload,
            id: Date.now().toString()
          }]
        };
      case "UPDATE_EVENT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][17]++;
        cov_22ml0eggkh().s[75]++;
        return {
          ...state,
          events: state.events.map(event => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[17]++;
            cov_22ml0eggkh().s[76]++;
            return event.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[37][0]++, {
              ...event,
              ...action.payload.event
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[37][1]++, event);
          })
        };
      case "DELETE_EVENT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][18]++;
        cov_22ml0eggkh().s[77]++;
        return {
          ...state,
          events: state.events.filter(event => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[18]++;
            cov_22ml0eggkh().s[78]++;
            return event.id !== action.payload;
          })
        };
      case "SET_EVENTS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][19]++;
        cov_22ml0eggkh().s[79]++;
        return {
          ...state,
          events:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[38][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[38][1]++, []),
          loading: {
            ...state.loading,
            events: false
          }
        };
      case "SET_EVENTS_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][20]++;
        cov_22ml0eggkh().s[80]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            events: action.payload
          }
        };
      // Sales stage actions
      case "SET_SALES_STAGES":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][21]++;
        cov_22ml0eggkh().s[81]++;
        return {
          ...state,
          salesStages:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[39][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[39][1]++, []),
          loading: {
            ...state.loading,
            salesStages: false
          }
        };
      case "SET_SALES_STAGES_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][22]++;
        cov_22ml0eggkh().s[82]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            salesStages: action.payload
          }
        };
      // Quote actions
      case "ADD_QUOTE":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][23]++;
        cov_22ml0eggkh().s[83]++;
        return {
          ...state,
          quotes: [...state.quotes, action.payload]
        };
      case "UPDATE_QUOTE":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][24]++;
        cov_22ml0eggkh().s[84]++;
        return {
          ...state,
          quotes: state.quotes.map(quote => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[19]++;
            cov_22ml0eggkh().s[85]++;
            return quote.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[40][0]++, {
              ...quote,
              ...action.payload.quote
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[40][1]++, quote);
          })
        };
      case "DELETE_QUOTE":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][25]++;
        cov_22ml0eggkh().s[86]++;
        return {
          ...state,
          quotes: state.quotes.filter(quote => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[20]++;
            cov_22ml0eggkh().s[87]++;
            return quote.id !== action.payload;
          })
        };
      case "SET_QUOTES":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][26]++;
        cov_22ml0eggkh().s[88]++;
        return {
          ...state,
          quotes:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[41][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[41][1]++, []),
          loading: {
            ...state.loading,
            quotes: false
          }
        };
      case "SET_QUOTES_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][27]++;
        cov_22ml0eggkh().s[89]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            quotes: action.payload
          }
        };
      // Proposal actions
      case "ADD_PROPOSAL":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][28]++;
        cov_22ml0eggkh().s[90]++;
        return {
          ...state,
          savedProposals: [...state.savedProposals, action.payload]
        };
      case "UPDATE_PROPOSAL":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][29]++;
        cov_22ml0eggkh().s[91]++;
        return {
          ...state,
          savedProposals: state.savedProposals.map(proposal => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[21]++;
            cov_22ml0eggkh().s[92]++;
            return proposal.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[42][0]++, {
              ...proposal,
              ...action.payload.proposal
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[42][1]++, proposal);
          })
        };
      case "DELETE_PROPOSAL":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][30]++;
        cov_22ml0eggkh().s[93]++;
        return {
          ...state,
          savedProposals: state.savedProposals.filter(proposal => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[22]++;
            cov_22ml0eggkh().s[94]++;
            return proposal.id !== action.payload;
          })
        };
      case "SET_PROPOSALS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][31]++;
        cov_22ml0eggkh().s[95]++;
        return {
          ...state,
          savedProposals:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[43][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[43][1]++, []),
          loading: {
            ...state.loading,
            savedQuotes: false
          }
        };
      case "SET_PROPOSALS_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][32]++;
        cov_22ml0eggkh().s[96]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            savedQuotes: action.payload
          }
        };
      // Contract actions
      case "ADD_CONTRACT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][33]++;
        cov_22ml0eggkh().s[97]++;
        return {
          ...state,
          contracts: [...state.contracts, action.payload]
        };
      case "UPDATE_CONTRACT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][34]++;
        cov_22ml0eggkh().s[98]++;
        return {
          ...state,
          contracts: state.contracts.map(contract => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[23]++;
            cov_22ml0eggkh().s[99]++;
            return contract.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[44][0]++, {
              ...contract,
              ...action.payload.contract
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[44][1]++, contract);
          })
        };
      case "DELETE_CONTRACT":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][35]++;
        cov_22ml0eggkh().s[100]++;
        return {
          ...state,
          contracts: state.contracts.filter(contract => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[24]++;
            cov_22ml0eggkh().s[101]++;
            return contract.id !== action.payload;
          })
        };
      case "SET_CONTRACTS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][36]++;
        cov_22ml0eggkh().s[102]++;
        return {
          ...state,
          contracts:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[45][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[45][1]++, []),
          loading: {
            ...state.loading,
            contracts: false
          }
        };
      case "SET_CONTRACTS_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][37]++;
        cov_22ml0eggkh().s[103]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            contracts: action.payload
          }
        };
      // Invoice actions
      case "ADD_INVOICE":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][38]++;
        cov_22ml0eggkh().s[104]++;
        return {
          ...state,
          invoices: [...state.invoices, action.payload]
        };
      case "UPDATE_INVOICE":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][39]++;
        cov_22ml0eggkh().s[105]++;
        return {
          ...state,
          invoices: state.invoices.map(invoice => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[25]++;
            cov_22ml0eggkh().s[106]++;
            return invoice.id === action.payload.id ?
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[46][0]++, {
              ...invoice,
              ...action.payload.invoice
            }) :
            /* istanbul ignore next */
            (cov_22ml0eggkh().b[46][1]++, invoice);
          })
        };
      case "DELETE_INVOICE":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][40]++;
        cov_22ml0eggkh().s[107]++;
        return {
          ...state,
          invoices: state.invoices.filter(invoice => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[26]++;
            cov_22ml0eggkh().s[108]++;
            return invoice.id !== action.payload;
          })
        };
      case "SET_INVOICES":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][41]++;
        cov_22ml0eggkh().s[109]++;
        return {
          ...state,
          invoices:
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[47][0]++, action.payload) ||
          /* istanbul ignore next */
          (cov_22ml0eggkh().b[47][1]++, []),
          loading: {
            ...state.loading,
            invoices: false
          }
        };
      case "SET_INVOICES_LOADING":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][42]++;
        cov_22ml0eggkh().s[110]++;
        return {
          ...state,
          loading: {
            ...state.loading,
            invoices: action.payload
          }
        };
      // Admin settings actions
      case "UPDATE_ADMIN_SETTINGS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][43]++;
        cov_22ml0eggkh().s[111]++;
        return {
          ...state,
          adminSettings: {
            ...state.adminSettings,
            ...action.payload
          }
        };
      // Workflow actions
      case "SET_PENDING_QUOTE_FOR_CONVERSION":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][44]++;
        cov_22ml0eggkh().s[112]++;
        return {
          ...state,
          pendingQuoteForConversion: action.payload
        };
      // General actions
      case "SET_ERROR":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][45]++;
        cov_22ml0eggkh().s[113]++;
        return {
          ...state,
          error: action.payload
        };
      case "SET_ONLINE_STATUS":
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][46]++;
        cov_22ml0eggkh().s[114]++;
        return {
          ...state,
          isOnline: action.payload
        };
      default:
        /* istanbul ignore next */
        cov_22ml0eggkh().b[16][47]++;
        cov_22ml0eggkh().s[115]++;
        return state;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_22ml0eggkh().s[116]++;
    console.error("Reducer error:", error);
    /* istanbul ignore next */
    cov_22ml0eggkh().s[117]++;
    return {
      ...state,
      error: "An error occurred while updating the application state"
    };
  }
};
/* istanbul ignore next */
cov_22ml0eggkh().s[118]++;
const AppProvider = ({
  children,
  initialState: customInitialState
}) => {
  /* istanbul ignore next */
  cov_22ml0eggkh().f[27]++;
  const mergedInitialState =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[119]++, customInitialState ?
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[48][0]++, {
    ...initialState,
    ...customInitialState
  }) :
  /* istanbul ignore next */
  (cov_22ml0eggkh().b[48][1]++, initialState));
  const [state, dispatch] =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[120]++, (0, _react.useReducer)(appReducer, mergedInitialState));
  const isTestMode =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[121]++, customInitialState !== undefined);
  const [activeComponent, setActiveComponent] =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[122]++, (0, _react.useState)("Dashboard"));
  const [quoteData, setQuoteData] =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[123]++, (0, _react.useState)(null));
  const contextValue =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[124]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[28]++;
    cov_22ml0eggkh().s[125]++;
    return {
      state,
      dispatch,
      activeComponent,
      setActiveComponent,
      quoteData,
      setQuoteData
    };
  }, [state, dispatch, activeComponent, quoteData]));
  // Initialize data from database on mount
  /* istanbul ignore next */
  cov_22ml0eggkh().s[126]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[29]++;
    cov_22ml0eggkh().s[127]++;
    // Skip data loading in test mode
    if (isTestMode) {
      /* istanbul ignore next */
      cov_22ml0eggkh().b[49][0]++;
      cov_22ml0eggkh().s[128]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_22ml0eggkh().b[49][1]++;
    }
    cov_22ml0eggkh().s[129]++;
    const initializeData = async () => {
      /* istanbul ignore next */
      cov_22ml0eggkh().f[30]++;
      cov_22ml0eggkh().s[130]++;
      try {
        // Check for transferQuoteData in localStorage and set as pendingQuoteForConversion
        const transferQuoteData =
        /* istanbul ignore next */
        (cov_22ml0eggkh().s[131]++, localStorage.getItem('transferQuoteData'));
        /* istanbul ignore next */
        cov_22ml0eggkh().s[132]++;
        if (transferQuoteData) {
          /* istanbul ignore next */
          cov_22ml0eggkh().b[50][0]++;
          cov_22ml0eggkh().s[133]++;
          try {
            const quoteData =
            /* istanbul ignore next */
            (cov_22ml0eggkh().s[134]++, JSON.parse(transferQuoteData));
            /* istanbul ignore next */
            cov_22ml0eggkh().s[135]++;
            console.log('Loading transferQuoteData from localStorage:', quoteData);
            /* istanbul ignore next */
            cov_22ml0eggkh().s[136]++;
            dispatch({
              type: 'SET_PENDING_QUOTE_FOR_CONVERSION',
              payload: quoteData
            });
            // Clear the transferQuoteData after loading
            /* istanbul ignore next */
            cov_22ml0eggkh().s[137]++;
            localStorage.removeItem('transferQuoteData');
          } catch (error) {
            /* istanbul ignore next */
            cov_22ml0eggkh().s[138]++;
            console.error('Error parsing transferQuoteData:', error);
            /* istanbul ignore next */
            cov_22ml0eggkh().s[139]++;
            localStorage.removeItem('transferQuoteData');
          }
        } else
        /* istanbul ignore next */
        {
          cov_22ml0eggkh().b[50][1]++;
        }
        // Only try to load from database if we have a real Supabase connection
        const supabaseUrl =
        /* istanbul ignore next */
        (cov_22ml0eggkh().s[140]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
        const supabaseKey =
        /* istanbul ignore next */
        (cov_22ml0eggkh().s[141]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
        /* istanbul ignore next */
        cov_22ml0eggkh().s[142]++;
        if (
        /* istanbul ignore next */
        (cov_22ml0eggkh().b[52][0]++, !supabaseUrl) ||
        /* istanbul ignore next */
        (cov_22ml0eggkh().b[52][1]++, !supabaseKey) ||
        /* istanbul ignore next */
        (cov_22ml0eggkh().b[52][2]++, supabaseUrl.includes("your-project")) ||
        /* istanbul ignore next */
        (cov_22ml0eggkh().b[52][3]++, supabaseKey.includes("your-anon-key"))) {
          /* istanbul ignore next */
          cov_22ml0eggkh().b[51][0]++;
          cov_22ml0eggkh().s[143]++;
          console.log("Using mock data - Supabase not configured");
          /* istanbul ignore next */
          cov_22ml0eggkh().s[144]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_22ml0eggkh().b[51][1]++;
        }
        // Load data with proper error handling
        cov_22ml0eggkh().s[145]++;
        const loadData = async (type, action, getter) => {
          /* istanbul ignore next */
          cov_22ml0eggkh().f[31]++;
          cov_22ml0eggkh().s[146]++;
          dispatch({
            type: `SET_${type}_LOADING`,
            payload: true
          });
          /* istanbul ignore next */
          cov_22ml0eggkh().s[147]++;
          try {
            const data =
            /* istanbul ignore next */
            (cov_22ml0eggkh().s[148]++, await getter());
            /* istanbul ignore next */
            cov_22ml0eggkh().s[149]++;
            dispatch({
              type: action,
              payload: data
            });
          } catch (error) {
            /* istanbul ignore next */
            cov_22ml0eggkh().s[150]++;
            console.warn(`Failed to load ${type.toLowerCase()} from database, using mock data:`, error);
            /* istanbul ignore next */
            cov_22ml0eggkh().s[151]++;
            dispatch({
              type: `SET_${type}_LOADING`,
              payload: false
            });
          }
        };
        /* istanbul ignore next */
        cov_22ml0eggkh().s[152]++;
        await Promise.all([loadData("TASKS", "SET_TASKS", () => {
          /* istanbul ignore next */
          cov_22ml0eggkh().f[32]++;
          cov_22ml0eggkh().s[153]++;
          return _database.databaseService.getTasks();
        }), loadData("CLIENTS", "SET_CLIENTS", () => {
          /* istanbul ignore next */
          cov_22ml0eggkh().f[33]++;
          cov_22ml0eggkh().s[154]++;
          return _database.databaseService.getClients();
        }), loadData("EVENTS", "SET_EVENTS", () => {
          /* istanbul ignore next */
          cov_22ml0eggkh().f[34]++;
          cov_22ml0eggkh().s[155]++;
          return _database.databaseService.getEvents();
        }), loadData("SALES_STAGES", "SET_SALES_STAGES", () => {
          /* istanbul ignore next */
          cov_22ml0eggkh().f[35]++;
          cov_22ml0eggkh().s[156]++;
          return _database.databaseService.getSalesStages();
        })]);
      } catch (error) {
        /* istanbul ignore next */
        cov_22ml0eggkh().s[157]++;
        console.error("Failed to initialize data:", error);
        /* istanbul ignore next */
        cov_22ml0eggkh().s[158]++;
        dispatch({
          type: "SET_ERROR",
          payload: "Failed to load data - using offline mode"
        });
        // Clear all loading states
        /* istanbul ignore next */
        cov_22ml0eggkh().s[159]++;
        dispatch({
          type: "SET_TASKS_LOADING",
          payload: false
        });
        /* istanbul ignore next */
        cov_22ml0eggkh().s[160]++;
        dispatch({
          type: "SET_CLIENTS_LOADING",
          payload: false
        });
        /* istanbul ignore next */
        cov_22ml0eggkh().s[161]++;
        dispatch({
          type: "SET_EVENTS_LOADING",
          payload: false
        });
        /* istanbul ignore next */
        cov_22ml0eggkh().s[162]++;
        dispatch({
          type: "SET_SALES_STAGES_LOADING",
          payload: false
        });
        /* istanbul ignore next */
        cov_22ml0eggkh().s[163]++;
        dispatch({
          type: "SET_QUOTES_LOADING",
          payload: false
        });
        /* istanbul ignore next */
        cov_22ml0eggkh().s[164]++;
        dispatch({
          type: "SET_PROPOSALS_LOADING",
          payload: false
        });
        /* istanbul ignore next */
        cov_22ml0eggkh().s[165]++;
        dispatch({
          type: "SET_CONTRACTS_LOADING",
          payload: false
        });
        /* istanbul ignore next */
        cov_22ml0eggkh().s[166]++;
        dispatch({
          type: "SET_INVOICES_LOADING",
          payload: false
        });
      }
    };
    /* istanbul ignore next */
    cov_22ml0eggkh().s[167]++;
    initializeData();
  }, [isTestMode]);
  // Monitor online status with error handling
  /* istanbul ignore next */
  cov_22ml0eggkh().s[168]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[36]++;
    cov_22ml0eggkh().s[169]++;
    if (typeof window === "undefined") {
      /* istanbul ignore next */
      cov_22ml0eggkh().b[53][0]++;
      cov_22ml0eggkh().s[170]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_22ml0eggkh().b[53][1]++;
    }
    cov_22ml0eggkh().s[171]++;
    const handleOnline = () => {
      /* istanbul ignore next */
      cov_22ml0eggkh().f[37]++;
      cov_22ml0eggkh().s[172]++;
      return dispatch({
        type: "SET_ONLINE_STATUS",
        payload: true
      });
    };
    /* istanbul ignore next */
    cov_22ml0eggkh().s[173]++;
    const handleOffline = () => {
      /* istanbul ignore next */
      cov_22ml0eggkh().f[38]++;
      cov_22ml0eggkh().s[174]++;
      return dispatch({
        type: "SET_ONLINE_STATUS",
        payload: false
      });
    };
    /* istanbul ignore next */
    cov_22ml0eggkh().s[175]++;
    try {
      /* istanbul ignore next */
      cov_22ml0eggkh().s[176]++;
      window.addEventListener("online", handleOnline);
      /* istanbul ignore next */
      cov_22ml0eggkh().s[177]++;
      window.addEventListener("offline", handleOffline);
      /* istanbul ignore next */
      cov_22ml0eggkh().s[178]++;
      return () => {
        /* istanbul ignore next */
        cov_22ml0eggkh().f[39]++;
        cov_22ml0eggkh().s[179]++;
        window.removeEventListener("online", handleOnline);
        /* istanbul ignore next */
        cov_22ml0eggkh().s[180]++;
        window.removeEventListener("offline", handleOffline);
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_22ml0eggkh().s[181]++;
      console.warn("Failed to set up online status monitoring:", error);
    }
  }, []);
  // Set up real-time subscriptions with error handling
  /* istanbul ignore next */
  cov_22ml0eggkh().s[182]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_22ml0eggkh().f[40]++;
    const supabaseUrl =
    /* istanbul ignore next */
    (cov_22ml0eggkh().s[183]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
    const supabaseKey =
    /* istanbul ignore next */
    (cov_22ml0eggkh().s[184]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
    /* istanbul ignore next */
    cov_22ml0eggkh().s[185]++;
    if (
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[55][0]++, !supabaseUrl) ||
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[55][1]++, !supabaseKey) ||
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[55][2]++, supabaseUrl.includes("your-project")) ||
    /* istanbul ignore next */
    (cov_22ml0eggkh().b[55][3]++, supabaseKey.includes("your-anon-key"))) {
      /* istanbul ignore next */
      cov_22ml0eggkh().b[54][0]++;
      cov_22ml0eggkh().s[186]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_22ml0eggkh().b[54][1]++;
    }
    const subscriptions =
    /* istanbul ignore next */
    (cov_22ml0eggkh().s[187]++, []);
    /* istanbul ignore next */
    cov_22ml0eggkh().s[188]++;
    try {
      /* istanbul ignore next */
      cov_22ml0eggkh().s[189]++;
      const setupSubscription = (name, subscriber, action) => {
        /* istanbul ignore next */
        cov_22ml0eggkh().f[41]++;
        cov_22ml0eggkh().s[190]++;
        try {
          const unsubscribe =
          /* istanbul ignore next */
          (cov_22ml0eggkh().s[191]++, subscriber(data => {
            /* istanbul ignore next */
            cov_22ml0eggkh().f[42]++;
            cov_22ml0eggkh().s[192]++;
            dispatch({
              type: action,
              payload: data
            });
          }));
          /* istanbul ignore next */
          cov_22ml0eggkh().s[193]++;
          if (unsubscribe) {
            /* istanbul ignore next */
            cov_22ml0eggkh().b[56][0]++;
            cov_22ml0eggkh().s[194]++;
            subscriptions.push(unsubscribe);
          } else
          /* istanbul ignore next */
          {
            cov_22ml0eggkh().b[56][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_22ml0eggkh().s[195]++;
          console.warn(`Failed to set up ${name} subscription:`, error);
        }
      };
      /* istanbul ignore next */
      cov_22ml0eggkh().s[196]++;
      setupSubscription("tasks", _database.databaseService.subscribeToTasks, "SET_TASKS");
      /* istanbul ignore next */
      cov_22ml0eggkh().s[197]++;
      setupSubscription("clients", _database.databaseService.subscribeToClients, "SET_CLIENTS");
      /* istanbul ignore next */
      cov_22ml0eggkh().s[198]++;
      setupSubscription("events", _database.databaseService.subscribeToEvents, "SET_EVENTS");
      // Note: Quotes, proposals, contracts, and invoices subscriptions are not yet implemented in DatabaseService
      // setupSubscription("quotes", databaseService.subscribeToQuotes, "SET_QUOTES")
      // setupSubscription("proposals", databaseService.subscribeToProposals, "SET_PROPOSALS")
      // setupSubscription("contracts", databaseService.subscribeToContracts, "SET_CONTRACTS")
      // setupSubscription("invoices", databaseService.subscribeToInvoices, "SET_INVOICES")
    } catch (error) {
      /* istanbul ignore next */
      cov_22ml0eggkh().s[199]++;
      console.warn("Failed to set up real-time subscriptions:", error);
    }
    /* istanbul ignore next */
    cov_22ml0eggkh().s[200]++;
    return () => {
      /* istanbul ignore next */
      cov_22ml0eggkh().f[43]++;
      cov_22ml0eggkh().s[201]++;
      subscriptions.forEach(unsubscribe => {
        /* istanbul ignore next */
        cov_22ml0eggkh().f[44]++;
        cov_22ml0eggkh().s[202]++;
        try {
          /* istanbul ignore next */
          cov_22ml0eggkh().s[203]++;
          unsubscribe();
        } catch (error) {
          /* istanbul ignore next */
          cov_22ml0eggkh().s[204]++;
          console.warn("Error unsubscribing:", error);
        }
      });
    };
  }, []);
  /* istanbul ignore next */
  cov_22ml0eggkh().s[205]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(AppContext.Provider, {
    value: contextValue,
    children: children
  });
};
/* istanbul ignore next */
cov_22ml0eggkh().s[206]++;
const useAppContext = () => {
  /* istanbul ignore next */
  cov_22ml0eggkh().f[45]++;
  const context =
  /* istanbul ignore next */
  (cov_22ml0eggkh().s[207]++, (0, _react.useContext)(AppContext));
  /* istanbul ignore next */
  cov_22ml0eggkh().s[208]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_22ml0eggkh().b[57][0]++;
    cov_22ml0eggkh().s[209]++;
    throw new Error("useAppContext must be used within an AppProvider");
  } else
  /* istanbul ignore next */
  {
    cov_22ml0eggkh().b[57][1]++;
  }
  cov_22ml0eggkh().s[210]++;
  return context;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJBcHBDb250ZXh0IiwiY292XzIybWwwZWdna2giLCJmIiwicyIsIkFwcFByb3ZpZGVyIiwidXNlQXBwQ29udGV4dCIsImluaXRpYWxTdGF0ZSIsInRhc2tzIiwiaWQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiZHVlX2RhdGUiLCJwcmlvcml0eSIsImFzc2lnbmVkX3RvIiwic3RhdHVzIiwiY2xpZW50X2lkIiwiY3JlYXRlZF9hdCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsInVwZGF0ZWRfYXQiLCJ0YWdzIiwidGltZV9lc3RpbWF0ZSIsInRpbWVfc3BlbnQiLCJxdW90ZXMiLCJfbW9ja0RhdGEiLCJpbml0aWFsUXVvdGVzIiwic2F2ZWRQcm9wb3NhbHMiLCJjb250cmFjdHMiLCJxdW90ZUlkIiwiY2xpZW50SWQiLCJjb250cmFjdE51bWJlciIsImNvbnRyYWN0VGl0bGUiLCJjbGllbnROYW1lIiwiY2xpZW50RW1haWwiLCJzdGFydERhdGUiLCJlbmREYXRlIiwidGVybXMiLCJ0b3RhbEFtb3VudCIsInBheW1lbnRTY2hlZHVsZSIsInNjb3BlT2ZXb3JrIiwiY2xpZW50SW5mbyIsIm5hbWUiLCJlbWFpbCIsInBob25lIiwiY29tcGFueSIsImFkZHJlc3MiLCJwcm9qZWN0RGV0YWlscyIsImNyZWF0ZWRBdCIsInVwZGF0ZWRBdCIsInRlbXBsYXRlSWQiLCJjb250cmFjdENvbnRlbnQiLCJkeW5hbWljRmllbGRWYWx1ZXMiLCJkeW5hbWljVGVybXMiLCJ0b3RhbENvc3QiLCJkZXBvc2l0UGVyY2VudGFnZSIsInByb2plY3RTdGFydERhdGUiLCJlc3RpbWF0ZWRDb21wbGV0aW9uRGF0ZSIsImludm9pY2VzIiwiaW52b2ljZU51bWJlciIsImlzc3VlRGF0ZSIsImR1ZURhdGUiLCJpdGVtcyIsInF1YW50aXR5IiwicHJpY2UiLCJ0b3RhbCIsInN1YnRvdGFsIiwidGF4Iiwibm90ZXMiLCJjbGllbnRBZGRyZXNzIiwiY2xpZW50cyIsInN0YWdlIiwidmFsdWUiLCJzb3VyY2UiLCJ0eXBlIiwiY29udGVudCIsImRhdGUiLCJwcm9qZWN0cyIsImN1c3RvbV9maWVsZHMiLCJldmVudHMiLCJ0aW1lIiwic2FsZXNTdGFnZXMiLCJjb2xvciIsIm9yZGVyIiwiYWRtaW5TZXR0aW5ncyIsImNvbXBhbnlOYW1lIiwiY29tcGFueUVtYWlsIiwiY29tcGFueVBob25lIiwiY29tcGFueUFkZHJlc3MiLCJkZWZhdWx0Q3VycmVuY3kiLCJ0YXhSYXRlIiwiaW52b2ljZVByZWZpeCIsInF1b3RlUHJlZml4IiwiY29udHJhY3RQcmVmaXgiLCJlbWFpbFNpZ25hdHVyZSIsInBlbmRpbmdRdW90ZUZvckNvbnZlcnNpb24iLCJsb2FkaW5nIiwic2F2ZWRRdW90ZXMiLCJwcm9wb3NhbHMiLCJlcnJvciIsImlzT25saW5lIiwibmF2aWdhdG9yIiwiYiIsIm9uTGluZSIsIl9yZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJ1bmRlZmluZWQiLCJhcHBSZWR1Y2VyIiwic3RhdGUiLCJhY3Rpb24iLCJwYXlsb2FkIiwibm93IiwidG9TdHJpbmciLCJtYXAiLCJ0YXNrIiwiZmlsdGVyIiwidGFza0lkIiwiYXNzaWduZWVJZCIsInNvcnQiLCJhIiwic29ydEJ5IiwiZ2V0VGltZSIsInByaW9yaXR5T3JkZXIiLCJjbGllbnQiLCJub3RlIiwic3BsaXQiLCJldmVudCIsInF1b3RlIiwicHJvcG9zYWwiLCJjb250cmFjdCIsImludm9pY2UiLCJjb25zb2xlIiwiY2hpbGRyZW4iLCJjdXN0b21Jbml0aWFsU3RhdGUiLCJtZXJnZWRJbml0aWFsU3RhdGUiLCJkaXNwYXRjaCIsInVzZVJlZHVjZXIiLCJpc1Rlc3RNb2RlIiwiYWN0aXZlQ29tcG9uZW50Iiwic2V0QWN0aXZlQ29tcG9uZW50IiwidXNlU3RhdGUiLCJxdW90ZURhdGEiLCJzZXRRdW90ZURhdGEiLCJjb250ZXh0VmFsdWUiLCJ1c2VNZW1vIiwidXNlRWZmZWN0IiwiaW5pdGlhbGl6ZURhdGEiLCJ0cmFuc2ZlclF1b3RlRGF0YSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJKU09OIiwicGFyc2UiLCJsb2ciLCJyZW1vdmVJdGVtIiwic3VwYWJhc2VVcmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwic3VwYWJhc2VLZXkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsImluY2x1ZGVzIiwibG9hZERhdGEiLCJnZXR0ZXIiLCJkYXRhIiwid2FybiIsInRvTG93ZXJDYXNlIiwiUHJvbWlzZSIsImFsbCIsIl9kYXRhYmFzZSIsImRhdGFiYXNlU2VydmljZSIsImdldFRhc2tzIiwiZ2V0Q2xpZW50cyIsImdldEV2ZW50cyIsImdldFNhbGVzU3RhZ2VzIiwid2luZG93IiwiaGFuZGxlT25saW5lIiwiaGFuZGxlT2ZmbGluZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic3Vic2NyaXB0aW9ucyIsInNldHVwU3Vic2NyaXB0aW9uIiwic3Vic2NyaWJlciIsInVuc3Vic2NyaWJlIiwicHVzaCIsInN1YnNjcmliZVRvVGFza3MiLCJzdWJzY3JpYmVUb0NsaWVudHMiLCJzdWJzY3JpYmVUb0V2ZW50cyIsImZvckVhY2giLCJfanN4cnVudGltZSIsImpzeCIsIlByb3ZpZGVyIiwiY29udGV4dCIsInVzZUNvbnRleHQiLCJFcnJvciJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY2hhc2VcXERvd25sb2Fkc1xcY3JtICgzMilcXHNyY1xcY29udGV4dFxcQXBwQ29udGV4dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZVJlZHVjZXIsIHVzZUVmZmVjdCwgdHlwZSBSZWFjdE5vZGUsIHVzZVN0YXRlLCB1c2VNZW1vIH0gZnJvbSBcInJlYWN0XCJcbmltcG9ydCB7IGRhdGFiYXNlU2VydmljZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9kYXRhYmFzZVwiXG5pbXBvcnQgeyBpbml0aWFsUXVvdGVzIH0gZnJvbSBcIi4uL2RhdGEvbW9ja0RhdGFcIlxuaW1wb3J0IHR5cGUge1xuICBRdW90ZSxcbiAgQ29udHJhY3QsXG4gIEludm9pY2UsXG4gIFByb3Bvc2FsLFxuICBRdW90ZURhdGEsXG59IGZyb20gXCIuLi9zY2hlbWFzL2NvbnRyYWN0SW52b2ljZVNjaGVtYXNcIlxuaW1wb3J0IHR5cGUge1xuICBUYXNrLFxuICBDbGllbnQsXG4gIEV2ZW50IGFzIENhbGVuZGFyRXZlbnQsXG4gIFNhbGVzU3RhZ2UsXG59IGZyb20gXCIuLi90eXBlc1wiXG5cbi8vIERlZmluZSBBZG1pblNldHRpbmdzIGludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBBZG1pblNldHRpbmdzIHtcbiAgaWQ6IHN0cmluZ1xuICBjb21wYW55TmFtZTogc3RyaW5nXG4gIGNvbXBhbnlFbWFpbDogc3RyaW5nXG4gIGNvbXBhbnlQaG9uZTogc3RyaW5nXG4gIGNvbXBhbnlBZGRyZXNzOiBzdHJpbmdcbiAgZGVmYXVsdEN1cnJlbmN5OiBzdHJpbmdcbiAgdGF4UmF0ZTogbnVtYmVyXG4gIGludm9pY2VQcmVmaXg6IHN0cmluZ1xuICBxdW90ZVByZWZpeDogc3RyaW5nXG4gIGNvbnRyYWN0UHJlZml4OiBzdHJpbmdcbiAgZW1haWxTaWduYXR1cmU6IHN0cmluZ1xuICBsb2dvVXJsPzogc3RyaW5nXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZ1xuICB1cGRhdGVkX2F0OiBzdHJpbmdcbn1cblxuLy8gRGVmaW5lIHRoZSBzaGFwZSBvZiB5b3VyIHN0YXRlIHdpdGggYWxsIHJlcXVpcmVkIGZpZWxkc1xuZXhwb3J0IGludGVyZmFjZSBBcHBTdGF0ZSB7XG4gIHRhc2tzOiBUYXNrW11cbiAgY2xpZW50czogQ2xpZW50W11cbiAgZXZlbnRzOiBDYWxlbmRhckV2ZW50W11cbiAgc2FsZXNTdGFnZXM6IFNhbGVzU3RhZ2VbXVxuICBxdW90ZXM6IFF1b3RlW11cbiAgc2F2ZWRQcm9wb3NhbHM6IFByb3Bvc2FsW11cbiAgaW52b2ljZXM6IEludm9pY2VbXVxuICBjb250cmFjdHM6IENvbnRyYWN0W10gLy8gQWRkZWQgY29udHJhY3RzIHRvIHN0YXRlXG4gIGFkbWluU2V0dGluZ3M6IEFkbWluU2V0dGluZ3NcbiAgcGVuZGluZ1F1b3RlRm9yQ29udmVyc2lvbjogUXVvdGUgfCBudWxsIC8vIE5ldyBzdGF0ZSBmb3Igd29ya2Zsb3dcbiAgbG9hZGluZzoge1xuICAgIHRhc2tzOiBib29sZWFuXG4gICAgY2xpZW50czogYm9vbGVhblxuICAgIGV2ZW50czogYm9vbGVhblxuICAgIHNhbGVzU3RhZ2VzOiBib29sZWFuXG4gICAgcXVvdGVzOiBib29sZWFuXG4gICAgc2F2ZWRRdW90ZXM6IGJvb2xlYW5cbiAgICBjb250cmFjdHM6IGJvb2xlYW5cbiAgICBpbnZvaWNlczogYm9vbGVhblxuICAgIHByb3Bvc2FsczogYm9vbGVhblxuICB9XG4gIGVycm9yOiBzdHJpbmcgfCBudWxsXG4gIGlzT25saW5lOiBib29sZWFuXG4gIFtrZXk6IHN0cmluZ106IGFueVxufVxuXG4vLyBEZWZpbmUgYWN0aW9uIHR5cGVzXG50eXBlIEFjdGlvblR5cGUgPVxuICAvLyBUYXNrIGFjdGlvbnNcbiAgfCB7IHR5cGU6IFwiQUREX1RBU0tcIjsgcGF5bG9hZDogT21pdDxUYXNrLCBcImlkXCI+IH1cbiAgfCB7IHR5cGU6IFwiVVBEQVRFX1RBU0tcIjsgcGF5bG9hZDogeyBpZDogc3RyaW5nIHwgbnVtYmVyOyB0YXNrOiBQYXJ0aWFsPFRhc2s+IH0gfVxuICB8IHsgdHlwZTogXCJERUxFVEVfVEFTS1wiOyBwYXlsb2FkOiBzdHJpbmcgfCBudW1iZXIgfVxuICB8IHsgdHlwZTogXCJTRVRfVEFTS1NcIjsgcGF5bG9hZDogVGFza1tdIH1cbiAgfCB7IHR5cGU6IFwiU0VUX1RBU0tTX0xPQURJTkdcIjsgcGF5bG9hZDogYm9vbGVhbiB9XG4gIHwgeyB0eXBlOiBcIlRPR0dMRV9UQVNLX0NPTVBMRVRJT05cIjsgcGF5bG9hZDogc3RyaW5nIH1cbiAgfCB7IHR5cGU6IFwiQVNTSUdOX1RBU0tcIjsgcGF5bG9hZDogeyB0YXNrSWQ6IHN0cmluZzsgYXNzaWduZWVJZDogc3RyaW5nIH0gfVxuICB8IHsgdHlwZTogXCJGSUxURVJfVEFTS1NfQllfU1RBVFVTXCI7IHBheWxvYWQ6IHN0cmluZyB9XG4gIHwgeyB0eXBlOiBcIlNPUlRfVEFTS1NcIjsgcGF5bG9hZDogc3RyaW5nIH1cbiAgLy8gQ2xpZW50IGFjdGlvbnNcbiAgfCB7IHR5cGU6IFwiQUREX0NMSUVOVFwiOyBwYXlsb2FkOiBDbGllbnQgfVxuICB8IHsgdHlwZTogXCJVUERBVEVfQ0xJRU5UXCI7IHBheWxvYWQ6IHsgaWQ6IHN0cmluZzsgY2xpZW50OiBQYXJ0aWFsPENsaWVudD4gfSB9XG4gIHwgeyB0eXBlOiBcIkRFTEVURV9DTElFTlRcIjsgcGF5bG9hZDogc3RyaW5nIH1cbiAgfCB7IHR5cGU6IFwiU0VUX0NMSUVOVFNcIjsgcGF5bG9hZDogQ2xpZW50W10gfVxuICB8IHsgdHlwZTogXCJTRVRfQ0xJRU5UU19MT0FESU5HXCI7IHBheWxvYWQ6IGJvb2xlYW4gfVxuICB8IHsgdHlwZTogXCJBRERfTk9URVwiOyBwYXlsb2FkOiB7IGNsaWVudElkOiBzdHJpbmc7IG5vdGU6IGFueSB9IH1cbiAgfCB7IHR5cGU6IFwiQUREX0NMSUVOVF9OT1RFXCI7IHBheWxvYWQ6IHsgY2xpZW50SWQ6IHN0cmluZzsgbm90ZTogYW55IH0gfVxuICB8IHsgdHlwZTogXCJVUERBVEVfQ0xJRU5UX1NUQUdFXCI7IHBheWxvYWQ6IHsgY2xpZW50SWQ6IHN0cmluZzsgc3RhZ2U6IHN0cmluZyB9IH1cbiAgLy8gUHJvamVjdCBhY3Rpb25zXG4gIHwgeyB0eXBlOiBcIkFERF9QUk9KRUNUXCI7IHBheWxvYWQ6IGFueSB9XG4gIC8vIEV2ZW50IGFjdGlvbnNcbiAgfCB7IHR5cGU6IFwiQUREX0VWRU5UXCI7IHBheWxvYWQ6IE9taXQ8Q2FsZW5kYXJFdmVudCwgXCJpZFwiPiB9XG4gIHwgeyB0eXBlOiBcIlVQREFURV9FVkVOVFwiOyBwYXlsb2FkOiB7IGlkOiBzdHJpbmc7IGV2ZW50OiBQYXJ0aWFsPENhbGVuZGFyRXZlbnQ+IH0gfVxuICB8IHsgdHlwZTogXCJERUxFVEVfRVZFTlRcIjsgcGF5bG9hZDogc3RyaW5nIH1cbiAgfCB7IHR5cGU6IFwiU0VUX0VWRU5UU1wiOyBwYXlsb2FkOiBDYWxlbmRhckV2ZW50W10gfVxuICB8IHsgdHlwZTogXCJTRVRfRVZFTlRTX0xPQURJTkdcIjsgcGF5bG9hZDogYm9vbGVhbiB9XG4gIC8vIFNhbGVzIHN0YWdlIGFjdGlvbnNcbiAgfCB7IHR5cGU6IFwiU0VUX1NBTEVTX1NUQUdFU1wiOyBwYXlsb2FkOiBTYWxlc1N0YWdlW10gfVxuICB8IHsgdHlwZTogXCJTRVRfU0FMRVNfU1RBR0VTX0xPQURJTkdcIjsgcGF5bG9hZDogYm9vbGVhbiB9XG4gIC8vIFF1b3RlIGFjdGlvbnNcbiAgfCB7IHR5cGU6IFwiQUREX1FVT1RFXCI7IHBheWxvYWQ6IFF1b3RlIH1cbiAgfCB7IHR5cGU6IFwiVVBEQVRFX1FVT1RFXCI7IHBheWxvYWQ6IHsgaWQ6IHN0cmluZzsgcXVvdGU6IFBhcnRpYWw8UXVvdGU+IH0gfVxuICB8IHsgdHlwZTogXCJERUxFVEVfUVVPVEVcIjsgcGF5bG9hZDogc3RyaW5nIH1cbiAgfCB7IHR5cGU6IFwiU0VUX1FVT1RFU1wiOyBwYXlsb2FkOiBRdW90ZVtdIH1cbiAgfCB7IHR5cGU6IFwiU0VUX1FVT1RFU19MT0FESU5HXCI7IHBheWxvYWQ6IGJvb2xlYW4gfVxuICAvLyBQcm9wb3NhbCBhY3Rpb25zXG4gIHwgeyB0eXBlOiBcIkFERF9QUk9QT1NBTFwiOyBwYXlsb2FkOiBQcm9wb3NhbCB9XG4gIHwgeyB0eXBlOiBcIlVQREFURV9QUk9QT1NBTFwiOyBwYXlsb2FkOiB7IGlkOiBzdHJpbmc7IHByb3Bvc2FsOiBQYXJ0aWFsPFByb3Bvc2FsPiB9IH1cbiAgfCB7IHR5cGU6IFwiREVMRVRFX1BST1BPU0FMXCI7IHBheWxvYWQ6IHN0cmluZyB9XG4gIHwgeyB0eXBlOiBcIlNFVF9QUk9QT1NBTFNcIjsgcGF5bG9hZDogUHJvcG9zYWxbXSB9XG4gIHwgeyB0eXBlOiBcIlNFVF9QUk9QT1NBTFNfTE9BRElOR1wiOyBwYXlsb2FkOiBib29sZWFuIH1cbiAgLy8gQ29udHJhY3QgYWN0aW9uc1xuICB8IHsgdHlwZTogXCJBRERfQ09OVFJBQ1RcIjsgcGF5bG9hZDogQ29udHJhY3QgfVxuICB8IHsgdHlwZTogXCJVUERBVEVfQ09OVFJBQ1RcIjsgcGF5bG9hZDogeyBpZDogc3RyaW5nOyBjb250cmFjdDogUGFydGlhbDxDb250cmFjdD4gfSB9XG4gIHwgeyB0eXBlOiBcIkRFTEVURV9DT05UUkFDVFwiOyBwYXlsb2FkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogXCJTRVRfQ09OVFJBQ1RTXCI7IHBheWxvYWQ6IENvbnRyYWN0W10gfVxuICB8IHsgdHlwZTogXCJTRVRfQ09OVFJBQ1RTX0xPQURJTkdcIjsgcGF5bG9hZDogYm9vbGVhbiB9XG4gIC8vIEludm9pY2UgYWN0aW9uc1xuICB8IHsgdHlwZTogXCJBRERfSU5WT0lDRVwiOyBwYXlsb2FkOiBJbnZvaWNlIH1cbiAgfCB7IHR5cGU6IFwiVVBEQVRFX0lOVk9JQ0VcIjsgcGF5bG9hZDogeyBpZDogc3RyaW5nOyBpbnZvaWNlOiBQYXJ0aWFsPEludm9pY2U+IH0gfVxuICB8IHsgdHlwZTogXCJERUxFVEVfSU5WT0lDRVwiOyBwYXlsb2FkOiBzdHJpbmcgfVxuICB8IHsgdHlwZTogXCJTRVRfSU5WT0lDRVNcIjsgcGF5bG9hZDogSW52b2ljZVtdIH1cbiAgfCB7IHR5cGU6IFwiU0VUX0lOVk9JQ0VTX0xPQURJTkdcIjsgcGF5bG9hZDogYm9vbGVhbiB9XG4gIC8vIEFkbWluIHNldHRpbmdzIGFjdGlvbnNcbiAgfCB7IHR5cGU6IFwiVVBEQVRFX0FETUlOX1NFVFRJTkdTXCI7IHBheWxvYWQ6IFBhcnRpYWw8QWRtaW5TZXR0aW5ncz4gfVxuICAvLyBXb3JrZmxvdyBhY3Rpb25zXG4gIHwgeyB0eXBlOiBcIlNFVF9QRU5ESU5HX1FVT1RFX0ZPUl9DT05WRVJTSU9OXCI7IHBheWxvYWQ6IFF1b3RlIHwgbnVsbCB9XG4gIC8vIEdlbmVyYWwgYWN0aW9uc1xuICB8IHsgdHlwZTogXCJTRVRfRVJST1JcIjsgcGF5bG9hZDogc3RyaW5nIHwgbnVsbCB9XG4gIHwgeyB0eXBlOiBcIlNFVF9PTkxJTkVfU1RBVFVTXCI7IHBheWxvYWQ6IGJvb2xlYW4gfVxuICB8IHsgdHlwZTogXCJTWU5DX1dJVEhfREFUQUJBU0VcIiB9XG5cbi8vIERlZmluZSB0aGUgY29udGV4dCB0eXBlXG5pbnRlcmZhY2UgQXBwQ29udGV4dFR5cGUge1xuICBzdGF0ZTogQXBwU3RhdGVcbiAgZGlzcGF0Y2g6IFJlYWN0LkRpc3BhdGNoPEFjdGlvblR5cGU+XG4gIGFjdGl2ZUNvbXBvbmVudDogc3RyaW5nXG4gIHNldEFjdGl2ZUNvbXBvbmVudDogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248c3RyaW5nPj5cbiAgcXVvdGVEYXRhOiBRdW90ZURhdGEgfCBudWxsXG4gIHNldFF1b3RlRGF0YTogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248UXVvdGVEYXRhIHwgbnVsbD4+XG59XG5cbi8vIEVuaGFuY2VkIGluaXRpYWwgc3RhdGUgd2l0aCBzYW1wbGUgZGF0YSB0byBwcmV2ZW50IHVuZGVmaW5lZCBlcnJvcnNcbmNvbnN0IGluaXRpYWxTdGF0ZTogQXBwU3RhdGUgPSB7XG4gIHRhc2tzOiBbXG4gICAge1xuICAgICAgaWQ6IFwiMVwiLFxuICAgICAgdGl0bGU6IFwiRGVzaWduIEhvbWVwYWdlXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJDcmVhdGUgaG9tZXBhZ2UgZGVzaWduIG1vY2t1cFwiLFxuICAgICAgZHVlX2RhdGU6IFwiMjAyNC0wMi0xNVwiLFxuICAgICAgcHJpb3JpdHk6IFwiaGlnaFwiLFxuICAgICAgYXNzaWduZWRfdG86IFwiSm9obiBEb2VcIixcbiAgICAgIHN0YXR1czogXCJwZW5kaW5nXCIsXG4gICAgICBjbGllbnRfaWQ6IFwiMVwiLFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgdGFnczogW10sXG4gICAgICB0aW1lX2VzdGltYXRlOiA4LFxuICAgICAgdGltZV9zcGVudDogMCxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiBcIjJcIixcbiAgICAgIHRpdGxlOiBcIkNsaWVudCBSZXZpZXdcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlJldmlldyBjbGllbnQgZmVlZGJhY2tcIixcbiAgICAgIGR1ZV9kYXRlOiBcIjIwMjQtMDItMjBcIixcbiAgICAgIHByaW9yaXR5OiBcIm1lZGl1bVwiLFxuICAgICAgYXNzaWduZWRfdG86IFwiSmFuZSBTbWl0aFwiLFxuICAgICAgc3RhdHVzOiBcImNvbXBsZXRlZFwiLFxuICAgICAgY2xpZW50X2lkOiBcIjJcIixcbiAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIHRhZ3M6IFtdLFxuICAgICAgdGltZV9lc3RpbWF0ZTogNCxcbiAgICAgIHRpbWVfc3BlbnQ6IDQsXG4gICAgfSxcbiAgXSxcbiAgcXVvdGVzOiBpbml0aWFsUXVvdGVzLFxuICBzYXZlZFByb3Bvc2FsczogW10sXG4gIGNvbnRyYWN0czogW1xuICAgIHtcbiAgICAgIGlkOiBcImNvbnRyYWN0LTFcIixcbiAgICAgIHF1b3RlSWQ6IFwicXVvdGUtMVwiLFxuICAgICAgY2xpZW50SWQ6IFwiMVwiLFxuICAgICAgY29udHJhY3ROdW1iZXI6IFwiQ09OLTIwMjQtMDAwMVwiLFxuICAgICAgY29udHJhY3RUaXRsZTogXCJXZWJzaXRlIFJlZGVzaWduIFByb2plY3RcIixcbiAgICAgIGNsaWVudE5hbWU6IFwiQWNtZSBDb3JwXCIsXG4gICAgICBjbGllbnRFbWFpbDogXCJqb2huQGFjbWUuY29tXCIsXG4gICAgICBzdGFydERhdGU6IFwiMjAyNC0wMi0wMVwiLFxuICAgICAgZW5kRGF0ZTogXCIyMDI0LTAyLTI4XCIsXG4gICAgICB0ZXJtczogXCJTdGFuZGFyZCB0ZXJtcyBhbmQgY29uZGl0aW9ucyBmb3Igd2Vic2l0ZSBkZXZlbG9wbWVudCBwcm9qZWN0LiBQYXltZW50IGR1ZSB3aXRoaW4gMzAgZGF5cyBvZiBpbnZvaWNlLiBQcm9qZWN0IGluY2x1ZGVzIGRlc2lnbiwgZGV2ZWxvcG1lbnQsIGFuZCBkZXBsb3ltZW50IHBoYXNlcy5cIixcbiAgICAgIHRvdGFsQW1vdW50OiA3NTAwLFxuICAgICAgcGF5bWVudFNjaGVkdWxlOiBcIjUwJSBkZXBvc2l0LCA1MCUgb24gY29tcGxldGlvblwiLFxuICAgICAgc2NvcGVPZldvcms6IFwiQ29tcGxldGUgd2Vic2l0ZSByZWRlc2lnbiB3aXRoIG1vZGVybiBmZWF0dXJlcyBpbmNsdWRpbmcgcmVzcG9uc2l2ZSBkZXNpZ24sIGNvbnRlbnQgbWFuYWdlbWVudCBzeXN0ZW0sIGFuZCBTRU8gb3B0aW1pemF0aW9uLlwiLFxuICAgICAgY2xpZW50SW5mbzoge1xuICAgICAgICBuYW1lOiBcIkFjbWUgQ29ycFwiLFxuICAgICAgICBlbWFpbDogXCJqb2huQGFjbWUuY29tXCIsXG4gICAgICAgIHBob25lOiBcIjU1NS0wMTIzXCIsXG4gICAgICAgIGNvbXBhbnk6IFwiQWNtZSBDb3JwXCIsXG4gICAgICAgIGFkZHJlc3M6IFwiMTIzIE1haW4gU3QsIENpdHksIFN0YXRlIDEyMzQ1XCIsXG4gICAgICB9LFxuICAgICAgcHJvamVjdERldGFpbHM6IHtcbiAgICAgICAgdGl0bGU6IFwiV2Vic2l0ZSBSZWRlc2lnbiBQcm9qZWN0XCIsXG4gICAgICAgIGRlc2NyaXB0aW9uOiBcIkNvbXBsZXRlIHdlYnNpdGUgcmVkZXNpZ24gd2l0aCBtb2Rlcm4gZmVhdHVyZXNcIixcbiAgICAgIH0sXG4gICAgICBzdGF0dXM6IFwiZHJhZnRcIixcbiAgICAgIHByaW9yaXR5OiBcImhpZ2hcIixcbiAgICAgIGNyZWF0ZWRBdDogXCIyMDI0LTAxLTE2VDEwOjAwOjAwLjAwMFpcIixcbiAgICAgIHVwZGF0ZWRBdDogXCIyMDI0LTAxLTE2VDEwOjAwOjAwLjAwMFpcIixcbiAgICAgIHRlbXBsYXRlSWQ6IFwidGVtcGxhdGUtMVwiLFxuICAgICAgY29udHJhY3RDb250ZW50OiBcIlwiLFxuICAgICAgZHluYW1pY0ZpZWxkVmFsdWVzOiB7fSxcbiAgICAgIGR5bmFtaWNUZXJtczoge1xuICAgICAgICB0b3RhbENvc3Q6IDc1MDAsXG4gICAgICAgIGRlcG9zaXRQZXJjZW50YWdlOiA1MCxcbiAgICAgICAgcHJvamVjdFN0YXJ0RGF0ZTogXCIyMDI0LTAyLTAxXCIsXG4gICAgICAgIGVzdGltYXRlZENvbXBsZXRpb25EYXRlOiBcIjIwMjQtMDItMjhcIixcbiAgICAgIH0sXG4gICAgfSxcbiAgXSxcbiAgaW52b2ljZXM6IFtcbiAgICB7XG4gICAgICBpZDogXCJpbnZvaWNlLTFcIixcbiAgICAgIGNsaWVudElkOiBcIjFcIixcbiAgICAgIGludm9pY2VOdW1iZXI6IFwiSU5WLTIwMjQtMDAwMVwiLFxuICAgICAgaXNzdWVEYXRlOiBcIjIwMjQtMDEtMjBcIixcbiAgICAgIGR1ZURhdGU6IFwiMjAyNC0wMi0wNVwiLFxuICAgICAgaXRlbXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIGlkOiBcIml0ZW0tMVwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIldlYnNpdGUgRGVzaWduIC0gRGVwb3NpdFwiLFxuICAgICAgICAgIHF1YW50aXR5OiAxLFxuICAgICAgICAgIHByaWNlOiAzNzUwLFxuICAgICAgICAgIHRvdGFsOiAzNzUwLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIHN1YnRvdGFsOiAzNzUwLFxuICAgICAgdGF4OiAzNzUsXG4gICAgICB0b3RhbEFtb3VudDogNDEyNSxcbiAgICAgIHN0YXR1czogXCJTZW50XCIsXG4gICAgICBub3RlczogXCI1MCUgZGVwb3NpdCBmb3Igd2Vic2l0ZSBwcm9qZWN0XCIsXG4gICAgICBjbGllbnROYW1lOiBcIkFjbWUgQ29ycFwiLFxuICAgICAgY2xpZW50RW1haWw6IFwiam9obkBhY21lLmNvbVwiLFxuICAgICAgY2xpZW50QWRkcmVzczogXCIxMjMgTWFpbiBTdCwgQ2l0eSwgU3RhdGUgMTIzNDVcIixcbiAgICB9LFxuICBdLFxuICBjbGllbnRzOiBbXG4gICAge1xuICAgICAgaWQ6IFwiMVwiLFxuICAgICAgbmFtZTogXCJBY21lIENvcnBcIixcbiAgICAgIGVtYWlsOiBcImpvaG5AYWNtZS5jb21cIixcbiAgICAgIHBob25lOiBcIjU1NS0wMTIzXCIsXG4gICAgICBjb21wYW55OiBcIkFjbWUgQ29ycFwiLFxuICAgICAgc3RhZ2U6IFwiMVwiLFxuICAgICAgdmFsdWU6IDUwMDAsXG4gICAgICBzdGF0dXM6IFwiYWN0aXZlXCIsXG4gICAgICBzb3VyY2U6IFwiV2Vic2l0ZVwiLFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgbm90ZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHR5cGU6IFwiY2FsbFwiLFxuICAgICAgICAgIGNvbnRlbnQ6IFwiSW5pdGlhbCBjb25zdWx0YXRpb24gY2FsbFwiLFxuICAgICAgICAgIGRhdGU6IFwiMjAyNC0wMS0xNVwiXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBwcm9qZWN0czogW10sXG4gICAgICBjdXN0b21fZmllbGRzOiB7fSxcbiAgICB9LFxuICAgIHtcbiAgICAgIGlkOiBcIjJcIixcbiAgICAgIG5hbWU6IFwiVGVjaCBTb2x1dGlvbnNcIixcbiAgICAgIGVtYWlsOiBcInNhcmFoQHRlY2hzb2x1dGlvbnMuY29tXCIsXG4gICAgICBwaG9uZTogXCI1NTUtMDQ1NlwiLFxuICAgICAgY29tcGFueTogXCJUZWNoIFNvbHV0aW9ucyBJbmNcIixcbiAgICAgIHN0YWdlOiBcIjNcIixcbiAgICAgIHZhbHVlOiAxMjAwMCxcbiAgICAgIHN0YXR1czogXCJhY3RpdmVcIixcbiAgICAgIHNvdXJjZTogXCJSZWZlcnJhbFwiLFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgbm90ZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHR5cGU6IFwiZW1haWxcIixcbiAgICAgICAgICBjb250ZW50OiBcIlNlbnQgcHJvcG9zYWxcIixcbiAgICAgICAgICBkYXRlOiBcIjIwMjQtMDEtMjBcIlxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgcHJvamVjdHM6IFtdLFxuICAgICAgY3VzdG9tX2ZpZWxkczoge30sXG4gICAgfSxcbiAgXSxcbiAgZXZlbnRzOiBbXG4gICAge1xuICAgICAgaWQ6IFwiMVwiLFxuICAgICAgdGl0bGU6IFwiQ2xpZW50IE1lZXRpbmdcIixcbiAgICAgIHR5cGU6IFwibWVldGluZ1wiLFxuICAgICAgZGF0ZTogXCIyMDI0LTAyLTE1XCIsXG4gICAgICB0aW1lOiBcIjEwOjAwIEFNXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJEaXNjdXNzIHByb2plY3QgcmVxdWlyZW1lbnRzXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBpZDogXCIyXCIsXG4gICAgICB0aXRsZTogXCJGb2xsb3ctdXAgQ2FsbFwiLFxuICAgICAgdHlwZTogXCJjYWxsXCIsXG4gICAgICBkYXRlOiBcIjIwMjQtMDItMThcIixcbiAgICAgIHRpbWU6IFwiMjowMCBQTVwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQ2hlY2sgb24gcHJvamVjdCBwcm9ncmVzc1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgaWQ6IFwiM1wiLFxuICAgICAgdGl0bGU6IFwiUHJvamVjdCBEZWFkbGluZVwiLFxuICAgICAgdHlwZTogXCJkZWFkbGluZVwiLFxuICAgICAgZGF0ZTogXCIyMDI0LTAyLTI1XCIsXG4gICAgICB0aW1lOiBcIjExOjU5IFBNXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJXZWJzaXRlIGxhdW5jaCBkZWFkbGluZVwiLFxuICAgIH0sXG4gIF0sXG4gIHNhbGVzU3RhZ2VzOiBbXG4gICAgeyBcbiAgICAgIGlkOiBcIjFcIiwgXG4gICAgICBuYW1lOiBcIkxlYWRcIiwgXG4gICAgICBjb2xvcjogXCIjM0I4MkY2XCIsIFxuICAgICAgb3JkZXI6IDEsIFxuICAgICAgZGVzY3JpcHRpb246IFwiSW5pdGlhbCBsZWFkIHN0YWdlXCIsIFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLCBcbiAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSBcbiAgICB9LFxuICAgIHsgXG4gICAgICBpZDogXCIyXCIsIFxuICAgICAgbmFtZTogXCJRdWFsaWZpZWRcIiwgXG4gICAgICBjb2xvcjogXCIjOEI1Q0Y2XCIsIFxuICAgICAgb3JkZXI6IDIsIFxuICAgICAgZGVzY3JpcHRpb246IFwiUXVhbGlmaWVkIHByb3NwZWN0XCIsIFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLCBcbiAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSBcbiAgICB9LFxuICAgIHsgXG4gICAgICBpZDogXCIzXCIsIFxuICAgICAgbmFtZTogXCJQcm9wb3NhbFwiLCBcbiAgICAgIGNvbG9yOiBcIiNGNTlFMEJcIiwgXG4gICAgICBvcmRlcjogMywgXG4gICAgICBkZXNjcmlwdGlvbjogXCJQcm9wb3NhbCBzZW50XCIsIFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLCBcbiAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSBcbiAgICB9LFxuICAgIHsgXG4gICAgICBpZDogXCI0XCIsIFxuICAgICAgbmFtZTogXCJOZWdvdGlhdGlvblwiLCBcbiAgICAgIGNvbG9yOiBcIiNGOTczMTZcIiwgXG4gICAgICBvcmRlcjogNCwgXG4gICAgICBkZXNjcmlwdGlvbjogXCJJbiBuZWdvdGlhdGlvblwiLCBcbiAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSwgXG4gICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkgXG4gICAgfSxcbiAgICB7IFxuICAgICAgaWQ6IFwiNVwiLCBcbiAgICAgIG5hbWU6IFwiQ2xvc2VkIFdvblwiLCBcbiAgICAgIGNvbG9yOiBcIiMxMEI5ODFcIiwgXG4gICAgICBvcmRlcjogNSwgXG4gICAgICBkZXNjcmlwdGlvbjogXCJEZWFsIGNsb3NlZCBzdWNjZXNzZnVsbHlcIiwgXG4gICAgICBjcmVhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksIFxuICAgICAgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpIFxuICAgIH0sXG4gICAgeyBcbiAgICAgIGlkOiBcIjZcIiwgXG4gICAgICBuYW1lOiBcIkNsb3NlZCBMb3N0XCIsIFxuICAgICAgY29sb3I6IFwiI0VGNDQ0NFwiLCBcbiAgICAgIG9yZGVyOiA2LCBcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkRlYWwgbG9zdFwiLCBcbiAgICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSwgXG4gICAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkgXG4gICAgfSxcbiAgXSxcbiAgYWRtaW5TZXR0aW5nczoge1xuICAgIGlkOiBcImFkbWluLTFcIixcbiAgICBjb21wYW55TmFtZTogXCJZb3VyIENvbXBhbnlcIixcbiAgICBjb21wYW55RW1haWw6IFwiYWRtaW5AY29tcGFueS5jb21cIixcbiAgICBjb21wYW55UGhvbmU6IFwiNTU1LTAxMjNcIixcbiAgICBjb21wYW55QWRkcmVzczogXCIxMjMgTWFpbiBTdFwiLFxuICAgIGRlZmF1bHRDdXJyZW5jeTogXCJVU0RcIixcbiAgICB0YXhSYXRlOiAwLjA4LFxuICAgIGludm9pY2VQcmVmaXg6IFwiSU5WXCIsXG4gICAgcXVvdGVQcmVmaXg6IFwiUVVPXCIsXG4gICAgY29udHJhY3RQcmVmaXg6IFwiQ09OXCIsXG4gICAgZW1haWxTaWduYXR1cmU6IFwiQmVzdCByZWdhcmRzLFxcbllvdXIgQ29tcGFueVwiLFxuICAgIGNyZWF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gIH0sXG4gIHBlbmRpbmdRdW90ZUZvckNvbnZlcnNpb246IG51bGwsIC8vIEluaXRpYWxpemUgbmV3IHN0YXRlXG4gIGxvYWRpbmc6IHtcbiAgICB0YXNrczogZmFsc2UsXG4gICAgY2xpZW50czogZmFsc2UsXG4gICAgZXZlbnRzOiBmYWxzZSxcbiAgICBzYWxlc1N0YWdlczogZmFsc2UsXG4gICAgcXVvdGVzOiBmYWxzZSxcbiAgICBzYXZlZFF1b3RlczogZmFsc2UsXG4gICAgY29udHJhY3RzOiBmYWxzZSxcbiAgICBpbnZvaWNlczogZmFsc2UsXG4gICAgcHJvcG9zYWxzOiBmYWxzZSxcbiAgfSxcbiAgZXJyb3I6IG51bGwsXG4gIGlzT25saW5lOiB0eXBlb2YgbmF2aWdhdG9yICE9PSBcInVuZGVmaW5lZFwiID8gbmF2aWdhdG9yLm9uTGluZSA6IHRydWUsXG59XG5cbi8vIENyZWF0ZSB0aGUgY29udGV4dFxuY29uc3QgQXBwQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QXBwQ29udGV4dFR5cGUgfCB1bmRlZmluZWQ+KHVuZGVmaW5lZClcblxuLy8gRXhwb3J0IHRoZSBjb250ZXh0IGZvciBkaXJlY3QgdXNhZ2VcbmV4cG9ydCB7IEFwcENvbnRleHQgfVxuXG4vLyBFbmhhbmNlZCByZWR1Y2VyIGZ1bmN0aW9uIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nXG5jb25zdCBhcHBSZWR1Y2VyID0gKHN0YXRlOiBBcHBTdGF0ZSwgYWN0aW9uOiBBY3Rpb25UeXBlKTogQXBwU3RhdGUgPT4ge1xuICB0cnkge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgIC8vIFRhc2sgYWN0aW9uc1xuICAgICAgY2FzZSBcIkFERF9UQVNLXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgdGFza3M6IFsuLi5zdGF0ZS50YXNrcywgeyAuLi5hY3Rpb24ucGF5bG9hZCwgaWQ6IERhdGUubm93KCkudG9TdHJpbmcoKSB9XSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIlVQREFURV9UQVNLXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgdGFza3M6IHN0YXRlLnRhc2tzLm1hcCgodGFzaykgPT5cbiAgICAgICAgICAgIHRhc2suaWQgPT09IGFjdGlvbi5wYXlsb2FkLmlkID8geyAuLi50YXNrLCAuLi5hY3Rpb24ucGF5bG9hZC50YXNrIH0gOiB0YXNrLFxuICAgICAgICAgICksXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJERUxFVEVfVEFTS1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHRhc2tzOiBzdGF0ZS50YXNrcy5maWx0ZXIoKHRhc2spID0+IHRhc2suaWQgIT09IGFjdGlvbi5wYXlsb2FkKSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIlNFVF9UQVNLU1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHRhc2tzOiBhY3Rpb24ucGF5bG9hZCB8fCBbXSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIHRhc2tzOiBmYWxzZSB9LFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX1RBU0tTX0xPQURJTkdcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIHRhc2tzOiBhY3Rpb24ucGF5bG9hZCB9LFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiVE9HR0xFX1RBU0tfQ09NUExFVElPTlwiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHRhc2tzOiBzdGF0ZS50YXNrcy5tYXAoKHRhc2spID0+XG4gICAgICAgICAgICB0YXNrLmlkID09PSBhY3Rpb24ucGF5bG9hZFxuICAgICAgICAgICAgICA/IHsgLi4udGFzaywgc3RhdHVzOiB0YXNrLnN0YXR1cyA9PT0gXCJjb21wbGV0ZWRcIiA/IFwicGVuZGluZ1wiIDogXCJjb21wbGV0ZWRcIiwgdXBkYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpIH1cbiAgICAgICAgICAgICAgOiB0YXNrLFxuICAgICAgICAgICksXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJBU1NJR05fVEFTS1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHRhc2tzOiBzdGF0ZS50YXNrcy5tYXAoKHRhc2spID0+XG4gICAgICAgICAgICB0YXNrLmlkID09PSBhY3Rpb24ucGF5bG9hZC50YXNrSWRcbiAgICAgICAgICAgICAgPyB7IC4uLnRhc2ssIGFzc2lnbmVkX3RvOiBhY3Rpb24ucGF5bG9hZC5hc3NpZ25lZUlkLCB1cGRhdGVkX2F0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkgfVxuICAgICAgICAgICAgICA6IHRhc2ssXG4gICAgICAgICAgKSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIkZJTFRFUl9UQVNLU19CWV9TVEFUVVNcIjpcbiAgICAgICAgLy8gVGhpcyB3b3VsZCB0eXBpY2FsbHkgYmUgaGFuZGxlZCBpbiB0aGUgVUkgbGF5ZXIsIGJ1dCB3ZSBjYW4gc3RvcmUgdGhlIGZpbHRlciBzdGF0ZVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIC8vIFlvdSBtaWdodCB3YW50IHRvIGFkZCBhIGZpbHRlciBzdGF0ZSB0byBBcHBTdGF0ZSBpZiBuZWVkZWRcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIlNPUlRfVEFTS1NcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICB0YXNrczogWy4uLnN0YXRlLnRhc2tzXS5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzb3J0QnkgPSBhY3Rpb24ucGF5bG9hZFxuICAgICAgICAgICAgaWYgKHNvcnRCeSA9PT0gXCJkdWVEYXRlXCIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGEuZHVlX2RhdGUgfHwgMCkuZ2V0VGltZSgpIC0gbmV3IERhdGUoYi5kdWVfZGF0ZSB8fCAwKS5nZXRUaW1lKClcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc29ydEJ5ID09PSBcInByaW9yaXR5XCIpIHtcbiAgICAgICAgICAgICAgY29uc3QgcHJpb3JpdHlPcmRlciA9IHsgXCJISUdIXCI6IDMsIFwiTUVESVVNXCI6IDIsIFwiTE9XXCI6IDEgfVxuICAgICAgICAgICAgICByZXR1cm4gKHByaW9yaXR5T3JkZXJbYi5wcmlvcml0eSBhcyBrZXlvZiB0eXBlb2YgcHJpb3JpdHlPcmRlcl0gfHwgMCkgLSAocHJpb3JpdHlPcmRlclthLnByaW9yaXR5IGFzIGtleW9mIHR5cGVvZiBwcmlvcml0eU9yZGVyXSB8fCAwKVxuICAgICAgICAgICAgfSBlbHNlIGlmIChzb3J0QnkgPT09IFwiY3JlYXRlZEF0XCIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEYXRlKGIuY3JlYXRlZF9hdCB8fCAwKS5nZXRUaW1lKCkgLSBuZXcgRGF0ZShhLmNyZWF0ZWRfYXQgfHwgMCkuZ2V0VGltZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gMFxuICAgICAgICAgIH0pLFxuICAgICAgICB9XG5cbiAgICAgIC8vIENsaWVudCBhY3Rpb25zXG4gICAgICBjYXNlIFwiQUREX0NMSUVOVFwiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGNsaWVudHM6IFsuLi5zdGF0ZS5jbGllbnRzLCBhY3Rpb24ucGF5bG9hZF0sXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJVUERBVEVfQ0xJRU5UXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgY2xpZW50czogc3RhdGUuY2xpZW50cy5tYXAoKGNsaWVudCkgPT5cbiAgICAgICAgICAgIGNsaWVudC5pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWQgPyB7IC4uLmNsaWVudCwgLi4uYWN0aW9uLnBheWxvYWQuY2xpZW50IH0gOiBjbGllbnQsXG4gICAgICAgICAgKSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIkRFTEVURV9DTElFTlRcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBjbGllbnRzOiBzdGF0ZS5jbGllbnRzLmZpbHRlcigoY2xpZW50KSA9PiBjbGllbnQuaWQgIT09IGFjdGlvbi5wYXlsb2FkKSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIlNFVF9DTElFTlRTXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgY2xpZW50czogYWN0aW9uLnBheWxvYWQgfHwgW10sXG4gICAgICAgICAgbG9hZGluZzogeyAuLi5zdGF0ZS5sb2FkaW5nLCBjbGllbnRzOiBmYWxzZSB9LFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX0NMSUVOVFNfTE9BRElOR1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGxvYWRpbmc6IHsgLi4uc3RhdGUubG9hZGluZywgY2xpZW50czogYWN0aW9uLnBheWxvYWQgfSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIkFERF9OT1RFXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgY2xpZW50czogc3RhdGUuY2xpZW50cy5tYXAoKGNsaWVudCkgPT5cbiAgICAgICAgICAgIGNsaWVudC5pZCA9PT0gYWN0aW9uLnBheWxvYWQuY2xpZW50SWRcbiAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAuLi5jbGllbnQsXG4gICAgICAgICAgICAgICAgICBub3RlczogW1xuICAgICAgICAgICAgICAgICAgICAuLi4oY2xpZW50Lm5vdGVzIHx8IFtdKSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIC4uLmFjdGlvbi5wYXlsb2FkLm5vdGUsXG4gICAgICAgICAgICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLnNwbGl0KFwiVFwiKVswXSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA6IGNsaWVudCxcbiAgICAgICAgICApLFxuICAgICAgICB9XG5cbiAgICAgIC8vIFByb2plY3QgYWN0aW9uc1xuICAgICAgY2FzZSBcIkFERF9QUk9KRUNUXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgY2xpZW50czogc3RhdGUuY2xpZW50cy5tYXAoKGNsaWVudCkgPT5cbiAgICAgICAgICAgIGNsaWVudC5pZCA9PT0gYWN0aW9uLnBheWxvYWQuY2xpZW50SWRcbiAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAuLi5jbGllbnQsXG4gICAgICAgICAgICAgICAgICBwcm9qZWN0czogW1xuICAgICAgICAgICAgICAgICAgICAuLi4oY2xpZW50LnByb2plY3RzIHx8IFtdKSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgIC4uLmFjdGlvbi5wYXlsb2FkLFxuICAgICAgICAgICAgICAgICAgICAgIGlkOiBEYXRlLm5vdygpLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRfYXQ6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICA6IGNsaWVudCxcbiAgICAgICAgICApLFxuICAgICAgICB9XG5cbiAgICAgIC8vIEV2ZW50IGFjdGlvbnNcbiAgICAgIGNhc2UgXCJBRERfRVZFTlRcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBldmVudHM6IFsuLi5zdGF0ZS5ldmVudHMsIHsgLi4uYWN0aW9uLnBheWxvYWQsIGlkOiBEYXRlLm5vdygpLnRvU3RyaW5nKCkgfV0sXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJVUERBVEVfRVZFTlRcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBldmVudHM6IHN0YXRlLmV2ZW50cy5tYXAoKGV2ZW50KSA9PlxuICAgICAgICAgICAgZXZlbnQuaWQgPT09IGFjdGlvbi5wYXlsb2FkLmlkID8geyAuLi5ldmVudCwgLi4uYWN0aW9uLnBheWxvYWQuZXZlbnQgfSA6IGV2ZW50LFxuICAgICAgICAgICksXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJERUxFVEVfRVZFTlRcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBldmVudHM6IHN0YXRlLmV2ZW50cy5maWx0ZXIoKGV2ZW50KSA9PiBldmVudC5pZCAhPT0gYWN0aW9uLnBheWxvYWQpLFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX0VWRU5UU1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGV2ZW50czogYWN0aW9uLnBheWxvYWQgfHwgW10sXG4gICAgICAgICAgbG9hZGluZzogeyAuLi5zdGF0ZS5sb2FkaW5nLCBldmVudHM6IGZhbHNlIH0sXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJTRVRfRVZFTlRTX0xPQURJTkdcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIGV2ZW50czogYWN0aW9uLnBheWxvYWQgfSxcbiAgICAgICAgfVxuXG4gICAgICAvLyBTYWxlcyBzdGFnZSBhY3Rpb25zXG4gICAgICBjYXNlIFwiU0VUX1NBTEVTX1NUQUdFU1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHNhbGVzU3RhZ2VzOiBhY3Rpb24ucGF5bG9hZCB8fCBbXSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIHNhbGVzU3RhZ2VzOiBmYWxzZSB9LFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX1NBTEVTX1NUQUdFU19MT0FESU5HXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgbG9hZGluZzogeyAuLi5zdGF0ZS5sb2FkaW5nLCBzYWxlc1N0YWdlczogYWN0aW9uLnBheWxvYWQgfSxcbiAgICAgICAgfVxuXG4gICAgICAvLyBRdW90ZSBhY3Rpb25zXG4gICAgICBjYXNlIFwiQUREX1FVT1RFXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgcXVvdGVzOiBbLi4uc3RhdGUucXVvdGVzLCBhY3Rpb24ucGF5bG9hZF0sXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJVUERBVEVfUVVPVEVcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBxdW90ZXM6IHN0YXRlLnF1b3Rlcy5tYXAoKHF1b3RlKSA9PlxuICAgICAgICAgICAgcXVvdGUuaWQgPT09IGFjdGlvbi5wYXlsb2FkLmlkID8geyAuLi5xdW90ZSwgLi4uYWN0aW9uLnBheWxvYWQucXVvdGUgfSA6IHF1b3RlLFxuICAgICAgICAgICksXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJERUxFVEVfUVVPVEVcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBxdW90ZXM6IHN0YXRlLnF1b3Rlcy5maWx0ZXIoKHF1b3RlKSA9PiBxdW90ZS5pZCAhPT0gYWN0aW9uLnBheWxvYWQpLFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX1FVT1RFU1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHF1b3RlczogYWN0aW9uLnBheWxvYWQgfHwgW10sXG4gICAgICAgICAgbG9hZGluZzogeyAuLi5zdGF0ZS5sb2FkaW5nLCBxdW90ZXM6IGZhbHNlIH0sXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJTRVRfUVVPVEVTX0xPQURJTkdcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIHF1b3RlczogYWN0aW9uLnBheWxvYWQgfSxcbiAgICAgICAgfVxuXG4gICAgICAvLyBQcm9wb3NhbCBhY3Rpb25zXG4gICAgICBjYXNlIFwiQUREX1BST1BPU0FMXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgc2F2ZWRQcm9wb3NhbHM6IFsuLi5zdGF0ZS5zYXZlZFByb3Bvc2FscywgYWN0aW9uLnBheWxvYWRdLFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiVVBEQVRFX1BST1BPU0FMXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgc2F2ZWRQcm9wb3NhbHM6IHN0YXRlLnNhdmVkUHJvcG9zYWxzLm1hcCgocHJvcG9zYWwpID0+XG4gICAgICAgICAgICBwcm9wb3NhbC5pZCA9PT0gYWN0aW9uLnBheWxvYWQuaWQgPyB7IC4uLnByb3Bvc2FsLCAuLi5hY3Rpb24ucGF5bG9hZC5wcm9wb3NhbCB9IDogcHJvcG9zYWwsXG4gICAgICAgICAgKSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIkRFTEVURV9QUk9QT1NBTFwiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHNhdmVkUHJvcG9zYWxzOiBzdGF0ZS5zYXZlZFByb3Bvc2Fscy5maWx0ZXIoKHByb3Bvc2FsKSA9PiBwcm9wb3NhbC5pZCAhPT0gYWN0aW9uLnBheWxvYWQpLFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX1BST1BPU0FMU1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHNhdmVkUHJvcG9zYWxzOiBhY3Rpb24ucGF5bG9hZCB8fCBbXSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIHNhdmVkUXVvdGVzOiBmYWxzZSB9LFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX1BST1BPU0FMU19MT0FESU5HXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgbG9hZGluZzogeyAuLi5zdGF0ZS5sb2FkaW5nLCBzYXZlZFF1b3RlczogYWN0aW9uLnBheWxvYWQgfSxcbiAgICAgICAgfVxuXG4gICAgICAvLyBDb250cmFjdCBhY3Rpb25zXG4gICAgICBjYXNlIFwiQUREX0NPTlRSQUNUXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgY29udHJhY3RzOiBbLi4uc3RhdGUuY29udHJhY3RzLCBhY3Rpb24ucGF5bG9hZF0sXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJVUERBVEVfQ09OVFJBQ1RcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBjb250cmFjdHM6IHN0YXRlLmNvbnRyYWN0cy5tYXAoKGNvbnRyYWN0KSA9PlxuICAgICAgICAgICAgY29udHJhY3QuaWQgPT09IGFjdGlvbi5wYXlsb2FkLmlkID8geyAuLi5jb250cmFjdCwgLi4uYWN0aW9uLnBheWxvYWQuY29udHJhY3QgfSA6IGNvbnRyYWN0LFxuICAgICAgICAgICksXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJERUxFVEVfQ09OVFJBQ1RcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBjb250cmFjdHM6IHN0YXRlLmNvbnRyYWN0cy5maWx0ZXIoKGNvbnRyYWN0KSA9PiBjb250cmFjdC5pZCAhPT0gYWN0aW9uLnBheWxvYWQpLFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX0NPTlRSQUNUU1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGNvbnRyYWN0czogYWN0aW9uLnBheWxvYWQgfHwgW10sXG4gICAgICAgICAgbG9hZGluZzogeyAuLi5zdGF0ZS5sb2FkaW5nLCBjb250cmFjdHM6IGZhbHNlIH0sXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJTRVRfQ09OVFJBQ1RTX0xPQURJTkdcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIGNvbnRyYWN0czogYWN0aW9uLnBheWxvYWQgfSxcbiAgICAgICAgfVxuXG4gICAgICAvLyBJbnZvaWNlIGFjdGlvbnNcbiAgICAgIGNhc2UgXCJBRERfSU5WT0lDRVwiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGludm9pY2VzOiBbLi4uc3RhdGUuaW52b2ljZXMsIGFjdGlvbi5wYXlsb2FkXSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIlVQREFURV9JTlZPSUNFXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgaW52b2ljZXM6IHN0YXRlLmludm9pY2VzLm1hcCgoaW52b2ljZSkgPT5cbiAgICAgICAgICAgIGludm9pY2UuaWQgPT09IGFjdGlvbi5wYXlsb2FkLmlkID8geyAuLi5pbnZvaWNlLCAuLi5hY3Rpb24ucGF5bG9hZC5pbnZvaWNlIH0gOiBpbnZvaWNlLFxuICAgICAgICAgICksXG4gICAgICAgIH1cbiAgICAgIGNhc2UgXCJERUxFVEVfSU5WT0lDRVwiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGludm9pY2VzOiBzdGF0ZS5pbnZvaWNlcy5maWx0ZXIoKGludm9pY2UpID0+IGludm9pY2UuaWQgIT09IGFjdGlvbi5wYXlsb2FkKSxcbiAgICAgICAgfVxuICAgICAgY2FzZSBcIlNFVF9JTlZPSUNFU1wiOlxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIGludm9pY2VzOiBhY3Rpb24ucGF5bG9hZCB8fCBbXSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIGludm9pY2VzOiBmYWxzZSB9LFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX0lOVk9JQ0VTX0xPQURJTkdcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBsb2FkaW5nOiB7IC4uLnN0YXRlLmxvYWRpbmcsIGludm9pY2VzOiBhY3Rpb24ucGF5bG9hZCB9LFxuICAgICAgICB9XG5cbiAgICAgIC8vIEFkbWluIHNldHRpbmdzIGFjdGlvbnNcbiAgICAgIGNhc2UgXCJVUERBVEVfQURNSU5fU0VUVElOR1NcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBhZG1pblNldHRpbmdzOiB7IC4uLnN0YXRlLmFkbWluU2V0dGluZ3MsIC4uLmFjdGlvbi5wYXlsb2FkIH0sXG4gICAgICAgIH1cblxuICAgICAgLy8gV29ya2Zsb3cgYWN0aW9uc1xuICAgICAgY2FzZSBcIlNFVF9QRU5ESU5HX1FVT1RFX0ZPUl9DT05WRVJTSU9OXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgcGVuZGluZ1F1b3RlRm9yQ29udmVyc2lvbjogYWN0aW9uLnBheWxvYWQsXG4gICAgICAgIH1cblxuICAgICAgLy8gR2VuZXJhbCBhY3Rpb25zXG4gICAgICBjYXNlIFwiU0VUX0VSUk9SXCI6XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgICAgZXJyb3I6IGFjdGlvbi5wYXlsb2FkLFxuICAgICAgICB9XG4gICAgICBjYXNlIFwiU0VUX09OTElORV9TVEFUVVNcIjpcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBpc09ubGluZTogYWN0aW9uLnBheWxvYWQsXG4gICAgICAgIH1cblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgcmV0dXJuIHN0YXRlXG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJSZWR1Y2VyIGVycm9yOlwiLCBlcnJvcilcbiAgICByZXR1cm4ge1xuICAgICAgLi4uc3RhdGUsXG4gICAgICBlcnJvcjogXCJBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSB1cGRhdGluZyB0aGUgYXBwbGljYXRpb24gc3RhdGVcIixcbiAgICB9XG4gIH1cbn1cblxuLy8gUHJvdmlkZXIgY29tcG9uZW50IHdpdGggZW5oYW5jZWQgZXJyb3IgaGFuZGxpbmdcbmV4cG9ydCBjb25zdCBBcHBQcm92aWRlcjogUmVhY3QuRkM8eyBjaGlsZHJlbjogUmVhY3ROb2RlOyBpbml0aWFsU3RhdGU/OiBQYXJ0aWFsPEFwcFN0YXRlPiB9PiA9ICh7IGNoaWxkcmVuLCBpbml0aWFsU3RhdGU6IGN1c3RvbUluaXRpYWxTdGF0ZSB9KSA9PiB7XG4gIGNvbnN0IG1lcmdlZEluaXRpYWxTdGF0ZSA9IGN1c3RvbUluaXRpYWxTdGF0ZSA/IHsgLi4uaW5pdGlhbFN0YXRlLCAuLi5jdXN0b21Jbml0aWFsU3RhdGUgfSA6IGluaXRpYWxTdGF0ZVxuICBjb25zdCBbc3RhdGUsIGRpc3BhdGNoXSA9IHVzZVJlZHVjZXIoYXBwUmVkdWNlciwgbWVyZ2VkSW5pdGlhbFN0YXRlKVxuICBjb25zdCBpc1Rlc3RNb2RlID0gY3VzdG9tSW5pdGlhbFN0YXRlICE9PSB1bmRlZmluZWRcbiAgY29uc3QgW2FjdGl2ZUNvbXBvbmVudCwgc2V0QWN0aXZlQ29tcG9uZW50XSA9IHVzZVN0YXRlPHN0cmluZz4oXCJEYXNoYm9hcmRcIilcbiAgY29uc3QgW3F1b3RlRGF0YSwgc2V0UXVvdGVEYXRhXSA9IHVzZVN0YXRlPFF1b3RlRGF0YSB8IG51bGw+KG51bGwpXG5cbiAgY29uc3QgY29udGV4dFZhbHVlID0gdXNlTWVtbyhcbiAgICAoKSA9PiAoe1xuICAgICAgc3RhdGUsXG4gICAgICBkaXNwYXRjaCxcbiAgICAgIGFjdGl2ZUNvbXBvbmVudCxcbiAgICAgIHNldEFjdGl2ZUNvbXBvbmVudCxcbiAgICAgIHF1b3RlRGF0YSxcbiAgICAgIHNldFF1b3RlRGF0YSxcbiAgICB9KSxcbiAgICBbc3RhdGUsIGRpc3BhdGNoLCBhY3RpdmVDb21wb25lbnQsIHF1b3RlRGF0YV0sXG4gIClcblxuICAvLyBJbml0aWFsaXplIGRhdGEgZnJvbSBkYXRhYmFzZSBvbiBtb3VudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIFNraXAgZGF0YSBsb2FkaW5nIGluIHRlc3QgbW9kZVxuICAgIGlmIChpc1Rlc3RNb2RlKSB7XG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb25zdCBpbml0aWFsaXplRGF0YSA9IGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIENoZWNrIGZvciB0cmFuc2ZlclF1b3RlRGF0YSBpbiBsb2NhbFN0b3JhZ2UgYW5kIHNldCBhcyBwZW5kaW5nUXVvdGVGb3JDb252ZXJzaW9uXG4gICAgICAgIGNvbnN0IHRyYW5zZmVyUXVvdGVEYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3RyYW5zZmVyUXVvdGVEYXRhJylcbiAgICAgICAgaWYgKHRyYW5zZmVyUXVvdGVEYXRhKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHF1b3RlRGF0YSA9IEpTT04ucGFyc2UodHJhbnNmZXJRdW90ZURhdGEpXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTG9hZGluZyB0cmFuc2ZlclF1b3RlRGF0YSBmcm9tIGxvY2FsU3RvcmFnZTonLCBxdW90ZURhdGEpXG4gICAgICAgICAgICBkaXNwYXRjaCh7IHR5cGU6ICdTRVRfUEVORElOR19RVU9URV9GT1JfQ09OVkVSU0lPTicsIHBheWxvYWQ6IHF1b3RlRGF0YSB9KVxuICAgICAgICAgICAgLy8gQ2xlYXIgdGhlIHRyYW5zZmVyUXVvdGVEYXRhIGFmdGVyIGxvYWRpbmdcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0cmFuc2ZlclF1b3RlRGF0YScpXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHBhcnNpbmcgdHJhbnNmZXJRdW90ZURhdGE6JywgZXJyb3IpXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndHJhbnNmZXJRdW90ZURhdGEnKVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIE9ubHkgdHJ5IHRvIGxvYWQgZnJvbSBkYXRhYmFzZSBpZiB3ZSBoYXZlIGEgcmVhbCBTdXBhYmFzZSBjb25uZWN0aW9uXG4gICAgICAgIGNvbnN0IHN1cGFiYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMXG4gIGNvbnN0IHN1cGFiYXNlS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVlcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgIXN1cGFiYXNlVXJsIHx8XG4gICAgICAgICAgIXN1cGFiYXNlS2V5IHx8XG4gICAgICAgICAgc3VwYWJhc2VVcmwuaW5jbHVkZXMoXCJ5b3VyLXByb2plY3RcIikgfHxcbiAgICAgICAgICBzdXBhYmFzZUtleS5pbmNsdWRlcyhcInlvdXItYW5vbi1rZXlcIilcbiAgICAgICAgKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJVc2luZyBtb2NrIGRhdGEgLSBTdXBhYmFzZSBub3QgY29uZmlndXJlZFwiKVxuICAgICAgICAgIHJldHVyblxuICAgICAgICB9XG5cbiAgICAgICAgLy8gTG9hZCBkYXRhIHdpdGggcHJvcGVyIGVycm9yIGhhbmRsaW5nXG4gICAgICAgIGNvbnN0IGxvYWREYXRhID0gYXN5bmMgKHR5cGU6IHN0cmluZywgYWN0aW9uOiBzdHJpbmcsIGdldHRlcjogKCkgPT4gUHJvbWlzZTxhbnk+KSA9PiB7XG4gICAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiBgU0VUXyR7dHlwZX1fTE9BRElOR2AgYXMgYW55LCBwYXlsb2FkOiB0cnVlIH0pXG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBnZXR0ZXIoKVxuICAgICAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiBhY3Rpb24gYXMgYW55LCBwYXlsb2FkOiBkYXRhIH0pXG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgRmFpbGVkIHRvIGxvYWQgJHt0eXBlLnRvTG93ZXJDYXNlKCl9IGZyb20gZGF0YWJhc2UsIHVzaW5nIG1vY2sgZGF0YTpgLCBlcnJvcilcbiAgICAgICAgICAgIGRpc3BhdGNoKHsgdHlwZTogYFNFVF8ke3R5cGV9X0xPQURJTkdgIGFzIGFueSwgcGF5bG9hZDogZmFsc2UgfSlcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgICAgbG9hZERhdGEoXCJUQVNLU1wiLCBcIlNFVF9UQVNLU1wiLCAoKSA9PiBkYXRhYmFzZVNlcnZpY2UuZ2V0VGFza3MoKSksXG4gICAgICAgICAgbG9hZERhdGEoXCJDTElFTlRTXCIsIFwiU0VUX0NMSUVOVFNcIiwgKCkgPT4gZGF0YWJhc2VTZXJ2aWNlLmdldENsaWVudHMoKSksXG4gICAgICAgICAgbG9hZERhdGEoXCJFVkVOVFNcIiwgXCJTRVRfRVZFTlRTXCIsICgpID0+IGRhdGFiYXNlU2VydmljZS5nZXRFdmVudHMoKSksXG4gICAgICAgICAgbG9hZERhdGEoXCJTQUxFU19TVEFHRVNcIiwgXCJTRVRfU0FMRVNfU1RBR0VTXCIsICgpID0+IGRhdGFiYXNlU2VydmljZS5nZXRTYWxlc1N0YWdlcygpKSxcbiAgICAgICAgICAvLyBOb3RlOiBRdW90ZXMsIHByb3Bvc2FscywgY29udHJhY3RzLCBhbmQgaW52b2ljZXMgYXJlIG5vdCB5ZXQgaW1wbGVtZW50ZWQgaW4gRGF0YWJhc2VTZXJ2aWNlXG4gICAgICAgICAgLy8gbG9hZERhdGEoXCJRVU9URVNcIiwgXCJTRVRfUVVPVEVTXCIsICgpID0+IGRhdGFiYXNlU2VydmljZS5nZXRRdW90ZXMoKSksXG4gICAgICAgICAgLy8gbG9hZERhdGEoXCJQUk9QT1NBTFNcIiwgXCJTRVRfUFJPUE9TQUxTXCIsICgpID0+IGRhdGFiYXNlU2VydmljZS5nZXRQcm9wb3NhbHMoKSksXG4gICAgICAgICAgLy8gbG9hZERhdGEoXCJDT05UUkFDVFNcIiwgXCJTRVRfQ09OVFJBQ1RTXCIsICgpID0+IGRhdGFiYXNlU2VydmljZS5nZXRDb250cmFjdHMoKSksXG4gICAgICAgICAgLy8gbG9hZERhdGEoXCJJTlZPSUNFU1wiLCBcIlNFVF9JTlZPSUNFU1wiLCAoKSA9PiBkYXRhYmFzZVNlcnZpY2UuZ2V0SW52b2ljZXMoKSksXG4gICAgICAgIF0pXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGluaXRpYWxpemUgZGF0YTpcIiwgZXJyb3IpXG4gICAgICAgIGRpc3BhdGNoKHsgdHlwZTogXCJTRVRfRVJST1JcIiwgcGF5bG9hZDogXCJGYWlsZWQgdG8gbG9hZCBkYXRhIC0gdXNpbmcgb2ZmbGluZSBtb2RlXCIgfSlcbiAgICAgICAgLy8gQ2xlYXIgYWxsIGxvYWRpbmcgc3RhdGVzXG4gICAgICAgIGRpc3BhdGNoKHsgdHlwZTogXCJTRVRfVEFTS1NfTE9BRElOR1wiLCBwYXlsb2FkOiBmYWxzZSB9KVxuICAgICAgICBkaXNwYXRjaCh7IHR5cGU6IFwiU0VUX0NMSUVOVFNfTE9BRElOR1wiLCBwYXlsb2FkOiBmYWxzZSB9KVxuICAgICAgICBkaXNwYXRjaCh7IHR5cGU6IFwiU0VUX0VWRU5UU19MT0FESU5HXCIsIHBheWxvYWQ6IGZhbHNlIH0pXG4gICAgICAgIGRpc3BhdGNoKHsgdHlwZTogXCJTRVRfU0FMRVNfU1RBR0VTX0xPQURJTkdcIiwgcGF5bG9hZDogZmFsc2UgfSlcbiAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiBcIlNFVF9RVU9URVNfTE9BRElOR1wiLCBwYXlsb2FkOiBmYWxzZSB9KVxuICAgICAgICBkaXNwYXRjaCh7IHR5cGU6IFwiU0VUX1BST1BPU0FMU19MT0FESU5HXCIsIHBheWxvYWQ6IGZhbHNlIH0pXG4gICAgICAgIGRpc3BhdGNoKHsgdHlwZTogXCJTRVRfQ09OVFJBQ1RTX0xPQURJTkdcIiwgcGF5bG9hZDogZmFsc2UgfSlcbiAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiBcIlNFVF9JTlZPSUNFU19MT0FESU5HXCIsIHBheWxvYWQ6IGZhbHNlIH0pXG4gICAgICB9XG4gICAgfVxuXG4gICAgaW5pdGlhbGl6ZURhdGEoKVxuICB9LCBbaXNUZXN0TW9kZV0pXG5cbiAgLy8gTW9uaXRvciBvbmxpbmUgc3RhdHVzIHdpdGggZXJyb3IgaGFuZGxpbmdcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIikgcmV0dXJuXG5cbiAgICBjb25zdCBoYW5kbGVPbmxpbmUgPSAoKSA9PiBkaXNwYXRjaCh7IHR5cGU6IFwiU0VUX09OTElORV9TVEFUVVNcIiwgcGF5bG9hZDogdHJ1ZSB9KVxuICAgIGNvbnN0IGhhbmRsZU9mZmxpbmUgPSAoKSA9PiBkaXNwYXRjaCh7IHR5cGU6IFwiU0VUX09OTElORV9TVEFUVVNcIiwgcGF5bG9hZDogZmFsc2UgfSlcblxuICAgIHRyeSB7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9ubGluZVwiLCBoYW5kbGVPbmxpbmUpXG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgaGFuZGxlT2ZmbGluZSlcblxuICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwgaGFuZGxlT25saW5lKVxuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgaGFuZGxlT2ZmbGluZSlcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKFwiRmFpbGVkIHRvIHNldCB1cCBvbmxpbmUgc3RhdHVzIG1vbml0b3Jpbmc6XCIsIGVycm9yKVxuICAgIH1cbiAgfSwgW10pXG5cbiAgLy8gU2V0IHVwIHJlYWwtdGltZSBzdWJzY3JpcHRpb25zIHdpdGggZXJyb3IgaGFuZGxpbmdcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTFxuICAgIGNvbnN0IHN1cGFiYXNlS2V5ID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVlcblxuICAgIGlmICghc3VwYWJhc2VVcmwgfHwgIXN1cGFiYXNlS2V5IHx8IHN1cGFiYXNlVXJsLmluY2x1ZGVzKFwieW91ci1wcm9qZWN0XCIpIHx8IHN1cGFiYXNlS2V5LmluY2x1ZGVzKFwieW91ci1hbm9uLWtleVwiKSkge1xuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uczogQXJyYXk8KCkgPT4gdm9pZD4gPSBbXVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHNldHVwU3Vic2NyaXB0aW9uID0gKG5hbWU6IHN0cmluZywgc3Vic2NyaWJlcjogKGNhbGxiYWNrOiAoZGF0YTogYW55KSA9PiB2b2lkKSA9PiBhbnksIGFjdGlvbjogc3RyaW5nKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSBzdWJzY3JpYmVyKChkYXRhKSA9PiB7XG4gICAgICAgICAgICBkaXNwYXRjaCh7IHR5cGU6IGFjdGlvbiBhcyBhbnksIHBheWxvYWQ6IGRhdGEgfSlcbiAgICAgICAgICB9KVxuICAgICAgICAgIGlmICh1bnN1YnNjcmliZSkgc3Vic2NyaXB0aW9ucy5wdXNoKHVuc3Vic2NyaWJlKVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUud2FybihgRmFpbGVkIHRvIHNldCB1cCAke25hbWV9IHN1YnNjcmlwdGlvbjpgLCBlcnJvcilcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBzZXR1cFN1YnNjcmlwdGlvbihcInRhc2tzXCIsIGRhdGFiYXNlU2VydmljZS5zdWJzY3JpYmVUb1Rhc2tzLCBcIlNFVF9UQVNLU1wiKVxuICAgICAgc2V0dXBTdWJzY3JpcHRpb24oXCJjbGllbnRzXCIsIGRhdGFiYXNlU2VydmljZS5zdWJzY3JpYmVUb0NsaWVudHMsIFwiU0VUX0NMSUVOVFNcIilcbiAgICAgIHNldHVwU3Vic2NyaXB0aW9uKFwiZXZlbnRzXCIsIGRhdGFiYXNlU2VydmljZS5zdWJzY3JpYmVUb0V2ZW50cywgXCJTRVRfRVZFTlRTXCIpXG4gICAgICAvLyBOb3RlOiBRdW90ZXMsIHByb3Bvc2FscywgY29udHJhY3RzLCBhbmQgaW52b2ljZXMgc3Vic2NyaXB0aW9ucyBhcmUgbm90IHlldCBpbXBsZW1lbnRlZCBpbiBEYXRhYmFzZVNlcnZpY2VcbiAgICAgIC8vIHNldHVwU3Vic2NyaXB0aW9uKFwicXVvdGVzXCIsIGRhdGFiYXNlU2VydmljZS5zdWJzY3JpYmVUb1F1b3RlcywgXCJTRVRfUVVPVEVTXCIpXG4gICAgICAvLyBzZXR1cFN1YnNjcmlwdGlvbihcInByb3Bvc2Fsc1wiLCBkYXRhYmFzZVNlcnZpY2Uuc3Vic2NyaWJlVG9Qcm9wb3NhbHMsIFwiU0VUX1BST1BPU0FMU1wiKVxuICAgICAgLy8gc2V0dXBTdWJzY3JpcHRpb24oXCJjb250cmFjdHNcIiwgZGF0YWJhc2VTZXJ2aWNlLnN1YnNjcmliZVRvQ29udHJhY3RzLCBcIlNFVF9DT05UUkFDVFNcIilcbiAgICAgIC8vIHNldHVwU3Vic2NyaXB0aW9uKFwiaW52b2ljZXNcIiwgZGF0YWJhc2VTZXJ2aWNlLnN1YnNjcmliZVRvSW52b2ljZXMsIFwiU0VUX0lOVk9JQ0VTXCIpXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkZhaWxlZCB0byBzZXQgdXAgcmVhbC10aW1lIHN1YnNjcmlwdGlvbnM6XCIsIGVycm9yKVxuICAgIH1cblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBzdWJzY3JpcHRpb25zLmZvckVhY2goKHVuc3Vic2NyaWJlKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdW5zdWJzY3JpYmUoKVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUud2FybihcIkVycm9yIHVuc3Vic2NyaWJpbmc6XCIsIGVycm9yKVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfSwgW10pXG5cbiAgcmV0dXJuIDxBcHBDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXtjb250ZXh0VmFsdWV9PntjaGlsZHJlbn08L0FwcENvbnRleHQuUHJvdmlkZXI+XG59XG5cbi8vIEN1c3RvbSBob29rIHRvIHVzZSB0aGUgY29udGV4dCB3aXRoIGVycm9yIGhhbmRsaW5nXG5leHBvcnQgY29uc3QgdXNlQXBwQ29udGV4dCA9ICgpID0+IHtcbiAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQXBwQ29udGV4dClcbiAgaWYgKGNvbnRleHQgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInVzZUFwcENvbnRleHQgbXVzdCBiZSB1c2VkIHdpdGhpbiBhbiBBcHBQcm92aWRlclwiKVxuICB9XG4gIHJldHVybiBjb250ZXh0XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFxWlNBLFdBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQUFILFVBQUE7O01BNFZJSSxZQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFBQyxXQUFBOztNQXdLQUMsY0FBQTtJQUFBO0lBQUFKLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUUsYUFBQTs7Ozs7Ozs7eUVBejVCVTs7O2tDQUVTOzs7bUNBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF3STlCO0FBQ0EsTUFBTUMsWUFBQTtBQUFBO0FBQUEsQ0FBQUwsY0FBQSxHQUFBRSxDQUFBLFFBQXlCO0VBQzdCSSxLQUFBLEVBQU8sQ0FDTDtJQUNFQyxFQUFBLEVBQUk7SUFDSkMsS0FBQSxFQUFPO0lBQ1BDLFdBQUEsRUFBYTtJQUNiQyxRQUFBLEVBQVU7SUFDVkMsUUFBQSxFQUFVO0lBQ1ZDLFdBQUEsRUFBYTtJQUNiQyxNQUFBLEVBQVE7SUFDUkMsU0FBQSxFQUFXO0lBQ1hDLFVBQUEsRUFBWSxJQUFJQyxJQUFBLEdBQU9DLFdBQVc7SUFDbENDLFVBQUEsRUFBWSxJQUFJRixJQUFBLEdBQU9DLFdBQVc7SUFDbENFLElBQUEsRUFBTSxFQUFFO0lBQ1JDLGFBQUEsRUFBZTtJQUNmQyxVQUFBLEVBQVk7RUFDZCxHQUNBO0lBQ0VkLEVBQUEsRUFBSTtJQUNKQyxLQUFBLEVBQU87SUFDUEMsV0FBQSxFQUFhO0lBQ2JDLFFBQUEsRUFBVTtJQUNWQyxRQUFBLEVBQVU7SUFDVkMsV0FBQSxFQUFhO0lBQ2JDLE1BQUEsRUFBUTtJQUNSQyxTQUFBLEVBQVc7SUFDWEMsVUFBQSxFQUFZLElBQUlDLElBQUEsR0FBT0MsV0FBVztJQUNsQ0MsVUFBQSxFQUFZLElBQUlGLElBQUEsR0FBT0MsV0FBVztJQUNsQ0UsSUFBQSxFQUFNLEVBQUU7SUFDUkMsYUFBQSxFQUFlO0lBQ2ZDLFVBQUEsRUFBWTtFQUNkLEVBQ0Q7RUFDREMsTUFBQSxFQUFRQyxTQUFBLENBQUFDLGFBQWE7RUFDckJDLGNBQUEsRUFBZ0IsRUFBRTtFQUNsQkMsU0FBQSxFQUFXLENBQ1Q7SUFDRW5CLEVBQUEsRUFBSTtJQUNKb0IsT0FBQSxFQUFTO0lBQ1RDLFFBQUEsRUFBVTtJQUNWQyxjQUFBLEVBQWdCO0lBQ2hCQyxhQUFBLEVBQWU7SUFDZkMsVUFBQSxFQUFZO0lBQ1pDLFdBQUEsRUFBYTtJQUNiQyxTQUFBLEVBQVc7SUFDWEMsT0FBQSxFQUFTO0lBQ1RDLEtBQUEsRUFBTztJQUNQQyxXQUFBLEVBQWE7SUFDYkMsZUFBQSxFQUFpQjtJQUNqQkMsV0FBQSxFQUFhO0lBQ2JDLFVBQUEsRUFBWTtNQUNWQyxJQUFBLEVBQU07TUFDTkMsS0FBQSxFQUFPO01BQ1BDLEtBQUEsRUFBTztNQUNQQyxPQUFBLEVBQVM7TUFDVEMsT0FBQSxFQUFTO0lBQ1g7SUFDQUMsY0FBQSxFQUFnQjtNQUNkckMsS0FBQSxFQUFPO01BQ1BDLFdBQUEsRUFBYTtJQUNmO0lBQ0FJLE1BQUEsRUFBUTtJQUNSRixRQUFBLEVBQVU7SUFDVm1DLFNBQUEsRUFBVztJQUNYQyxTQUFBLEVBQVc7SUFDWEMsVUFBQSxFQUFZO0lBQ1pDLGVBQUEsRUFBaUI7SUFDakJDLGtCQUFBLEVBQW9CLENBQUM7SUFDckJDLFlBQUEsRUFBYztNQUNaQyxTQUFBLEVBQVc7TUFDWEMsaUJBQUEsRUFBbUI7TUFDbkJDLGdCQUFBLEVBQWtCO01BQ2xCQyx1QkFBQSxFQUF5QjtJQUMzQjtFQUNGLEVBQ0Q7RUFDREMsUUFBQSxFQUFVLENBQ1I7SUFDRWpELEVBQUEsRUFBSTtJQUNKcUIsUUFBQSxFQUFVO0lBQ1Y2QixhQUFBLEVBQWU7SUFDZkMsU0FBQSxFQUFXO0lBQ1hDLE9BQUEsRUFBUztJQUNUQyxLQUFBLEVBQU8sQ0FDTDtNQUNFckQsRUFBQSxFQUFJO01BQ0pFLFdBQUEsRUFBYTtNQUNib0QsUUFBQSxFQUFVO01BQ1ZDLEtBQUEsRUFBTztNQUNQQyxLQUFBLEVBQU87SUFDVCxFQUNEO0lBQ0RDLFFBQUEsRUFBVTtJQUNWQyxHQUFBLEVBQUs7SUFDTDdCLFdBQUEsRUFBYTtJQUNidkIsTUFBQSxFQUFRO0lBQ1JxRCxLQUFBLEVBQU87SUFDUG5DLFVBQUEsRUFBWTtJQUNaQyxXQUFBLEVBQWE7SUFDYm1DLGFBQUEsRUFBZTtFQUNqQixFQUNEO0VBQ0RDLE9BQUEsRUFBUyxDQUNQO0lBQ0U3RCxFQUFBLEVBQUk7SUFDSmlDLElBQUEsRUFBTTtJQUNOQyxLQUFBLEVBQU87SUFDUEMsS0FBQSxFQUFPO0lBQ1BDLE9BQUEsRUFBUztJQUNUMEIsS0FBQSxFQUFPO0lBQ1BDLEtBQUEsRUFBTztJQUNQekQsTUFBQSxFQUFRO0lBQ1IwRCxNQUFBLEVBQVE7SUFDUnhELFVBQUEsRUFBWSxJQUFJQyxJQUFBLEdBQU9DLFdBQVc7SUFDbENDLFVBQUEsRUFBWSxJQUFJRixJQUFBLEdBQU9DLFdBQVc7SUFDbENpRCxLQUFBLEVBQU8sQ0FDTDtNQUNFTSxJQUFBLEVBQU07TUFDTkMsT0FBQSxFQUFTO01BQ1RDLElBQUEsRUFBTTtJQUNSLEVBQ0Q7SUFDREMsUUFBQSxFQUFVLEVBQUU7SUFDWkMsYUFBQSxFQUFlLENBQUM7RUFDbEIsR0FDQTtJQUNFckUsRUFBQSxFQUFJO0lBQ0ppQyxJQUFBLEVBQU07SUFDTkMsS0FBQSxFQUFPO0lBQ1BDLEtBQUEsRUFBTztJQUNQQyxPQUFBLEVBQVM7SUFDVDBCLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUHpELE1BQUEsRUFBUTtJQUNSMEQsTUFBQSxFQUFRO0lBQ1J4RCxVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDQyxVQUFBLEVBQVksSUFBSUYsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDaUQsS0FBQSxFQUFPLENBQ0w7TUFDRU0sSUFBQSxFQUFNO01BQ05DLE9BQUEsRUFBUztNQUNUQyxJQUFBLEVBQU07SUFDUixFQUNEO0lBQ0RDLFFBQUEsRUFBVSxFQUFFO0lBQ1pDLGFBQUEsRUFBZSxDQUFDO0VBQ2xCLEVBQ0Q7RUFDREMsTUFBQSxFQUFRLENBQ047SUFDRXRFLEVBQUEsRUFBSTtJQUNKQyxLQUFBLEVBQU87SUFDUGdFLElBQUEsRUFBTTtJQUNORSxJQUFBLEVBQU07SUFDTkksSUFBQSxFQUFNO0lBQ05yRSxXQUFBLEVBQWE7RUFDZixHQUNBO0lBQ0VGLEVBQUEsRUFBSTtJQUNKQyxLQUFBLEVBQU87SUFDUGdFLElBQUEsRUFBTTtJQUNORSxJQUFBLEVBQU07SUFDTkksSUFBQSxFQUFNO0lBQ05yRSxXQUFBLEVBQWE7RUFDZixHQUNBO0lBQ0VGLEVBQUEsRUFBSTtJQUNKQyxLQUFBLEVBQU87SUFDUGdFLElBQUEsRUFBTTtJQUNORSxJQUFBLEVBQU07SUFDTkksSUFBQSxFQUFNO0lBQ05yRSxXQUFBLEVBQWE7RUFDZixFQUNEO0VBQ0RzRSxXQUFBLEVBQWEsQ0FDWDtJQUNFeEUsRUFBQSxFQUFJO0lBQ0ppQyxJQUFBLEVBQU07SUFDTndDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUHhFLFdBQUEsRUFBYTtJQUNiTSxVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDQyxVQUFBLEVBQVksSUFBSUYsSUFBQSxHQUFPQyxXQUFXO0VBQ3BDLEdBQ0E7SUFDRVYsRUFBQSxFQUFJO0lBQ0ppQyxJQUFBLEVBQU07SUFDTndDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUHhFLFdBQUEsRUFBYTtJQUNiTSxVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDQyxVQUFBLEVBQVksSUFBSUYsSUFBQSxHQUFPQyxXQUFXO0VBQ3BDLEdBQ0E7SUFDRVYsRUFBQSxFQUFJO0lBQ0ppQyxJQUFBLEVBQU07SUFDTndDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUHhFLFdBQUEsRUFBYTtJQUNiTSxVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDQyxVQUFBLEVBQVksSUFBSUYsSUFBQSxHQUFPQyxXQUFXO0VBQ3BDLEdBQ0E7SUFDRVYsRUFBQSxFQUFJO0lBQ0ppQyxJQUFBLEVBQU07SUFDTndDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUHhFLFdBQUEsRUFBYTtJQUNiTSxVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDQyxVQUFBLEVBQVksSUFBSUYsSUFBQSxHQUFPQyxXQUFXO0VBQ3BDLEdBQ0E7SUFDRVYsRUFBQSxFQUFJO0lBQ0ppQyxJQUFBLEVBQU07SUFDTndDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUHhFLFdBQUEsRUFBYTtJQUNiTSxVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDQyxVQUFBLEVBQVksSUFBSUYsSUFBQSxHQUFPQyxXQUFXO0VBQ3BDLEdBQ0E7SUFDRVYsRUFBQSxFQUFJO0lBQ0ppQyxJQUFBLEVBQU07SUFDTndDLEtBQUEsRUFBTztJQUNQQyxLQUFBLEVBQU87SUFDUHhFLFdBQUEsRUFBYTtJQUNiTSxVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO0lBQ2xDQyxVQUFBLEVBQVksSUFBSUYsSUFBQSxHQUFPQyxXQUFXO0VBQ3BDLEVBQ0Q7RUFDRGlFLGFBQUEsRUFBZTtJQUNiM0UsRUFBQSxFQUFJO0lBQ0o0RSxXQUFBLEVBQWE7SUFDYkMsWUFBQSxFQUFjO0lBQ2RDLFlBQUEsRUFBYztJQUNkQyxjQUFBLEVBQWdCO0lBQ2hCQyxlQUFBLEVBQWlCO0lBQ2pCQyxPQUFBLEVBQVM7SUFDVEMsYUFBQSxFQUFlO0lBQ2ZDLFdBQUEsRUFBYTtJQUNiQyxjQUFBLEVBQWdCO0lBQ2hCQyxjQUFBLEVBQWdCO0lBQ2hCN0UsVUFBQSxFQUFZLElBQUlDLElBQUEsR0FBT0MsV0FBVztJQUNsQ0MsVUFBQSxFQUFZLElBQUlGLElBQUEsR0FBT0MsV0FBVztFQUNwQztFQUNBNEUseUJBQUEsRUFBMkI7RUFDM0JDLE9BQUEsRUFBUztJQUNQeEYsS0FBQSxFQUFPO0lBQ1A4RCxPQUFBLEVBQVM7SUFDVFMsTUFBQSxFQUFRO0lBQ1JFLFdBQUEsRUFBYTtJQUNiekQsTUFBQSxFQUFRO0lBQ1J5RSxXQUFBLEVBQWE7SUFDYnJFLFNBQUEsRUFBVztJQUNYOEIsUUFBQSxFQUFVO0lBQ1Z3QyxTQUFBLEVBQVc7RUFDYjtFQUNBQyxLQUFBLEVBQU87RUFDUEMsUUFBQSxFQUFVLE9BQU9DLFNBQUEsS0FBYztFQUFBO0VBQUEsQ0FBQW5HLGNBQUEsR0FBQW9HLENBQUEsV0FBY0QsU0FBQSxDQUFVRSxNQUFNO0VBQUE7RUFBQSxDQUFBckcsY0FBQSxHQUFBb0csQ0FBQSxXQUFHO0FBQ2xFO0FBRUE7QUFDQSxNQUFNckcsVUFBQTtBQUFBO0FBQUEsY0FBQUMsY0FBQSxHQUFBRSxDQUFBLFFBQWEsSUFBQW9HLE1BQUEsQ0FBQUMsYUFBYSxFQUE2QkMsU0FBQTtBQUs3RDtBQUFBO0FBQUF4RyxjQUFBLEdBQUFFLENBQUE7QUFDQSxNQUFNdUcsVUFBQSxHQUFhQSxDQUFDQyxLQUFBLEVBQWlCQyxNQUFBO0VBQUE7RUFBQTNHLGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDbkMsSUFBSTtJQUFBO0lBQUFGLGNBQUEsR0FBQUUsQ0FBQTtJQUNGLFFBQVF5RyxNQUFBLENBQU9uQyxJQUFJO01BQ2pCO01BQ0EsS0FBSztRQUFBO1FBQUF4RSxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUnBHLEtBQUEsRUFBTyxDLEdBQUlvRyxLQUFBLENBQU1wRyxLQUFLLEVBQUU7WUFBRSxHQUFHcUcsTUFBQSxDQUFPQyxPQUFPO1lBQUVyRyxFQUFBLEVBQUlTLElBQUEsQ0FBSzZGLEdBQUcsR0FBR0MsUUFBUTtVQUFHO1FBQ3pFO01BQ0YsS0FBSztRQUFBO1FBQUE5RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUnBHLEtBQUEsRUFBT29HLEtBQUEsQ0FBTXBHLEtBQUssQ0FBQ3lHLEdBQUcsQ0FBRUMsSUFBQSxJQUN0QjtZQUFBO1lBQUFoSCxjQUFBLEdBQUFDLENBQUE7WUFBQUQsY0FBQSxHQUFBRSxDQUFBO1lBQUEsT0FBQThHLElBQUEsQ0FBS3pHLEVBQUUsS0FBS29HLE1BQUEsQ0FBT0MsT0FBTyxDQUFDckcsRUFBRTtZQUFBO1lBQUEsQ0FBQVAsY0FBQSxHQUFBb0csQ0FBQSxXQUFHO2NBQUUsR0FBR1ksSUFBSTtjQUFFLEdBQUdMLE1BQUEsQ0FBT0MsT0FBTyxDQUFDSTtZQUFLO1lBQUE7WUFBQSxDQUFBaEgsY0FBQSxHQUFBb0csQ0FBQSxXQUFJWSxJQUFBO1VBQUE7UUFFMUU7TUFDRixLQUFLO1FBQUE7UUFBQWhILGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNScEcsS0FBQSxFQUFPb0csS0FBQSxDQUFNcEcsS0FBSyxDQUFDMkcsTUFBTSxDQUFFRCxJQUFBLElBQVM7WUFBQTtZQUFBaEgsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUE4RyxJQUFBLENBQUt6RyxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU87VUFBUCxDQUFPO1FBQ2hFO01BQ0YsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUnBHLEtBQUE7VUFBTztVQUFBLENBQUFOLGNBQUEsR0FBQW9HLENBQUEsV0FBQU8sTUFBQSxDQUFPQyxPQUFPO1VBQUE7VUFBQSxDQUFBNUcsY0FBQSxHQUFBb0csQ0FBQSxXQUFJLEVBQUU7VUFDM0JOLE9BQUEsRUFBUztZQUFFLEdBQUdZLEtBQUEsQ0FBTVosT0FBTztZQUFFeEYsS0FBQSxFQUFPO1VBQU07UUFDNUM7TUFDRixLQUFLO1FBQUE7UUFBQU4sY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JaLE9BQUEsRUFBUztZQUFFLEdBQUdZLEtBQUEsQ0FBTVosT0FBTztZQUFFeEYsS0FBQSxFQUFPcUcsTUFBQSxDQUFPQztVQUFRO1FBQ3JEO01BQ0YsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUnBHLEtBQUEsRUFBT29HLEtBQUEsQ0FBTXBHLEtBQUssQ0FBQ3lHLEdBQUcsQ0FBRUMsSUFBQSxJQUN0QjtZQUFBO1lBQUFoSCxjQUFBLEdBQUFDLENBQUE7WUFBQUQsY0FBQSxHQUFBRSxDQUFBO1lBQUEsT0FBQThHLElBQUEsQ0FBS3pHLEVBQUUsS0FBS29HLE1BQUEsQ0FBT0MsT0FBTztZQUFBO1lBQUEsQ0FBQTVHLGNBQUEsR0FBQW9HLENBQUEsV0FDdEI7Y0FBRSxHQUFHWSxJQUFJO2NBQUVuRyxNQUFBLEVBQVFtRyxJQUFBLENBQUtuRyxNQUFNLEtBQUs7Y0FBQTtjQUFBLENBQUFiLGNBQUEsR0FBQW9HLENBQUEsV0FBYztjQUFBO2NBQUEsQ0FBQXBHLGNBQUEsR0FBQW9HLENBQUEsV0FBWTtjQUFhbEYsVUFBQSxFQUFZLElBQUlGLElBQUEsR0FBT0MsV0FBVztZQUFHO1lBQUE7WUFBQSxDQUFBakIsY0FBQSxHQUFBb0csQ0FBQSxXQUMvR1ksSUFBQTtVQUFBO1FBRVI7TUFDRixLQUFLO1FBQUE7UUFBQWhILGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNScEcsS0FBQSxFQUFPb0csS0FBQSxDQUFNcEcsS0FBSyxDQUFDeUcsR0FBRyxDQUFFQyxJQUFBLElBQ3RCO1lBQUE7WUFBQWhILGNBQUEsR0FBQUMsQ0FBQTtZQUFBRCxjQUFBLEdBQUFFLENBQUE7WUFBQSxPQUFBOEcsSUFBQSxDQUFLekcsRUFBRSxLQUFLb0csTUFBQSxDQUFPQyxPQUFPLENBQUNNLE1BQU07WUFBQTtZQUFBLENBQUFsSCxjQUFBLEdBQUFvRyxDQUFBLFdBQzdCO2NBQUUsR0FBR1ksSUFBSTtjQUFFcEcsV0FBQSxFQUFhK0YsTUFBQSxDQUFPQyxPQUFPLENBQUNPLFVBQVU7Y0FBRWpHLFVBQUEsRUFBWSxJQUFJRixJQUFBLEdBQU9DLFdBQVc7WUFBRztZQUFBO1lBQUEsQ0FBQWpCLGNBQUEsR0FBQW9HLENBQUEsV0FDeEZZLElBQUE7VUFBQTtRQUVSO01BQ0YsS0FBSztRQUFBO1FBQUFoSCxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSDtRQUNBLE9BQU87VUFDTCxHQUFHd0c7UUFFTDtNQUNGLEtBQUs7UUFBQTtRQUFBMUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JwRyxLQUFBLEVBQU8sQyxHQUFJb0csS0FBQSxDQUFNcEcsS0FBSyxDQUFDLENBQUM4RyxJQUFJLENBQUMsQ0FBQ0MsQ0FBQSxFQUFHakIsQ0FBQTtZQUFBO1lBQUFwRyxjQUFBLEdBQUFDLENBQUE7WUFDL0IsTUFBTXFILE1BQUE7WUFBQTtZQUFBLENBQUF0SCxjQUFBLEdBQUFFLENBQUEsUUFBU3lHLE1BQUEsQ0FBT0MsT0FBTztZQUFBO1lBQUE1RyxjQUFBLEdBQUFFLENBQUE7WUFDN0IsSUFBSW9ILE1BQUEsS0FBVyxXQUFXO2NBQUE7Y0FBQXRILGNBQUEsR0FBQW9HLENBQUE7Y0FBQXBHLGNBQUEsR0FBQUUsQ0FBQTtjQUN4QixPQUFPLElBQUljLElBQUE7Y0FBSztjQUFBLENBQUFoQixjQUFBLEdBQUFvRyxDQUFBLFdBQUFpQixDQUFBLENBQUUzRyxRQUFRO2NBQUE7Y0FBQSxDQUFBVixjQUFBLEdBQUFvRyxDQUFBLFdBQUksSUFBR21CLE9BQU8sS0FBSyxJQUFJdkcsSUFBQTtjQUFLO2NBQUEsQ0FBQWhCLGNBQUEsR0FBQW9HLENBQUEsV0FBQUEsQ0FBQSxDQUFFMUYsUUFBUTtjQUFBO2NBQUEsQ0FBQVYsY0FBQSxHQUFBb0csQ0FBQSxXQUFJLElBQUdtQixPQUFPO1lBQ2hGLE9BQU87Y0FBQTtjQUFBdkgsY0FBQSxHQUFBb0csQ0FBQTtjQUFBcEcsY0FBQSxHQUFBRSxDQUFBO2NBQUEsSUFBSW9ILE1BQUEsS0FBVyxZQUFZO2dCQUFBO2dCQUFBdEgsY0FBQSxHQUFBb0csQ0FBQTtnQkFDaEMsTUFBTW9CLGFBQUE7Z0JBQUE7Z0JBQUEsQ0FBQXhILGNBQUEsR0FBQUUsQ0FBQSxRQUFnQjtrQkFBRSxRQUFRO2tCQUFHLFVBQVU7a0JBQUcsT0FBTztnQkFBRTtnQkFBQTtnQkFBQUYsY0FBQSxHQUFBRSxDQUFBO2dCQUN6RCxPQUFPO2dCQUFDO2dCQUFBLENBQUFGLGNBQUEsR0FBQW9HLENBQUEsV0FBQW9CLGFBQWEsQ0FBQ3BCLENBQUEsQ0FBRXpGLFFBQVEsQ0FBK0I7Z0JBQUE7Z0JBQUEsQ0FBQVgsY0FBQSxHQUFBb0csQ0FBQSxXQUFJO2dCQUFNO2dCQUFBLENBQUFwRyxjQUFBLEdBQUFvRyxDQUFBLFdBQUFvQixhQUFhLENBQUNILENBQUEsQ0FBRTFHLFFBQVEsQ0FBK0I7Z0JBQUE7Z0JBQUEsQ0FBQVgsY0FBQSxHQUFBb0csQ0FBQSxXQUFJO2NBQ3RJLE9BQU87Z0JBQUE7Z0JBQUFwRyxjQUFBLEdBQUFvRyxDQUFBO2dCQUFBcEcsY0FBQSxHQUFBRSxDQUFBO2dCQUFBLElBQUlvSCxNQUFBLEtBQVcsYUFBYTtrQkFBQTtrQkFBQXRILGNBQUEsR0FBQW9HLENBQUE7a0JBQUFwRyxjQUFBLEdBQUFFLENBQUE7a0JBQ2pDLE9BQU8sSUFBSWMsSUFBQTtrQkFBSztrQkFBQSxDQUFBaEIsY0FBQSxHQUFBb0csQ0FBQSxXQUFBQSxDQUFBLENBQUVyRixVQUFVO2tCQUFBO2tCQUFBLENBQUFmLGNBQUEsR0FBQW9HLENBQUEsV0FBSSxJQUFHbUIsT0FBTyxLQUFLLElBQUl2RyxJQUFBO2tCQUFLO2tCQUFBLENBQUFoQixjQUFBLEdBQUFvRyxDQUFBLFdBQUFpQixDQUFBLENBQUV0RyxVQUFVO2tCQUFBO2tCQUFBLENBQUFmLGNBQUEsR0FBQW9HLENBQUEsV0FBSSxJQUFHbUIsT0FBTztnQkFDcEY7Z0JBQUE7Z0JBQUE7a0JBQUF2SCxjQUFBLEdBQUFvRyxDQUFBO2dCQUFBO2NBQUE7WUFBQTtZQUFBO1lBQUFwRyxjQUFBLEdBQUFFLENBQUE7WUFDQSxPQUFPO1VBQ1Q7UUFDRjtNQUVGO01BQ0EsS0FBSztRQUFBO1FBQUFGLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSdEMsT0FBQSxFQUFTLEMsR0FBSXNDLEtBQUEsQ0FBTXRDLE9BQU8sRUFBRXVDLE1BQUEsQ0FBT0MsT0FBTztRQUM1QztNQUNGLEtBQUs7UUFBQTtRQUFBNUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1J0QyxPQUFBLEVBQVNzQyxLQUFBLENBQU10QyxPQUFPLENBQUMyQyxHQUFHLENBQUVVLE1BQUEsSUFDMUI7WUFBQTtZQUFBekgsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUF1SCxNQUFBLENBQU9sSCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU8sQ0FBQ3JHLEVBQUU7WUFBQTtZQUFBLENBQUFQLGNBQUEsR0FBQW9HLENBQUEsV0FBRztjQUFFLEdBQUdxQixNQUFNO2NBQUUsR0FBR2QsTUFBQSxDQUFPQyxPQUFPLENBQUNhO1lBQU87WUFBQTtZQUFBLENBQUF6SCxjQUFBLEdBQUFvRyxDQUFBLFdBQUlxQixNQUFBO1VBQUE7UUFFaEY7TUFDRixLQUFLO1FBQUE7UUFBQXpILGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSdEMsT0FBQSxFQUFTc0MsS0FBQSxDQUFNdEMsT0FBTyxDQUFDNkMsTUFBTSxDQUFFUSxNQUFBLElBQVc7WUFBQTtZQUFBekgsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUF1SCxNQUFBLENBQU9sSCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU87VUFBUCxDQUFPO1FBQ3hFO01BQ0YsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUnRDLE9BQUE7VUFBUztVQUFBLENBQUFwRSxjQUFBLEdBQUFvRyxDQUFBLFdBQUFPLE1BQUEsQ0FBT0MsT0FBTztVQUFBO1VBQUEsQ0FBQTVHLGNBQUEsR0FBQW9HLENBQUEsV0FBSSxFQUFFO1VBQzdCTixPQUFBLEVBQVM7WUFBRSxHQUFHWSxLQUFBLENBQU1aLE9BQU87WUFBRTFCLE9BQUEsRUFBUztVQUFNO1FBQzlDO01BQ0YsS0FBSztRQUFBO1FBQUFwRSxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUlosT0FBQSxFQUFTO1lBQUUsR0FBR1ksS0FBQSxDQUFNWixPQUFPO1lBQUUxQixPQUFBLEVBQVN1QyxNQUFBLENBQU9DO1VBQVE7UUFDdkQ7TUFDRixLQUFLO1FBQUE7UUFBQTVHLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSdEMsT0FBQSxFQUFTc0MsS0FBQSxDQUFNdEMsT0FBTyxDQUFDMkMsR0FBRyxDQUFFVSxNQUFBLElBQzFCO1lBQUE7WUFBQXpILGNBQUEsR0FBQUMsQ0FBQTtZQUFBRCxjQUFBLEdBQUFFLENBQUE7WUFBQSxPQUFBdUgsTUFBQSxDQUFPbEgsRUFBRSxLQUFLb0csTUFBQSxDQUFPQyxPQUFPLENBQUNoRixRQUFRO1lBQUE7WUFBQSxDQUFBNUIsY0FBQSxHQUFBb0csQ0FBQSxXQUNqQztjQUNFLEdBQUdxQixNQUFNO2NBQ1R2RCxLQUFBLEVBQU8sQztjQUNEO2NBQUEsQ0FBQWxFLGNBQUEsR0FBQW9HLENBQUEsV0FBQXFCLE1BQUEsQ0FBT3ZELEtBQUs7Y0FBQTtjQUFBLENBQUFsRSxjQUFBLEdBQUFvRyxDQUFBLFdBQUksRUFBRSxJQUN0QjtnQkFDRSxHQUFHTyxNQUFBLENBQU9DLE9BQU8sQ0FBQ2MsSUFBSTtnQkFDdEJoRCxJQUFBLEVBQU0sSUFBSTFELElBQUEsR0FBT0MsV0FBVyxHQUFHMEcsS0FBSyxDQUFDLElBQUksQ0FBQztjQUM1QztZQUVKO1lBQUE7WUFBQSxDQUFBM0gsY0FBQSxHQUFBb0csQ0FBQSxXQUNBcUIsTUFBQTtVQUFBO1FBRVI7TUFFRjtNQUNBLEtBQUs7UUFBQTtRQUFBekgsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1J0QyxPQUFBLEVBQVNzQyxLQUFBLENBQU10QyxPQUFPLENBQUMyQyxHQUFHLENBQUVVLE1BQUEsSUFDMUI7WUFBQTtZQUFBekgsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUF1SCxNQUFBLENBQU9sSCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU8sQ0FBQ2hGLFFBQVE7WUFBQTtZQUFBLENBQUE1QixjQUFBLEdBQUFvRyxDQUFBLFdBQ2pDO2NBQ0UsR0FBR3FCLE1BQU07Y0FDVDlDLFFBQUEsRUFBVSxDO2NBQ0o7Y0FBQSxDQUFBM0UsY0FBQSxHQUFBb0csQ0FBQSxXQUFBcUIsTUFBQSxDQUFPOUMsUUFBUTtjQUFBO2NBQUEsQ0FBQTNFLGNBQUEsR0FBQW9HLENBQUEsV0FBSSxFQUFFLElBQ3pCO2dCQUNFLEdBQUdPLE1BQUEsQ0FBT0MsT0FBTztnQkFDakJyRyxFQUFBLEVBQUlTLElBQUEsQ0FBSzZGLEdBQUcsR0FBR0MsUUFBUTtnQkFDdkIvRixVQUFBLEVBQVksSUFBSUMsSUFBQSxHQUFPQyxXQUFXO2dCQUNsQ0MsVUFBQSxFQUFZLElBQUlGLElBQUEsR0FBT0MsV0FBVztjQUNwQztZQUVKO1lBQUE7WUFBQSxDQUFBakIsY0FBQSxHQUFBb0csQ0FBQSxXQUNBcUIsTUFBQTtVQUFBO1FBRVI7TUFFRjtNQUNBLEtBQUs7UUFBQTtRQUFBekgsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1I3QixNQUFBLEVBQVEsQyxHQUFJNkIsS0FBQSxDQUFNN0IsTUFBTSxFQUFFO1lBQUUsR0FBRzhCLE1BQUEsQ0FBT0MsT0FBTztZQUFFckcsRUFBQSxFQUFJUyxJQUFBLENBQUs2RixHQUFHLEdBQUdDLFFBQVE7VUFBRztRQUMzRTtNQUNGLEtBQUs7UUFBQTtRQUFBOUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1I3QixNQUFBLEVBQVE2QixLQUFBLENBQU03QixNQUFNLENBQUNrQyxHQUFHLENBQUVhLEtBQUEsSUFDeEI7WUFBQTtZQUFBNUgsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUEwSCxLQUFBLENBQU1ySCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU8sQ0FBQ3JHLEVBQUU7WUFBQTtZQUFBLENBQUFQLGNBQUEsR0FBQW9HLENBQUEsV0FBRztjQUFFLEdBQUd3QixLQUFLO2NBQUUsR0FBR2pCLE1BQUEsQ0FBT0MsT0FBTyxDQUFDZ0I7WUFBTTtZQUFBO1lBQUEsQ0FBQTVILGNBQUEsR0FBQW9HLENBQUEsV0FBSXdCLEtBQUE7VUFBQTtRQUU3RTtNQUNGLEtBQUs7UUFBQTtRQUFBNUgsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1I3QixNQUFBLEVBQVE2QixLQUFBLENBQU03QixNQUFNLENBQUNvQyxNQUFNLENBQUVXLEtBQUEsSUFBVTtZQUFBO1lBQUE1SCxjQUFBLEdBQUFDLENBQUE7WUFBQUQsY0FBQSxHQUFBRSxDQUFBO1lBQUEsT0FBQTBILEtBQUEsQ0FBTXJILEVBQUUsS0FBS29HLE1BQUEsQ0FBT0MsT0FBTztVQUFQLENBQU87UUFDcEU7TUFDRixLQUFLO1FBQUE7UUFBQTVHLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSN0IsTUFBQTtVQUFRO1VBQUEsQ0FBQTdFLGNBQUEsR0FBQW9HLENBQUEsV0FBQU8sTUFBQSxDQUFPQyxPQUFPO1VBQUE7VUFBQSxDQUFBNUcsY0FBQSxHQUFBb0csQ0FBQSxXQUFJLEVBQUU7VUFDNUJOLE9BQUEsRUFBUztZQUFFLEdBQUdZLEtBQUEsQ0FBTVosT0FBTztZQUFFakIsTUFBQSxFQUFRO1VBQU07UUFDN0M7TUFDRixLQUFLO1FBQUE7UUFBQTdFLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSWixPQUFBLEVBQVM7WUFBRSxHQUFHWSxLQUFBLENBQU1aLE9BQU87WUFBRWpCLE1BQUEsRUFBUThCLE1BQUEsQ0FBT0M7VUFBUTtRQUN0RDtNQUVGO01BQ0EsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUjNCLFdBQUE7VUFBYTtVQUFBLENBQUEvRSxjQUFBLEdBQUFvRyxDQUFBLFdBQUFPLE1BQUEsQ0FBT0MsT0FBTztVQUFBO1VBQUEsQ0FBQTVHLGNBQUEsR0FBQW9HLENBQUEsV0FBSSxFQUFFO1VBQ2pDTixPQUFBLEVBQVM7WUFBRSxHQUFHWSxLQUFBLENBQU1aLE9BQU87WUFBRWYsV0FBQSxFQUFhO1VBQU07UUFDbEQ7TUFDRixLQUFLO1FBQUE7UUFBQS9FLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSWixPQUFBLEVBQVM7WUFBRSxHQUFHWSxLQUFBLENBQU1aLE9BQU87WUFBRWYsV0FBQSxFQUFhNEIsTUFBQSxDQUFPQztVQUFRO1FBQzNEO01BRUY7TUFDQSxLQUFLO1FBQUE7UUFBQTVHLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNScEYsTUFBQSxFQUFRLEMsR0FBSW9GLEtBQUEsQ0FBTXBGLE1BQU0sRUFBRXFGLE1BQUEsQ0FBT0MsT0FBTztRQUMxQztNQUNGLEtBQUs7UUFBQTtRQUFBNUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JwRixNQUFBLEVBQVFvRixLQUFBLENBQU1wRixNQUFNLENBQUN5RixHQUFHLENBQUVjLEtBQUEsSUFDeEI7WUFBQTtZQUFBN0gsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUEySCxLQUFBLENBQU10SCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU8sQ0FBQ3JHLEVBQUU7WUFBQTtZQUFBLENBQUFQLGNBQUEsR0FBQW9HLENBQUEsV0FBRztjQUFFLEdBQUd5QixLQUFLO2NBQUUsR0FBR2xCLE1BQUEsQ0FBT0MsT0FBTyxDQUFDaUI7WUFBTTtZQUFBO1lBQUEsQ0FBQTdILGNBQUEsR0FBQW9HLENBQUEsV0FBSXlCLEtBQUE7VUFBQTtRQUU3RTtNQUNGLEtBQUs7UUFBQTtRQUFBN0gsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JwRixNQUFBLEVBQVFvRixLQUFBLENBQU1wRixNQUFNLENBQUMyRixNQUFNLENBQUVZLEtBQUEsSUFBVTtZQUFBO1lBQUE3SCxjQUFBLEdBQUFDLENBQUE7WUFBQUQsY0FBQSxHQUFBRSxDQUFBO1lBQUEsT0FBQTJILEtBQUEsQ0FBTXRILEVBQUUsS0FBS29HLE1BQUEsQ0FBT0MsT0FBTztVQUFQLENBQU87UUFDcEU7TUFDRixLQUFLO1FBQUE7UUFBQTVHLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNScEYsTUFBQTtVQUFRO1VBQUEsQ0FBQXRCLGNBQUEsR0FBQW9HLENBQUEsV0FBQU8sTUFBQSxDQUFPQyxPQUFPO1VBQUE7VUFBQSxDQUFBNUcsY0FBQSxHQUFBb0csQ0FBQSxXQUFJLEVBQUU7VUFDNUJOLE9BQUEsRUFBUztZQUFFLEdBQUdZLEtBQUEsQ0FBTVosT0FBTztZQUFFeEUsTUFBQSxFQUFRO1VBQU07UUFDN0M7TUFDRixLQUFLO1FBQUE7UUFBQXRCLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSWixPQUFBLEVBQVM7WUFBRSxHQUFHWSxLQUFBLENBQU1aLE9BQU87WUFBRXhFLE1BQUEsRUFBUXFGLE1BQUEsQ0FBT0M7VUFBUTtRQUN0RDtNQUVGO01BQ0EsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUmpGLGNBQUEsRUFBZ0IsQyxHQUFJaUYsS0FBQSxDQUFNakYsY0FBYyxFQUFFa0YsTUFBQSxDQUFPQyxPQUFPO1FBQzFEO01BQ0YsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUmpGLGNBQUEsRUFBZ0JpRixLQUFBLENBQU1qRixjQUFjLENBQUNzRixHQUFHLENBQUVlLFFBQUEsSUFDeEM7WUFBQTtZQUFBOUgsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUE0SCxRQUFBLENBQVN2SCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU8sQ0FBQ3JHLEVBQUU7WUFBQTtZQUFBLENBQUFQLGNBQUEsR0FBQW9HLENBQUEsV0FBRztjQUFFLEdBQUcwQixRQUFRO2NBQUUsR0FBR25CLE1BQUEsQ0FBT0MsT0FBTyxDQUFDa0I7WUFBUztZQUFBO1lBQUEsQ0FBQTlILGNBQUEsR0FBQW9HLENBQUEsV0FBSTBCLFFBQUE7VUFBQTtRQUV0RjtNQUNGLEtBQUs7UUFBQTtRQUFBOUgsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JqRixjQUFBLEVBQWdCaUYsS0FBQSxDQUFNakYsY0FBYyxDQUFDd0YsTUFBTSxDQUFFYSxRQUFBLElBQWE7WUFBQTtZQUFBOUgsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUE0SCxRQUFBLENBQVN2SCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU87VUFBUCxDQUFPO1FBQzFGO01BQ0YsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUmpGLGNBQUE7VUFBZ0I7VUFBQSxDQUFBekIsY0FBQSxHQUFBb0csQ0FBQSxXQUFBTyxNQUFBLENBQU9DLE9BQU87VUFBQTtVQUFBLENBQUE1RyxjQUFBLEdBQUFvRyxDQUFBLFdBQUksRUFBRTtVQUNwQ04sT0FBQSxFQUFTO1lBQUUsR0FBR1ksS0FBQSxDQUFNWixPQUFPO1lBQUVDLFdBQUEsRUFBYTtVQUFNO1FBQ2xEO01BQ0YsS0FBSztRQUFBO1FBQUEvRixjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUlosT0FBQSxFQUFTO1lBQUUsR0FBR1ksS0FBQSxDQUFNWixPQUFPO1lBQUVDLFdBQUEsRUFBYVksTUFBQSxDQUFPQztVQUFRO1FBQzNEO01BRUY7TUFDQSxLQUFLO1FBQUE7UUFBQTVHLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSaEYsU0FBQSxFQUFXLEMsR0FBSWdGLEtBQUEsQ0FBTWhGLFNBQVMsRUFBRWlGLE1BQUEsQ0FBT0MsT0FBTztRQUNoRDtNQUNGLEtBQUs7UUFBQTtRQUFBNUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JoRixTQUFBLEVBQVdnRixLQUFBLENBQU1oRixTQUFTLENBQUNxRixHQUFHLENBQUVnQixRQUFBLElBQzlCO1lBQUE7WUFBQS9ILGNBQUEsR0FBQUMsQ0FBQTtZQUFBRCxjQUFBLEdBQUFFLENBQUE7WUFBQSxPQUFBNkgsUUFBQSxDQUFTeEgsRUFBRSxLQUFLb0csTUFBQSxDQUFPQyxPQUFPLENBQUNyRyxFQUFFO1lBQUE7WUFBQSxDQUFBUCxjQUFBLEdBQUFvRyxDQUFBLFdBQUc7Y0FBRSxHQUFHMkIsUUFBUTtjQUFFLEdBQUdwQixNQUFBLENBQU9DLE9BQU8sQ0FBQ21CO1lBQVM7WUFBQTtZQUFBLENBQUEvSCxjQUFBLEdBQUFvRyxDQUFBLFdBQUkyQixRQUFBO1VBQUE7UUFFdEY7TUFDRixLQUFLO1FBQUE7UUFBQS9ILGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSaEYsU0FBQSxFQUFXZ0YsS0FBQSxDQUFNaEYsU0FBUyxDQUFDdUYsTUFBTSxDQUFFYyxRQUFBLElBQWE7WUFBQTtZQUFBL0gsY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUE2SCxRQUFBLENBQVN4SCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU87VUFBUCxDQUFPO1FBQ2hGO01BQ0YsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUmhGLFNBQUE7VUFBVztVQUFBLENBQUExQixjQUFBLEdBQUFvRyxDQUFBLFdBQUFPLE1BQUEsQ0FBT0MsT0FBTztVQUFBO1VBQUEsQ0FBQTVHLGNBQUEsR0FBQW9HLENBQUEsV0FBSSxFQUFFO1VBQy9CTixPQUFBLEVBQVM7WUFBRSxHQUFHWSxLQUFBLENBQU1aLE9BQU87WUFBRXBFLFNBQUEsRUFBVztVQUFNO1FBQ2hEO01BQ0YsS0FBSztRQUFBO1FBQUExQixjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUlosT0FBQSxFQUFTO1lBQUUsR0FBR1ksS0FBQSxDQUFNWixPQUFPO1lBQUVwRSxTQUFBLEVBQVdpRixNQUFBLENBQU9DO1VBQVE7UUFDekQ7TUFFRjtNQUNBLEtBQUs7UUFBQTtRQUFBNUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JsRCxRQUFBLEVBQVUsQyxHQUFJa0QsS0FBQSxDQUFNbEQsUUFBUSxFQUFFbUQsTUFBQSxDQUFPQyxPQUFPO1FBQzlDO01BQ0YsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUmxELFFBQUEsRUFBVWtELEtBQUEsQ0FBTWxELFFBQVEsQ0FBQ3VELEdBQUcsQ0FBRWlCLE9BQUEsSUFDNUI7WUFBQTtZQUFBaEksY0FBQSxHQUFBQyxDQUFBO1lBQUFELGNBQUEsR0FBQUUsQ0FBQTtZQUFBLE9BQUE4SCxPQUFBLENBQVF6SCxFQUFFLEtBQUtvRyxNQUFBLENBQU9DLE9BQU8sQ0FBQ3JHLEVBQUU7WUFBQTtZQUFBLENBQUFQLGNBQUEsR0FBQW9HLENBQUEsV0FBRztjQUFFLEdBQUc0QixPQUFPO2NBQUUsR0FBR3JCLE1BQUEsQ0FBT0MsT0FBTyxDQUFDb0I7WUFBUTtZQUFBO1lBQUEsQ0FBQWhJLGNBQUEsR0FBQW9HLENBQUEsV0FBSTRCLE9BQUE7VUFBQTtRQUVuRjtNQUNGLEtBQUs7UUFBQTtRQUFBaEksY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JsRCxRQUFBLEVBQVVrRCxLQUFBLENBQU1sRCxRQUFRLENBQUN5RCxNQUFNLENBQUVlLE9BQUEsSUFBWTtZQUFBO1lBQUFoSSxjQUFBLEdBQUFDLENBQUE7WUFBQUQsY0FBQSxHQUFBRSxDQUFBO1lBQUEsT0FBQThILE9BQUEsQ0FBUXpILEVBQUUsS0FBS29HLE1BQUEsQ0FBT0MsT0FBTztVQUFQLENBQU87UUFDNUU7TUFDRixLQUFLO1FBQUE7UUFBQTVHLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSbEQsUUFBQTtVQUFVO1VBQUEsQ0FBQXhELGNBQUEsR0FBQW9HLENBQUEsV0FBQU8sTUFBQSxDQUFPQyxPQUFPO1VBQUE7VUFBQSxDQUFBNUcsY0FBQSxHQUFBb0csQ0FBQSxXQUFJLEVBQUU7VUFDOUJOLE9BQUEsRUFBUztZQUFFLEdBQUdZLEtBQUEsQ0FBTVosT0FBTztZQUFFdEMsUUFBQSxFQUFVO1VBQU07UUFDL0M7TUFDRixLQUFLO1FBQUE7UUFBQXhELGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNILE9BQU87VUFDTCxHQUFHd0csS0FBSztVQUNSWixPQUFBLEVBQVM7WUFBRSxHQUFHWSxLQUFBLENBQU1aLE9BQU87WUFBRXRDLFFBQUEsRUFBVW1ELE1BQUEsQ0FBT0M7VUFBUTtRQUN4RDtNQUVGO01BQ0EsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUnhCLGFBQUEsRUFBZTtZQUFFLEdBQUd3QixLQUFBLENBQU14QixhQUFhO1lBQUUsR0FBR3lCLE1BQUEsQ0FBT0M7VUFBUTtRQUM3RDtNQUVGO01BQ0EsS0FBSztRQUFBO1FBQUE1RyxjQUFBLEdBQUFvRyxDQUFBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDSCxPQUFPO1VBQ0wsR0FBR3dHLEtBQUs7VUFDUmIseUJBQUEsRUFBMkJjLE1BQUEsQ0FBT0M7UUFDcEM7TUFFRjtNQUNBLEtBQUs7UUFBQTtRQUFBNUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JULEtBQUEsRUFBT1UsTUFBQSxDQUFPQztRQUNoQjtNQUNGLEtBQUs7UUFBQTtRQUFBNUcsY0FBQSxHQUFBb0csQ0FBQTtRQUFBcEcsY0FBQSxHQUFBRSxDQUFBO1FBQ0gsT0FBTztVQUNMLEdBQUd3RyxLQUFLO1VBQ1JSLFFBQUEsRUFBVVMsTUFBQSxDQUFPQztRQUNuQjtNQUVGO1FBQUE7UUFBQTVHLGNBQUEsR0FBQW9HLENBQUE7UUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtRQUNFLE9BQU93RyxLQUFBO0lBQ1g7RUFDRixFQUFFLE9BQU9ULEtBQUEsRUFBTztJQUFBO0lBQUFqRyxjQUFBLEdBQUFFLENBQUE7SUFDZCtILE9BQUEsQ0FBUWhDLEtBQUssQ0FBQyxrQkFBa0JBLEtBQUE7SUFBQTtJQUFBakcsY0FBQSxHQUFBRSxDQUFBO0lBQ2hDLE9BQU87TUFDTCxHQUFHd0csS0FBSztNQUNSVCxLQUFBLEVBQU87SUFDVDtFQUNGO0FBQ0Y7QUFBQTtBQUFBakcsY0FBQSxHQUFBRSxDQUFBO0FBR08sTUFBTUMsV0FBQSxHQUFtRkEsQ0FBQztFQUFFK0gsUUFBUTtFQUFFN0gsWUFBQSxFQUFjOEg7QUFBa0IsQ0FBRTtFQUFBO0VBQUFuSSxjQUFBLEdBQUFDLENBQUE7RUFDN0ksTUFBTW1JLGtCQUFBO0VBQUE7RUFBQSxDQUFBcEksY0FBQSxHQUFBRSxDQUFBLFNBQXFCaUksa0JBQUE7RUFBQTtFQUFBLENBQUFuSSxjQUFBLEdBQUFvRyxDQUFBLFdBQXFCO0lBQUUsR0FBRy9GLFlBQVk7SUFBRSxHQUFHOEg7RUFBbUI7RUFBQTtFQUFBLENBQUFuSSxjQUFBLEdBQUFvRyxDQUFBLFdBQUkvRixZQUFBO0VBQzdGLE1BQU0sQ0FBQ3FHLEtBQUEsRUFBTzJCLFFBQUEsQ0FBUztFQUFBO0VBQUEsQ0FBQXJJLGNBQUEsR0FBQUUsQ0FBQSxTQUFHLElBQUFvRyxNQUFBLENBQUFnQyxVQUFVLEVBQUM3QixVQUFBLEVBQVkyQixrQkFBQTtFQUNqRCxNQUFNRyxVQUFBO0VBQUE7RUFBQSxDQUFBdkksY0FBQSxHQUFBRSxDQUFBLFNBQWFpSSxrQkFBQSxLQUF1QjNCLFNBQUE7RUFDMUMsTUFBTSxDQUFDZ0MsZUFBQSxFQUFpQkMsa0JBQUEsQ0FBbUI7RUFBQTtFQUFBLENBQUF6SSxjQUFBLEdBQUFFLENBQUEsU0FBRyxJQUFBb0csTUFBQSxDQUFBb0MsUUFBUSxFQUFTO0VBQy9ELE1BQU0sQ0FBQ0MsU0FBQSxFQUFXQyxZQUFBLENBQWE7RUFBQTtFQUFBLENBQUE1SSxjQUFBLEdBQUFFLENBQUEsU0FBRyxJQUFBb0csTUFBQSxDQUFBb0MsUUFBUSxFQUFtQjtFQUU3RCxNQUFNRyxZQUFBO0VBQUE7RUFBQSxDQUFBN0ksY0FBQSxHQUFBRSxDQUFBLFNBQWUsSUFBQW9HLE1BQUEsQ0FBQXdDLE9BQU8sRUFDMUIsTUFBTztJQUFBO0lBQUE5SSxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQUE7TUFDTHdHLEtBQUE7TUFDQTJCLFFBQUE7TUFDQUcsZUFBQTtNQUNBQyxrQkFBQTtNQUNBRSxTQUFBO01BQ0FDO0lBQ0Y7RUFBQSxHQUNBLENBQUNsQyxLQUFBLEVBQU8yQixRQUFBLEVBQVVHLGVBQUEsRUFBaUJHLFNBQUEsQ0FBVTtFQUcvQztFQUFBO0VBQUEzSSxjQUFBLEdBQUFFLENBQUE7RUFDQSxJQUFBb0csTUFBQSxDQUFBeUMsU0FBUyxFQUFDO0lBQUE7SUFBQS9JLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDUjtJQUNBLElBQUlxSSxVQUFBLEVBQVk7TUFBQTtNQUFBdkksY0FBQSxHQUFBb0csQ0FBQTtNQUFBcEcsY0FBQSxHQUFBRSxDQUFBO01BQ2Q7SUFDRjtJQUFBO0lBQUE7TUFBQUYsY0FBQSxHQUFBb0csQ0FBQTtJQUFBO0lBQUFwRyxjQUFBLEdBQUFFLENBQUE7SUFFQSxNQUFNOEksY0FBQSxHQUFpQixNQUFBQSxDQUFBO01BQUE7TUFBQWhKLGNBQUEsR0FBQUMsQ0FBQTtNQUFBRCxjQUFBLEdBQUFFLENBQUE7TUFDckIsSUFBSTtRQUNGO1FBQ0EsTUFBTStJLGlCQUFBO1FBQUE7UUFBQSxDQUFBakosY0FBQSxHQUFBRSxDQUFBLFNBQW9CZ0osWUFBQSxDQUFhQyxPQUFPLENBQUM7UUFBQTtRQUFBbkosY0FBQSxHQUFBRSxDQUFBO1FBQy9DLElBQUkrSSxpQkFBQSxFQUFtQjtVQUFBO1VBQUFqSixjQUFBLEdBQUFvRyxDQUFBO1VBQUFwRyxjQUFBLEdBQUFFLENBQUE7VUFDckIsSUFBSTtZQUNGLE1BQU15SSxTQUFBO1lBQUE7WUFBQSxDQUFBM0ksY0FBQSxHQUFBRSxDQUFBLFNBQVlrSixJQUFBLENBQUtDLEtBQUssQ0FBQ0osaUJBQUE7WUFBQTtZQUFBakosY0FBQSxHQUFBRSxDQUFBO1lBQzdCK0gsT0FBQSxDQUFRcUIsR0FBRyxDQUFDLGdEQUFnRFgsU0FBQTtZQUFBO1lBQUEzSSxjQUFBLEdBQUFFLENBQUE7WUFDNURtSSxRQUFBLENBQVM7Y0FBRTdELElBQUEsRUFBTTtjQUFvQ29DLE9BQUEsRUFBUytCO1lBQVU7WUFDeEU7WUFBQTtZQUFBM0ksY0FBQSxHQUFBRSxDQUFBO1lBQ0FnSixZQUFBLENBQWFLLFVBQVUsQ0FBQztVQUMxQixFQUFFLE9BQU90RCxLQUFBLEVBQU87WUFBQTtZQUFBakcsY0FBQSxHQUFBRSxDQUFBO1lBQ2QrSCxPQUFBLENBQVFoQyxLQUFLLENBQUMsb0NBQW9DQSxLQUFBO1lBQUE7WUFBQWpHLGNBQUEsR0FBQUUsQ0FBQTtZQUNsRGdKLFlBQUEsQ0FBYUssVUFBVSxDQUFDO1VBQzFCO1FBQ0Y7UUFBQTtRQUFBO1VBQUF2SixjQUFBLEdBQUFvRyxDQUFBO1FBQUE7UUFFQTtRQUNBLE1BQU1vRCxXQUFBO1FBQUE7UUFBQSxDQUFBeEosY0FBQSxHQUFBRSxDQUFBLFNBQWN1SixPQUFBLENBQVFDLEdBQUcsQ0FBQ0Msd0JBQXdCO1FBQzlELE1BQU1DLFdBQUE7UUFBQTtRQUFBLENBQUE1SixjQUFBLEdBQUFFLENBQUEsU0FBY3VKLE9BQUEsQ0FBUUMsR0FBRyxDQUFDRyw2QkFBNkI7UUFBQTtRQUFBN0osY0FBQSxHQUFBRSxDQUFBO1FBRXZEO1FBQ0U7UUFBQSxDQUFBRixjQUFBLEdBQUFvRyxDQUFBLFlBQUNvRCxXQUFBO1FBQUE7UUFBQSxDQUFBeEosY0FBQSxHQUFBb0csQ0FBQSxXQUNELENBQUN3RCxXQUFBO1FBQUE7UUFBQSxDQUFBNUosY0FBQSxHQUFBb0csQ0FBQSxXQUNEb0QsV0FBQSxDQUFZTSxRQUFRLENBQUM7UUFBQTtRQUFBLENBQUE5SixjQUFBLEdBQUFvRyxDQUFBLFdBQ3JCd0QsV0FBQSxDQUFZRSxRQUFRLENBQUMsbUJBQ3JCO1VBQUE7VUFBQTlKLGNBQUEsR0FBQW9HLENBQUE7VUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtVQUNBK0gsT0FBQSxDQUFRcUIsR0FBRyxDQUFDO1VBQUE7VUFBQXRKLGNBQUEsR0FBQUUsQ0FBQTtVQUNaO1FBQ0Y7UUFBQTtRQUFBO1VBQUFGLGNBQUEsR0FBQW9HLENBQUE7UUFBQTtRQUVBO1FBQUFwRyxjQUFBLEdBQUFFLENBQUE7UUFDQSxNQUFNNkosUUFBQSxHQUFXLE1BQUFBLENBQU92RixJQUFBLEVBQWNtQyxNQUFBLEVBQWdCcUQsTUFBQTtVQUFBO1VBQUFoSyxjQUFBLEdBQUFDLENBQUE7VUFBQUQsY0FBQSxHQUFBRSxDQUFBO1VBQ3BEbUksUUFBQSxDQUFTO1lBQUU3RCxJQUFBLEVBQU0sT0FBT0EsSUFBQSxVQUFjO1lBQVNvQyxPQUFBLEVBQVM7VUFBSztVQUFBO1VBQUE1RyxjQUFBLEdBQUFFLENBQUE7VUFDN0QsSUFBSTtZQUNGLE1BQU0rSixJQUFBO1lBQUE7WUFBQSxDQUFBakssY0FBQSxHQUFBRSxDQUFBLFNBQU8sTUFBTThKLE1BQUE7WUFBQTtZQUFBaEssY0FBQSxHQUFBRSxDQUFBO1lBQ25CbUksUUFBQSxDQUFTO2NBQUU3RCxJQUFBLEVBQU1tQyxNQUFBO2NBQWVDLE9BQUEsRUFBU3FEO1lBQUs7VUFDaEQsRUFBRSxPQUFPaEUsS0FBQSxFQUFPO1lBQUE7WUFBQWpHLGNBQUEsR0FBQUUsQ0FBQTtZQUNkK0gsT0FBQSxDQUFRaUMsSUFBSSxDQUFDLGtCQUFrQjFGLElBQUEsQ0FBSzJGLFdBQVcsb0NBQW9DLEVBQUVsRSxLQUFBO1lBQUE7WUFBQWpHLGNBQUEsR0FBQUUsQ0FBQTtZQUNyRm1JLFFBQUEsQ0FBUztjQUFFN0QsSUFBQSxFQUFNLE9BQU9BLElBQUEsVUFBYztjQUFTb0MsT0FBQSxFQUFTO1lBQU07VUFDaEU7UUFDRjtRQUFBO1FBQUE1RyxjQUFBLEdBQUFFLENBQUE7UUFFQSxNQUFNa0ssT0FBQSxDQUFRQyxHQUFHLENBQUMsQ0FDaEJOLFFBQUEsQ0FBUyxTQUFTLGFBQWEsTUFBTTtVQUFBO1VBQUEvSixjQUFBLEdBQUFDLENBQUE7VUFBQUQsY0FBQSxHQUFBRSxDQUFBO1VBQUEsT0FBQW9LLFNBQUEsQ0FBQUMsZUFBZSxDQUFDQyxRQUFRO1FBQUEsSUFDN0RULFFBQUEsQ0FBUyxXQUFXLGVBQWUsTUFBTTtVQUFBO1VBQUEvSixjQUFBLEdBQUFDLENBQUE7VUFBQUQsY0FBQSxHQUFBRSxDQUFBO1VBQUEsT0FBQW9LLFNBQUEsQ0FBQUMsZUFBZSxDQUFDRSxVQUFVO1FBQUEsSUFDbkVWLFFBQUEsQ0FBUyxVQUFVLGNBQWMsTUFBTTtVQUFBO1VBQUEvSixjQUFBLEdBQUFDLENBQUE7VUFBQUQsY0FBQSxHQUFBRSxDQUFBO1VBQUEsT0FBQW9LLFNBQUEsQ0FBQUMsZUFBZSxDQUFDRyxTQUFTO1FBQUEsSUFDaEVYLFFBQUEsQ0FBUyxnQkFBZ0Isb0JBQW9CLE1BQU07VUFBQTtVQUFBL0osY0FBQSxHQUFBQyxDQUFBO1VBQUFELGNBQUEsR0FBQUUsQ0FBQTtVQUFBLE9BQUFvSyxTQUFBLENBQUFDLGVBQWUsQ0FBQ0ksY0FBYztRQUFBLEdBTWxGO01BQ0gsRUFBRSxPQUFPMUUsS0FBQSxFQUFPO1FBQUE7UUFBQWpHLGNBQUEsR0FBQUUsQ0FBQTtRQUNkK0gsT0FBQSxDQUFRaEMsS0FBSyxDQUFDLDhCQUE4QkEsS0FBQTtRQUFBO1FBQUFqRyxjQUFBLEdBQUFFLENBQUE7UUFDNUNtSSxRQUFBLENBQVM7VUFBRTdELElBQUEsRUFBTTtVQUFhb0MsT0FBQSxFQUFTO1FBQTJDO1FBQ2xGO1FBQUE7UUFBQTVHLGNBQUEsR0FBQUUsQ0FBQTtRQUNBbUksUUFBQSxDQUFTO1VBQUU3RCxJQUFBLEVBQU07VUFBcUJvQyxPQUFBLEVBQVM7UUFBTTtRQUFBO1FBQUE1RyxjQUFBLEdBQUFFLENBQUE7UUFDckRtSSxRQUFBLENBQVM7VUFBRTdELElBQUEsRUFBTTtVQUF1Qm9DLE9BQUEsRUFBUztRQUFNO1FBQUE7UUFBQTVHLGNBQUEsR0FBQUUsQ0FBQTtRQUN2RG1JLFFBQUEsQ0FBUztVQUFFN0QsSUFBQSxFQUFNO1VBQXNCb0MsT0FBQSxFQUFTO1FBQU07UUFBQTtRQUFBNUcsY0FBQSxHQUFBRSxDQUFBO1FBQ3REbUksUUFBQSxDQUFTO1VBQUU3RCxJQUFBLEVBQU07VUFBNEJvQyxPQUFBLEVBQVM7UUFBTTtRQUFBO1FBQUE1RyxjQUFBLEdBQUFFLENBQUE7UUFDNURtSSxRQUFBLENBQVM7VUFBRTdELElBQUEsRUFBTTtVQUFzQm9DLE9BQUEsRUFBUztRQUFNO1FBQUE7UUFBQTVHLGNBQUEsR0FBQUUsQ0FBQTtRQUN0RG1JLFFBQUEsQ0FBUztVQUFFN0QsSUFBQSxFQUFNO1VBQXlCb0MsT0FBQSxFQUFTO1FBQU07UUFBQTtRQUFBNUcsY0FBQSxHQUFBRSxDQUFBO1FBQ3pEbUksUUFBQSxDQUFTO1VBQUU3RCxJQUFBLEVBQU07VUFBeUJvQyxPQUFBLEVBQVM7UUFBTTtRQUFBO1FBQUE1RyxjQUFBLEdBQUFFLENBQUE7UUFDekRtSSxRQUFBLENBQVM7VUFBRTdELElBQUEsRUFBTTtVQUF3Qm9DLE9BQUEsRUFBUztRQUFNO01BQzFEO0lBQ0Y7SUFBQTtJQUFBNUcsY0FBQSxHQUFBRSxDQUFBO0lBRUE4SSxjQUFBO0VBQ0YsR0FBRyxDQUFDVCxVQUFBLENBQVc7RUFFZjtFQUFBO0VBQUF2SSxjQUFBLEdBQUFFLENBQUE7RUFDQSxJQUFBb0csTUFBQSxDQUFBeUMsU0FBUyxFQUFDO0lBQUE7SUFBQS9JLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDUixJQUFJLE9BQU8wSyxNQUFBLEtBQVcsYUFBYTtNQUFBO01BQUE1SyxjQUFBLEdBQUFvRyxDQUFBO01BQUFwRyxjQUFBLEdBQUFFLENBQUE7TUFBQTtJQUFBO0lBQUE7SUFBQTtNQUFBRixjQUFBLEdBQUFvRyxDQUFBO0lBQUE7SUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtJQUVuQyxNQUFNMkssWUFBQSxHQUFlQSxDQUFBLEtBQU07TUFBQTtNQUFBN0ssY0FBQSxHQUFBQyxDQUFBO01BQUFELGNBQUEsR0FBQUUsQ0FBQTtNQUFBLE9BQUFtSSxRQUFBLENBQVM7UUFBRTdELElBQUEsRUFBTTtRQUFxQm9DLE9BQUEsRUFBUztNQUFLO0lBQUE7SUFBQTtJQUFBNUcsY0FBQSxHQUFBRSxDQUFBO0lBQy9FLE1BQU00SyxhQUFBLEdBQWdCQSxDQUFBLEtBQU07TUFBQTtNQUFBOUssY0FBQSxHQUFBQyxDQUFBO01BQUFELGNBQUEsR0FBQUUsQ0FBQTtNQUFBLE9BQUFtSSxRQUFBLENBQVM7UUFBRTdELElBQUEsRUFBTTtRQUFxQm9DLE9BQUEsRUFBUztNQUFNO0lBQUE7SUFBQTtJQUFBNUcsY0FBQSxHQUFBRSxDQUFBO0lBRWpGLElBQUk7TUFBQTtNQUFBRixjQUFBLEdBQUFFLENBQUE7TUFDRjBLLE1BQUEsQ0FBT0csZ0JBQWdCLENBQUMsVUFBVUYsWUFBQTtNQUFBO01BQUE3SyxjQUFBLEdBQUFFLENBQUE7TUFDbEMwSyxNQUFBLENBQU9HLGdCQUFnQixDQUFDLFdBQVdELGFBQUE7TUFBQTtNQUFBOUssY0FBQSxHQUFBRSxDQUFBO01BRW5DLE9BQU87UUFBQTtRQUFBRixjQUFBLEdBQUFDLENBQUE7UUFBQUQsY0FBQSxHQUFBRSxDQUFBO1FBQ0wwSyxNQUFBLENBQU9JLG1CQUFtQixDQUFDLFVBQVVILFlBQUE7UUFBQTtRQUFBN0ssY0FBQSxHQUFBRSxDQUFBO1FBQ3JDMEssTUFBQSxDQUFPSSxtQkFBbUIsQ0FBQyxXQUFXRixhQUFBO01BQ3hDO0lBQ0YsRUFBRSxPQUFPN0UsS0FBQSxFQUFPO01BQUE7TUFBQWpHLGNBQUEsR0FBQUUsQ0FBQTtNQUNkK0gsT0FBQSxDQUFRaUMsSUFBSSxDQUFDLDhDQUE4Q2pFLEtBQUE7SUFDN0Q7RUFDRixHQUFHLEVBQUU7RUFFTDtFQUFBO0VBQUFqRyxjQUFBLEdBQUFFLENBQUE7RUFDQSxJQUFBb0csTUFBQSxDQUFBeUMsU0FBUyxFQUFDO0lBQUE7SUFBQS9JLGNBQUEsR0FBQUMsQ0FBQTtJQUNSLE1BQU11SixXQUFBO0lBQUE7SUFBQSxDQUFBeEosY0FBQSxHQUFBRSxDQUFBLFNBQWN1SixPQUFBLENBQVFDLEdBQUcsQ0FBQ0Msd0JBQXdCO0lBQ3hELE1BQU1DLFdBQUE7SUFBQTtJQUFBLENBQUE1SixjQUFBLEdBQUFFLENBQUEsU0FBY3VKLE9BQUEsQ0FBUUMsR0FBRyxDQUFDRyw2QkFBNkI7SUFBQTtJQUFBN0osY0FBQSxHQUFBRSxDQUFBO0lBRTdEO0lBQUk7SUFBQSxDQUFBRixjQUFBLEdBQUFvRyxDQUFBLFlBQUNvRCxXQUFBO0lBQUE7SUFBQSxDQUFBeEosY0FBQSxHQUFBb0csQ0FBQSxXQUFlLENBQUN3RCxXQUFBO0lBQUE7SUFBQSxDQUFBNUosY0FBQSxHQUFBb0csQ0FBQSxXQUFlb0QsV0FBQSxDQUFZTSxRQUFRLENBQUM7SUFBQTtJQUFBLENBQUE5SixjQUFBLEdBQUFvRyxDQUFBLFdBQW1Cd0QsV0FBQSxDQUFZRSxRQUFRLENBQUMsbUJBQWtCO01BQUE7TUFBQTlKLGNBQUEsR0FBQW9HLENBQUE7TUFBQXBHLGNBQUEsR0FBQUUsQ0FBQTtNQUNqSDtJQUNGO0lBQUE7SUFBQTtNQUFBRixjQUFBLEdBQUFvRyxDQUFBO0lBQUE7SUFFQSxNQUFNNkUsYUFBQTtJQUFBO0lBQUEsQ0FBQWpMLGNBQUEsR0FBQUUsQ0FBQSxTQUFtQyxFQUFFO0lBQUE7SUFBQUYsY0FBQSxHQUFBRSxDQUFBO0lBRTNDLElBQUk7TUFBQTtNQUFBRixjQUFBLEdBQUFFLENBQUE7TUFDRixNQUFNZ0wsaUJBQUEsR0FBb0JBLENBQUMxSSxJQUFBLEVBQWMySSxVQUFBLEVBQW9EeEUsTUFBQTtRQUFBO1FBQUEzRyxjQUFBLEdBQUFDLENBQUE7UUFBQUQsY0FBQSxHQUFBRSxDQUFBO1FBQzNGLElBQUk7VUFDRixNQUFNa0wsV0FBQTtVQUFBO1VBQUEsQ0FBQXBMLGNBQUEsR0FBQUUsQ0FBQSxTQUFjaUwsVUFBQSxDQUFZbEIsSUFBQTtZQUFBO1lBQUFqSyxjQUFBLEdBQUFDLENBQUE7WUFBQUQsY0FBQSxHQUFBRSxDQUFBO1lBQzlCbUksUUFBQSxDQUFTO2NBQUU3RCxJQUFBLEVBQU1tQyxNQUFBO2NBQWVDLE9BQUEsRUFBU3FEO1lBQUs7VUFDaEQ7VUFBQTtVQUFBakssY0FBQSxHQUFBRSxDQUFBO1VBQ0EsSUFBSWtMLFdBQUEsRUFBYTtZQUFBO1lBQUFwTCxjQUFBLEdBQUFvRyxDQUFBO1lBQUFwRyxjQUFBLEdBQUFFLENBQUE7WUFBQStLLGFBQUEsQ0FBY0ksSUFBSSxDQUFDRCxXQUFBO1VBQUE7VUFBQTtVQUFBO1lBQUFwTCxjQUFBLEdBQUFvRyxDQUFBO1VBQUE7UUFDdEMsRUFBRSxPQUFPSCxLQUFBLEVBQU87VUFBQTtVQUFBakcsY0FBQSxHQUFBRSxDQUFBO1VBQ2QrSCxPQUFBLENBQVFpQyxJQUFJLENBQUMsb0JBQW9CMUgsSUFBQSxnQkFBb0IsRUFBRXlELEtBQUE7UUFDekQ7TUFDRjtNQUFBO01BQUFqRyxjQUFBLEdBQUFFLENBQUE7TUFFQWdMLGlCQUFBLENBQWtCLFNBQVNaLFNBQUEsQ0FBQUMsZUFBZSxDQUFDZSxnQkFBZ0IsRUFBRTtNQUFBO01BQUF0TCxjQUFBLEdBQUFFLENBQUE7TUFDN0RnTCxpQkFBQSxDQUFrQixXQUFXWixTQUFBLENBQUFDLGVBQWUsQ0FBQ2dCLGtCQUFrQixFQUFFO01BQUE7TUFBQXZMLGNBQUEsR0FBQUUsQ0FBQTtNQUNqRWdMLGlCQUFBLENBQWtCLFVBQVVaLFNBQUEsQ0FBQUMsZUFBZSxDQUFDaUIsaUJBQWlCLEVBQUU7TUFDL0Q7TUFDQTtNQUNBO01BQ0E7TUFDQTtJQUNGLEVBQUUsT0FBT3ZGLEtBQUEsRUFBTztNQUFBO01BQUFqRyxjQUFBLEdBQUFFLENBQUE7TUFDZCtILE9BQUEsQ0FBUWlDLElBQUksQ0FBQyw2Q0FBNkNqRSxLQUFBO0lBQzVEO0lBQUE7SUFBQWpHLGNBQUEsR0FBQUUsQ0FBQTtJQUVBLE9BQU87TUFBQTtNQUFBRixjQUFBLEdBQUFDLENBQUE7TUFBQUQsY0FBQSxHQUFBRSxDQUFBO01BQ0wrSyxhQUFBLENBQWNRLE9BQU8sQ0FBRUwsV0FBQTtRQUFBO1FBQUFwTCxjQUFBLEdBQUFDLENBQUE7UUFBQUQsY0FBQSxHQUFBRSxDQUFBO1FBQ3JCLElBQUk7VUFBQTtVQUFBRixjQUFBLEdBQUFFLENBQUE7VUFDRmtMLFdBQUE7UUFDRixFQUFFLE9BQU9uRixLQUFBLEVBQU87VUFBQTtVQUFBakcsY0FBQSxHQUFBRSxDQUFBO1VBQ2QrSCxPQUFBLENBQVFpQyxJQUFJLENBQUMsd0JBQXdCakUsS0FBQTtRQUN2QztNQUNGO0lBQ0Y7RUFDRixHQUFHLEVBQUU7RUFBQTtFQUFBakcsY0FBQSxHQUFBRSxDQUFBO0VBRUwsb0JBQU8sSUFBQXdMLFdBQUEsQ0FBQUMsR0FBQSxFQUFDNUwsVUFBQSxDQUFXNkwsUUFBUTtJQUFDdEgsS0FBQSxFQUFPdUUsWUFBQTtjQUFlWDs7QUFDcEQ7QUFBQTtBQUFBbEksY0FBQSxHQUFBRSxDQUFBO0FBR08sTUFBTUUsYUFBQSxHQUFnQkEsQ0FBQTtFQUFBO0VBQUFKLGNBQUEsR0FBQUMsQ0FBQTtFQUMzQixNQUFNNEwsT0FBQTtFQUFBO0VBQUEsQ0FBQTdMLGNBQUEsR0FBQUUsQ0FBQSxTQUFVLElBQUFvRyxNQUFBLENBQUF3RixVQUFVLEVBQUMvTCxVQUFBO0VBQUE7RUFBQUMsY0FBQSxHQUFBRSxDQUFBO0VBQzNCLElBQUkyTCxPQUFBLEtBQVlyRixTQUFBLEVBQVc7SUFBQTtJQUFBeEcsY0FBQSxHQUFBb0csQ0FBQTtJQUFBcEcsY0FBQSxHQUFBRSxDQUFBO0lBQ3pCLE1BQU0sSUFBSTZMLEtBQUEsQ0FBTTtFQUNsQjtFQUFBO0VBQUE7SUFBQS9MLGNBQUEsR0FBQW9HLENBQUE7RUFBQTtFQUFBcEcsY0FBQSxHQUFBRSxDQUFBO0VBQ0EsT0FBTzJMLE9BQUE7QUFDVCIsImlnbm9yZUxpc3QiOltdfQ==