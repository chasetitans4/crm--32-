16ee13b7463e45631d6a74bf9fa3c201
"use client";
"use strict";

/* istanbul ignore next */
function cov_fx1gbwzm9() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\separator.tsx";
  var hash = "59c7f5e343b94686941c1f96ca8571f5552e65cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\separator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 25
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 38
        },
        end: {
          line: 14,
          column: 101
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "9": {
        start: {
          line: 22,
          column: 39
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "10": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "11": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "12": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "17": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "18": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "19": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "20": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "21": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "22": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 88
        }
      },
      "23": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "24": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "25": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 95
        }
      },
      "26": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "27": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "28": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "29": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "30": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "31": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "32": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "33": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "34": {
        start: {
          line: 62,
          column: 151
        },
        end: {
          line: 68,
          column: 6
        }
      },
      "35": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 69,
          column: 57
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 47
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 21
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 40
          }
        },
        loc: {
          start: {
            line: 25,
            column: 61
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 58
          },
          end: {
            line: 62,
            column: 59
          }
        },
        loc: {
          start: {
            line: 62,
            column: 151
          },
          end: {
            line: 68,
            column: 6
          }
        },
        line: 62
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 65
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 45
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "7": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: 33,
            column: 51
          },
          end: {
            line: 33,
            column: 76
          }
        }],
        line: 33
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 31
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 88
          }
        }],
        line: 45
      },
      "11": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "12": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 79
          }
        }],
        line: 47
      },
      "13": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 88
          }
        }, {
          start: {
            line: 48,
            column: 91
          },
          end: {
            line: 48,
            column: 95
          }
        }],
        line: 48
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 53,
            column: 13
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 33
          }
        }, {
          start: {
            line: 49,
            column: 37
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "16": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "17": {
        loc: {
          start: {
            line: 62,
            column: 72
          },
          end: {
            line: 62,
            column: 98
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 86
          },
          end: {
            line: 62,
            column: 98
          }
        }],
        line: 62
      },
      "18": {
        loc: {
          start: {
            line: 62,
            column: 100
          },
          end: {
            line: 62,
            column: 117
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 62,
            column: 113
          },
          end: {
            line: 62,
            column: 117
          }
        }],
        line: 62
      },
      "19": {
        loc: {
          start: {
            line: 66,
            column: 56
          },
          end: {
            line: 66,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 87
          },
          end: {
            line: 66,
            column: 103
          }
        }, {
          start: {
            line: 66,
            column: 106
          },
          end: {
            line: 66,
            column: 122
          }
        }],
        line: 66
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0],
      "18": [0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\separator.tsx"],
      sourcesContent: ["\"use client\"\n\nimport React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(({ className, orientation = \"horizontal\", decorative = true, ...props }, ref) => (\n  <SeparatorPrimitive.Root\n    ref={ref}\n    decorative={decorative}\n    orientation={orientation}\n    className={cn(\"shrink-0 bg-border\", orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\", className)}\n    {...props}\n  />\n))\n\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],
      names: ["Separator", "React", "forwardRef", "className", "orientation", "decorative", "props", "ref", "SeparatorPrimitive", "Root", "cn", "displayName"],
      mappings: "AAAA;;;;;+BAqBSA;;;eAAAA;;;;8DAnBS;wEACkB;uBACjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMA,0BAAYC,cAAK,CAACC,UAAU,CAGhC,CAAC,EAAEC,SAAS,EAAEC,cAAc,YAAY,EAAEC,aAAa,IAAI,EAAE,GAAGC,OAAO,EAAEC,oBACzE,qBAACC,gBAAmBC,IAAI;QACtBF,KAAKA;QACLF,YAAYA;QACZD,aAAaA;QACbD,WAAWO,IAAAA,SAAE,EAAC,sBAAsBN,gBAAgB,eAAe,mBAAmB,kBAAkBD;QACvG,GAAGG,KAAK;;AAIbN,UAAUW,WAAW,GAAGH,gBAAmBC,IAAI,CAACE,WAAW"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "59c7f5e343b94686941c1f96ca8571f5552e65cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_fx1gbwzm9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fx1gbwzm9();
cov_fx1gbwzm9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_fx1gbwzm9().s[1]++;
Object.defineProperty(exports, "Separator", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_fx1gbwzm9().f[0]++;
    cov_fx1gbwzm9().s[2]++;
    return Separator;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_fx1gbwzm9().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_fx1gbwzm9().s[4]++, _interop_require_default(require("react")));
const _reactseparator =
/* istanbul ignore next */
(/*#__PURE__*/cov_fx1gbwzm9().s[5]++, _interop_require_wildcard(require("@radix-ui/react-separator")));
const _utils =
/* istanbul ignore next */
(cov_fx1gbwzm9().s[6]++, require("../../lib/utils"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_fx1gbwzm9().f[1]++;
  cov_fx1gbwzm9().s[7]++;
  return /* istanbul ignore next */(cov_fx1gbwzm9().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_fx1gbwzm9().f[2]++;
  cov_fx1gbwzm9().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_fx1gbwzm9().b[2][0]++;
    cov_fx1gbwzm9().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_fx1gbwzm9().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_fx1gbwzm9().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_fx1gbwzm9().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_fx1gbwzm9().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_fx1gbwzm9().f[3]++;
    cov_fx1gbwzm9().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_fx1gbwzm9().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_fx1gbwzm9().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_fx1gbwzm9().f[4]++;
  cov_fx1gbwzm9().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_fx1gbwzm9().b[4][0]++;
    cov_fx1gbwzm9().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_fx1gbwzm9().b[4][1]++;
  }
  cov_fx1gbwzm9().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_fx1gbwzm9().b[6][0]++;
    cov_fx1gbwzm9().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_fx1gbwzm9().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_fx1gbwzm9().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_fx1gbwzm9().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_fx1gbwzm9().b[8][0]++;
    cov_fx1gbwzm9().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_fx1gbwzm9().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_fx1gbwzm9().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_fx1gbwzm9().s[22]++,
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_fx1gbwzm9().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_fx1gbwzm9().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_fx1gbwzm9().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_fx1gbwzm9().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_fx1gbwzm9().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_fx1gbwzm9().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_fx1gbwzm9().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_fx1gbwzm9().b[13][1]++, null));
      /* istanbul ignore next */
      cov_fx1gbwzm9().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_fx1gbwzm9().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_fx1gbwzm9().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_fx1gbwzm9().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_fx1gbwzm9().b[14][0]++;
        cov_fx1gbwzm9().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_fx1gbwzm9().b[14][1]++;
        cov_fx1gbwzm9().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_fx1gbwzm9().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_fx1gbwzm9().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_fx1gbwzm9().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_fx1gbwzm9().b[16][0]++;
    cov_fx1gbwzm9().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_fx1gbwzm9().b[16][1]++;
  }
  cov_fx1gbwzm9().s[32]++;
  return newObj;
}
const Separator =
/* istanbul ignore next */
(/*#__PURE__*/cov_fx1gbwzm9().s[33]++, _react.default.forwardRef(({
  className,
  orientation =
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[17][0]++, "horizontal"),
  decorative =
  /* istanbul ignore next */
  (cov_fx1gbwzm9().b[18][0]++, true),
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_fx1gbwzm9().f[5]++;
  cov_fx1gbwzm9().s[34]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reactseparator.Root, {
    ref: ref,
    decorative: decorative,
    orientation: orientation,
    className: (0, _utils.cn)("shrink-0 bg-border", orientation === "horizontal" ?
    /* istanbul ignore next */
    (cov_fx1gbwzm9().b[19][0]++, "h-[1px] w-full") :
    /* istanbul ignore next */
    (cov_fx1gbwzm9().b[19][1]++, "h-full w-[1px]"), className),
    ...props
  });
}));
/* istanbul ignore next */
cov_fx1gbwzm9().s[35]++;
Separator.displayName = _reactseparator.Root.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTZXBhcmF0b3IiLCJjb3ZfZngxZ2J3em05IiwicyIsIl9yZWFjdCIsImRlZmF1bHQiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwib3JpZW50YXRpb24iLCJiIiwiZGVjb3JhdGl2ZSIsInByb3BzIiwicmVmIiwiZiIsIl9qc3hydW50aW1lIiwianN4IiwiX3JlYWN0c2VwYXJhdG9yIiwiUm9vdCIsIl91dGlscyIsImNuIiwiZGlzcGxheU5hbWUiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGNoYXNlXFxEb3dubG9hZHNcXGNybSAoMzIpXFxzcmNcXGNvbXBvbmVudHNcXHVpXFxzZXBhcmF0b3IudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiXG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0ICogYXMgU2VwYXJhdG9yUHJpbWl0aXZlIGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2VwYXJhdG9yXCJcbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuY29uc3QgU2VwYXJhdG9yID0gUmVhY3QuZm9yd2FyZFJlZjxcbiAgUmVhY3QuRWxlbWVudFJlZjx0eXBlb2YgU2VwYXJhdG9yUHJpbWl0aXZlLlJvb3Q+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIFNlcGFyYXRvclByaW1pdGl2ZS5Sb290PlxuPigoeyBjbGFzc05hbWUsIG9yaWVudGF0aW9uID0gXCJob3Jpem9udGFsXCIsIGRlY29yYXRpdmUgPSB0cnVlLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPFNlcGFyYXRvclByaW1pdGl2ZS5Sb290XG4gICAgcmVmPXtyZWZ9XG4gICAgZGVjb3JhdGl2ZT17ZGVjb3JhdGl2ZX1cbiAgICBvcmllbnRhdGlvbj17b3JpZW50YXRpb259XG4gICAgY2xhc3NOYW1lPXtjbihcInNocmluay0wIGJnLWJvcmRlclwiLCBvcmllbnRhdGlvbiA9PT0gXCJob3Jpem9udGFsXCIgPyBcImgtWzFweF0gdy1mdWxsXCIgOiBcImgtZnVsbCB3LVsxcHhdXCIsIGNsYXNzTmFtZSl9XG4gICAgey4uLnByb3BzfVxuICAvPlxuKSlcblxuU2VwYXJhdG9yLmRpc3BsYXlOYW1lID0gU2VwYXJhdG9yUHJpbWl0aXZlLlJvb3QuZGlzcGxheU5hbWVcblxuZXhwb3J0IHsgU2VwYXJhdG9yIH1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBcUJTOzs7Ozs7V0FBQUEsU0FBQTs7Ozs7Ozs7dUVBbkJTOzs7d0VBQ2tCOzs7aUNBQ2pCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFbkIsTUFBTUEsU0FBQTtBQUFBO0FBQUEsY0FBQUMsYUFBQSxHQUFBQyxDQUFBLFFBQVlDLE1BQUEsQ0FBQUMsT0FBSyxDQUFDQyxVQUFVLENBR2hDLENBQUM7RUFBRUMsU0FBUztFQUFFQyxXQUFBO0VBQUE7RUFBQSxDQUFBTixhQUFBLEdBQUFPLENBQUEsV0FBYyxZQUFZO0VBQUVDLFVBQUE7RUFBQTtFQUFBLENBQUFSLGFBQUEsR0FBQU8sQ0FBQSxXQUFhLElBQUk7RUFBRSxHQUFHRTtBQUFBLENBQU8sRUFBRUMsR0FBQSxLQUN6RTtFQUFBO0VBQUFWLGFBQUEsR0FBQVcsQ0FBQTtFQUFBWCxhQUFBLEdBQUFDLENBQUE7RUFBQSxPQUR5RSxhQUN6RSxJQUFBVyxXQUFBLENBQUFDLEdBQUEsRUFBQ0MsZUFBQSxDQUFtQkMsSUFBSTtJQUN0QkwsR0FBQSxFQUFLQSxHQUFBO0lBQ0xGLFVBQUEsRUFBWUEsVUFBQTtJQUNaRixXQUFBLEVBQWFBLFdBQUE7SUFDYkQsU0FBQSxFQUFXLElBQUFXLE1BQUEsQ0FBQUMsRUFBRSxFQUFDLHNCQUFzQlgsV0FBQSxLQUFnQjtJQUFBO0lBQUEsQ0FBQU4sYUFBQSxHQUFBTyxDQUFBLFdBQWU7SUFBQTtJQUFBLENBQUFQLGFBQUEsR0FBQU8sQ0FBQSxXQUFtQixtQkFBa0JGLFNBQUE7SUFDdkcsR0FBR0k7Ozs7O0FBSVJWLFNBQUEsQ0FBVW1CLFdBQVcsR0FBR0osZUFBQSxDQUFtQkMsSUFBSSxDQUFDRyxXQUFXIiwiaWdub3JlTGlzdCI6W119