e7cee866094100f4aa8a53e595489f85
"use strict";

/* istanbul ignore next */
function cov_227b7twblo() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\CountdownService.ts";
  var hash = "db2a69ee15ef377851bdb6e715df625e43fced57";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\CountdownService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 26
        }
      },
      "9": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 33,
          column: 16
        }
      },
      "10": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 26,
          column: 30
        }
      },
      "11": {
        start: {
          line: 27,
          column: 12
        },
        end: {
          line: 32,
          column: 13
        }
      },
      "12": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 39
        }
      },
      "13": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "14": {
        start: {
          line: 31,
          column: 16
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "16": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 41,
          column: 9
        }
      },
      "18": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "19": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 35
        }
      },
      "20": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 59
        }
      },
      "21": {
        start: {
          line: 44,
          column: 37
        },
        end: {
          line: 44,
          column: 57
        }
      },
      "22": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 28
        }
      },
      "23": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 35
        }
      },
      "24": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 51,
          column: 60
        }
      },
      "25": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "26": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 41
        }
      },
      "27": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 95
        }
      },
      "28": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "29": {
        start: {
          line: 60,
          column: 25
        },
        end: {
          line: 60,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 53
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 25,
            column: 35
          }
        },
        loc: {
          start: {
            line: 25,
            column: 38
          },
          end: {
            line: 33,
            column: 9
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 22
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 24
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 29
          }
        },
        loc: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 57
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        loc: {
          start: {
            line: 47,
            column: 18
          },
          end: {
            line: 49,
            column: 5
          }
        },
        line: 47
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        loc: {
          start: {
            line: 50,
            column: 29
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 50
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        loc: {
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 12
          },
          end: {
            line: 32,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 19
          },
          end: {
            line: 32,
            column: 13
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 41,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\CountdownService.ts"],
      sourcesContent: ["export class CountdownService {\n  private timers: Map<string, NodeJS.Timeout> = new Map();\n\n  startCountdown(\n    id: string,\n    duration: number,\n    onTick: (remaining: number) => void,\n    onComplete: () => void\n  ): void {\n    // Clear existing timer if any\n    this.stopCountdown(id);\n\n    let remaining = duration;\n    onTick(remaining);\n\n    const timer = setInterval(() => {\n      remaining -= 1000;\n      \n      if (remaining <= 0) {\n        this.stopCountdown(id);\n        onComplete();\n      } else {\n        onTick(remaining);\n      }\n    }, 1000);\n\n    this.timers.set(id, timer);\n  }\n\n  stopCountdown(id: string): void {\n    const timer = this.timers.get(id);\n    if (timer) {\n      clearInterval(timer);\n      this.timers.delete(id);\n    }\n  }\n\n  stopAllCountdowns(): void {\n    this.timers.forEach((timer) => clearInterval(timer));\n    this.timers.clear();\n  }\n\n  isRunning(id: string): boolean {\n    return this.timers.has(id);\n  }\n\n  formatTime(milliseconds: number): string {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  }\n}\n\nexport const countdownService = new CountdownService();\n"],
      names: ["CountdownService", "countdownService", "startCountdown", "id", "duration", "onTick", "onComplete", "stopCountdown", "remaining", "timer", "setInterval", "timers", "set", "get", "clearInterval", "delete", "stopAllCountdowns", "forEach", "clear", "isRunning", "has", "formatTime", "milliseconds", "totalSeconds", "Math", "floor", "minutes", "seconds", "toString", "padStart", "Map"],
      mappings: ";;;;;;;;;;;QAAaA;eAAAA;;QAsDAC;eAAAA;;;AAtDN,MAAMD;IAGXE,eACEC,EAAU,EACVC,QAAgB,EAChBC,MAAmC,EACnCC,UAAsB,EAChB;QACN,8BAA8B;QAC9B,IAAI,CAACC,aAAa,CAACJ;QAEnB,IAAIK,YAAYJ;QAChBC,OAAOG;QAEP,MAAMC,QAAQC,YAAY;YACxBF,aAAa;YAEb,IAAIA,aAAa,GAAG;gBAClB,IAAI,CAACD,aAAa,CAACJ;gBACnBG;YACF,OAAO;gBACLD,OAAOG;YACT;QACF,GAAG;QAEH,IAAI,CAACG,MAAM,CAACC,GAAG,CAACT,IAAIM;IACtB;IAEAF,cAAcJ,EAAU,EAAQ;QAC9B,MAAMM,QAAQ,IAAI,CAACE,MAAM,CAACE,GAAG,CAACV;QAC9B,IAAIM,OAAO;YACTK,cAAcL;YACd,IAAI,CAACE,MAAM,CAACI,MAAM,CAACZ;QACrB;IACF;IAEAa,oBAA0B;QACxB,IAAI,CAACL,MAAM,CAACM,OAAO,CAAC,CAACR,QAAUK,cAAcL;QAC7C,IAAI,CAACE,MAAM,CAACO,KAAK;IACnB;IAEAC,UAAUhB,EAAU,EAAW;QAC7B,OAAO,IAAI,CAACQ,MAAM,CAACS,GAAG,CAACjB;IACzB;IAEAkB,WAAWC,YAAoB,EAAU;QACvC,MAAMC,eAAeC,KAAKC,KAAK,CAACH,eAAe;QAC/C,MAAMI,UAAUF,KAAKC,KAAK,CAACF,eAAe;QAC1C,MAAMI,UAAUJ,eAAe;QAC/B,OAAO,GAAGG,QAAQE,QAAQ,GAAGC,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAEF,QAAQC,QAAQ,GAAGC,QAAQ,CAAC,GAAG,MAAM;IACxF;;aAlDQlB,SAAsC,IAAImB;;AAmDpD;AAEO,MAAM7B,mBAAmB,IAAID"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "db2a69ee15ef377851bdb6e715df625e43fced57"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_227b7twblo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_227b7twblo();
cov_227b7twblo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_227b7twblo().f[0]++;
  cov_227b7twblo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_227b7twblo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_227b7twblo().s[3]++;
_export(exports, {
  get CountdownService() {
    /* istanbul ignore next */
    cov_227b7twblo().f[1]++;
    cov_227b7twblo().s[4]++;
    return CountdownService;
  },
  get countdownService() {
    /* istanbul ignore next */
    cov_227b7twblo().f[2]++;
    cov_227b7twblo().s[5]++;
    return countdownService;
  }
});
class CountdownService {
  startCountdown(id, duration, onTick, onComplete) {
    /* istanbul ignore next */
    cov_227b7twblo().f[3]++;
    cov_227b7twblo().s[6]++;
    // Clear existing timer if any
    this.stopCountdown(id);
    let remaining =
    /* istanbul ignore next */
    (cov_227b7twblo().s[7]++, duration);
    /* istanbul ignore next */
    cov_227b7twblo().s[8]++;
    onTick(remaining);
    const timer =
    /* istanbul ignore next */
    (cov_227b7twblo().s[9]++, setInterval(() => {
      /* istanbul ignore next */
      cov_227b7twblo().f[4]++;
      cov_227b7twblo().s[10]++;
      remaining -= 1000;
      /* istanbul ignore next */
      cov_227b7twblo().s[11]++;
      if (remaining <= 0) {
        /* istanbul ignore next */
        cov_227b7twblo().b[0][0]++;
        cov_227b7twblo().s[12]++;
        this.stopCountdown(id);
        /* istanbul ignore next */
        cov_227b7twblo().s[13]++;
        onComplete();
      } else {
        /* istanbul ignore next */
        cov_227b7twblo().b[0][1]++;
        cov_227b7twblo().s[14]++;
        onTick(remaining);
      }
    }, 1000));
    /* istanbul ignore next */
    cov_227b7twblo().s[15]++;
    this.timers.set(id, timer);
  }
  stopCountdown(id) {
    /* istanbul ignore next */
    cov_227b7twblo().f[5]++;
    const timer =
    /* istanbul ignore next */
    (cov_227b7twblo().s[16]++, this.timers.get(id));
    /* istanbul ignore next */
    cov_227b7twblo().s[17]++;
    if (timer) {
      /* istanbul ignore next */
      cov_227b7twblo().b[1][0]++;
      cov_227b7twblo().s[18]++;
      clearInterval(timer);
      /* istanbul ignore next */
      cov_227b7twblo().s[19]++;
      this.timers.delete(id);
    } else
    /* istanbul ignore next */
    {
      cov_227b7twblo().b[1][1]++;
    }
  }
  stopAllCountdowns() {
    /* istanbul ignore next */
    cov_227b7twblo().f[6]++;
    cov_227b7twblo().s[20]++;
    this.timers.forEach(timer => {
      /* istanbul ignore next */
      cov_227b7twblo().f[7]++;
      cov_227b7twblo().s[21]++;
      return clearInterval(timer);
    });
    /* istanbul ignore next */
    cov_227b7twblo().s[22]++;
    this.timers.clear();
  }
  isRunning(id) {
    /* istanbul ignore next */
    cov_227b7twblo().f[8]++;
    cov_227b7twblo().s[23]++;
    return this.timers.has(id);
  }
  formatTime(milliseconds) {
    /* istanbul ignore next */
    cov_227b7twblo().f[9]++;
    const totalSeconds =
    /* istanbul ignore next */
    (cov_227b7twblo().s[24]++, Math.floor(milliseconds / 1000));
    const minutes =
    /* istanbul ignore next */
    (cov_227b7twblo().s[25]++, Math.floor(totalSeconds / 60));
    const seconds =
    /* istanbul ignore next */
    (cov_227b7twblo().s[26]++, totalSeconds % 60);
    /* istanbul ignore next */
    cov_227b7twblo().s[27]++;
    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  }
  constructor() {
    /* istanbul ignore next */
    cov_227b7twblo().f[10]++;
    cov_227b7twblo().s[28]++;
    this.timers = new Map();
  }
}
const countdownService =
/* istanbul ignore next */
(cov_227b7twblo().s[29]++, new CountdownService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJDb3VudGRvd25TZXJ2aWNlIiwiY292XzIyN2I3dHdibG8iLCJmIiwicyIsImNvdW50ZG93blNlcnZpY2UiLCJzdGFydENvdW50ZG93biIsImlkIiwiZHVyYXRpb24iLCJvblRpY2siLCJvbkNvbXBsZXRlIiwic3RvcENvdW50ZG93biIsInJlbWFpbmluZyIsInRpbWVyIiwic2V0SW50ZXJ2YWwiLCJiIiwidGltZXJzIiwic2V0IiwiZ2V0IiwiY2xlYXJJbnRlcnZhbCIsImRlbGV0ZSIsInN0b3BBbGxDb3VudGRvd25zIiwiZm9yRWFjaCIsImNsZWFyIiwiaXNSdW5uaW5nIiwiaGFzIiwiZm9ybWF0VGltZSIsIm1pbGxpc2Vjb25kcyIsInRvdGFsU2Vjb25kcyIsIk1hdGgiLCJmbG9vciIsIm1pbnV0ZXMiLCJzZWNvbmRzIiwidG9TdHJpbmciLCJwYWRTdGFydCIsIk1hcCJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY2hhc2VcXERvd25sb2Fkc1xcY3JtICgzMilcXHNyY1xcc2VydmljZXNcXENvdW50ZG93blNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIENvdW50ZG93blNlcnZpY2Uge1xuICBwcml2YXRlIHRpbWVyczogTWFwPHN0cmluZywgTm9kZUpTLlRpbWVvdXQ+ID0gbmV3IE1hcCgpO1xuXG4gIHN0YXJ0Q291bnRkb3duKFxuICAgIGlkOiBzdHJpbmcsXG4gICAgZHVyYXRpb246IG51bWJlcixcbiAgICBvblRpY2s6IChyZW1haW5pbmc6IG51bWJlcikgPT4gdm9pZCxcbiAgICBvbkNvbXBsZXRlOiAoKSA9PiB2b2lkXG4gICk6IHZvaWQge1xuICAgIC8vIENsZWFyIGV4aXN0aW5nIHRpbWVyIGlmIGFueVxuICAgIHRoaXMuc3RvcENvdW50ZG93bihpZCk7XG5cbiAgICBsZXQgcmVtYWluaW5nID0gZHVyYXRpb247XG4gICAgb25UaWNrKHJlbWFpbmluZyk7XG5cbiAgICBjb25zdCB0aW1lciA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgIHJlbWFpbmluZyAtPSAxMDAwO1xuICAgICAgXG4gICAgICBpZiAocmVtYWluaW5nIDw9IDApIHtcbiAgICAgICAgdGhpcy5zdG9wQ291bnRkb3duKGlkKTtcbiAgICAgICAgb25Db21wbGV0ZSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgb25UaWNrKHJlbWFpbmluZyk7XG4gICAgICB9XG4gICAgfSwgMTAwMCk7XG5cbiAgICB0aGlzLnRpbWVycy5zZXQoaWQsIHRpbWVyKTtcbiAgfVxuXG4gIHN0b3BDb3VudGRvd24oaWQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IHRpbWVyID0gdGhpcy50aW1lcnMuZ2V0KGlkKTtcbiAgICBpZiAodGltZXIpIHtcbiAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xuICAgICAgdGhpcy50aW1lcnMuZGVsZXRlKGlkKTtcbiAgICB9XG4gIH1cblxuICBzdG9wQWxsQ291bnRkb3ducygpOiB2b2lkIHtcbiAgICB0aGlzLnRpbWVycy5mb3JFYWNoKCh0aW1lcikgPT4gY2xlYXJJbnRlcnZhbCh0aW1lcikpO1xuICAgIHRoaXMudGltZXJzLmNsZWFyKCk7XG4gIH1cblxuICBpc1J1bm5pbmcoaWQ6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLnRpbWVycy5oYXMoaWQpO1xuICB9XG5cbiAgZm9ybWF0VGltZShtaWxsaXNlY29uZHM6IG51bWJlcik6IHN0cmluZyB7XG4gICAgY29uc3QgdG90YWxTZWNvbmRzID0gTWF0aC5mbG9vcihtaWxsaXNlY29uZHMgLyAxMDAwKTtcbiAgICBjb25zdCBtaW51dGVzID0gTWF0aC5mbG9vcih0b3RhbFNlY29uZHMgLyA2MCk7XG4gICAgY29uc3Qgc2Vjb25kcyA9IHRvdGFsU2Vjb25kcyAlIDYwO1xuICAgIHJldHVybiBgJHttaW51dGVzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX06JHtzZWNvbmRzLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKX1gO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCBjb3VudGRvd25TZXJ2aWNlID0gbmV3IENvdW50ZG93blNlcnZpY2UoKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQUFhQSxpQkFBQTtJQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUgsZ0JBQUE7O01Bc0RBSSxp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