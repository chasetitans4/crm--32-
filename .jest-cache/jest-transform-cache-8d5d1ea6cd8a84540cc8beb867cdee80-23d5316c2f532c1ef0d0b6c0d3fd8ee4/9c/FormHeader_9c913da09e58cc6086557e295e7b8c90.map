{"version":3,"names":["cov_9hdc0vrmy","actualCoverage","s","FormHeader","f","default","_default","_react","memo","title","description","completionPercentage","isValid","isDirty","lastSaved","autoSaveEnabled","errorCount","warningCount","mode","getStatusIcon","b","_jsxruntime","jsx","_lucidereact","CheckCircle","className","AlertCircle","getStatusText","formatLastSaved","date","now","Date","diffMs","getTime","diffMins","Math","floor","diffHours","toLocaleDateString","jsxs","Save","_badge","Badge","variant","_alert","Alert","AlertDescription","_card","Card","CardContent","_progress","Progress","value","displayName"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\forms\\FormHeader.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { AlertCircle, CheckCircle, Clock, Save } from \"lucide-react\"\nimport { Card, CardContent } from \"../ui/card\"\nimport { Progress } from \"../ui/progress\"\nimport { Badge } from \"../ui/badge\"\nimport { Alert, AlertDescription } from \"../ui/alert\"\n\ninterface FormHeaderProps {\n  title: string\n  description?: string\n  completionPercentage: number\n  isValid: boolean\n  isDirty: boolean\n  lastSaved: Date | null\n  autoSaveEnabled: boolean\n  errorCount: number\n  warningCount: number\n  mode: \"create\" | \"edit\" | \"view\"\n}\n\nexport const FormHeader: React.FC<FormHeaderProps> = React.memo(({\n  title,\n  description,\n  completionPercentage,\n  isValid,\n  isDirty,\n  lastSaved,\n  autoSaveEnabled,\n  errorCount,\n  warningCount,\n  mode,\n}) => {\n  const getStatusIcon = () => {\n    if (isValid) {\n      return <CheckCircle className=\"h-5 w-5 text-green-500\" />\n    }\n    return <AlertCircle className=\"h-5 w-5 text-red-500\" />\n  }\n\n  const getStatusText = () => {\n    if (isValid) {\n      return \"Form is valid and ready to submit\"\n    }\n    return `Please fix ${errorCount} error${errorCount !== 1 ? 's' : ''} before submitting`\n  }\n\n  const formatLastSaved = (date: Date | null) => {\n    if (!date) return \"Never saved\"\n    const now = new Date()\n    const diffMs = now.getTime() - date.getTime()\n    const diffMins = Math.floor(diffMs / 60000)\n    \n    if (diffMins < 1) return \"Just saved\"\n    if (diffMins < 60) return `Saved ${diffMins} minute${diffMins !== 1 ? 's' : ''} ago`\n    \n    const diffHours = Math.floor(diffMins / 60)\n    if (diffHours < 24) return `Saved ${diffHours} hour${diffHours !== 1 ? 's' : ''} ago`\n    \n    return `Saved on ${date.toLocaleDateString()}`\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900\">{title}</h1>\n          {description && (\n            <p className=\"text-gray-600 mt-1\">{description}</p>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-3\">\n          {/* Auto-save status */}\n          {autoSaveEnabled && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <Save className=\"h-4 w-4\" />\n              <span>Auto-save: {formatLastSaved(lastSaved)}</span>\n            </div>\n          )}\n          \n          {/* Mode indicator */}\n          <Badge variant={mode === \"view\" ? \"secondary\" : \"default\"}>\n            {mode === \"create\" ? \"Creating\" : mode === \"edit\" ? \"Editing\" : \"Viewing\"}\n          </Badge>\n        </div>\n      </div>\n\n      {/* Validation Summary */}\n      {(errorCount > 0 || warningCount > 0) && (\n        <Alert variant={errorCount > 0 ? \"destructive\" : \"default\"}>\n          <AlertCircle className=\"h-4 w-4\" />\n          <AlertDescription>\n            {errorCount > 0 && (\n              <span className=\"text-red-600\">\n                {errorCount} error{errorCount !== 1 ? 's' : ''} found\n              </span>\n            )}\n            {errorCount > 0 && warningCount > 0 && <span className=\"mx-2\">â€¢</span>}\n            {warningCount > 0 && (\n              <span className=\"text-yellow-600\">\n                {warningCount} warning{warningCount !== 1 ? 's' : ''}\n              </span>\n            )}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Progress Card */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium\">Form Completion</span>\n            <span className=\"text-sm text-gray-600\">{completionPercentage}%</span>\n          </div>\n          <Progress value={completionPercentage} className=\"h-2\" />\n          \n          {/* Status indicator */}\n          <div className=\"flex items-center gap-2 mt-3\">\n            {getStatusIcon()}\n            <span className={`text-sm ${\n              isValid ? \"text-green-600\" : \"text-red-600\"\n            }`}>\n              {getStatusText()}\n            </span>\n            {isDirty && (\n              <Badge variant=\"outline\" className=\"ml-2\">\n                Unsaved changes\n              </Badge>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n})\n\nFormHeader.displayName = \"FormHeader\"\n\nexport default FormHeader"],"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","ignoreList":[]}