{"version":3,"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\__tests__\\Reports.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport '@testing-library/jest-dom'\nimport Reports from '../Reports'\nimport { AppProvider } from '../../context/AppContext'\nimport type { Client, Task, Contract, Invoice } from '../../types'\n\n// Mock framer-motion\njest.mock('framer-motion', () => ({\n  motion: {\n    div: ({ children, ...props }: any) => <div {...props}>{children}</div>,\n    button: ({ children, ...props }: any) => <button {...props}>{children}</button>,\n  },\n  AnimatePresence: ({ children }: any) => children,\n}))\n\n// Mock chart libraries\njest.mock('recharts', () => ({\n  BarChart: ({ children }: any) => <div data-testid=\"bar-chart\">{children}</div>,\n  LineChart: ({ children }: any) => <div data-testid=\"line-chart\">{children}</div>,\n  PieChart: ({ children }: any) => <div data-testid=\"pie-chart\">{children}</div>,\n  Bar: () => <div data-testid=\"bar\" />,\n  Line: () => <div data-testid=\"line\" />,\n  Pie: () => <div data-testid=\"pie\" />,\n  XAxis: () => <div data-testid=\"x-axis\" />,\n  YAxis: () => <div data-testid=\"y-axis\" />,\n  CartesianGrid: () => <div data-testid=\"cartesian-grid\" />,\n  Tooltip: () => <div data-testid=\"tooltip\" />,\n  Legend: () => <div data-testid=\"legend\" />,\n  ResponsiveContainer: ({ children }: any) => <div data-testid=\"responsive-container\">{children}</div>,\n  Cell: () => <div data-testid=\"cell\" />,\n}))\n\nconst mockClients: Client[] = [\n  {\n    id: '1',\n    name: 'John Doe',\n    email: 'john@example.com',\n    phone: '+1 (555) 123-4567',\n    company: 'Acme Corp',\n    stage: 'lead',\n    value: 50000,\n    lastContact: '2024-01-15',\n    notes: [],\n    projects: [],\n    tags: ['enterprise'],\n    priority: 'high',\n    source: 'website',\n    assignedTo: 'sales-rep-1'\n  },\n  {\n    id: '2',\n    name: 'Jane Smith',\n    email: 'jane@example.com',\n    phone: '+1 (555) 987-6543',\n    company: 'Tech Solutions',\n    stage: 'qualified',\n    value: 75000,\n    lastContact: '2024-01-10',\n    notes: [],\n    projects: [],\n    tags: ['tech'],\n    priority: 'medium',\n    source: 'referral',\n    assignedTo: 'sales-rep-2'\n  },\n  {\n    id: '3',\n    name: 'Bob Wilson',\n    email: 'bob@example.com',\n    phone: '+1 (555) 456-7890',\n    company: 'StartupXYZ',\n    stage: 'closed',\n    value: 25000,\n    lastContact: '2024-01-05',\n    notes: [],\n    projects: [],\n    tags: ['startup'],\n    priority: 'low',\n    source: 'cold-call',\n    assignedTo: 'sales-rep-1'\n  }\n]\n\nconst mockTasks: Task[] = [\n  {\n    id: '1',\n    title: 'Follow up with John Doe',\n    description: 'Schedule demo call',\n    dueDate: '2024-01-20',\n    priority: 'high',\n    status: 'pending',\n    assignedTo: 'sales-rep-1',\n    clientId: '1'\n  },\n  {\n    id: '2',\n    title: 'Prepare proposal',\n    description: 'Create proposal',\n    dueDate: '2024-01-18',\n    priority: 'medium',\n    status: 'completed',\n    assignedTo: 'sales-rep-2',\n    clientId: '2'\n  }\n]\n\nconst mockContracts: Contract[] = [\n  {\n    id: '1',\n    clientId: '3',\n    title: 'Software Development Contract',\n    value: 25000,\n    startDate: '2024-01-01',\n    endDate: '2024-06-01',\n    status: 'active',\n    terms: 'Standard terms'\n  }\n]\n\nconst mockInvoices: Invoice[] = [\n  {\n    id: '1',\n    clientId: '3',\n    contractId: '1',\n    amount: 5000,\n    dueDate: '2024-01-30',\n    status: 'pending',\n    items: []\n  },\n  {\n    id: '2',\n    clientId: '3',\n    contractId: '1',\n    amount: 3000,\n    dueDate: '2024-02-15',\n    status: 'paid',\n    items: []\n  }\n]\n\nconst mockSalesStages = [\n  { id: 'lead', name: 'Lead', color: '#3B82F6' },\n  { id: 'qualified', name: 'Qualified', color: '#10B981' },\n  { id: 'proposal', name: 'Proposal', color: '#F59E0B' },\n  { id: 'closed', name: 'Closed', color: '#EF4444' }\n]\n\nconst mockInitialState = {\n  clients: mockClients,\n  salesStages: mockSalesStages,\n  contracts: mockContracts,\n  invoices: mockInvoices,\n  tasks: mockTasks,\n  projects: [],\n  reports: [],\n  settings: {\n    currency: 'USD',\n    dateFormat: 'MM/DD/YYYY',\n    timezone: 'UTC'\n  }\n}\n\nconst renderWithProvider = (component: React.ReactElement) => {\n  return render(\n    <AppProvider initialState={mockInitialState}>\n      {component}\n    </AppProvider>\n  )\n}\n\ndescribe('Reports Component', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  test('renders reports component', () => {\n    renderWithProvider(<Reports />)\n    expect(screen.getByText('Reports & Analytics')).toBeInTheDocument()\n  })\n\n  test('displays sales overview metrics', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Sales Overview')).toBeInTheDocument()\n    expect(screen.getByText('Total Revenue')).toBeInTheDocument()\n    expect(screen.getByText('Active Clients')).toBeInTheDocument()\n    expect(screen.getByText('Conversion Rate')).toBeInTheDocument()\n  })\n\n  test('shows correct total revenue calculation', () => {\n    renderWithProvider(<Reports />)\n    \n    // Total revenue should be sum of all client values\n    const totalRevenue = mockClients.reduce((sum, client) => sum + client.value, 0)\n    expect(screen.getByText(`$${totalRevenue.toLocaleString()}`)).toBeInTheDocument()\n  })\n\n  test('displays correct client count', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText(mockClients.length.toString())).toBeInTheDocument()\n  })\n\n  test('calculates conversion rate correctly', () => {\n    renderWithProvider(<Reports />)\n    \n    const closedClients = mockClients.filter(c => c.stage === 'closed').length\n    const totalClients = mockClients.length\n    const conversionRate = Math.round((closedClients / totalClients) * 100)\n    \n    expect(screen.getByText(`${conversionRate}%`)).toBeInTheDocument()\n  })\n\n  test('displays sales pipeline chart', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Sales Pipeline')).toBeInTheDocument()\n    expect(screen.getByTestId('bar-chart')).toBeInTheDocument()\n  })\n\n  test('shows revenue trend chart', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Revenue Trend')).toBeInTheDocument()\n    expect(screen.getByTestId('line-chart')).toBeInTheDocument()\n  })\n\n  test('displays client source distribution', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Client Sources')).toBeInTheDocument()\n    expect(screen.getByTestId('pie-chart')).toBeInTheDocument()\n  })\n\n  test('shows task completion metrics', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Task Performance')).toBeInTheDocument()\n    \n    const completedTasks = mockTasks.filter(t => t.status === 'completed').length\n    const totalTasks = mockTasks.length\n    const completionRate = Math.round((completedTasks / totalTasks) * 100)\n    \n    expect(screen.getByText(`${completionRate}%`)).toBeInTheDocument()\n  })\n\n  test('displays invoice status breakdown', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Invoice Status')).toBeInTheDocument()\n    \n    const pendingInvoices = mockInvoices.filter(i => i.status === 'pending').length\n    const paidInvoices = mockInvoices.filter(i => i.status === 'paid').length\n    \n    expect(pendingInvoices).toBe(1)\n    expect(paidInvoices).toBe(1)\n  })\n\n  test('shows contract performance metrics', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Contract Performance')).toBeInTheDocument()\n    expect(screen.getByText('Active Contracts')).toBeInTheDocument()\n    expect(screen.getByText(mockContracts.length.toString())).toBeInTheDocument()\n  })\n\n  test('date range filter works', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const dateRangeButton = screen.getByText('Last 30 Days')\n    await user.click(dateRangeButton)\n    \n    expect(screen.getByText('Last 7 Days')).toBeInTheDocument()\n    expect(screen.getByText('Last 90 Days')).toBeInTheDocument()\n    expect(screen.getByText('Custom Range')).toBeInTheDocument()\n  })\n\n  test('export report functionality works', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const exportButton = screen.getByText('Export Report')\n    await user.click(exportButton)\n    \n    expect(screen.getByText('Export Options')).toBeInTheDocument()\n    expect(screen.getByText('PDF')).toBeInTheDocument()\n    expect(screen.getByText('Excel')).toBeInTheDocument()\n    expect(screen.getByText('CSV')).toBeInTheDocument()\n  })\n\n  test('report type switching works', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const salesReportTab = screen.getByText('Sales Report')\n    const performanceReportTab = screen.getByText('Performance Report')\n    \n    await user.click(performanceReportTab)\n    expect(screen.getByText('Team Performance')).toBeInTheDocument()\n    \n    await user.click(salesReportTab)\n    expect(screen.getByText('Sales Overview')).toBeInTheDocument()\n  })\n\n  test('displays sales rep performance', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Sales Rep Performance')).toBeInTheDocument()\n    expect(screen.getByText('sales-rep-1')).toBeInTheDocument()\n    expect(screen.getByText('sales-rep-2')).toBeInTheDocument()\n  })\n\n  test('shows priority distribution', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Priority Distribution')).toBeInTheDocument()\n    \n    const highPriorityCount = mockClients.filter(c => c.priority === 'high').length\n    const mediumPriorityCount = mockClients.filter(c => c.priority === 'medium').length\n    const lowPriorityCount = mockClients.filter(c => c.priority === 'low').length\n    \n    expect(highPriorityCount).toBe(1)\n    expect(mediumPriorityCount).toBe(1)\n    expect(lowPriorityCount).toBe(1)\n  })\n\n  test('displays stage progression metrics', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Stage Progression')).toBeInTheDocument()\n    \n    // Check stage distribution\n    const leadCount = mockClients.filter(c => c.stage === 'lead').length\n    const qualifiedCount = mockClients.filter(c => c.stage === 'qualified').length\n    const closedCount = mockClients.filter(c => c.stage === 'closed').length\n    \n    expect(leadCount).toBe(1)\n    expect(qualifiedCount).toBe(1)\n    expect(closedCount).toBe(1)\n  })\n\n  test('shows average deal size', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Average Deal Size')).toBeInTheDocument()\n    \n    const totalValue = mockClients.reduce((sum, client) => sum + client.value, 0)\n    const averageValue = Math.round(totalValue / mockClients.length)\n    \n    expect(screen.getByText(`$${averageValue.toLocaleString()}`)).toBeInTheDocument()\n  })\n\n  test('displays monthly recurring revenue', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Monthly Recurring Revenue')).toBeInTheDocument()\n  })\n\n  test('shows client acquisition cost', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Client Acquisition Cost')).toBeInTheDocument()\n  })\n\n  test('displays sales velocity metrics', () => {\n    renderWithProvider(<Reports />)\n    \n    expect(screen.getByText('Sales Velocity')).toBeInTheDocument()\n  })\n\n  test('handles empty data gracefully', () => {\n    const emptyState = {\n      ...mockInitialState,\n      clients: [],\n      tasks: [],\n      contracts: [],\n      invoices: []\n    }\n    \n    render(\n      <AppProvider initialState={emptyState}>\n        <Reports />\n      </AppProvider>\n    )\n    \n    expect(screen.getByText('No data available')).toBeInTheDocument()\n  })\n\n  test('refresh data functionality works', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const refreshButton = screen.getByText('Refresh Data')\n    await user.click(refreshButton)\n    \n    // Should show loading state\n    expect(screen.getByText('Refreshing...')).toBeInTheDocument()\n  })\n\n  test('custom date range picker works', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const dateRangeButton = screen.getByText('Last 30 Days')\n    await user.click(dateRangeButton)\n    \n    const customRangeOption = screen.getByText('Custom Range')\n    await user.click(customRangeOption)\n    \n    expect(screen.getByText('Select Date Range')).toBeInTheDocument()\n  })\n\n  test('drill-down functionality works', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    // Click on a chart element to drill down\n    const chartElement = screen.getByTestId('bar-chart')\n    await user.click(chartElement)\n    \n    expect(screen.getByText('Detailed View')).toBeInTheDocument()\n  })\n\n  test('report scheduling works', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const scheduleButton = screen.getByText('Schedule Report')\n    await user.click(scheduleButton)\n    \n    expect(screen.getByText('Schedule Options')).toBeInTheDocument()\n    expect(screen.getByText('Daily')).toBeInTheDocument()\n    expect(screen.getByText('Weekly')).toBeInTheDocument()\n    expect(screen.getByText('Monthly')).toBeInTheDocument()\n  })\n\n  test('responsive design works correctly', () => {\n    // Mock mobile viewport\n    Object.defineProperty(window, 'innerWidth', {\n      writable: true,\n      configurable: true,\n      value: 768,\n    })\n    \n    renderWithProvider(<Reports />)\n    \n    const reportsContainer = screen.getByText('Reports & Analytics').closest('div')\n    expect(reportsContainer).toBeInTheDocument()\n  })\n\n  test('chart tooltips display correctly', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const chartElement = screen.getByTestId('bar-chart')\n    await user.hover(chartElement)\n    \n    expect(screen.getByTestId('tooltip')).toBeInTheDocument()\n  })\n\n  test('legend interactions work', async () => {\n    const user = userEvent.setup()\n    renderWithProvider(<Reports />)\n    \n    const legendElement = screen.getByTestId('legend')\n    await user.click(legendElement)\n    \n    // Should toggle data series visibility\n    expect(legendElement).toBeInTheDocument()\n  })\n})"],"names":["jest","mock","motion","div","children","props","button","AnimatePresence","BarChart","data-testid","LineChart","PieChart","Bar","Line","Pie","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Cell","mockClients","id","name","email","phone","company","stage","value","lastContact","notes","projects","tags","priority","source","assignedTo","mockTasks","title","description","dueDate","status","clientId","mockContracts","startDate","endDate","terms","mockInvoices","contractId","amount","items","mockSalesStages","color","mockInitialState","clients","salesStages","contracts","invoices","tasks","reports","settings","currency","dateFormat","timezone","renderWithProvider","component","render","AppProvider","initialState","describe","beforeEach","clearAllMocks","test","Reports","expect","screen","getByText","toBeInTheDocument","totalRevenue","reduce","sum","client","toLocaleString","length","toString","closedClients","filter","c","totalClients","conversionRate","Math","round","getByTestId","completedTasks","t","totalTasks","completionRate","pendingInvoices","i","paidInvoices","toBe","user","userEvent","setup","dateRangeButton","click","exportButton","salesReportTab","performanceReportTab","highPriorityCount","mediumPriorityCount","lowPriorityCount","leadCount","qualifiedCount","closedCount","totalValue","averageValue","emptyState","refreshButton","customRangeOption","chartElement","scheduleButton","Object","defineProperty","window","writable","configurable","reportsContainer","closest","hover","legendElement"],"mappings":";AAQA,qBAAqB;AACrBA,KAAKC,IAAI,CAAC,iBAAiB,IAAO,CAAA;QAChCC,QAAQ;YACNC,KAAK,CAAC,EAAEC,QAAQ,EAAE,GAAGC,OAAY,iBAAK,qBAACF;oBAAK,GAAGE,KAAK;8BAAGD;;YACvDE,QAAQ,CAAC,EAAEF,QAAQ,EAAE,GAAGC,OAAY,iBAAK,qBAACC;oBAAQ,GAAGD,KAAK;8BAAGD;;QAC/D;QACAG,iBAAiB,CAAC,EAAEH,QAAQ,EAAO,GAAKA;IAC1C,CAAA;AAEA,uBAAuB;AACvBJ,KAAKC,IAAI,CAAC,YAAY,IAAO,CAAA;QAC3BO,UAAU,CAAC,EAAEJ,QAAQ,EAAO,iBAAK,qBAACD;gBAAIM,eAAY;0BAAaL;;QAC/DM,WAAW,CAAC,EAAEN,QAAQ,EAAO,iBAAK,qBAACD;gBAAIM,eAAY;0BAAcL;;QACjEO,UAAU,CAAC,EAAEP,QAAQ,EAAO,iBAAK,qBAACD;gBAAIM,eAAY;0BAAaL;;QAC/DQ,KAAK,kBAAM,qBAACT;gBAAIM,eAAY;;QAC5BI,MAAM,kBAAM,qBAACV;gBAAIM,eAAY;;QAC7BK,KAAK,kBAAM,qBAACX;gBAAIM,eAAY;;QAC5BM,OAAO,kBAAM,qBAACZ;gBAAIM,eAAY;;QAC9BO,OAAO,kBAAM,qBAACb;gBAAIM,eAAY;;QAC9BQ,eAAe,kBAAM,qBAACd;gBAAIM,eAAY;;QACtCS,SAAS,kBAAM,qBAACf;gBAAIM,eAAY;;QAChCU,QAAQ,kBAAM,qBAAChB;gBAAIM,eAAY;;QAC/BW,qBAAqB,CAAC,EAAEhB,QAAQ,EAAO,iBAAK,qBAACD;gBAAIM,eAAY;0BAAwBL;;QACrFiB,MAAM,kBAAM,qBAAClB;gBAAIM,eAAY;;IAC/B,CAAA;;;;;8DAhCkB;wBACiC;kEAC7B;QACf;gEACa;4BACQ;;;;;;AA6B5B,MAAMa,cAAwB;IAC5B;QACEC,IAAI;QACJC,MAAM;QACNC,OAAO;QACPC,OAAO;QACPC,SAAS;QACTC,OAAO;QACPC,OAAO;QACPC,aAAa;QACbC,OAAO,EAAE;QACTC,UAAU,EAAE;QACZC,MAAM;YAAC;SAAa;QACpBC,UAAU;QACVC,QAAQ;QACRC,YAAY;IACd;IACA;QACEb,IAAI;QACJC,MAAM;QACNC,OAAO;QACPC,OAAO;QACPC,SAAS;QACTC,OAAO;QACPC,OAAO;QACPC,aAAa;QACbC,OAAO,EAAE;QACTC,UAAU,EAAE;QACZC,MAAM;YAAC;SAAO;QACdC,UAAU;QACVC,QAAQ;QACRC,YAAY;IACd;IACA;QACEb,IAAI;QACJC,MAAM;QACNC,OAAO;QACPC,OAAO;QACPC,SAAS;QACTC,OAAO;QACPC,OAAO;QACPC,aAAa;QACbC,OAAO,EAAE;QACTC,UAAU,EAAE;QACZC,MAAM;YAAC;SAAU;QACjBC,UAAU;QACVC,QAAQ;QACRC,YAAY;IACd;CACD;AAED,MAAMC,YAAoB;IACxB;QACEd,IAAI;QACJe,OAAO;QACPC,aAAa;QACbC,SAAS;QACTN,UAAU;QACVO,QAAQ;QACRL,YAAY;QACZM,UAAU;IACZ;IACA;QACEnB,IAAI;QACJe,OAAO;QACPC,aAAa;QACbC,SAAS;QACTN,UAAU;QACVO,QAAQ;QACRL,YAAY;QACZM,UAAU;IACZ;CACD;AAED,MAAMC,gBAA4B;IAChC;QACEpB,IAAI;QACJmB,UAAU;QACVJ,OAAO;QACPT,OAAO;QACPe,WAAW;QACXC,SAAS;QACTJ,QAAQ;QACRK,OAAO;IACT;CACD;AAED,MAAMC,eAA0B;IAC9B;QACExB,IAAI;QACJmB,UAAU;QACVM,YAAY;QACZC,QAAQ;QACRT,SAAS;QACTC,QAAQ;QACRS,OAAO,EAAE;IACX;IACA;QACE3B,IAAI;QACJmB,UAAU;QACVM,YAAY;QACZC,QAAQ;QACRT,SAAS;QACTC,QAAQ;QACRS,OAAO,EAAE;IACX;CACD;AAED,MAAMC,kBAAkB;IACtB;QAAE5B,IAAI;QAAQC,MAAM;QAAQ4B,OAAO;IAAU;IAC7C;QAAE7B,IAAI;QAAaC,MAAM;QAAa4B,OAAO;IAAU;IACvD;QAAE7B,IAAI;QAAYC,MAAM;QAAY4B,OAAO;IAAU;IACrD;QAAE7B,IAAI;QAAUC,MAAM;QAAU4B,OAAO;IAAU;CAClD;AAED,MAAMC,mBAAmB;IACvBC,SAAShC;IACTiC,aAAaJ;IACbK,WAAWb;IACXc,UAAUV;IACVW,OAAOrB;IACPL,UAAU,EAAE;IACZ2B,SAAS,EAAE;IACXC,UAAU;QACRC,UAAU;QACVC,YAAY;QACZC,UAAU;IACZ;AACF;AAEA,MAAMC,qBAAqB,CAACC;IAC1B,OAAOC,IAAAA,cAAM,gBACX,qBAACC,uBAAW;QAACC,cAAcf;kBACxBY;;AAGP;AAEAI,SAAS,qBAAqB;IAC5BC,WAAW;QACTtE,KAAKuE,aAAa;IACpB;IAEAC,KAAK,6BAA6B;QAChCR,iCAAmB,qBAACS,gBAAO;QAC3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,wBAAwBC,iBAAiB;IACnE;IAEAL,KAAK,mCAAmC;QACtCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,cAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;QAC3DH,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,cAAM,CAACC,SAAS,CAAC,oBAAoBC,iBAAiB;IAC/D;IAEAL,KAAK,2CAA2C;QAC9CR,iCAAmB,qBAACS,gBAAO;QAE3B,mDAAmD;QACnD,MAAMK,eAAexD,YAAYyD,MAAM,CAAC,CAACC,KAAKC,SAAWD,MAAMC,OAAOpD,KAAK,EAAE;QAC7E6C,OAAOC,cAAM,CAACC,SAAS,CAAC,CAAC,CAAC,EAAEE,aAAaI,cAAc,IAAI,GAAGL,iBAAiB;IACjF;IAEAL,KAAK,iCAAiC;QACpCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAACtD,YAAY6D,MAAM,CAACC,QAAQ,KAAKP,iBAAiB;IAC3E;IAEAL,KAAK,wCAAwC;QAC3CR,iCAAmB,qBAACS,gBAAO;QAE3B,MAAMY,gBAAgB/D,YAAYgE,MAAM,CAACC,CAAAA,IAAKA,EAAE3D,KAAK,KAAK,UAAUuD,MAAM;QAC1E,MAAMK,eAAelE,YAAY6D,MAAM;QACvC,MAAMM,iBAAiBC,KAAKC,KAAK,CAAC,AAACN,gBAAgBG,eAAgB;QAEnEd,OAAOC,cAAM,CAACC,SAAS,CAAC,GAAGa,eAAe,CAAC,CAAC,GAAGZ,iBAAiB;IAClE;IAEAL,KAAK,iCAAiC;QACpCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,cAAM,CAACiB,WAAW,CAAC,cAAcf,iBAAiB;IAC3D;IAEAL,KAAK,6BAA6B;QAChCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;QAC3DH,OAAOC,cAAM,CAACiB,WAAW,CAAC,eAAef,iBAAiB;IAC5D;IAEAL,KAAK,uCAAuC;QAC1CR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,cAAM,CAACiB,WAAW,CAAC,cAAcf,iBAAiB;IAC3D;IAEAL,KAAK,iCAAiC;QACpCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;QAE9D,MAAMgB,iBAAiBxD,UAAUiD,MAAM,CAACQ,CAAAA,IAAKA,EAAErD,MAAM,KAAK,aAAa0C,MAAM;QAC7E,MAAMY,aAAa1D,UAAU8C,MAAM;QACnC,MAAMa,iBAAiBN,KAAKC,KAAK,CAAC,AAACE,iBAAiBE,aAAc;QAElErB,OAAOC,cAAM,CAACC,SAAS,CAAC,GAAGoB,eAAe,CAAC,CAAC,GAAGnB,iBAAiB;IAClE;IAEAL,KAAK,qCAAqC;QACxCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAE5D,MAAMoB,kBAAkBlD,aAAauC,MAAM,CAACY,CAAAA,IAAKA,EAAEzD,MAAM,KAAK,WAAW0C,MAAM;QAC/E,MAAMgB,eAAepD,aAAauC,MAAM,CAACY,CAAAA,IAAKA,EAAEzD,MAAM,KAAK,QAAQ0C,MAAM;QAEzET,OAAOuB,iBAAiBG,IAAI,CAAC;QAC7B1B,OAAOyB,cAAcC,IAAI,CAAC;IAC5B;IAEA5B,KAAK,sCAAsC;QACzCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,yBAAyBC,iBAAiB;QAClEH,OAAOC,cAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;QAC9DH,OAAOC,cAAM,CAACC,SAAS,CAACjC,cAAcwC,MAAM,CAACC,QAAQ,KAAKP,iBAAiB;IAC7E;IAEAL,KAAK,2BAA2B;QAC9B,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAM+B,kBAAkB7B,cAAM,CAACC,SAAS,CAAC;QACzC,MAAMyB,KAAKI,KAAK,CAACD;QAEjB9B,OAAOC,cAAM,CAACC,SAAS,CAAC,gBAAgBC,iBAAiB;QACzDH,OAAOC,cAAM,CAACC,SAAS,CAAC,iBAAiBC,iBAAiB;QAC1DH,OAAOC,cAAM,CAACC,SAAS,CAAC,iBAAiBC,iBAAiB;IAC5D;IAEAL,KAAK,qCAAqC;QACxC,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAMiC,eAAe/B,cAAM,CAACC,SAAS,CAAC;QACtC,MAAMyB,KAAKI,KAAK,CAACC;QAEjBhC,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;QAC5DH,OAAOC,cAAM,CAACC,SAAS,CAAC,QAAQC,iBAAiB;QACjDH,OAAOC,cAAM,CAACC,SAAS,CAAC,UAAUC,iBAAiB;QACnDH,OAAOC,cAAM,CAACC,SAAS,CAAC,QAAQC,iBAAiB;IACnD;IAEAL,KAAK,+BAA+B;QAClC,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAMkC,iBAAiBhC,cAAM,CAACC,SAAS,CAAC;QACxC,MAAMgC,uBAAuBjC,cAAM,CAACC,SAAS,CAAC;QAE9C,MAAMyB,KAAKI,KAAK,CAACG;QACjBlC,OAAOC,cAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;QAE9D,MAAMwB,KAAKI,KAAK,CAACE;QACjBjC,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;IAC9D;IAEAL,KAAK,kCAAkC;QACrCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,0BAA0BC,iBAAiB;QACnEH,OAAOC,cAAM,CAACC,SAAS,CAAC,gBAAgBC,iBAAiB;QACzDH,OAAOC,cAAM,CAACC,SAAS,CAAC,gBAAgBC,iBAAiB;IAC3D;IAEAL,KAAK,+BAA+B;QAClCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,0BAA0BC,iBAAiB;QAEnE,MAAMgC,oBAAoBvF,YAAYgE,MAAM,CAACC,CAAAA,IAAKA,EAAErD,QAAQ,KAAK,QAAQiD,MAAM;QAC/E,MAAM2B,sBAAsBxF,YAAYgE,MAAM,CAACC,CAAAA,IAAKA,EAAErD,QAAQ,KAAK,UAAUiD,MAAM;QACnF,MAAM4B,mBAAmBzF,YAAYgE,MAAM,CAACC,CAAAA,IAAKA,EAAErD,QAAQ,KAAK,OAAOiD,MAAM;QAE7ET,OAAOmC,mBAAmBT,IAAI,CAAC;QAC/B1B,OAAOoC,qBAAqBV,IAAI,CAAC;QACjC1B,OAAOqC,kBAAkBX,IAAI,CAAC;IAChC;IAEA5B,KAAK,sCAAsC;QACzCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;QAE/D,2BAA2B;QAC3B,MAAMmC,YAAY1F,YAAYgE,MAAM,CAACC,CAAAA,IAAKA,EAAE3D,KAAK,KAAK,QAAQuD,MAAM;QACpE,MAAM8B,iBAAiB3F,YAAYgE,MAAM,CAACC,CAAAA,IAAKA,EAAE3D,KAAK,KAAK,aAAauD,MAAM;QAC9E,MAAM+B,cAAc5F,YAAYgE,MAAM,CAACC,CAAAA,IAAKA,EAAE3D,KAAK,KAAK,UAAUuD,MAAM;QAExET,OAAOsC,WAAWZ,IAAI,CAAC;QACvB1B,OAAOuC,gBAAgBb,IAAI,CAAC;QAC5B1B,OAAOwC,aAAad,IAAI,CAAC;IAC3B;IAEA5B,KAAK,2BAA2B;QAC9BR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;QAE/D,MAAMsC,aAAa7F,YAAYyD,MAAM,CAAC,CAACC,KAAKC,SAAWD,MAAMC,OAAOpD,KAAK,EAAE;QAC3E,MAAMuF,eAAe1B,KAAKC,KAAK,CAACwB,aAAa7F,YAAY6D,MAAM;QAE/DT,OAAOC,cAAM,CAACC,SAAS,CAAC,CAAC,CAAC,EAAEwC,aAAalC,cAAc,IAAI,GAAGL,iBAAiB;IACjF;IAEAL,KAAK,sCAAsC;QACzCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,8BAA8BC,iBAAiB;IACzE;IAEAL,KAAK,iCAAiC;QACpCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,4BAA4BC,iBAAiB;IACvE;IAEAL,KAAK,mCAAmC;QACtCR,iCAAmB,qBAACS,gBAAO;QAE3BC,OAAOC,cAAM,CAACC,SAAS,CAAC,mBAAmBC,iBAAiB;IAC9D;IAEAL,KAAK,iCAAiC;QACpC,MAAM6C,aAAa;YACjB,GAAGhE,gBAAgB;YACnBC,SAAS,EAAE;YACXI,OAAO,EAAE;YACTF,WAAW,EAAE;YACbC,UAAU,EAAE;QACd;QAEAS,IAAAA,cAAM,gBACJ,qBAACC,uBAAW;YAACC,cAAciD;sBACzB,cAAA,qBAAC5C,gBAAO;;QAIZC,OAAOC,cAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;IACjE;IAEAL,KAAK,oCAAoC;QACvC,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAM6C,gBAAgB3C,cAAM,CAACC,SAAS,CAAC;QACvC,MAAMyB,KAAKI,KAAK,CAACa;QAEjB,4BAA4B;QAC5B5C,OAAOC,cAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;IAC7D;IAEAL,KAAK,kCAAkC;QACrC,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAM+B,kBAAkB7B,cAAM,CAACC,SAAS,CAAC;QACzC,MAAMyB,KAAKI,KAAK,CAACD;QAEjB,MAAMe,oBAAoB5C,cAAM,CAACC,SAAS,CAAC;QAC3C,MAAMyB,KAAKI,KAAK,CAACc;QAEjB7C,OAAOC,cAAM,CAACC,SAAS,CAAC,sBAAsBC,iBAAiB;IACjE;IAEAL,KAAK,kCAAkC;QACrC,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,yCAAyC;QACzC,MAAM+C,eAAe7C,cAAM,CAACiB,WAAW,CAAC;QACxC,MAAMS,KAAKI,KAAK,CAACe;QAEjB9C,OAAOC,cAAM,CAACC,SAAS,CAAC,kBAAkBC,iBAAiB;IAC7D;IAEAL,KAAK,2BAA2B;QAC9B,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAMgD,iBAAiB9C,cAAM,CAACC,SAAS,CAAC;QACxC,MAAMyB,KAAKI,KAAK,CAACgB;QAEjB/C,OAAOC,cAAM,CAACC,SAAS,CAAC,qBAAqBC,iBAAiB;QAC9DH,OAAOC,cAAM,CAACC,SAAS,CAAC,UAAUC,iBAAiB;QACnDH,OAAOC,cAAM,CAACC,SAAS,CAAC,WAAWC,iBAAiB;QACpDH,OAAOC,cAAM,CAACC,SAAS,CAAC,YAAYC,iBAAiB;IACvD;IAEAL,KAAK,qCAAqC;QACxC,uBAAuB;QACvBkD,OAAOC,cAAc,CAACC,QAAQ,cAAc;YAC1CC,UAAU;YACVC,cAAc;YACdjG,OAAO;QACT;QAEAmC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAMsD,mBAAmBpD,cAAM,CAACC,SAAS,CAAC,uBAAuBoD,OAAO,CAAC;QACzEtD,OAAOqD,kBAAkBlD,iBAAiB;IAC5C;IAEAL,KAAK,oCAAoC;QACvC,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAM+C,eAAe7C,cAAM,CAACiB,WAAW,CAAC;QACxC,MAAMS,KAAK4B,KAAK,CAACT;QAEjB9C,OAAOC,cAAM,CAACiB,WAAW,CAAC,YAAYf,iBAAiB;IACzD;IAEAL,KAAK,4BAA4B;QAC/B,MAAM6B,OAAOC,kBAAS,CAACC,KAAK;QAC5BvC,iCAAmB,qBAACS,gBAAO;QAE3B,MAAMyD,gBAAgBvD,cAAM,CAACiB,WAAW,CAAC;QACzC,MAAMS,KAAKI,KAAK,CAACyB;QAEjB,uCAAuC;QACvCxD,OAAOwD,eAAerD,iBAAiB;IACzC;AACF"}