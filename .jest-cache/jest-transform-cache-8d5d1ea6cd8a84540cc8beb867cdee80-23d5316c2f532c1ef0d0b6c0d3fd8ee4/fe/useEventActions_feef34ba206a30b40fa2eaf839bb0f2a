39c80d9e8142ff0697b868ff96ee90df
"use client";
"use strict";

/* istanbul ignore next */
function cov_1kyhjihk44() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useEventActions.ts";
  var hash = "423daf7f02a099fc2430dc5f673789d0ef58b5fe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useEventActions.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 52
        }
      },
      "4": {
        start: {
          line: 13,
          column: 24
        },
        end: {
          line: 95,
          column: 1
        }
      },
      "5": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 64
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "7": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 63
        }
      },
      "8": {
        start: {
          line: 17,
          column: 37
        },
        end: {
          line: 17,
          column: 61
        }
      },
      "9": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 21,
          column: 9
        }
      },
      "10": {
        start: {
          line: 20,
          column: 12
        },
        end: {
          line: 20,
          column: 69
        }
      },
      "11": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "12": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 63
        }
      },
      "14": {
        start: {
          line: 30,
          column: 37
        },
        end: {
          line: 30,
          column: 61
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 34,
          column: 9
        }
      },
      "16": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 33,
          column: 69
        }
      },
      "17": {
        start: {
          line: 35,
          column: 30
        },
        end: {
          line: 35,
          column: 73
        }
      },
      "18": {
        start: {
          line: 35,
          column: 57
        },
        end: {
          line: 35,
          column: 72
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "20": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 47
        }
      },
      "21": {
        start: {
          line: 39,
          column: 29
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 49,
          column: 11
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 28
        }
      },
      "24": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "25": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 63
        }
      },
      "26": {
        start: {
          line: 54,
          column: 37
        },
        end: {
          line: 54,
          column: 61
        }
      },
      "27": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "28": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 69
        }
      },
      "29": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 59,
          column: 73
        }
      },
      "30": {
        start: {
          line: 59,
          column: 57
        },
        end: {
          line: 59,
          column: 72
        }
      },
      "31": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "32": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 47
        }
      },
      "33": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "34": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "35": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "36": {
        start: {
          line: 69,
          column: 42
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "37": {
        start: {
          line: 71,
          column: 28
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "38": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 65
        }
      },
      "39": {
        start: {
          line: 72,
          column: 44
        },
        end: {
          line: 72,
          column: 63
        }
      },
      "40": {
        start: {
          line: 74,
          column: 33
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "41": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "42": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 68
        }
      },
      "43": {
        start: {
          line: 79,
          column: 30
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "44": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 115
        }
      },
      "45": {
        start: {
          line: 80,
          column: 44
        },
        end: {
          line: 80,
          column: 113
        }
      },
      "46": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "47": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 65
        }
      },
      "48": {
        start: {
          line: 83,
          column: 44
        },
        end: {
          line: 83,
          column: 63
        }
      },
      "49": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 94,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 24
          },
          end: {
            line: 13,
            column: 25
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 21
          },
          end: {
            line: 15,
            column: 22
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 17,
            column: 26
          },
          end: {
            line: 17,
            column: 27
          }
        },
        loc: {
          start: {
            line: 17,
            column: 37
          },
          end: {
            line: 17,
            column: 61
          }
        },
        line: 17
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 25
          }
        },
        loc: {
          start: {
            line: 28,
            column: 45
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 26
          },
          end: {
            line: 30,
            column: 27
          }
        },
        loc: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 30,
            column: 61
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 35,
            column: 48
          },
          end: {
            line: 35,
            column: 49
          }
        },
        loc: {
          start: {
            line: 35,
            column: 57
          },
          end: {
            line: 35,
            column: 72
          }
        },
        line: 35
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 25
          }
        },
        loc: {
          start: {
            line: 52,
            column: 36
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 54,
            column: 27
          }
        },
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 61
          }
        },
        line: 54
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 59,
            column: 48
          },
          end: {
            line: 59,
            column: 49
          }
        },
        loc: {
          start: {
            line: 59,
            column: 57
          },
          end: {
            line: 59,
            column: 72
          }
        },
        line: 59
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 68,
            column: 22
          }
        },
        loc: {
          start: {
            line: 68,
            column: 27
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 68
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 69,
            column: 33
          },
          end: {
            line: 69,
            column: 34
          }
        },
        loc: {
          start: {
            line: 69,
            column: 42
          },
          end: {
            line: 69,
            column: 57
          }
        },
        line: 69
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 71,
            column: 29
          }
        },
        loc: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 71
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 72,
            column: 36
          }
        },
        loc: {
          start: {
            line: 72,
            column: 44
          },
          end: {
            line: 72,
            column: 63
          }
        },
        line: 72
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 74,
            column: 33
          },
          end: {
            line: 74,
            column: 34
          }
        },
        loc: {
          start: {
            line: 74,
            column: 55
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 74
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 75,
            column: 35
          },
          end: {
            line: 75,
            column: 36
          }
        },
        loc: {
          start: {
            line: 75,
            column: 44
          },
          end: {
            line: 77,
            column: 9
          }
        },
        line: 75
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 79,
            column: 30
          },
          end: {
            line: 79,
            column: 31
          }
        },
        loc: {
          start: {
            line: 79,
            column: 42
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 80,
            column: 35
          },
          end: {
            line: 80,
            column: 36
          }
        },
        loc: {
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 80,
            column: 113
          }
        },
        line: 80
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 82,
            column: 28
          },
          end: {
            line: 82,
            column: 29
          }
        },
        loc: {
          start: {
            line: 82,
            column: 36
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 82
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 83,
            column: 35
          },
          end: {
            line: 83,
            column: 36
          }
        },
        loc: {
          start: {
            line: 83,
            column: 44
          },
          end: {
            line: 83,
            column: 63
          }
        },
        line: 83
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 8
          },
          end: {
            line: 21,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 34,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 76,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 19
          },
          end: {
            line: 76,
            column: 42
          }
        }, {
          start: {
            line: 76,
            column: 46
          },
          end: {
            line: 76,
            column: 67
          }
        }],
        line: 76
      },
      "6": {
        loc: {
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 80,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 44
          },
          end: {
            line: 80,
            column: 78
          }
        }, {
          start: {
            line: 80,
            column: 82
          },
          end: {
            line: 80,
            column: 113
          }
        }],
        line: 80
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useEventActions.ts"],
      sourcesContent: ["\"use client\"\n\nimport { useAppContext } from '../context/AppContext'\nimport type { Event, NewEvent } from '../types'\n\nexport const useEventActions = () => {\n  const { state, dispatch } = useAppContext()\n\n  const addEvent = async (newEvent: NewEvent): Promise<void> => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500))\n    \n    // Simulate 5% chance of network error\n    if (Math.random() < 0.05) {\n      throw new Error('Network error: Failed to create event')\n    }\n\n    // AppContext reducer assigns the id\n    dispatch({ type: 'ADD_EVENT', payload: newEvent })\n  }\n\n  const updateEvent = async (id: string, updates: Partial<NewEvent>): Promise<Event> => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500))\n    \n    // Simulate 5% chance of network error\n    if (Math.random() < 0.05) {\n      throw new Error('Network error: Failed to update event')\n    }\n\n    const existingEvent = state.events.find(event => event.id === id)\n    if (!existingEvent) {\n      throw new Error('Event not found')\n    }\n\n    const updatedEvent: Event = {\n      ...existingEvent,\n      ...updates\n    }\n\n    dispatch({ type: 'UPDATE_EVENT', payload: { id, event: updates } })\n    return updatedEvent\n  }\n\n  const deleteEvent = async (id: string): Promise<void> => {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500))\n    \n    // Simulate 5% chance of network error\n    if (Math.random() < 0.05) {\n      throw new Error('Network error: Failed to delete event')\n    }\n\n    const existingEvent = state.events.find(event => event.id === id)\n    if (!existingEvent) {\n      throw new Error('Event not found')\n    }\n\n    dispatch({ type: 'DELETE_EVENT', payload: id })\n  }\n\n  const getEvent = (id: string): Event | undefined => {\n    return state.events.find(event => event.id === id)\n  }\n\n  const getEventsByDate = (date: string): Event[] => {\n    return state.events.filter(event => event.date === date)\n  }\n\n  const getEventsByDateRange = (startDate: string, endDate: string): Event[] => {\n    return state.events.filter(event => {\n      return event.date >= startDate && event.date <= endDate\n    })\n  }\n\n  const getEventsByClient = (clientId: string): Event[] => {\n    return state.events.filter(event => \n      event.relatedTo?.type === 'client' && event.relatedTo.id === clientId\n    )\n  }\n\n  const getEventsByType = (type: Event['type']): Event[] => {\n    return state.events.filter(event => event.type === type)\n  }\n\n  return {\n    addEvent,\n    updateEvent,\n    deleteEvent,\n    getEvent,\n    getEventsByDate,\n    getEventsByDateRange,\n    getEventsByClient,\n    getEventsByType\n  }\n}\n"],
      names: ["useEventActions", "state", "dispatch", "useAppContext", "addEvent", "newEvent", "Promise", "resolve", "setTimeout", "Math", "random", "Error", "type", "payload", "updateEvent", "id", "updates", "existingEvent", "events", "find", "event", "updatedEvent", "deleteEvent", "getEvent", "getEventsByDate", "date", "filter", "getEventsByDateRange", "startDate", "endDate", "getEventsByClient", "clientId", "relatedTo", "getEventsByType"],
      mappings: "AAAA;;;;;+BAKaA;;;eAAAA;;;4BAHiB;AAGvB,MAAMA,kBAAkB;IAC7B,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAE,GAAGC,IAAAA,yBAAa;IAEzC,MAAMC,WAAW,OAAOC;QACtB,qBAAqB;QACrB,MAAM,IAAIC,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;QAEjD,sCAAsC;QACtC,IAAIE,KAAKC,MAAM,KAAK,MAAM;YACxB,MAAM,IAAIC,MAAM;QAClB;QAEA,oCAAoC;QACpCT,SAAS;YAAEU,MAAM;YAAaC,SAASR;QAAS;IAClD;IAEA,MAAMS,cAAc,OAAOC,IAAYC;QACrC,qBAAqB;QACrB,MAAM,IAAIV,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;QAEjD,sCAAsC;QACtC,IAAIE,KAAKC,MAAM,KAAK,MAAM;YACxB,MAAM,IAAIC,MAAM;QAClB;QAEA,MAAMM,gBAAgBhB,MAAMiB,MAAM,CAACC,IAAI,CAACC,CAAAA,QAASA,MAAML,EAAE,KAAKA;QAC9D,IAAI,CAACE,eAAe;YAClB,MAAM,IAAIN,MAAM;QAClB;QAEA,MAAMU,eAAsB;YAC1B,GAAGJ,aAAa;YAChB,GAAGD,OAAO;QACZ;QAEAd,SAAS;YAAEU,MAAM;YAAgBC,SAAS;gBAAEE;gBAAIK,OAAOJ;YAAQ;QAAE;QACjE,OAAOK;IACT;IAEA,MAAMC,cAAc,OAAOP;QACzB,qBAAqB;QACrB,MAAM,IAAIT,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;QAEjD,sCAAsC;QACtC,IAAIE,KAAKC,MAAM,KAAK,MAAM;YACxB,MAAM,IAAIC,MAAM;QAClB;QAEA,MAAMM,gBAAgBhB,MAAMiB,MAAM,CAACC,IAAI,CAACC,CAAAA,QAASA,MAAML,EAAE,KAAKA;QAC9D,IAAI,CAACE,eAAe;YAClB,MAAM,IAAIN,MAAM;QAClB;QAEAT,SAAS;YAAEU,MAAM;YAAgBC,SAASE;QAAG;IAC/C;IAEA,MAAMQ,WAAW,CAACR;QAChB,OAAOd,MAAMiB,MAAM,CAACC,IAAI,CAACC,CAAAA,QAASA,MAAML,EAAE,KAAKA;IACjD;IAEA,MAAMS,kBAAkB,CAACC;QACvB,OAAOxB,MAAMiB,MAAM,CAACQ,MAAM,CAACN,CAAAA,QAASA,MAAMK,IAAI,KAAKA;IACrD;IAEA,MAAME,uBAAuB,CAACC,WAAmBC;QAC/C,OAAO5B,MAAMiB,MAAM,CAACQ,MAAM,CAACN,CAAAA;YACzB,OAAOA,MAAMK,IAAI,IAAIG,aAAaR,MAAMK,IAAI,IAAII;QAClD;IACF;IAEA,MAAMC,oBAAoB,CAACC;QACzB,OAAO9B,MAAMiB,MAAM,CAACQ,MAAM,CAACN,CAAAA,QACzBA,MAAMY,SAAS,EAAEpB,SAAS,YAAYQ,MAAMY,SAAS,CAACjB,EAAE,KAAKgB;IAEjE;IAEA,MAAME,kBAAkB,CAACrB;QACvB,OAAOX,MAAMiB,MAAM,CAACQ,MAAM,CAACN,CAAAA,QAASA,MAAMR,IAAI,KAAKA;IACrD;IAEA,OAAO;QACLR;QACAU;QACAQ;QACAC;QACAC;QACAG;QACAG;QACAG;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "423daf7f02a099fc2430dc5f673789d0ef58b5fe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kyhjihk44 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kyhjihk44();
cov_1kyhjihk44().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kyhjihk44().s[1]++;
Object.defineProperty(exports, "useEventActions", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[0]++;
    cov_1kyhjihk44().s[2]++;
    return useEventActions;
  }
});
const _AppContext =
/* istanbul ignore next */
(cov_1kyhjihk44().s[3]++, require("../context/AppContext"));
/* istanbul ignore next */
cov_1kyhjihk44().s[4]++;
const useEventActions = () => {
  /* istanbul ignore next */
  cov_1kyhjihk44().f[1]++;
  const {
    state,
    dispatch
  } =
  /* istanbul ignore next */
  (cov_1kyhjihk44().s[5]++, (0, _AppContext.useAppContext)());
  /* istanbul ignore next */
  cov_1kyhjihk44().s[6]++;
  const addEvent = async newEvent => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[2]++;
    cov_1kyhjihk44().s[7]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[3]++;
      cov_1kyhjihk44().s[8]++;
      return setTimeout(resolve, 500);
    });
    // Simulate 5% chance of network error
    /* istanbul ignore next */
    cov_1kyhjihk44().s[9]++;
    if (Math.random() < 0.05) {
      /* istanbul ignore next */
      cov_1kyhjihk44().b[0][0]++;
      cov_1kyhjihk44().s[10]++;
      throw new Error('Network error: Failed to create event');
    } else
    /* istanbul ignore next */
    {
      cov_1kyhjihk44().b[0][1]++;
    }
    // AppContext reducer assigns the id
    cov_1kyhjihk44().s[11]++;
    dispatch({
      type: 'ADD_EVENT',
      payload: newEvent
    });
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[12]++;
  const updateEvent = async (id, updates) => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[4]++;
    cov_1kyhjihk44().s[13]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[5]++;
      cov_1kyhjihk44().s[14]++;
      return setTimeout(resolve, 500);
    });
    // Simulate 5% chance of network error
    /* istanbul ignore next */
    cov_1kyhjihk44().s[15]++;
    if (Math.random() < 0.05) {
      /* istanbul ignore next */
      cov_1kyhjihk44().b[1][0]++;
      cov_1kyhjihk44().s[16]++;
      throw new Error('Network error: Failed to update event');
    } else
    /* istanbul ignore next */
    {
      cov_1kyhjihk44().b[1][1]++;
    }
    const existingEvent =
    /* istanbul ignore next */
    (cov_1kyhjihk44().s[17]++, state.events.find(event => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[6]++;
      cov_1kyhjihk44().s[18]++;
      return event.id === id;
    }));
    /* istanbul ignore next */
    cov_1kyhjihk44().s[19]++;
    if (!existingEvent) {
      /* istanbul ignore next */
      cov_1kyhjihk44().b[2][0]++;
      cov_1kyhjihk44().s[20]++;
      throw new Error('Event not found');
    } else
    /* istanbul ignore next */
    {
      cov_1kyhjihk44().b[2][1]++;
    }
    const updatedEvent =
    /* istanbul ignore next */
    (cov_1kyhjihk44().s[21]++, {
      ...existingEvent,
      ...updates
    });
    /* istanbul ignore next */
    cov_1kyhjihk44().s[22]++;
    dispatch({
      type: 'UPDATE_EVENT',
      payload: {
        id,
        event: updates
      }
    });
    /* istanbul ignore next */
    cov_1kyhjihk44().s[23]++;
    return updatedEvent;
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[24]++;
  const deleteEvent = async id => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[7]++;
    cov_1kyhjihk44().s[25]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[8]++;
      cov_1kyhjihk44().s[26]++;
      return setTimeout(resolve, 500);
    });
    // Simulate 5% chance of network error
    /* istanbul ignore next */
    cov_1kyhjihk44().s[27]++;
    if (Math.random() < 0.05) {
      /* istanbul ignore next */
      cov_1kyhjihk44().b[3][0]++;
      cov_1kyhjihk44().s[28]++;
      throw new Error('Network error: Failed to delete event');
    } else
    /* istanbul ignore next */
    {
      cov_1kyhjihk44().b[3][1]++;
    }
    const existingEvent =
    /* istanbul ignore next */
    (cov_1kyhjihk44().s[29]++, state.events.find(event => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[9]++;
      cov_1kyhjihk44().s[30]++;
      return event.id === id;
    }));
    /* istanbul ignore next */
    cov_1kyhjihk44().s[31]++;
    if (!existingEvent) {
      /* istanbul ignore next */
      cov_1kyhjihk44().b[4][0]++;
      cov_1kyhjihk44().s[32]++;
      throw new Error('Event not found');
    } else
    /* istanbul ignore next */
    {
      cov_1kyhjihk44().b[4][1]++;
    }
    cov_1kyhjihk44().s[33]++;
    dispatch({
      type: 'DELETE_EVENT',
      payload: id
    });
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[34]++;
  const getEvent = id => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[10]++;
    cov_1kyhjihk44().s[35]++;
    return state.events.find(event => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[11]++;
      cov_1kyhjihk44().s[36]++;
      return event.id === id;
    });
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[37]++;
  const getEventsByDate = date => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[12]++;
    cov_1kyhjihk44().s[38]++;
    return state.events.filter(event => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[13]++;
      cov_1kyhjihk44().s[39]++;
      return event.date === date;
    });
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[40]++;
  const getEventsByDateRange = (startDate, endDate) => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[14]++;
    cov_1kyhjihk44().s[41]++;
    return state.events.filter(event => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[15]++;
      cov_1kyhjihk44().s[42]++;
      return /* istanbul ignore next */(cov_1kyhjihk44().b[5][0]++, event.date >= startDate) &&
      /* istanbul ignore next */
      (cov_1kyhjihk44().b[5][1]++, event.date <= endDate);
    });
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[43]++;
  const getEventsByClient = clientId => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[16]++;
    cov_1kyhjihk44().s[44]++;
    return state.events.filter(event => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[17]++;
      cov_1kyhjihk44().s[45]++;
      return /* istanbul ignore next */(cov_1kyhjihk44().b[6][0]++, event.relatedTo?.type === 'client') &&
      /* istanbul ignore next */
      (cov_1kyhjihk44().b[6][1]++, event.relatedTo.id === clientId);
    });
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[46]++;
  const getEventsByType = type => {
    /* istanbul ignore next */
    cov_1kyhjihk44().f[18]++;
    cov_1kyhjihk44().s[47]++;
    return state.events.filter(event => {
      /* istanbul ignore next */
      cov_1kyhjihk44().f[19]++;
      cov_1kyhjihk44().s[48]++;
      return event.type === type;
    });
  };
  /* istanbul ignore next */
  cov_1kyhjihk44().s[49]++;
  return {
    addEvent,
    updateEvent,
    deleteEvent,
    getEvent,
    getEventsByDate,
    getEventsByDateRange,
    getEventsByClient,
    getEventsByType
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,