aa516cccd8c2b8716bc97d8f913f2a70
"use client";
"use strict";

/* istanbul ignore next */
function cov_npbpm9dqa() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useReusableForm.ts";
  var hash = "994d88e1f88c6d720f16b359adcbb51b585c3fb6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useReusableForm.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "9": {
        start: {
          line: 27,
          column: 13
        },
        end: {
          line: 27,
          column: 27
        }
      },
      "10": {
        start: {
          line: 29,
          column: 129
        },
        end: {
          line: 29,
          column: 136
        }
      },
      "11": {
        start: {
          line: 30,
          column: 37
        },
        end: {
          line: 30,
          column: 72
        }
      },
      "12": {
        start: {
          line: 31,
          column: 37
        },
        end: {
          line: 31,
          column: 61
        }
      },
      "13": {
        start: {
          line: 32,
          column: 39
        },
        end: {
          line: 32,
          column: 63
        }
      },
      "14": {
        start: {
          line: 33,
          column: 44
        },
        end: {
          line: 33,
          column: 71
        }
      },
      "15": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 52
        }
      },
      "16": {
        start: {
          line: 36,
          column: 20
        },
        end: {
          line: 36,
          column: 76
        }
      },
      "17": {
        start: {
          line: 37,
          column: 30
        },
        end: {
          line: 37,
          column: 54
        }
      },
      "18": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 71,
          column: 6
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "20": {
        start: {
          line: 40,
          column: 31
        },
        end: {
          line: 40,
          column: 43
        }
      },
      "21": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "22": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "23": {
        start: {
          line: 44,
          column: 36
        },
        end: {
          line: 44,
          column: 64
        }
      },
      "24": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 55,
          column: 17
        }
      },
      "25": {
        start: {
          line: 46,
          column: 20
        },
        end: {
          line: 46,
          column: 63
        }
      },
      "26": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 53,
          column: 23
        }
      },
      "27": {
        start: {
          line: 48,
          column: 42
        },
        end: {
          line: 50,
          column: 25
        }
      },
      "28": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 51,
          column: 47
        }
      },
      "29": {
        start: {
          line: 52,
          column: 24
        },
        end: {
          line: 52,
          column: 41
        }
      },
      "30": {
        start: {
          line: 54,
          column: 20
        },
        end: {
          line: 54,
          column: 32
        }
      },
      "31": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 65,
          column: 13
        }
      },
      "32": {
        start: {
          line: 59,
          column: 35
        },
        end: {
          line: 59,
          column: 78
        }
      },
      "33": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 63,
          column: 24
        }
      },
      "34": {
        start: {
          line: 60,
          column: 40
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "35": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 29
        }
      },
      "36": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 20
        }
      },
      "37": {
        start: {
          line: 73,
          column: 25
        },
        end: {
          line: 96,
          column: 6
        }
      },
      "38": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 43
        }
      },
      "39": {
        start: {
          line: 74,
          column: 31
        },
        end: {
          line: 74,
          column: 43
        }
      },
      "40": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "41": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 54
        }
      },
      "42": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "43": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 24
        }
      },
      "44": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "45": {
        start: {
          line: 81,
          column: 34
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "46": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 87,
          column: 19
        }
      },
      "47": {
        start: {
          line: 83,
          column: 33
        },
        end: {
          line: 83,
          column: 44
        }
      },
      "48": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 86,
          column: 21
        }
      },
      "49": {
        start: {
          line: 85,
          column: 24
        },
        end: {
          line: 85,
          column: 54
        }
      },
      "50": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 42
        }
      },
      "51": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "52": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 21
        }
      },
      "53": {
        start: {
          line: 98,
          column: 26
        },
        end: {
          line: 110,
          column: 6
        }
      },
      "54": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "55": {
        start: {
          line: 99,
          column: 32
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "56": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "57": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 53
        }
      },
      "58": {
        start: {
          line: 105,
          column: 27
        },
        end: {
          line: 105,
          column: 46
        }
      },
      "59": {
        start: {
          line: 112,
          column: 26
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "60": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 116,
          column: 16
        }
      },
      "61": {
        start: {
          line: 113,
          column: 32
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "62": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 130,
          column: 6
        }
      },
      "63": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 16
        }
      },
      "64": {
        start: {
          line: 120,
          column: 33
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "65": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "66": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 32
        }
      },
      "67": {
        start: {
          line: 132,
          column: 22
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "68": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 136,
          column: 16
        }
      },
      "69": {
        start: {
          line: 133,
          column: 32
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "70": {
        start: {
          line: 139,
          column: 22
        },
        end: {
          line: 144,
          column: 10
        }
      },
      "71": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 143,
          column: 16
        }
      },
      "72": {
        start: {
          line: 140,
          column: 32
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "73": {
        start: {
          line: 146,
          column: 22
        },
        end: {
          line: 153,
          column: 6
        }
      },
      "74": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 38
        }
      },
      "75": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 27
        }
      },
      "76": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 28
        }
      },
      "77": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 31
        }
      },
      "78": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 157,
          column: 10
        }
      },
      "79": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 27
        }
      },
      "80": {
        start: {
          line: 159,
          column: 26
        },
        end: {
          line: 173,
          column: 6
        }
      },
      "81": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 166,
          column: 10
        }
      },
      "82": {
        start: {
          line: 164,
          column: 31
        },
        end: {
          line: 164,
          column: 57
        }
      },
      "83": {
        start: {
          line: 165,
          column: 24
        },
        end: {
          line: 165,
          column: 51
        }
      },
      "84": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 213,
          column: 6
        }
      },
      "85": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "86": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 31
        }
      },
      "87": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 30
        }
      },
      "88": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "89": {
        start: {
          line: 182,
          column: 31
        },
        end: {
          line: 182,
          column: 33
        }
      },
      "90": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 185,
          column: 15
        }
      },
      "91": {
        start: {
          line: 184,
          column: 16
        },
        end: {
          line: 184,
          column: 39
        }
      },
      "92": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 40
        }
      },
      "93": {
        start: {
          line: 188,
          column: 32
        },
        end: {
          line: 188,
          column: 52
        }
      },
      "94": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "95": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 39
        }
      },
      "96": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 23
        }
      },
      "97": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "98": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 39
        }
      },
      "99": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "100": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 199,
          column: 28
        }
      },
      "101": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 59
        }
      },
      "102": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 35
        }
      },
      "103": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 219,
          column: 7
        }
      },
      "104": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 38
        }
      },
      "105": {
        start: {
          line: 220,
          column: 4
        },
        end: {
          line: 239,
          column: 6
        }
      },
      "106": {
        start: {
          line: 241,
          column: 22
        },
        end: {
          line: 267,
          column: 1
        }
      },
      "107": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 277,
          column: 6
        }
      },
      "108": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "109": {
        start: {
          line: 279,
          column: 17
        },
        end: {
          line: 279,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "useReusableForm",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 24
          }
        },
        loc: {
          start: {
            line: 28,
            column: 34
          },
          end: {
            line: 240,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 50
          },
          end: {
            line: 39,
            column: 51
          }
        },
        loc: {
          start: {
            line: 39,
            column: 64
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 47,
            column: 35
          },
          end: {
            line: 47,
            column: 36
          }
        },
        loc: {
          start: {
            line: 47,
            column: 43
          },
          end: {
            line: 53,
            column: 21
          }
        },
        line: 47
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 32
          }
        },
        loc: {
          start: {
            line: 60,
            column: 40
          },
          end: {
            line: 63,
            column: 21
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 73,
            column: 49
          },
          end: {
            line: 73,
            column: 50
          }
        },
        loc: {
          start: {
            line: 73,
            column: 59
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 73
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 82,
            column: 37
          },
          end: {
            line: 82,
            column: 38
          }
        },
        loc: {
          start: {
            line: 82,
            column: 44
          },
          end: {
            line: 87,
            column: 17
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 98,
            column: 50
          },
          end: {
            line: 98,
            column: 51
          }
        },
        loc: {
          start: {
            line: 98,
            column: 65
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 98
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 99,
            column: 23
          },
          end: {
            line: 99,
            column: 24
          }
        },
        loc: {
          start: {
            line: 99,
            column: 32
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 99
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 105,
            column: 23
          },
          end: {
            line: 105,
            column: 24
          }
        },
        loc: {
          start: {
            line: 105,
            column: 27
          },
          end: {
            line: 105,
            column: 46
          }
        },
        line: 105
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 112,
            column: 50
          },
          end: {
            line: 112,
            column: 51
          }
        },
        loc: {
          start: {
            line: 112,
            column: 65
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 112
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 24
          }
        },
        loc: {
          start: {
            line: 113,
            column: 32
          },
          end: {
            line: 116,
            column: 13
          }
        },
        line: 113
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 119,
            column: 52
          },
          end: {
            line: 119,
            column: 53
          }
        },
        loc: {
          start: {
            line: 119,
            column: 78
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 119
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 25
          }
        },
        loc: {
          start: {
            line: 120,
            column: 33
          },
          end: {
            line: 123,
            column: 13
          }
        },
        line: 120
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 132,
            column: 46
          },
          end: {
            line: 132,
            column: 47
          }
        },
        loc: {
          start: {
            line: 132,
            column: 59
          },
          end: {
            line: 137,
            column: 5
          }
        },
        line: 132
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 133,
            column: 23
          },
          end: {
            line: 133,
            column: 24
          }
        },
        loc: {
          start: {
            line: 133,
            column: 32
          },
          end: {
            line: 136,
            column: 13
          }
        },
        line: 133
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 139,
            column: 46
          },
          end: {
            line: 139,
            column: 47
          }
        },
        loc: {
          start: {
            line: 139,
            column: 59
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 139
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 140,
            column: 23
          },
          end: {
            line: 140,
            column: 24
          }
        },
        loc: {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 143,
            column: 13
          }
        },
        line: 140
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 146,
            column: 46
          },
          end: {
            line: 146,
            column: 47
          }
        },
        loc: {
          start: {
            line: 146,
            column: 50
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 146
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 155,
            column: 48
          },
          end: {
            line: 155,
            column: 49
          }
        },
        loc: {
          start: {
            line: 155,
            column: 52
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 155
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 159,
            column: 50
          },
          end: {
            line: 159,
            column: 51
          }
        },
        loc: {
          start: {
            line: 159,
            column: 58
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 159
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 164,
            column: 22
          },
          end: {
            line: 164,
            column: 23
          }
        },
        loc: {
          start: {
            line: 164,
            column: 31
          },
          end: {
            line: 164,
            column: 57
          }
        },
        line: 164
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 165,
            column: 20
          },
          end: {
            line: 165,
            column: 21
          }
        },
        loc: {
          start: {
            line: 165,
            column: 24
          },
          end: {
            line: 165,
            column: 51
          }
        },
        line: 165
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 175,
            column: 49
          },
          end: {
            line: 175,
            column: 50
          }
        },
        loc: {
          start: {
            line: 175,
            column: 60
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 175
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 183,
            column: 40
          },
          end: {
            line: 183,
            column: 41
          }
        },
        loc: {
          start: {
            line: 183,
            column: 47
          },
          end: {
            line: 185,
            column: 13
          }
        },
        line: 183
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 215,
            column: 26
          },
          end: {
            line: 215,
            column: 27
          }
        },
        loc: {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 217,
            column: 5
          }
        },
        line: 215
      },
      "30": {
        name: "createFormHook",
        decl: {
          start: {
            line: 268,
            column: 9
          },
          end: {
            line: 268,
            column: 23
          }
        },
        loc: {
          start: {
            line: 268,
            column: 47
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 268
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 269,
            column: 11
          },
          end: {
            line: 269,
            column: 12
          }
        },
        loc: {
          start: {
            line: 269,
            column: 24
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 269
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 55
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 71
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 78
          },
          end: {
            line: 29,
            column: 101
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 97
          },
          end: {
            line: 29,
            column: 101
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 103
          },
          end: {
            line: 29,
            column: 124
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 120
          },
          end: {
            line: 29,
            column: 124
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 37,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 37,
            column: 37
          }
        }, {
          start: {
            line: 37,
            column: 41
          },
          end: {
            line: 37,
            column: 54
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "6": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 55,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 55,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 65,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 35
          },
          end: {
            line: 59,
            column: 59
          }
        }, {
          start: {
            line: 59,
            column: 63
          },
          end: {
            line: 59,
            column: 78
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 74,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "10": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "11": {
        loc: {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 86,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "12": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 106,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "13": {
        loc: {
          start: {
            line: 119,
            column: 59
          },
          end: {
            line: 119,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 119,
            column: 71
          },
          end: {
            line: 119,
            column: 75
          }
        }],
        line: 119
      },
      "14": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 124,
            column: 21
          }
        }, {
          start: {
            line: 124,
            column: 25
          },
          end: {
            line: 124,
            column: 39
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 163,
            column: 21
          },
          end: {
            line: 163,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 163,
            column: 21
          },
          end: {
            line: 163,
            column: 34
          }
        }, {
          start: {
            line: 163,
            column: 38
          },
          end: {
            line: 163,
            column: 43
          }
        }],
        line: 163
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "18": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "19": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "20": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 200,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useReusableForm.ts"],
      sourcesContent: ["\"use client\"\n\nimport { useState, useCallback, useEffect } from \"react\"\nimport { z } from \"zod\"\n\nexport interface UseReusableFormOptions<T> {\n  initialValues: T\n  validationSchema?: z.ZodSchema<T>\n  onSubmit?: (values: T) => Promise<void> | void\n  resetOnSubmit?: boolean\n  validateOnChange?: boolean\n  validateOnBlur?: boolean\n}\n\nexport interface FormField {\n  value: any\n  error?: string\n  touched: boolean\n  onChange: (value: any) => void\n  onBlur: () => void\n}\n\nexport interface UseReusableFormReturn<T> {\n  values: T\n  errors: Partial<Record<keyof T, string>>\n  touched: Partial<Record<keyof T, boolean>>\n  isValid: boolean\n  isSubmitting: boolean\n  isDirty: boolean\n  hasUnsavedChanges: boolean\n  getFieldProps: (name: keyof T) => FormField\n  setFieldValue: (name: keyof T, value: any) => void\n  setFieldError: (name: keyof T, error: string) => void\n  setFieldTouched: (name: keyof T, touched?: boolean) => void\n  setValues: (values: Partial<T>) => void\n  setErrors: (errors: Partial<Record<keyof T, string>>) => void\n  resetForm: () => void\n  validateField: (name: keyof T) => Promise<boolean>\n  validateForm: () => Promise<boolean>\n  handleSubmit: (e?: React.FormEvent) => Promise<void>\n  clearErrors: () => void\n}\n\nexport function useReusableForm<T extends Record<string, any>>(\n  options: UseReusableFormOptions<T>\n): UseReusableFormReturn<T> {\n  const {\n    initialValues,\n    validationSchema,\n    onSubmit,\n    resetOnSubmit = false,\n    validateOnChange = true,\n    validateOnBlur = true\n  } = options\n\n  const [values, setValuesState] = useState<T>(initialValues)\n  const [errors, setErrorsState] = useState<Partial<Record<keyof T, string>>>({})\n  const [touched, setTouchedState] = useState<Partial<Record<keyof T, boolean>>>({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  // Calculate derived state\n  const isValid = Object.keys(errors).length === 0\n  const isDirty = JSON.stringify(values) !== JSON.stringify(initialValues)\n  const hasUnsavedChanges = isDirty && !isSubmitting\n\n  // Validate a single field\n  const validateField = useCallback(async (name: keyof T): Promise<boolean> => {\n    if (!validationSchema) return true\n\n    try {\n      // Check if the schema is a ZodObject and has shape property\n      if ('shape' in validationSchema) {\n        const fieldSchema = (validationSchema as any).shape[name as string]\n        if (fieldSchema) {\n          await fieldSchema.parseAsync(values[name])\n          setErrorsState(prev => {\n            const newErrors = { ...prev }\n            delete newErrors[name]\n            return newErrors\n          })\n          return true\n        }\n      }\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const fieldError = error.errors[0]?.message || \"Invalid value\"\n        setErrorsState(prev => ({ ...prev, [name]: fieldError }))\n        return false\n      }\n    }\n    return true\n  }, [validationSchema, values])\n\n  // Validate entire form\n  const validateForm = useCallback(async (): Promise<boolean> => {\n    if (!validationSchema) return true\n\n    try {\n      await validationSchema.parseAsync(values)\n      setErrorsState({})\n      return true\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const newErrors: Partial<Record<keyof T, string>> = {}\n        error.errors.forEach(err => {\n          const path = err.path[0] as keyof T\n          if (path) {\n            newErrors[path] = err.message\n          }\n        })\n        setErrorsState(newErrors)\n        return false\n      }\n    }\n    return false\n  }, [validationSchema, values])\n\n  // Set field value\n  const setFieldValue = useCallback((name: keyof T, value: any) => {\n    setValuesState(prev => ({ ...prev, [name]: value }))\n    \n    if (validateOnChange) {\n      // Debounce validation to avoid excessive calls\n      setTimeout(() => validateField(name), 100)\n    }\n  }, [validateOnChange, validateField])\n\n  // Set field error\n  const setFieldError = useCallback((name: keyof T, error: string) => {\n    setErrorsState(prev => ({ ...prev, [name]: error }))\n  }, [])\n\n  // Set field touched\n  const setFieldTouched = useCallback((name: keyof T, isTouched = true) => {\n    setTouchedState(prev => ({ ...prev, [name]: isTouched }))\n    \n    if (isTouched && validateOnBlur) {\n      validateField(name)\n    }\n  }, [validateOnBlur, validateField])\n\n  // Set multiple values\n  const setValues = useCallback((newValues: Partial<T>) => {\n    setValuesState(prev => ({ ...prev, ...newValues }))\n  }, [])\n\n  // Set multiple errors\n  const setErrors = useCallback((newErrors: Partial<Record<keyof T, string>>) => {\n    setErrorsState(prev => ({ ...prev, ...newErrors }))\n  }, [])\n\n  // Reset form\n  const resetForm = useCallback(() => {\n    setValuesState(initialValues)\n    setErrorsState({})\n    setTouchedState({})\n    setIsSubmitting(false)\n  }, [initialValues])\n\n  // Clear all errors\n  const clearErrors = useCallback(() => {\n    setErrorsState({})\n  }, [])\n\n  // Get field props for easy binding\n  const getFieldProps = useCallback((name: keyof T): FormField => {\n    return {\n      value: values[name],\n      error: errors[name],\n      touched: touched[name] || false,\n      onChange: (value: any) => setFieldValue(name, value),\n      onBlur: () => setFieldTouched(name, true)\n    }\n  }, [values, errors, touched, setFieldValue, setFieldTouched])\n\n  // Handle form submission\n  const handleSubmit = useCallback(async (e?: React.FormEvent) => {\n    if (e) {\n      e.preventDefault()\n    }\n\n    setIsSubmitting(true)\n\n    try {\n      // Mark all fields as touched\n      const allTouched: Partial<Record<keyof T, boolean>> = {}\n      Object.keys(values).forEach(key => {\n        allTouched[key as keyof T] = true\n      })\n      setTouchedState(allTouched)\n\n      // Validate form\n      const isFormValid = await validateForm()\n      \n      if (!isFormValid) {\n        setIsSubmitting(false)\n        return\n      }\n\n      // Submit form\n      if (onSubmit) {\n        await onSubmit(values)\n      }\n\n      // Reset form if requested\n      if (resetOnSubmit) {\n        resetForm()\n      }\n    } catch (error) {\n      console.error('Form submission error:', error)\n      // You might want to set a general form error here\n    } finally {\n      setIsSubmitting(false)\n    }\n  }, [values, validateForm, onSubmit, resetOnSubmit, resetForm])\n\n  // Update values when initialValues change\n  useEffect(() => {\n    setValuesState(initialValues)\n  }, [initialValues])\n\n  return {\n    values,\n    errors,\n    touched,\n    isValid,\n    isSubmitting,\n    isDirty,\n    hasUnsavedChanges,\n    getFieldProps,\n    setFieldValue,\n    setFieldError,\n    setFieldTouched,\n    setValues,\n    setErrors,\n    resetForm,\n    validateField,\n    validateForm,\n    handleSubmit,\n    clearErrors\n  }\n}\n\n// Common validation schemas\nexport const commonSchemas = {\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/, \"Please enter a valid phone number\"),\n  required: z.string().min(1, \"This field is required\"),\n  optionalString: z.string().optional(),\n  positiveNumber: z.number().positive(\"Must be a positive number\"),\n  currency: z.number().min(0, \"Amount must be non-negative\"),\n  date: z.date({ required_error: \"Date is required\" }),\n  url: z.string().url(\"Please enter a valid URL\"),\n  \n  // Common composite schemas\n  clientInfo: z.object({\n    name: z.string().min(1, \"Name is required\"),\n    email: z.string().email(\"Please enter a valid email address\"),\n    phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/, \"Please enter a valid phone number\").optional(),\n    company: z.string().optional()\n  }),\n  \n  projectInfo: z.object({\n    title: z.string().min(1, \"Project title is required\"),\n    description: z.string().min(10, \"Description must be at least 10 characters\"),\n    budget: z.number().min(0, \"Budget must be non-negative\"),\n    deadline: z.date({ required_error: \"Deadline is required\" })\n  })\n}\n\n// Utility function to create form with common patterns\nexport function createFormHook<T extends Record<string, any>>(\n  defaultValues: T,\n  schema?: z.ZodSchema<T>\n) {\n  return (overrides?: Partial<UseReusableFormOptions<T>>) => {\n    return useReusableForm({\n      initialValues: defaultValues,\n      validationSchema: schema,\n      validateOnChange: true,\n      validateOnBlur: true,\n      ...overrides\n    })\n  }\n}\n\nexport default useReusableForm"],
      names: ["commonSchemas", "createFormHook", "useReusableForm", "options", "initialValues", "validationSchema", "onSubmit", "resetOnSubmit", "validateOnChange", "validateOnBlur", "values", "setValuesState", "useState", "errors", "setErrorsState", "touched", "setTouchedState", "isSubmitting", "setIsSubmitting", "isValid", "Object", "keys", "length", "isDirty", "JSON", "stringify", "hasUnsavedChanges", "validateField", "useCallback", "name", "fieldSchema", "shape", "parseAsync", "prev", "newErrors", "error", "z", "ZodError", "fieldError", "message", "validateForm", "forEach", "err", "path", "setFieldValue", "value", "setTimeout", "setFieldError", "setFieldTouched", "isTouched", "setValues", "newValues", "setErrors", "resetForm", "clearErrors", "getFieldProps", "onChange", "onBlur", "handleSubmit", "e", "preventDefault", "allTouched", "key", "isFormValid", "console", "useEffect", "email", "string", "phone", "regex", "required", "min", "optionalString", "optional", "positiveNumber", "number", "positive", "currency", "date", "required_error", "url", "clientInfo", "object", "company", "projectInfo", "title", "description", "budget", "deadline", "defaultValues", "schema", "overrides"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "994d88e1f88c6d720f16b359adcbb51b585c3fb6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_npbpm9dqa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_npbpm9dqa();
cov_npbpm9dqa().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_npbpm9dqa().f[0]++;
  cov_npbpm9dqa().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_npbpm9dqa().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_npbpm9dqa().s[3]++;
_export(exports, {
  get commonSchemas() {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[1]++;
    cov_npbpm9dqa().s[4]++;
    return commonSchemas;
  },
  get createFormHook() {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[2]++;
    cov_npbpm9dqa().s[5]++;
    return createFormHook;
  },
  get default() {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[3]++;
    cov_npbpm9dqa().s[6]++;
    return _default;
  },
  get useReusableForm() {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[4]++;
    cov_npbpm9dqa().s[7]++;
    return useReusableForm;
  }
});
const _react =
/* istanbul ignore next */
(cov_npbpm9dqa().s[8]++, require("react"));
const _zod =
/* istanbul ignore next */
(cov_npbpm9dqa().s[9]++, require("zod"));
function useReusableForm(options) {
  /* istanbul ignore next */
  cov_npbpm9dqa().f[5]++;
  const {
    initialValues,
    validationSchema,
    onSubmit,
    resetOnSubmit =
    /* istanbul ignore next */
    (cov_npbpm9dqa().b[0][0]++, false),
    validateOnChange =
    /* istanbul ignore next */
    (cov_npbpm9dqa().b[1][0]++, true),
    validateOnBlur =
    /* istanbul ignore next */
    (cov_npbpm9dqa().b[2][0]++, true)
  } =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[10]++, options);
  const [values, setValuesState] =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[11]++, (0, _react.useState)(initialValues));
  const [errors, setErrorsState] =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[12]++, (0, _react.useState)({}));
  const [touched, setTouchedState] =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[13]++, (0, _react.useState)({}));
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[14]++, (0, _react.useState)(false));
  // Calculate derived state
  const isValid =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[15]++, Object.keys(errors).length === 0);
  const isDirty =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[16]++, JSON.stringify(values) !== JSON.stringify(initialValues));
  const hasUnsavedChanges =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[17]++,
  /* istanbul ignore next */
  (cov_npbpm9dqa().b[3][0]++, isDirty) &&
  /* istanbul ignore next */
  (cov_npbpm9dqa().b[3][1]++, !isSubmitting));
  // Validate a single field
  const validateField =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[18]++, (0, _react.useCallback)(async name => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[6]++;
    cov_npbpm9dqa().s[19]++;
    if (!validationSchema) {
      /* istanbul ignore next */
      cov_npbpm9dqa().b[4][0]++;
      cov_npbpm9dqa().s[20]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_npbpm9dqa().b[4][1]++;
    }
    cov_npbpm9dqa().s[21]++;
    try {
      /* istanbul ignore next */
      cov_npbpm9dqa().s[22]++;
      // Check if the schema is a ZodObject and has shape property
      if ('shape' in validationSchema) {
        /* istanbul ignore next */
        cov_npbpm9dqa().b[5][0]++;
        const fieldSchema =
        /* istanbul ignore next */
        (cov_npbpm9dqa().s[23]++, validationSchema.shape[name]);
        /* istanbul ignore next */
        cov_npbpm9dqa().s[24]++;
        if (fieldSchema) {
          /* istanbul ignore next */
          cov_npbpm9dqa().b[6][0]++;
          cov_npbpm9dqa().s[25]++;
          await fieldSchema.parseAsync(values[name]);
          /* istanbul ignore next */
          cov_npbpm9dqa().s[26]++;
          setErrorsState(prev => {
            /* istanbul ignore next */
            cov_npbpm9dqa().f[7]++;
            const newErrors =
            /* istanbul ignore next */
            (cov_npbpm9dqa().s[27]++, {
              ...prev
            });
            /* istanbul ignore next */
            cov_npbpm9dqa().s[28]++;
            delete newErrors[name];
            /* istanbul ignore next */
            cov_npbpm9dqa().s[29]++;
            return newErrors;
          });
          /* istanbul ignore next */
          cov_npbpm9dqa().s[30]++;
          return true;
        } else
        /* istanbul ignore next */
        {
          cov_npbpm9dqa().b[6][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_npbpm9dqa().b[5][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_npbpm9dqa().s[31]++;
      if (error instanceof _zod.z.ZodError) {
        /* istanbul ignore next */
        cov_npbpm9dqa().b[7][0]++;
        const fieldError =
        /* istanbul ignore next */
        (cov_npbpm9dqa().s[32]++,
        /* istanbul ignore next */
        (cov_npbpm9dqa().b[8][0]++, error.errors[0]?.message) ||
        /* istanbul ignore next */
        (cov_npbpm9dqa().b[8][1]++, "Invalid value"));
        /* istanbul ignore next */
        cov_npbpm9dqa().s[33]++;
        setErrorsState(prev => {
          /* istanbul ignore next */
          cov_npbpm9dqa().f[8]++;
          cov_npbpm9dqa().s[34]++;
          return {
            ...prev,
            [name]: fieldError
          };
        });
        /* istanbul ignore next */
        cov_npbpm9dqa().s[35]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_npbpm9dqa().b[7][1]++;
      }
    }
    /* istanbul ignore next */
    cov_npbpm9dqa().s[36]++;
    return true;
  }, [validationSchema, values]));
  // Validate entire form
  const validateForm =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[37]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[9]++;
    cov_npbpm9dqa().s[38]++;
    if (!validationSchema) {
      /* istanbul ignore next */
      cov_npbpm9dqa().b[9][0]++;
      cov_npbpm9dqa().s[39]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_npbpm9dqa().b[9][1]++;
    }
    cov_npbpm9dqa().s[40]++;
    try {
      /* istanbul ignore next */
      cov_npbpm9dqa().s[41]++;
      await validationSchema.parseAsync(values);
      /* istanbul ignore next */
      cov_npbpm9dqa().s[42]++;
      setErrorsState({});
      /* istanbul ignore next */
      cov_npbpm9dqa().s[43]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_npbpm9dqa().s[44]++;
      if (error instanceof _zod.z.ZodError) {
        /* istanbul ignore next */
        cov_npbpm9dqa().b[10][0]++;
        const newErrors =
        /* istanbul ignore next */
        (cov_npbpm9dqa().s[45]++, {});
        /* istanbul ignore next */
        cov_npbpm9dqa().s[46]++;
        error.errors.forEach(err => {
          /* istanbul ignore next */
          cov_npbpm9dqa().f[10]++;
          const path =
          /* istanbul ignore next */
          (cov_npbpm9dqa().s[47]++, err.path[0]);
          /* istanbul ignore next */
          cov_npbpm9dqa().s[48]++;
          if (path) {
            /* istanbul ignore next */
            cov_npbpm9dqa().b[11][0]++;
            cov_npbpm9dqa().s[49]++;
            newErrors[path] = err.message;
          } else
          /* istanbul ignore next */
          {
            cov_npbpm9dqa().b[11][1]++;
          }
        });
        /* istanbul ignore next */
        cov_npbpm9dqa().s[50]++;
        setErrorsState(newErrors);
        /* istanbul ignore next */
        cov_npbpm9dqa().s[51]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_npbpm9dqa().b[10][1]++;
      }
    }
    /* istanbul ignore next */
    cov_npbpm9dqa().s[52]++;
    return false;
  }, [validationSchema, values]));
  // Set field value
  const setFieldValue =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[53]++, (0, _react.useCallback)((name, value) => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[11]++;
    cov_npbpm9dqa().s[54]++;
    setValuesState(prev => {
      /* istanbul ignore next */
      cov_npbpm9dqa().f[12]++;
      cov_npbpm9dqa().s[55]++;
      return {
        ...prev,
        [name]: value
      };
    });
    /* istanbul ignore next */
    cov_npbpm9dqa().s[56]++;
    if (validateOnChange) {
      /* istanbul ignore next */
      cov_npbpm9dqa().b[12][0]++;
      cov_npbpm9dqa().s[57]++;
      // Debounce validation to avoid excessive calls
      setTimeout(() => {
        /* istanbul ignore next */
        cov_npbpm9dqa().f[13]++;
        cov_npbpm9dqa().s[58]++;
        return validateField(name);
      }, 100);
    } else
    /* istanbul ignore next */
    {
      cov_npbpm9dqa().b[12][1]++;
    }
  }, [validateOnChange, validateField]));
  // Set field error
  const setFieldError =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[59]++, (0, _react.useCallback)((name, error) => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[14]++;
    cov_npbpm9dqa().s[60]++;
    setErrorsState(prev => {
      /* istanbul ignore next */
      cov_npbpm9dqa().f[15]++;
      cov_npbpm9dqa().s[61]++;
      return {
        ...prev,
        [name]: error
      };
    });
  }, []));
  // Set field touched
  const setFieldTouched =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[62]++, (0, _react.useCallback)((name, isTouched =
  /* istanbul ignore next */
  (cov_npbpm9dqa().b[13][0]++, true)) => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[16]++;
    cov_npbpm9dqa().s[63]++;
    setTouchedState(prev => {
      /* istanbul ignore next */
      cov_npbpm9dqa().f[17]++;
      cov_npbpm9dqa().s[64]++;
      return {
        ...prev,
        [name]: isTouched
      };
    });
    /* istanbul ignore next */
    cov_npbpm9dqa().s[65]++;
    if (
    /* istanbul ignore next */
    (cov_npbpm9dqa().b[15][0]++, isTouched) &&
    /* istanbul ignore next */
    (cov_npbpm9dqa().b[15][1]++, validateOnBlur)) {
      /* istanbul ignore next */
      cov_npbpm9dqa().b[14][0]++;
      cov_npbpm9dqa().s[66]++;
      validateField(name);
    } else
    /* istanbul ignore next */
    {
      cov_npbpm9dqa().b[14][1]++;
    }
  }, [validateOnBlur, validateField]));
  // Set multiple values
  const setValues =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[67]++, (0, _react.useCallback)(newValues => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[18]++;
    cov_npbpm9dqa().s[68]++;
    setValuesState(prev => {
      /* istanbul ignore next */
      cov_npbpm9dqa().f[19]++;
      cov_npbpm9dqa().s[69]++;
      return {
        ...prev,
        ...newValues
      };
    });
  }, []));
  // Set multiple errors
  const setErrors =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[70]++, (0, _react.useCallback)(newErrors => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[20]++;
    cov_npbpm9dqa().s[71]++;
    setErrorsState(prev => {
      /* istanbul ignore next */
      cov_npbpm9dqa().f[21]++;
      cov_npbpm9dqa().s[72]++;
      return {
        ...prev,
        ...newErrors
      };
    });
  }, []));
  // Reset form
  const resetForm =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[73]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[22]++;
    cov_npbpm9dqa().s[74]++;
    setValuesState(initialValues);
    /* istanbul ignore next */
    cov_npbpm9dqa().s[75]++;
    setErrorsState({});
    /* istanbul ignore next */
    cov_npbpm9dqa().s[76]++;
    setTouchedState({});
    /* istanbul ignore next */
    cov_npbpm9dqa().s[77]++;
    setIsSubmitting(false);
  }, [initialValues]));
  // Clear all errors
  const clearErrors =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[78]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[23]++;
    cov_npbpm9dqa().s[79]++;
    setErrorsState({});
  }, []));
  // Get field props for easy binding
  const getFieldProps =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[80]++, (0, _react.useCallback)(name => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[24]++;
    cov_npbpm9dqa().s[81]++;
    return {
      value: values[name],
      error: errors[name],
      touched:
      /* istanbul ignore next */
      (cov_npbpm9dqa().b[16][0]++, touched[name]) ||
      /* istanbul ignore next */
      (cov_npbpm9dqa().b[16][1]++, false),
      onChange: value => {
        /* istanbul ignore next */
        cov_npbpm9dqa().f[25]++;
        cov_npbpm9dqa().s[82]++;
        return setFieldValue(name, value);
      },
      onBlur: () => {
        /* istanbul ignore next */
        cov_npbpm9dqa().f[26]++;
        cov_npbpm9dqa().s[83]++;
        return setFieldTouched(name, true);
      }
    };
  }, [values, errors, touched, setFieldValue, setFieldTouched]));
  // Handle form submission
  const handleSubmit =
  /* istanbul ignore next */
  (cov_npbpm9dqa().s[84]++, (0, _react.useCallback)(async e => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[27]++;
    cov_npbpm9dqa().s[85]++;
    if (e) {
      /* istanbul ignore next */
      cov_npbpm9dqa().b[17][0]++;
      cov_npbpm9dqa().s[86]++;
      e.preventDefault();
    } else
    /* istanbul ignore next */
    {
      cov_npbpm9dqa().b[17][1]++;
    }
    cov_npbpm9dqa().s[87]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_npbpm9dqa().s[88]++;
    try {
      // Mark all fields as touched
      const allTouched =
      /* istanbul ignore next */
      (cov_npbpm9dqa().s[89]++, {});
      /* istanbul ignore next */
      cov_npbpm9dqa().s[90]++;
      Object.keys(values).forEach(key => {
        /* istanbul ignore next */
        cov_npbpm9dqa().f[28]++;
        cov_npbpm9dqa().s[91]++;
        allTouched[key] = true;
      });
      /* istanbul ignore next */
      cov_npbpm9dqa().s[92]++;
      setTouchedState(allTouched);
      // Validate form
      const isFormValid =
      /* istanbul ignore next */
      (cov_npbpm9dqa().s[93]++, await validateForm());
      /* istanbul ignore next */
      cov_npbpm9dqa().s[94]++;
      if (!isFormValid) {
        /* istanbul ignore next */
        cov_npbpm9dqa().b[18][0]++;
        cov_npbpm9dqa().s[95]++;
        setIsSubmitting(false);
        /* istanbul ignore next */
        cov_npbpm9dqa().s[96]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_npbpm9dqa().b[18][1]++;
      }
      // Submit form
      cov_npbpm9dqa().s[97]++;
      if (onSubmit) {
        /* istanbul ignore next */
        cov_npbpm9dqa().b[19][0]++;
        cov_npbpm9dqa().s[98]++;
        await onSubmit(values);
      } else
      /* istanbul ignore next */
      {
        cov_npbpm9dqa().b[19][1]++;
      }
      // Reset form if requested
      cov_npbpm9dqa().s[99]++;
      if (resetOnSubmit) {
        /* istanbul ignore next */
        cov_npbpm9dqa().b[20][0]++;
        cov_npbpm9dqa().s[100]++;
        resetForm();
      } else
      /* istanbul ignore next */
      {
        cov_npbpm9dqa().b[20][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_npbpm9dqa().s[101]++;
      console.error('Form submission error:', error);
      // You might want to set a general form error here
    } finally {
      /* istanbul ignore next */
      cov_npbpm9dqa().s[102]++;
      setIsSubmitting(false);
    }
  }, [values, validateForm, onSubmit, resetOnSubmit, resetForm]));
  // Update values when initialValues change
  /* istanbul ignore next */
  cov_npbpm9dqa().s[103]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[29]++;
    cov_npbpm9dqa().s[104]++;
    setValuesState(initialValues);
  }, [initialValues]);
  /* istanbul ignore next */
  cov_npbpm9dqa().s[105]++;
  return {
    values,
    errors,
    touched,
    isValid,
    isSubmitting,
    isDirty,
    hasUnsavedChanges,
    getFieldProps,
    setFieldValue,
    setFieldError,
    setFieldTouched,
    setValues,
    setErrors,
    resetForm,
    validateField,
    validateForm,
    handleSubmit,
    clearErrors
  };
}
const commonSchemas =
/* istanbul ignore next */
(cov_npbpm9dqa().s[106]++, {
  email: _zod.z.string().email("Please enter a valid email address"),
  phone: _zod.z.string().regex(/^[\+]?[1-9][\d]{0,15}$/, "Please enter a valid phone number"),
  required: _zod.z.string().min(1, "This field is required"),
  optionalString: _zod.z.string().optional(),
  positiveNumber: _zod.z.number().positive("Must be a positive number"),
  currency: _zod.z.number().min(0, "Amount must be non-negative"),
  date: _zod.z.date({
    required_error: "Date is required"
  }),
  url: _zod.z.string().url("Please enter a valid URL"),
  // Common composite schemas
  clientInfo: _zod.z.object({
    name: _zod.z.string().min(1, "Name is required"),
    email: _zod.z.string().email("Please enter a valid email address"),
    phone: _zod.z.string().regex(/^[\+]?[1-9][\d]{0,15}$/, "Please enter a valid phone number").optional(),
    company: _zod.z.string().optional()
  }),
  projectInfo: _zod.z.object({
    title: _zod.z.string().min(1, "Project title is required"),
    description: _zod.z.string().min(10, "Description must be at least 10 characters"),
    budget: _zod.z.number().min(0, "Budget must be non-negative"),
    deadline: _zod.z.date({
      required_error: "Deadline is required"
    })
  })
});
function createFormHook(defaultValues, schema) {
  /* istanbul ignore next */
  cov_npbpm9dqa().f[30]++;
  cov_npbpm9dqa().s[107]++;
  return overrides => {
    /* istanbul ignore next */
    cov_npbpm9dqa().f[31]++;
    cov_npbpm9dqa().s[108]++;
    return useReusableForm({
      initialValues: defaultValues,
      validationSchema: schema,
      validateOnChange: true,
      validateOnBlur: true,
      ...overrides
    });
  };
}
const _default =
/* istanbul ignore next */
(cov_npbpm9dqa().s[109]++, useReusableForm);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,