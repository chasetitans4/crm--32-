{"version":3,"names":["_default","PipelineCardsView","salesStages","getStageStats","getConversionRate","getStageColor","getProgressColor","selectedClients","setSelectedClients","expandedStage","toggleStage","hoveredStage","setHoveredStage","updateClientStage","handleDragStart","handleDrop","handleDragOver","animateCards","calculateStageMetrics","viewMode","cov_oj3ezwew6","f","s","_jsxruntime","jsx","className","b","map","stage","stats","id","conversionRate","isExpanded","metrics","_framermotion","motion","div","initial","opacity","y","animate","transition","duration","delay","findIndex","onDragOver","onDrop","e","onDragEnter","onDragLeave","jsxs","onClick","name","bottleneck","_lucidereact","AlertCircle","Users","count","trend","Math","abs","velocity","toFixed","DollarSign","value","toLocaleString","ChevronUp","ChevronDown","Clock","avgDaysInStage","BarChart3","style","width","min","AnimatePresence","clients","slice","client","has","height","exit","draggable","onDragStart","type","checked","onChange","newSelected","Set","target","add","delete","stopPropagation","Calendar","daysInStage","contact","currentIndex","disabled","ArrowLeft","length","ArrowRight","Plus","Zap"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Pipeline\\PipelineCardsView.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport { motion, AnimatePresence } from \"framer-motion\"\nimport { \n  Users, \n  DollarSign, \n  Clock, \n  BarChart3, \n  Calendar, \n  ArrowLeft, \n  ArrowRight, \n  Plus, \n  Zap,\n  ChevronDown,\n  ChevronUp,\n  AlertCircle\n} from \"lucide-react\"\n\ninterface Client {\n  id: string\n  name: string\n  contact: string\n  value: number\n  stage: string\n  daysInStage?: number\n}\n\ninterface StageStats {\n  count: number\n  value: number\n  avgDaysInStage: number\n  clients: Client[]\n}\n\ninterface SalesStage {\n  id: string\n  name: string\n}\n\ninterface StageMetrics {\n  velocity: number\n  bottleneck: boolean\n  trend: 'up' | 'down' | 'stable'\n  forecast: number\n}\n\ninterface PipelineCardsViewProps {\n  salesStages: SalesStage[]\n  getStageStats: (stageId: string) => StageStats\n  getConversionRate: (stageId: string) => number | null\n  getStageColor: (stageId: string, isHovered?: boolean) => string\n  getProgressColor: (stageId: string) => string\n  selectedClients: Set<string>\n  setSelectedClients: (clients: Set<string>) => void\n  expandedStage: string | null\n  toggleStage: (stageId: string) => void\n  hoveredStage: string | null\n  setHoveredStage: (stageId: string | null) => void\n  updateClientStage: (clientId: string, newStage: string) => void\n  handleDragStart: (e: React.DragEvent, clientId: string) => void\n  handleDrop: (e: React.DragEvent, targetStage: string) => void\n  handleDragOver: (e: React.DragEvent) => void\n  animateCards: boolean\n  calculateStageMetrics: (stageId: string) => StageMetrics\n  viewMode: 'cards' | 'kanban'\n}\n\nconst PipelineCardsView: React.FC<PipelineCardsViewProps> = ({\n  salesStages,\n  getStageStats,\n  getConversionRate,\n  getStageColor,\n  getProgressColor,\n  selectedClients,\n  setSelectedClients,\n  expandedStage,\n  toggleStage,\n  hoveredStage,\n  setHoveredStage,\n  updateClientStage,\n  handleDragStart,\n  handleDrop,\n  handleDragOver,\n  animateCards,\n  calculateStageMetrics,\n  viewMode\n}) => {\n  return (\n    <div className={viewMode === 'kanban' ? 'flex gap-4 overflow-x-auto pb-4' : 'grid grid-cols-1 lg:grid-cols-6 gap-4'}>\n      {salesStages.map((stage) => {\n        const stats = getStageStats(stage.id)\n        const conversionRate = getConversionRate(stage.id)\n        const isExpanded = expandedStage === stage.id\n        const metrics = calculateStageMetrics(stage.id)\n\n        return (\n          <motion.div\n            key={stage.id}\n            className={`bg-white rounded-xl shadow-sm border ${\n              isExpanded ? \"lg:col-span-2\" : \"\"\n            } ${\n              viewMode === 'kanban' ? 'min-w-[300px] flex-shrink-0' : ''\n            } transition-all duration-300 ease-in-out ${\n              hoveredStage === stage.id ? 'ring-2 ring-primary-400' : ''\n            }`}\n            initial={animateCards ? { opacity: 0, y: 20 } : false}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.3, delay: salesStages.findIndex(s => s.id === stage.id) * 0.1 }}\n            onDragOver={handleDragOver}\n            onDrop={(e) => handleDrop(e, stage.id)}\n            onDragEnter={() => setHoveredStage(stage.id)}\n            onDragLeave={() => setHoveredStage(null)}\n          >\n            <div className=\"p-4\">\n              {/* Stage header */}\n              <div\n                className={`p-4 rounded-t-xl cursor-pointer ${getStageColor(stage.id, hoveredStage === stage.id)} flex justify-between items-center`}\n                onClick={() => toggleStage(stage.id)}\n              >\n                <div>\n                  <h3 className=\"font-semibold flex items-center\">\n                    {stage.name}\n                    {metrics.bottleneck && (\n                      <AlertCircle className=\"h-4 w-4 ml-2 text-red-600\" />\n                    )}\n                  </h3>\n                  <div className=\"flex items-center mt-1 text-sm\">\n                    <Users className=\"h-3.5 w-3.5 mr-1\" />\n                    <span>{stats.count} clients</span>\n                    {metrics.trend !== 'stable' && (\n                      <span className={`ml-2 text-xs ${\n                        metrics.trend === 'up' ? 'text-green-700' : 'text-red-700'\n                      }`}>\n                        {metrics.trend === 'up' ? '↑' : '↓'} {Math.abs(metrics.velocity * 100).toFixed(0)}%\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex flex-col items-end\">\n                  <div className=\"font-semibold flex items-center\">\n                    <DollarSign className=\"h-3.5 w-3.5\" />\n                    {stats.value.toLocaleString()}\n                  </div>\n                  {viewMode === 'cards' && (\n                    isExpanded ? <ChevronUp className=\"h-4 w-4 mt-1\" /> : <ChevronDown className=\"h-4 w-4 mt-1\" />\n                  )}\n                </div>\n              </div>\n\n              {/* Stage metrics */}\n              <div className=\"grid grid-cols-2 gap-2 mb-3\">\n                <div className=\"bg-gray-50 rounded-md p-2\">\n                  <div className=\"text-xs text-gray-500\">Avg. Time</div>\n                  <div className=\"font-medium flex items-center\">\n                    <Clock className=\"h-3 w-3 mr-1 text-gray-400\" />\n                    {stats.avgDaysInStage} days\n                  </div>\n                </div>\n                {conversionRate !== null && (\n                  <div className=\"bg-gray-50 rounded-md p-2\">\n                    <div className=\"text-xs text-gray-500\">Conversion</div>\n                    <div className=\"font-medium flex items-center\">\n                      <BarChart3 className=\"h-3 w-3 mr-1 text-gray-400\" />\n                      {conversionRate}%\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Progress bar */}\n              <div className=\"h-1.5 w-full bg-gray-100 rounded-full overflow-hidden\">\n                <div\n                  className={`h-full ${getProgressColor(stage.id)} rounded-full transition-all duration-500`}\n                  style={{ width: `${Math.min(100, stats.count * 10)}%` }}\n                ></div>\n              </div>\n\n              {/* Client cards */}\n              <AnimatePresence>\n                {stats.clients.slice(0, viewMode === 'kanban' || isExpanded ? 10 : 3).map((client) => (\n                  <motion.div\n                    key={client.id}\n                    className={`border rounded-lg p-3 hover:shadow-md transition-shadow cursor-move ${\n                      selectedClients.has(client.id) ? 'ring-2 ring-primary-400 bg-primary-50' : ''\n                    }`}\n                    initial={{ opacity: 0, height: 0 }}\n                    animate={{ opacity: 1, height: \"auto\" }}\n                    exit={{ opacity: 0, height: 0 }}\n                    transition={{ duration: 0.2 }}\n                    draggable\n                    onDragStart={(e) => handleDragStart(e as unknown as React.DragEvent, client.id)}\n                  >\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedClients.has(client.id)}\n                        onChange={(e) => {\n                          const newSelected = new Set(selectedClients)\n                          if (e.target.checked) {\n                            newSelected.add(client.id)\n                          } else {\n                            newSelected.delete(client.id)\n                          }\n                          setSelectedClients(newSelected)\n                        }}\n                        onClick={(e) => e.stopPropagation()}\n                        className=\"h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded\"\n                      />\n                      <div className=\"flex items-center text-xs text-gray-500\">\n                        <Calendar className=\"h-3 w-3 mr-1\" />\n                        {client.daysInStage || 0}d\n                      </div>\n                    </div>\n                    \n                    <div className=\"font-medium text-sm\">{client.name}</div>\n                    <div className=\"text-xs text-gray-500\">{client.contact}</div>\n                    <div className=\"flex items-center justify-between mt-2\">\n                      <div className=\"text-xs font-medium\">{client.value}</div>\n                      <div className=\"flex gap-1\">\n                        <button\n                          className=\"text-xs bg-gray-50 px-2 py-1 rounded hover:bg-gray-100 transition-colors\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            const currentIndex = salesStages.findIndex((s) => s.id === stage.id)\n                            if (currentIndex > 0) {\n                              updateClientStage(client.id, salesStages[currentIndex - 1].id)\n                            }\n                          }}\n                          disabled={salesStages.findIndex(s => s.id === stage.id) === 0}\n                        >\n                          <ArrowLeft className=\"h-3 w-3\" />\n                        </button>\n                        <button\n                          className=\"text-xs bg-gray-50 px-2 py-1 rounded hover:bg-gray-100 transition-colors\"\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            const currentIndex = salesStages.findIndex((s) => s.id === stage.id)\n                            if (currentIndex < salesStages.length - 1) {\n                              updateClientStage(client.id, salesStages[currentIndex + 1].id)\n                            }\n                          }}\n                          disabled={salesStages.findIndex(s => s.id === stage.id) === salesStages.length - 1}\n                        >\n                          <ArrowRight className=\"h-3 w-3\" />\n                        </button>\n                      </div>\n                    </div>\n                  </motion.div>\n                ))}\n              </AnimatePresence>\n\n              {/* Show more button */}\n              {stats.clients.length > (viewMode === 'kanban' || isExpanded ? 10 : 3) && (\n                <button\n                  className=\"w-full text-xs text-center py-1 text-gray-500 hover:text-gray-700 transition-colors\"\n                  onClick={() => toggleStage(stage.id)}\n                >\n                  {isExpanded ? \"Show less\" : `Show ${stats.clients.length - 3} more`}\n                </button>\n              )}\n\n              {/* Empty state */}\n              {stats.clients.length === 0 && (\n                <div className=\"text-center py-4 text-sm text-gray-500\">\n                  <div className=\"mb-2\">No clients in this stage</div>\n                  {hoveredStage === stage.id && (\n                    <div className=\"text-xs text-primary-600\">Drop here to move client</div>\n                  )}\n                </div>\n              )}\n\n              {/* Quick actions for stage */}\n              {viewMode === 'kanban' && (\n                <div className=\"pt-3 border-t flex justify-between items-center\">\n                  <button className=\"text-xs text-gray-500 hover:text-gray-700 flex items-center\">\n                    <Plus className=\"h-3 w-3 mr-1\" />\n                    Add client\n                  </button>\n                  <button className=\"text-xs text-gray-500 hover:text-gray-700 flex items-center\">\n                    <Zap className=\"h-3 w-3 mr-1\" />\n                    Automate\n                  </button>\n                </div>\n              )}\n            </div>\n          </motion.div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PipelineCardsView"],"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","ignoreList":[]}