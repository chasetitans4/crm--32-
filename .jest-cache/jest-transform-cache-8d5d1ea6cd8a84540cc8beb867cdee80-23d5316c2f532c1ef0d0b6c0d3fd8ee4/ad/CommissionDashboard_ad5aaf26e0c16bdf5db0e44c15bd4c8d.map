{"version":3,"names":["_default","CommissionDashboard","currentUser","onError","cov_1rwu86rvnm","f","currentMonth","setCurrentMonth","s","_react","useState","Date","getMonth","currentYear","setCurrentYear","getFullYear","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","drawAmount","setDrawAmount","showDrawModal","setShowDrawModal","getUserSalesData","b","allSalesData","id","clientName","serviceType","contractValue","depositAmount","remainingBalance","saleDate","depositPaid","depositPaidDate","finalPaymentPaid","commissionRate","agentId","finalPaymentDate","sales","setSales","draws","setDraws","amount","requestDate","status","paidDate","calculateCommissionRate","salesCount","calculateCommissionData","monthStart","monthEnd","monthlySales","filter","sale","effectiveDate","currentMonthSales","length","currentMonthRate","updatedSales","map","earned","forEach","pending","depositCommission","finalCommission","totalDraws","draw","drawDate","reduce","sum","quarterStart","Math","floor","quarterEnd","monthlyWebDesignSales","monthlyWebDesignBonus","quarterlyWebDesignSales","quarterlyBonus","availableForDraw","max","commissionData","handleDrawRequest","parseFloat","isNaN","Error","formatCurrency","newDraw","now","toString","toISOString","split","error","errorMessage","message","console","Intl","NumberFormat","style","currency","format","formatDate","dateString","toLocaleDateString","month","day","year","getMonthName","_jsxruntime","jsxs","className","jsx","name","charAt","toUpperCase","email","role","_lucidereact","Calendar","size","value","onChange","e","parseInt","target","Array","from","_","i","CheckCircle","Clock","TrendingUp","DollarSign","AlertCircle","width","min","onClick","disabled","Plus","slice","type","step","placeholder"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\CommissionDashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, DollarSign, TrendingUp, Clock, CheckCircle, AlertCircle, Plus, Minus } from 'lucide-react';\nimport type { AuthUser } from '../context/AuthContext';\n\n// Types\ninterface Sale {\n  id: string;\n  clientName: string;\n  serviceType: string;\n  contractValue: number;\n  depositAmount: number;\n  remainingBalance: number;\n  saleDate: string;\n  depositPaid: boolean;\n  depositPaidDate?: string;\n  finalPaymentPaid: boolean;\n  finalPaymentDate?: string;\n  commissionRate: number;\n  agentId?: string;\n}\n\ninterface CommissionData {\n  earned: number;\n  pending: number;\n  totalDraws: number;\n  availableForDraw: number;\n  currentMonthSales: number;\n  currentMonthRate: number;\n  monthlyWebDesignSales: number;\n  monthlyWebDesignBonus: number;\n  quarterlyWebDesignSales: number;\n  quarterlyBonus: number;\n}\n\ninterface CommissionDraw {\n  id: string;\n  amount: number;\n  requestDate: string;\n  status: 'pending' | 'approved' | 'paid';\n  paidDate?: string;\n}\n\ninterface CommissionDashboardProps {\n  currentUser: AuthUser | null;\n  onError?: (error: string) => void;\n}\n\nconst CommissionDashboard: React.FC<CommissionDashboardProps> = ({ currentUser, onError }) => {\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [currentYear, setCurrentYear] = useState(new Date().getFullYear());\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [drawAmount, setDrawAmount] = useState('');\n  const [showDrawModal, setShowDrawModal] = useState(false);\n\n  // Sample data - replace with actual data from your backend\n  // Filter data based on current user\n  const getUserSalesData = (): Sale[] => {\n    if (!currentUser) return [];\n    \n    // Sample data that would be filtered by user ID in a real application\n    const allSalesData: Sale[] = [\n      {\n        id: '1',\n         clientName: 'ABC Company',\n         serviceType: 'Web Design',\n         contractValue: 5000,\n         depositAmount: 2500,\n         remainingBalance: 2500,\n         saleDate: '2025-06-15',\n         depositPaid: true,\n         depositPaidDate: '2025-06-15',\n         finalPaymentPaid: false,\n         commissionRate: 35,\n         agentId: currentUser.id\n      },\n      {\n        id: '2',\n         clientName: 'XYZ Corp',\n         serviceType: 'Local SEO',\n         contractValue: 3000,\n         depositAmount: 1500,\n         remainingBalance: 1500,\n         saleDate: '2025-06-20',\n         depositPaid: true,\n         depositPaidDate: '2025-06-20',\n         finalPaymentPaid: true,\n         finalPaymentDate: '2025-06-25',\n         commissionRate: 35,\n         agentId: currentUser.id\n      },\n      {\n        id: '3',\n         clientName: 'Tech Startup',\n         serviceType: 'Web Design',\n         contractValue: 8000,\n         depositAmount: 4000,\n         remainingBalance: 4000,\n         saleDate: '2025-06-28',\n         depositPaid: false,\n         finalPaymentPaid: false,\n         commissionRate: 35,\n         agentId: currentUser.id\n      }\n    ];\n    \n    // In a real app, this would filter by currentUser.id\n    return allSalesData;\n  };\n  \n  const [sales, setSales] = useState<Sale[]>(getUserSalesData());\n\n  const [draws, setDraws] = useState<CommissionDraw[]>([\n    {\n      id: '1',\n      amount: 500,\n      requestDate: '2025-06-10',\n      status: 'paid',\n      paidDate: '2025-06-14'\n    }\n  ]);\n\n  // Calculate commission rate based on monthly sales\n  const calculateCommissionRate = (salesCount: number): number => {\n    if (salesCount >= 10) return 40;\n    if (salesCount >= 5) return 35;\n    return 30;\n  };\n\n  // Calculate commission data\n  const calculateCommissionData = (): CommissionData => {\n    const monthStart = new Date(selectedYear, selectedMonth, 1);\n    const monthEnd = new Date(selectedYear, selectedMonth + 1, 0);\n    \n    // Filter sales based on when initial deposit was received (per compensation plan)\n    // \"A sale is credited to the month in which the client's initial deposit payment is successfully received\"\n    const monthlySales = sales.filter(sale => {\n      // Use depositPaidDate if available and deposit is paid, otherwise fall back to saleDate\n      const effectiveDate = sale.depositPaid && sale.depositPaidDate \n        ? new Date(sale.depositPaidDate) \n        : new Date(sale.saleDate);\n      return effectiveDate >= monthStart && effectiveDate <= monthEnd;\n    });\n\n    const currentMonthSales = monthlySales.length;\n    const currentMonthRate = calculateCommissionRate(currentMonthSales);\n\n    // Update commission rates for all sales in the month\n    const updatedSales = sales.map(sale => {\n      // Use depositPaidDate if available and deposit is paid, otherwise fall back to saleDate\n      const effectiveDate = sale.depositPaid && sale.depositPaidDate \n        ? new Date(sale.depositPaidDate) \n        : new Date(sale.saleDate);\n      if (effectiveDate >= monthStart && effectiveDate <= monthEnd) {\n        return { ...sale, commissionRate: currentMonthRate };\n      }\n      return sale;\n    });\n\n    // Calculate earned commissions (from paid invoices)\n    let earned = 0;\n    updatedSales.forEach(sale => {\n      if (sale.depositPaid && sale.depositPaidDate) {\n        earned += (sale.depositAmount * sale.commissionRate) / 100;\n      }\n      if (sale.finalPaymentPaid && sale.finalPaymentDate) {\n        earned += (sale.remainingBalance * sale.commissionRate) / 100;\n      }\n    });\n\n    // Calculate pending commissions (from unpaid invoices)\n    let pending = 0;\n    updatedSales.forEach(sale => {\n      const depositCommission = (sale.depositAmount * sale.commissionRate) / 100;\n      const finalCommission = (sale.remainingBalance * sale.commissionRate) / 100;\n\n      if (!sale.depositPaid) {\n        // If deposit isn't paid, the entire commission is pending\n        pending += depositCommission + finalCommission;\n      } else if (!sale.finalPaymentPaid) {\n        // If deposit is paid but final payment isn't, only final part is pending\n        pending += finalCommission;\n      }\n    });\n\n    // Calculate total draws for the month\n    const totalDraws = draws\n      .filter(draw => {\n        const drawDate = new Date(draw.requestDate);\n        return drawDate >= monthStart && drawDate <= monthEnd && draw.status !== 'pending';\n      })\n      .reduce((sum, draw) => sum + draw.amount, 0);\n\n    // Calculate quarterly Web Design sales\n    const quarterStart = new Date(selectedYear, Math.floor(selectedMonth / 3) * 3, 1);\n    const quarterEnd = new Date(selectedYear, Math.floor(selectedMonth / 3) * 3 + 3, 0);\n    \n    // Calculate monthly Web Design sales (based on finalized sales - contract signed + initial deposit made)\n    // According to compensation plan: \"A sale is officially defined when the client has signed their contract and made their initial deposit payment\"\n    const monthlyWebDesignSales = monthlySales.filter(sale => \n      sale.serviceType === 'Web Design'\n    ).length;\n\n    const monthlyWebDesignBonus = monthlyWebDesignSales >= 8 ? monthlyWebDesignSales * 30 : 0;\n\n    const quarterlyWebDesignSales = sales.filter(sale => {\n      // Use depositPaidDate if available and deposit is paid, otherwise fall back to saleDate\n      const effectiveDate = sale.depositPaid && sale.depositPaidDate \n        ? new Date(sale.depositPaidDate) \n        : new Date(sale.saleDate);\n      return effectiveDate >= quarterStart && effectiveDate <= quarterEnd && \n             sale.serviceType === 'Web Design';\n    }).length;\n\n    const quarterlyBonus = quarterlyWebDesignSales >= 24 ? quarterlyWebDesignSales * 50 : 0;\n\n    return {\n      earned,\n      pending,\n      totalDraws,\n      availableForDraw: Math.max(0, earned - totalDraws),\n      currentMonthSales,\n      currentMonthRate,\n      monthlyWebDesignSales,\n      monthlyWebDesignBonus,\n      quarterlyWebDesignSales,\n      quarterlyBonus\n    };\n  };\n\n  const commissionData = calculateCommissionData();\n\n  const handleDrawRequest = () => {\n    try {\n      const amount = parseFloat(drawAmount);\n      \n      // Input validation\n      if (isNaN(amount) || amount <= 0) {\n        throw new Error('Please enter a valid amount greater than $0');\n      }\n      \n      if (amount > commissionData.availableForDraw) {\n        throw new Error(`Amount cannot exceed available balance of ${formatCurrency(commissionData.availableForDraw)}`);\n      }\n      \n      const newDraw: CommissionDraw = {\n        id: Date.now().toString(),\n        amount,\n        requestDate: new Date().toISOString().split('T')[0],\n        status: 'pending'\n      };\n      \n      setDraws([...draws, newDraw]);\n      setDrawAmount('');\n      setShowDrawModal(false);\n      \n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to process draw request';\n      console.error('Draw request error:', errorMessage);\n      onError?.(errorMessage);\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n\n  const getMonthName = (month: number) => {\n    return new Date(2025, month).toLocaleDateString('en-US', { month: 'long' });\n  };\n\n  return (\n    <div className=\"p-6 max-w-7xl mx-auto bg-gray-50 min-h-screen\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-800 mb-2\">Commission Dashboard</h1>\n        <p className=\"text-gray-600\">Track your earnings, pending commissions, and manage draws</p>\n        {currentUser && (\n          <div className=\"mt-4 p-4 bg-white rounded-lg shadow-sm border\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-blue-600 font-semibold text-lg\">\n                  {currentUser.name?.charAt(0).toUpperCase() || (currentUser.email ? currentUser.email.charAt(0).toUpperCase() : '?')}\n                </span>\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">\n                  {currentUser.name || currentUser.email.split('@')[0]}\n                </h3>\n                <p className=\"text-sm text-gray-600\">{currentUser.email}</p>\n                <p className=\"text-sm text-gray-500 capitalize\">Role: {currentUser.role}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Month/Year Selector */}\n      <div className=\"mb-6 bg-white p-4 rounded-lg shadow\">\n        <div className=\"flex items-center gap-4\">\n          <Calendar className=\"text-blue-600\" size={20} />\n          <select \n            value={selectedMonth} \n            onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            {Array.from({ length: 12 }, (_, i) => (\n              <option key={i} value={i}>{getMonthName(i)}</option>\n            ))}\n          </select>\n          <select \n            value={selectedYear} \n            onChange={(e) => setSelectedYear(parseInt(e.target.value))}\n            className=\"px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value={2024}>2024</option>\n            <option value={2025}>2025</option>\n          </select>\n        </div>\n      </div>\n\n      {/* Commission Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8\">\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Earned Commissions</p>\n              <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(commissionData.earned)}</p>\n            </div>\n            <CheckCircle className=\"text-green-600\" size={24} />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-2\">From paid invoices</p>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Pending Commissions</p>\n              <p className=\"text-2xl font-bold text-orange-600\">{formatCurrency(commissionData.pending)}</p>\n            </div>\n            <Clock className=\"text-orange-600\" size={24} />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-2\">From unpaid invoices</p>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Commission Rate</p>\n              <p className=\"text-2xl font-bold text-blue-600\">{commissionData.currentMonthRate}%</p>\n            </div>\n            <TrendingUp className=\"text-blue-600\" size={24} />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-2\">{commissionData.currentMonthSales} sales this month</p>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Available for Draw</p>\n              <p className=\"text-2xl font-bold text-purple-600\">{formatCurrency(commissionData.availableForDraw)}</p>\n            </div>\n            <DollarSign className=\"text-purple-600\" size={24} />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-2\">After {formatCurrency(commissionData.totalDraws)} in draws</p>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm font-medium text-gray-600\">Monthly Bonus</p>\n              <p className=\"text-2xl font-bold text-indigo-600\">{formatCurrency(commissionData.monthlyWebDesignBonus)}</p>\n            </div>\n            <AlertCircle className=\"text-indigo-600\" size={24} />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-2\">{commissionData.monthlyWebDesignSales}/8 Web Design sales</p>\n        </div>\n      </div>\n\n      {/* Commission Rate Breakdown */}\n      <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\n        <h2 className=\"text-xl font-semibold mb-4\">Commission Rate Structure</h2>\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div className={`p-4 rounded-lg border-2 ${commissionData.currentMonthSales >= 1 && commissionData.currentMonthSales <= 4 ? 'border-blue-300 bg-blue-50' : 'border-gray-200'}`}>\n            <p className=\"font-medium\">Sales 1-4</p>\n            <p className=\"text-2xl font-bold text-blue-600\">30%</p>\n          </div>\n          <div className={`p-4 rounded-lg border-2 ${commissionData.currentMonthSales >= 5 && commissionData.currentMonthSales <= 9 ? 'border-blue-300 bg-blue-50' : 'border-gray-200'}`}>\n            <p className=\"font-medium\">Sales 5-9</p>\n            <p className=\"text-2xl font-bold text-blue-600\">35%</p>\n          </div>\n          <div className={`p-4 rounded-lg border-2 ${commissionData.currentMonthSales >= 10 ? 'border-blue-300 bg-blue-50' : 'border-gray-200'}`}>\n            <p className=\"font-medium\">Sales 10+</p>\n            <p className=\"text-2xl font-bold text-blue-600\">40%</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Bonus Structure */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        {/* Monthly Bonus */}\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h2 className=\"text-xl font-semibold mb-4\">Monthly Web Design Bonus</h2>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Web Design Sales This Month: {commissionData.monthlyWebDesignSales}</p>\n              <p className=\"text-sm text-gray-600\">Need 8 sales for $30/sale bonus</p>\n              <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\n                <div \n                  className=\"bg-indigo-600 h-2 rounded-full\" \n                  style={{ width: `${Math.min(100, (commissionData.monthlyWebDesignSales / 8) * 100)}%` }}\n                ></div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {commissionData.monthlyWebDesignSales >= 8 ? 'Bonus Achieved!' : `${8 - commissionData.monthlyWebDesignSales} sales to bonus`}\n              </p>\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-2xl font-bold text-indigo-600\">{formatCurrency(commissionData.monthlyWebDesignBonus)}</p>\n              <p className=\"text-sm text-gray-600\">Monthly Bonus</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Quarterly Bonus */}\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h2 className=\"text-xl font-semibold mb-4\">Quarterly Web Design Bonus</h2>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-600\">Web Design Sales This Quarter: {commissionData.quarterlyWebDesignSales}</p>\n              <p className=\"text-sm text-gray-600\">Need 24 sales for $50/sale bonus</p>\n              <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\n                <div \n                  className=\"bg-blue-600 h-2 rounded-full\" \n                  style={{ width: `${Math.min(100, (commissionData.quarterlyWebDesignSales / 24) * 100)}%` }}\n                ></div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {commissionData.quarterlyWebDesignSales >= 24 ? 'Bonus Achieved!' : `${24 - commissionData.quarterlyWebDesignSales} sales to bonus`}\n              </p>\n            </div>\n            <div className=\"text-right\">\n              <p className=\"text-2xl font-bold text-green-600\">{formatCurrency(commissionData.quarterlyBonus)}</p>\n              <p className=\"text-sm text-gray-600\">Quarterly Bonus</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Sales Breakdown */}\n      <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\n        <h2 className=\"text-xl font-semibold mb-4\">Sales Breakdown</h2>\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full text-sm\">\n            <thead>\n              <tr className=\"border-b\">\n                <th className=\"text-left py-2\">Client</th>\n                <th className=\"text-left py-2\">Service</th>\n                <th className=\"text-left py-2\">Contract Value</th>\n                <th className=\"text-left py-2\">Deposit Status</th>\n                <th className=\"text-left py-2\">Final Payment</th>\n                <th className=\"text-left py-2\">Commission Rate</th>\n                <th className=\"text-left py-2\">Earned</th>\n                <th className=\"text-left py-2\">Pending</th>\n              </tr>\n            </thead>\n            <tbody>\n              {sales.filter(sale => {\n                // Use depositPaidDate if available and deposit is paid, otherwise fall back to saleDate\n                const effectiveDate = sale.depositPaid && sale.depositPaidDate \n                  ? new Date(sale.depositPaidDate) \n                  : new Date(sale.saleDate);\n                const monthStart = new Date(selectedYear, selectedMonth, 1);\n                const monthEnd = new Date(selectedYear, selectedMonth + 1, 0);\n                return effectiveDate >= monthStart && effectiveDate <= monthEnd;\n              }).map(sale => {\n                const depositCommission = (sale.depositAmount * sale.commissionRate) / 100;\n                const finalCommission = (sale.remainingBalance * sale.commissionRate) / 100;\n                const earned = (sale.depositPaid ? depositCommission : 0) + (sale.finalPaymentPaid ? finalCommission : 0);\n                const pending = (!sale.depositPaid ? depositCommission : 0) + (!sale.finalPaymentPaid && sale.depositPaid ? finalCommission : 0);\n                \n                return (\n                  <tr key={sale.id} className=\"border-b hover:bg-gray-50\">\n                    <td className=\"py-2\">{sale.clientName}</td>\n                    <td className=\"py-2\">{sale.serviceType}</td>\n                    <td className=\"py-2\">{formatCurrency(sale.contractValue)}</td>\n                    <td className=\"py-2\">\n                      <span className={`px-2 py-1 rounded-full text-xs ${sale.depositPaid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                        {sale.depositPaid ? 'Paid' : 'Unpaid'}\n                      </span>\n                    </td>\n                    <td className=\"py-2\">\n                      <span className={`px-2 py-1 rounded-full text-xs ${sale.finalPaymentPaid ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                        {sale.finalPaymentPaid ? 'Paid' : 'Unpaid'}\n                      </span>\n                    </td>\n                    <td className=\"py-2\">{sale.commissionRate}%</td>\n                    <td className=\"py-2 text-green-600 font-medium\">{formatCurrency(earned)}</td>\n                    <td className=\"py-2 text-orange-600 font-medium\">{formatCurrency(pending)}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Commission Draws */}\n      <div className=\"bg-white p-6 rounded-lg shadow mb-8\">\n        <div className=\"flex items-center justify-between mb-4\">\n          <h2 className=\"text-xl font-semibold\">Commission Draws</h2>\n          <button\n            onClick={() => setShowDrawModal(true)}\n            disabled={commissionData.availableForDraw <= 0}\n            className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center gap-2\"\n          >\n            <Plus size={16} />\n            Request Draw\n          </button>\n        </div>\n        \n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full text-sm\">\n            <thead>\n              <tr className=\"border-b\">\n                <th className=\"text-left py-2\">Date Requested</th>\n                <th className=\"text-left py-2\">Amount</th>\n                <th className=\"text-left py-2\">Status</th>\n                <th className=\"text-left py-2\">Date Paid</th>\n              </tr>\n            </thead>\n            <tbody>\n              {draws.map(draw => (\n                <tr key={draw.id} className=\"border-b hover:bg-gray-50\">\n                  <td className=\"py-2\">{formatDate(draw.requestDate)}</td>\n                  <td className=\"py-2\">{formatCurrency(draw.amount)}</td>\n                  <td className=\"py-2\">\n                    <span className={`px-2 py-1 rounded-full text-xs ${\n                      draw.status === 'paid' ? 'bg-green-100 text-green-800' :\n                      draw.status === 'approved' ? 'bg-blue-100 text-blue-800' :\n                      'bg-yellow-100 text-yellow-800'\n                    }`}>\n                      {draw.status ? draw.status.charAt(0).toUpperCase() + draw.status.slice(1) : 'Unknown'}\n                    </span>\n                  </td>\n                  <td className=\"py-2\">{draw.paidDate ? formatDate(draw.paidDate) : '-'}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Draw Request Modal */}\n      {showDrawModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg max-w-md w-full mx-4\">\n            <h3 className=\"text-lg font-semibold mb-4\">Request Commission Draw</h3>\n            <p className=\"text-gray-600 mb-4\">\n              Available for draw: {formatCurrency(commissionData.availableForDraw)}\n            </p>\n            <div className=\"mb-4\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Draw Amount\n              </label>\n              <input\n                type=\"number\"\n                value={drawAmount}\n                onChange={(e) => setDrawAmount(e.target.value)}\n                max={commissionData.availableForDraw}\n                min=\"0\"\n                step=\"0.01\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                placeholder=\"Enter amount\"\n              />\n            </div>\n            <div className=\"flex gap-3\">\n              <button\n                onClick={() => setShowDrawModal(false)}\n                className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleDrawRequest}\n                className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n              >\n                Request Draw\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CommissionDashboard;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAimBA;;;;;;WAAAA,QAAA;;;;;;;;yEA/lB2C;;;kCACoD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}