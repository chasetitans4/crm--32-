{"version":3,"names":["TaskListView","cov_vnv8ggwmk","f","s","default","_default","TaskPriorities","LOW","label","color","MEDIUM","HIGH","URGENT","TaskStatuses","TODO","IN_PROGRESS","REVIEW","DONE","TaskCategories","DEVELOPMENT","DESIGN","TESTING","DOCUMENTATION","MEETING","RESEARCH","filteredTasks","selectedTasks","setSelectedTasks","setEditingTask","deleteTask","getTaskProgress","isTaskOverdue","_jsxruntime","jsxs","className","jsx","map","task","_framermotion","motion","div","includes","id","b","initial","opacity","y","animate","onClick","e","ctrlKey","metaKey","prev","filter","type","checked","onChange","target","title","priority","status","description","assignee","_lucidereact","User","size","dueDate","Calendar","Date","toLocaleDateString","category","Tag","style","width","stopPropagation","Edit2","Trash2"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskListView.tsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport { Edit2, Trash2, User, Calendar, Tag } from 'lucide-react';\nimport { Task } from '../../types/task';\n\ninterface TaskListViewProps {\n  filteredTasks: Task[];\n  selectedTasks: string[];\n  setSelectedTasks: React.Dispatch<React.SetStateAction<string[]>>;\n  setEditingTask: React.Dispatch<React.SetStateAction<Task | null>>;\n  deleteTask: (taskId: string) => void;\n  getTaskProgress: (task: Task) => number;\n  isTaskOverdue: (task: Task) => boolean;\n}\n\nconst TaskPriorities = {\n  LOW: {\n    label: 'Low',\n    color: 'text-green-600 bg-green-50 border-green-200'\n  },\n  MEDIUM: {\n    label: 'Medium',\n    color: 'text-yellow-600 bg-yellow-50 border-yellow-200'\n  },\n  HIGH: {\n    label: 'High',\n    color: 'text-orange-600 bg-orange-50 border-orange-200'\n  },\n  URGENT: {\n    label: 'Urgent',\n    color: 'text-red-600 bg-red-50 border-red-200'\n  }\n};\n\nconst TaskStatuses = {\n  TODO: {\n    label: 'To Do',\n    color: 'bg-gray-500 text-white'\n  },\n  IN_PROGRESS: {\n    label: 'In Progress',\n    color: 'bg-blue-500 text-white'\n  },\n  REVIEW: {\n    label: 'Review',\n    color: 'bg-purple-500 text-white'\n  },\n  DONE: {\n    label: 'Done',\n    color: 'bg-green-500 text-white'\n  }\n};\n\nconst TaskCategories = {\n  DEVELOPMENT: { label: 'Development' },\n  DESIGN: { label: 'Design' },\n  TESTING: { label: 'Testing' },\n  DOCUMENTATION: { label: 'Documentation' },\n  MEETING: { label: 'Meeting' },\n  RESEARCH: { label: 'Research' }\n};\n\nexport const TaskListView: React.FC<TaskListViewProps> = ({\n  filteredTasks,\n  selectedTasks,\n  setSelectedTasks,\n  setEditingTask,\n  deleteTask,\n  getTaskProgress,\n  isTaskOverdue\n}) => {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n      <div className=\"p-4 border-b border-gray-100\">\n        <h2 className=\"font-semibold text-gray-900\">Task List</h2>\n      </div>\n      <div className=\"divide-y divide-gray-100\">\n        {filteredTasks.map((task) => (\n          <motion.div\n            key={task.id}\n            className={`p-4 hover:bg-gray-50 transition-colors ${\n              selectedTasks.includes(task.id) ? \"bg-blue-50\" : \"\"\n            }`}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            onClick={(e) => {\n              if (e.ctrlKey || e.metaKey) {\n                setSelectedTasks((prev) =>\n                  prev.includes(task.id) ? prev.filter((id) => id !== task.id) : [...prev, task.id],\n                )\n              }\n            }}\n          >\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4 flex-1\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedTasks.includes(task.id)}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setSelectedTasks((prev) => [...prev, task.id])\n                    } else {\n                      setSelectedTasks((prev) => prev.filter((id) => id !== task.id))\n                    }\n                  }}\n                  className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                />\n\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-1\">\n                    <h3 className=\"font-medium text-gray-900\">{task.title}</h3>\n                    <span\n                      className={`text-xs px-2 py-1 rounded-full border ${TaskPriorities[task.priority]?.color || TaskPriorities.MEDIUM.color}`}\n                    >\n                      {TaskPriorities[task.priority]?.label || \"Medium\"}\n                    </span>\n                    <span\n                      className={`text-xs px-2 py-1 rounded-full ${TaskStatuses[task.status]?.color || TaskStatuses.TODO.color}`}\n                    >\n                      {TaskStatuses[task.status]?.label || \"To Do\"}\n                    </span>\n                  </div>\n\n                  {task.description && <p className=\"text-sm text-gray-600 mb-2\">{task.description}</p>}\n\n                  <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                    {task.assignee && (\n                      <span className=\"flex items-center\">\n                        <User size={12} className=\"mr-1\" />\n                        {task.assignee}\n                      </span>\n                    )}\n                    {task.dueDate && (\n                      <span className={`flex items-center ${isTaskOverdue(task) ? \"text-red-600\" : \"\"}`}>\n                        <Calendar size={12} className=\"mr-1\" />\n                        {new Date(task.dueDate).toLocaleDateString()}\n                      </span>\n                    )}\n                    {task.category && (\n                      <span className=\"flex items-center\">\n                        <Tag size={12} className=\"mr-1\" />\n                        {TaskCategories[task.category as keyof typeof TaskCategories]?.label || task.category}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                {/* Progress Indicator */}\n                <div className=\"w-16 h-2 bg-gray-100 rounded-full\">\n                  <div\n                    className={`h-2 rounded-full transition-all duration-300 ${\n                      task.status === \"DONE\"\n                        ? \"bg-green-500\"\n                        : task.status === \"REVIEW\"\n                          ? \"bg-purple-500\"\n                          : task.status === \"IN_PROGRESS\"\n                            ? \"bg-blue-500\"\n                            : \"bg-gray-300\"\n                    }`}\n                    style={{ width: `${getTaskProgress(task)}%` }}\n                  ></div>\n                </div>\n\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    setEditingTask(task)\n                  }}\n                  className=\"p-2 text-gray-400 hover:text-blue-600 rounded-full hover:bg-blue-50 transition-colors\"\n                >\n                  <Edit2 size={16} />\n                </button>\n\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    deleteTask(task.id)\n                  }}\n                  className=\"p-2 text-gray-400 hover:text-red-600 rounded-full hover:bg-red-50 transition-colors\"\n                >\n                  <Trash2 size={16} />\n                </button>\n              </div>\n            </div>\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default TaskListView;"],"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","ignoreList":[]}