{"version":3,"names":["_default","cov_2ii2aazndj","s","EmailQuotaDisplay","userId","f","quotaStatus","setQuotaStatus","_react","useState","loading","setLoading","useEffect","loadQuotaStatus","status","_emailService","emailService","getQuotaStatus","error","console","b","_jsxruntime","jsx","_card","Card","CardContent","className","jsxs","_lucidereact","AlertTriangle","getDailyPercentage","daily","used","limit","getMonthlyPercentage","monthly","getStoragePercentage","storage","getStatusColor","percentage","getStatusIcon","CheckCircle","CardHeader","CardTitle","Mail","CardDescription","Calendar","_badge","Badge","variant","_progress","Progress","value","remaining","toFixed","HardDrive"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\email\\EmailQuotaDisplay.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../ui/card\"\nimport { Progress } from \"../ui/progress\"\nimport { Badge } from \"../ui/badge\"\nimport { emailService } from \"../../services/emailService\"\nimport { Mail, HardDrive, Calendar, AlertTriangle, CheckCircle } from \"lucide-react\"\n\ninterface EmailQuotaDisplayProps {\n  userId: string\n}\n\nconst EmailQuotaDisplay: React.FC<EmailQuotaDisplayProps> = ({ userId }) => {\n  const [quotaStatus, setQuotaStatus] = useState<any>(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    loadQuotaStatus()\n  }, [userId])\n\n  const loadQuotaStatus = async () => {\n    try {\n      setLoading(true)\n      const status = await emailService.getQuotaStatus(userId)\n      setQuotaStatus(status)\n    } catch (error) {\n      console.error(\"Failed to load quota status:\", error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  if (loading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"h-2 bg-gray-200 rounded\"></div>\n            <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  if (!quotaStatus) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center text-gray-500\">\n            <AlertTriangle className=\"mx-auto h-8 w-8 mb-2\" />\n            <p>Unable to load quota information</p>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  const getDailyPercentage = () => (quotaStatus.daily.used / quotaStatus.daily.limit) * 100\n  const getMonthlyPercentage = () => (quotaStatus.monthly.used / quotaStatus.monthly.limit) * 100\n  const getStoragePercentage = () => (quotaStatus.storage.used / quotaStatus.storage.limit) * 100\n\n  const getStatusColor = (percentage: number) => {\n    if (percentage >= 90) return \"text-red-600\"\n    if (percentage >= 75) return \"text-yellow-600\"\n    return \"text-green-600\"\n  }\n\n  const getStatusIcon = (percentage: number) => {\n    if (percentage >= 90) return <AlertTriangle className=\"h-4 w-4\" />\n    return <CheckCircle className=\"h-4 w-4\" />\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Mail className=\"h-5 w-5\" />\n            Email Usage Overview\n          </CardTitle>\n          <CardDescription>Monitor your email sending limits and storage usage</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n          {/* Daily Quota */}\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Calendar className=\"h-4 w-4 text-blue-600\" />\n                <span className=\"font-medium\">Daily Emails</span>\n                {getDailyPercentage() >= 90 && (\n                  <Badge variant=\"destructive\" className=\"text-xs\">\n                    Critical\n                  </Badge>\n                )}\n              </div>\n              <div className={`flex items-center gap-1 ${getStatusColor(getDailyPercentage())}`}>\n                {getStatusIcon(getDailyPercentage())}\n                <span className=\"text-sm font-medium\">\n                  {quotaStatus.daily.used} / {quotaStatus.daily.limit}\n                </span>\n              </div>\n            </div>\n            <Progress value={getDailyPercentage()} className=\"h-2\" />\n            <div className=\"flex justify-between text-xs text-gray-500\">\n              <span>{quotaStatus.daily.remaining} remaining today</span>\n              <span>{getDailyPercentage().toFixed(1)}% used</span>\n            </div>\n          </div>\n\n          {/* Monthly Quota */}\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Calendar className=\"h-4 w-4 text-purple-600\" />\n                <span className=\"font-medium\">Monthly Emails</span>\n                {getMonthlyPercentage() >= 90 && (\n                  <Badge variant=\"destructive\" className=\"text-xs\">\n                    Critical\n                  </Badge>\n                )}\n              </div>\n              <div className={`flex items-center gap-1 ${getStatusColor(getMonthlyPercentage())}`}>\n                {getStatusIcon(getMonthlyPercentage())}\n                <span className=\"text-sm font-medium\">\n                  {quotaStatus.monthly.used} / {quotaStatus.monthly.limit}\n                </span>\n              </div>\n            </div>\n            <Progress value={getMonthlyPercentage()} className=\"h-2\" />\n            <div className=\"flex justify-between text-xs text-gray-500\">\n              <span>{quotaStatus.monthly.remaining} remaining this month</span>\n              <span>{getMonthlyPercentage().toFixed(1)}% used</span>\n            </div>\n          </div>\n\n          {/* Storage Quota */}\n          <div className=\"space-y-2\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <HardDrive className=\"h-4 w-4 text-orange-600\" />\n                <span className=\"font-medium\">Email Storage</span>\n                {getStoragePercentage() >= 90 && (\n                  <Badge variant=\"destructive\" className=\"text-xs\">\n                    Critical\n                  </Badge>\n                )}\n              </div>\n              <div className={`flex items-center gap-1 ${getStatusColor(getStoragePercentage())}`}>\n                {getStatusIcon(getStoragePercentage())}\n                <span className=\"text-sm font-medium\">\n                  {quotaStatus.storage.used.toFixed(1)} / {quotaStatus.storage.limit} MB\n                </span>\n              </div>\n            </div>\n            <Progress value={getStoragePercentage()} className=\"h-2\" />\n            <div className=\"flex justify-between text-xs text-gray-500\">\n              <span>{quotaStatus.storage.remaining.toFixed(1)} MB available</span>\n              <span>{getStoragePercentage().toFixed(1)}% used</span>\n            </div>\n          </div>\n\n          {/* Warnings */}\n          {(getDailyPercentage() >= 90 || getMonthlyPercentage() >= 90 || getStoragePercentage() >= 90) && (\n            <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center gap-2 text-red-800 mb-2\">\n                <AlertTriangle className=\"h-4 w-4\" />\n                <span className=\"font-medium\">Quota Warning</span>\n              </div>\n              <div className=\"text-sm text-red-700 space-y-1\">\n                {getDailyPercentage() >= 90 && <p>• Daily email limit almost reached. Resets tomorrow.</p>}\n                {getMonthlyPercentage() >= 90 && (\n                  <p>• Monthly email limit almost reached. Consider upgrading your plan.</p>\n                )}\n                {getStoragePercentage() >= 90 && (\n                  <p>• Email storage almost full. Clean up old emails or upgrade storage.</p>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Tips */}\n          <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <h4 className=\"font-medium text-blue-900 mb-2\">Tips to Optimize Usage</h4>\n            <ul className=\"text-sm text-blue-800 space-y-1\">\n              <li>• Use email templates to save time and maintain consistency</li>\n              <li>• Enable attachment compression to save storage space</li>\n              <li>• Clean up old emails regularly to free up storage</li>\n              <li>• Schedule bulk emails to spread usage across days</li>\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport default EmailQuotaDisplay\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAwMA;;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","ignoreList":[]}