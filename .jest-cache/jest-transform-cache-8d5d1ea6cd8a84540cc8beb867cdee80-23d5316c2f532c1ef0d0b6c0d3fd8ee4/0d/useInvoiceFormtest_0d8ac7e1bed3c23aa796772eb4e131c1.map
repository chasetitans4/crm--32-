{"version":3,"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\__tests__\\hooks\\useInvoiceForm.test.ts"],"sourcesContent":["import { renderHook, act } from \"@testing-library/react\"\nimport { useInvoiceForm } from \"../../hooks/useInvoiceForm\"\nimport type { Invoice } from \"../../schemas/contractInvoiceSchemas\"\n\ndescribe(\"useInvoiceForm\", () => {\n  const mockOnSubmit = jest.fn<void, [Invoice]>()\n\n  beforeEach(() => {\n    mockOnSubmit.mockClear()\n  })\n\n  it(\"initializes with default values\", () => {\n    const { result } = renderHook(() => useInvoiceForm(null, mockOnSubmit))\n\n    expect(result.current.form.getValues(\"clientName\")).toBe(\"\")\n    \n    expect(result.current.fields).toHaveLength(1)\n    expect(result.current.form.formState.errors).toEqual({})\n    expect(result.current.form.formState.isSubmitting).toBe(false)\n  })\n\n  it(\"updates form data correctly\", () => {\n    const { result } = renderHook(() => useInvoiceForm(null, mockOnSubmit))\n\n    act(() => {\n      result.current.form.setValue(\"clientName\", \"John Doe\")\n    })\n\n    expect(result.current.form.getValues(\"clientName\")).toBe(\"John Doe\")\n  })\n\n  it(\"adds new item correctly\", () => {\n    const { result } = renderHook(() => useInvoiceForm(null, mockOnSubmit))\n\n    act(() => {\n      result.current.addItem()\n    })\n\n    expect(result.current.fields).toHaveLength(2)\n  })\n\n  it(\"removes item correctly\", () => {\n    const { result } = renderHook(() => useInvoiceForm(null, mockOnSubmit))\n\n    act(() => {\n      result.current.addItem()\n    })\n\n    expect(result.current.fields).toHaveLength(2)\n\n    act(() => {\n      result.current.removeItem(1)\n    })\n\n    expect(result.current.fields).toHaveLength(1)\n  })\n\n  it(\"calculates totals correctly\", () => {\n    const { result } = renderHook(() => useInvoiceForm(null, mockOnSubmit))\n\n    act(() => {\n      const items = result.current.form.getValues(\"items\")\n      items[0].quantity = 2\n      items[0].price = 100\n      result.current.form.setValue(\"items\", items)\n    })\n\n    expect(result.current.subtotal).toBe(200)\n    expect(result.current.total).toBe(200) // No tax by default\n  })\n\n  it(\"validates form correctly\", async () => {\n    const { result } = renderHook(() => useInvoiceForm(null, mockOnSubmit))\n\n    await act(async () => {\n      const isValid = await result.current.form.trigger()\n      expect(isValid).toBe(false)\n    })\n  })\n\n  it(\"resets form correctly\", () => {\n    const { result } = renderHook(() => useInvoiceForm(null, mockOnSubmit))\n\n    act(() => {\n      result.current.form.setValue(\"clientName\", \"John Doe\")\n      result.current.addItem()\n    })\n\n    act(() => {\n      result.current.form.reset()\n    })\n\n    expect(result.current.form.getValues(\"clientName\")).toBe(\"\")\n    expect(result.current.fields).toHaveLength(1) // Default has 1 item\n  })\n})\n"],"names":["describe","mockOnSubmit","jest","fn","beforeEach","mockClear","it","result","renderHook","useInvoiceForm","expect","current","form","getValues","toBe","fields","toHaveLength","formState","errors","toEqual","isSubmitting","act","setValue","addItem","removeItem","items","quantity","price","subtotal","total","isValid","trigger","reset"],"mappings":"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"}