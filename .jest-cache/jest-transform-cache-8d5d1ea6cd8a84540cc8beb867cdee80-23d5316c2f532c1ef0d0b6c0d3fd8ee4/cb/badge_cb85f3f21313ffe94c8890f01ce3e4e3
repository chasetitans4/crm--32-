cc4128aed88dc2f4b6c787688ce20c35
"use strict";

/* istanbul ignore next */
function cov_9sjpnc5bf() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\badge.tsx";
  var hash = "8686551bacc7c759683533f5705d1509bd92c58d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\badge.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 21
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 72
        }
      },
      "8": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 41
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "10": {
        start: {
          line: 23,
          column: 39
        },
        end: {
          line: 23,
          column: 51
        }
      },
      "11": {
        start: {
          line: 24,
          column: 28
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "12": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 25,
          column: 40
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 20
        }
      },
      "14": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 66
        }
      },
      "15": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 19
        }
      },
      "17": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "18": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 37,
          column: 10
        }
      },
      "19": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 53
        }
      },
      "20": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 30
        }
      },
      "22": {
        start: {
          line: 43,
          column: 17
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "23": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 88
        }
      },
      "24": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "25": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "26": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 95
        }
      },
      "27": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "28": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 57
        }
      },
      "29": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 39
        }
      },
      "30": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 25
        }
      },
      "31": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "32": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 31
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 18
        }
      },
      "34": {
        start: {
          line: 63,
          column: 22
        },
        end: {
          line: 71,
          column: 1
        }
      },
      "35": {
        start: {
          line: 64,
          column: 21
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "36": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 235
        }
      },
      "37": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 76,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 47
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 39
          },
          end: {
            line: 26,
            column: 40
          }
        },
        loc: {
          start: {
            line: 26,
            column: 61
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 30,
            column: 9
          },
          end: {
            line: 30,
            column: 34
          }
        },
        loc: {
          start: {
            line: 30,
            column: 53
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 22
          },
          end: {
            line: 63,
            column: 23
          }
        },
        loc: {
          start: {
            line: 63,
            column: 45
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 63
      },
      "7": {
        name: "Badge",
        decl: {
          start: {
            line: 72,
            column: 9
          },
          end: {
            line: 72,
            column: 14
          }
        },
        loc: {
          start: {
            line: 72,
            column: 61
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 72
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 15
          },
          end: {
            line: 27,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 45
          }
        }, {
          start: {
            line: 27,
            column: 48
          },
          end: {
            line: 27,
            column: 65
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 20
          }
        }, {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 27
          }
        }, {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 31,
            column: 45
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "5": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 47
          }
        }, {
          start: {
            line: 34,
            column: 51
          },
          end: {
            line: 34,
            column: 76
          }
        }],
        line: 34
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 13
          }
        }, {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 31
          }
        }],
        line: 40
      },
      "8": {
        loc: {
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 32
          },
          end: {
            line: 46,
            column: 53
          }
        }, {
          start: {
            line: 46,
            column: 57
          },
          end: {
            line: 46,
            column: 88
          }
        }],
        line: 46
      },
      "9": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "10": {
        loc: {
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 12
          },
          end: {
            line: 48,
            column: 29
          }
        }, {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 79
          }
        }],
        line: 48
      },
      "11": {
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 49,
            column: 47
          },
          end: {
            line: 49,
            column: 88
          }
        }, {
          start: {
            line: 49,
            column: 91
          },
          end: {
            line: 49,
            column: 95
          }
        }],
        line: 49
      },
      "12": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 54,
            column: 13
          }
        }],
        line: 50
      },
      "13": {
        loc: {
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 16
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 33
          }
        }, {
          start: {
            line: 50,
            column: 37
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "14": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "15": {
        loc: {
          start: {
            line: 63,
            column: 23
          },
          end: {
            line: 63,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 42
          }
        }],
        line: 63
      },
      "16": {
        loc: {
          start: {
            line: 70,
            column: 196
          },
          end: {
            line: 70,
            column: 233
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 196
          },
          end: {
            line: 70,
            column: 213
          }
        }, {
          start: {
            line: 70,
            column: 217
          },
          end: {
            line: 70,
            column: 233
          }
        }],
        line: 70
      },
      "17": {
        loc: {
          start: {
            line: 72,
            column: 28
          },
          end: {
            line: 72,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 72,
            column: 38
          },
          end: {
            line: 72,
            column: 47
          }
        }],
        line: 72
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\badge.tsx"],
      sourcesContent: ["import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = (variant = \"default\") => {\n  const variants = {\n    default: \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n    secondary: \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n    destructive: \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n    outline: \"text-foreground\",\n  }\n\n  return cn(\n    \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n    variants[variant as keyof typeof variants] || variants.default,\n  )\n}\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: \"default\" | \"secondary\" | \"destructive\" | \"outline\"\n}\n\nfunction Badge({ className, variant = \"default\", ...props }: BadgeProps) {\n  return <div className={cn(badgeVariants(variant), className)} {...props} />\n}\n\nexport { Badge, badgeVariants }\n"],
      names: ["Badge", "badgeVariants", "variant", "variants", "default", "secondary", "destructive", "outline", "cn", "className", "props", "div"],
      mappings: ";;;;;;;;;;;QAyBSA;eAAAA;;QAAOC;eAAAA;;;;+DAzBO;uBACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMA,gBAAgB,CAACC,UAAU,SAAS;IACxC,MAAMC,WAAW;QACfC,SAAS;QACTC,WAAW;QACXC,aAAa;QACbC,SAAS;IACX;IAEA,OAAOC,IAAAA,SAAE,EACP,0KACAL,QAAQ,CAACD,QAAiC,IAAIC,SAASC,OAAO;AAElE;AAMA,SAASJ,MAAM,EAAES,SAAS,EAAEP,UAAU,SAAS,EAAE,GAAGQ,OAAmB;IACrE,qBAAO,qBAACC;QAAIF,WAAWD,IAAAA,SAAE,EAACP,cAAcC,UAAUO;QAAa,GAAGC,KAAK;;AACzE"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8686551bacc7c759683533f5705d1509bd92c58d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9sjpnc5bf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9sjpnc5bf();
cov_9sjpnc5bf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_9sjpnc5bf().f[0]++;
  cov_9sjpnc5bf().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_9sjpnc5bf().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_9sjpnc5bf().s[3]++;
_export(exports, {
  get Badge() {
    /* istanbul ignore next */
    cov_9sjpnc5bf().f[1]++;
    cov_9sjpnc5bf().s[4]++;
    return Badge;
  },
  get badgeVariants() {
    /* istanbul ignore next */
    cov_9sjpnc5bf().f[2]++;
    cov_9sjpnc5bf().s[5]++;
    return badgeVariants;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_9sjpnc5bf().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_9sjpnc5bf().s[7]++, _interop_require_wildcard(require("react")));
const _utils =
/* istanbul ignore next */
(cov_9sjpnc5bf().s[8]++, require("../../lib/utils"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_9sjpnc5bf().f[3]++;
  cov_9sjpnc5bf().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_9sjpnc5bf().b[0][0]++;
    cov_9sjpnc5bf().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_9sjpnc5bf().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_9sjpnc5bf().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_9sjpnc5bf().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_9sjpnc5bf().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_9sjpnc5bf().f[4]++;
    cov_9sjpnc5bf().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_9sjpnc5bf().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_9sjpnc5bf().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_9sjpnc5bf().f[5]++;
  cov_9sjpnc5bf().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_9sjpnc5bf().b[2][0]++;
    cov_9sjpnc5bf().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_9sjpnc5bf().b[2][1]++;
  }
  cov_9sjpnc5bf().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_9sjpnc5bf().b[4][0]++;
    cov_9sjpnc5bf().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_9sjpnc5bf().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_9sjpnc5bf().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_9sjpnc5bf().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_9sjpnc5bf().b[6][0]++;
    cov_9sjpnc5bf().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_9sjpnc5bf().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_9sjpnc5bf().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_9sjpnc5bf().s[23]++,
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_9sjpnc5bf().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_9sjpnc5bf().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_9sjpnc5bf().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_9sjpnc5bf().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_9sjpnc5bf().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_9sjpnc5bf().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_9sjpnc5bf().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_9sjpnc5bf().b[11][1]++, null));
      /* istanbul ignore next */
      cov_9sjpnc5bf().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_9sjpnc5bf().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_9sjpnc5bf().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_9sjpnc5bf().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_9sjpnc5bf().b[12][0]++;
        cov_9sjpnc5bf().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_9sjpnc5bf().b[12][1]++;
        cov_9sjpnc5bf().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_9sjpnc5bf().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_9sjpnc5bf().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_9sjpnc5bf().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_9sjpnc5bf().b[14][0]++;
    cov_9sjpnc5bf().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_9sjpnc5bf().b[14][1]++;
  }
  cov_9sjpnc5bf().s[33]++;
  return newObj;
}
/* istanbul ignore next */
cov_9sjpnc5bf().s[34]++;
const badgeVariants = (variant =
/* istanbul ignore next */
(cov_9sjpnc5bf().b[15][0]++, "default")) => {
  /* istanbul ignore next */
  cov_9sjpnc5bf().f[6]++;
  const variants =
  /* istanbul ignore next */
  (cov_9sjpnc5bf().s[35]++, {
    default: "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
    secondary: "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
    destructive: "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
    outline: "text-foreground"
  });
  /* istanbul ignore next */
  cov_9sjpnc5bf().s[36]++;
  return (0, _utils.cn)("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[16][0]++, variants[variant]) ||
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[16][1]++, variants.default));
};
function Badge({
  className,
  variant =
  /* istanbul ignore next */
  (cov_9sjpnc5bf().b[17][0]++, "default"),
  ...props
}) {
  /* istanbul ignore next */
  cov_9sjpnc5bf().f[7]++;
  cov_9sjpnc5bf().s[37]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: (0, _utils.cn)(badgeVariants(variant), className),
    ...props
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYWRnZSIsImNvdl85c2pwbmM1YmYiLCJmIiwicyIsImJhZGdlVmFyaWFudHMiLCJ2YXJpYW50IiwiYiIsInZhcmlhbnRzIiwiZGVmYXVsdCIsInNlY29uZGFyeSIsImRlc3RydWN0aXZlIiwib3V0bGluZSIsIl91dGlscyIsImNuIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJfanN4cnVudGltZSIsImpzeCJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY2hhc2VcXERvd25sb2Fkc1xcY3JtICgzMilcXHNyY1xcY29tcG9uZW50c1xcdWlcXGJhZGdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxuXG5jb25zdCBiYWRnZVZhcmlhbnRzID0gKHZhcmlhbnQgPSBcImRlZmF1bHRcIikgPT4ge1xuICBjb25zdCB2YXJpYW50cyA9IHtcbiAgICBkZWZhdWx0OiBcImJvcmRlci10cmFuc3BhcmVudCBiZy1wcmltYXJ5IHRleHQtcHJpbWFyeS1mb3JlZ3JvdW5kIGhvdmVyOmJnLXByaW1hcnkvODBcIixcbiAgICBzZWNvbmRhcnk6IFwiYm9yZGVyLXRyYW5zcGFyZW50IGJnLXNlY29uZGFyeSB0ZXh0LXNlY29uZGFyeS1mb3JlZ3JvdW5kIGhvdmVyOmJnLXNlY29uZGFyeS84MFwiLFxuICAgIGRlc3RydWN0aXZlOiBcImJvcmRlci10cmFuc3BhcmVudCBiZy1kZXN0cnVjdGl2ZSB0ZXh0LWRlc3RydWN0aXZlLWZvcmVncm91bmQgaG92ZXI6YmctZGVzdHJ1Y3RpdmUvODBcIixcbiAgICBvdXRsaW5lOiBcInRleHQtZm9yZWdyb3VuZFwiLFxuICB9XG5cbiAgcmV0dXJuIGNuKFxuICAgIFwiaW5saW5lLWZsZXggaXRlbXMtY2VudGVyIHJvdW5kZWQtZnVsbCBib3JkZXIgcHgtMi41IHB5LTAuNSB0ZXh0LXhzIGZvbnQtc2VtaWJvbGQgdHJhbnNpdGlvbi1jb2xvcnMgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmctMiBmb2N1czpyaW5nLXJpbmcgZm9jdXM6cmluZy1vZmZzZXQtMlwiLFxuICAgIHZhcmlhbnRzW3ZhcmlhbnQgYXMga2V5b2YgdHlwZW9mIHZhcmlhbnRzXSB8fCB2YXJpYW50cy5kZWZhdWx0LFxuICApXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFkZ2VQcm9wcyBleHRlbmRzIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PiB7XG4gIHZhcmlhbnQ/OiBcImRlZmF1bHRcIiB8IFwic2Vjb25kYXJ5XCIgfCBcImRlc3RydWN0aXZlXCIgfCBcIm91dGxpbmVcIlxufVxuXG5mdW5jdGlvbiBCYWRnZSh7IGNsYXNzTmFtZSwgdmFyaWFudCA9IFwiZGVmYXVsdFwiLCAuLi5wcm9wcyB9OiBCYWRnZVByb3BzKSB7XG4gIHJldHVybiA8ZGl2IGNsYXNzTmFtZT17Y24oYmFkZ2VWYXJpYW50cyh2YXJpYW50KSwgY2xhc3NOYW1lKX0gey4uLnByb3BzfSAvPlxufVxuXG5leHBvcnQgeyBCYWRnZSwgYmFkZ2VWYXJpYW50cyB9XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQXlCU0EsTUFBQTtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBQUgsS0FBQTs7TUFBT0ksY0FBQTtJQUFBO0lBQUFILGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBQUMsYUFBQTs7Ozs7Ozs7d0VBekJPOzs7aUNBQ0o7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVuQixNQUFNQSxhQUFBLEdBQWdCQSxDQUFDQyxPQUFBO0FBQUE7QUFBQSxDQUFBSixhQUFBLEdBQUFLLENBQUEsV0FBVSxTQUFTO0VBQUE7RUFBQUwsYUFBQSxHQUFBQyxDQUFBO0VBQ3hDLE1BQU1LLFFBQUE7RUFBQTtFQUFBLENBQUFOLGFBQUEsR0FBQUUsQ0FBQSxRQUFXO0lBQ2ZLLE9BQUEsRUFBUztJQUNUQyxTQUFBLEVBQVc7SUFDWEMsV0FBQSxFQUFhO0lBQ2JDLE9BQUEsRUFBUztFQUNYO0VBQUE7RUFBQVYsYUFBQSxHQUFBRSxDQUFBO0VBRUEsT0FBTyxJQUFBUyxNQUFBLENBQUFDLEVBQUUsRUFDUDtFQUNBO0VBQUEsQ0FBQVosYUFBQSxHQUFBSyxDQUFBLFdBQUFDLFFBQVEsQ0FBQ0YsT0FBQSxDQUFpQztFQUFBO0VBQUEsQ0FBQUosYUFBQSxHQUFBSyxDQUFBLFdBQUlDLFFBQUEsQ0FBU0MsT0FBTztBQUVsRTtBQU1BLFNBQVNSLE1BQU07RUFBRWMsU0FBUztFQUFFVCxPQUFBO0VBQUE7RUFBQSxDQUFBSixhQUFBLEdBQUFLLENBQUEsV0FBVSxTQUFTO0VBQUUsR0FBR1M7QUFBQSxDQUFtQjtFQUFBO0VBQUFkLGFBQUEsR0FBQUMsQ0FBQTtFQUFBRCxhQUFBLEdBQUFFLENBQUE7RUFDckUsb0JBQU8sSUFBQWEsV0FBQSxDQUFBQyxHQUFBLEVBQUM7SUFBSUgsU0FBQSxFQUFXLElBQUFGLE1BQUEsQ0FBQUMsRUFBRSxFQUFDVCxhQUFBLENBQWNDLE9BQUEsR0FBVVMsU0FBQTtJQUFhLEdBQUdDOztBQUNwRSIsImlnbm9yZUxpc3QiOltdfQ==