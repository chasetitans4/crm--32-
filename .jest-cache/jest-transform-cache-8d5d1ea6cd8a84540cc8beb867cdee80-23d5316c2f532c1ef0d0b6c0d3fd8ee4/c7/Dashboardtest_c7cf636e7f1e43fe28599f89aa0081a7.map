{"version":3,"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\__tests__\\Dashboard.test.tsx"],"sourcesContent":["import React from 'react'\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react'\nimport userEvent from '@testing-library/user-event'\nimport '@testing-library/jest-dom'\nimport Dashboard from '../Dashboard'\nimport { AppProvider } from '../../context/AppContext'\nimport type { Client, Task, Contract, Invoice } from '../../types'\n\n// Mock framer-motion\njest.mock('framer-motion', () => ({\n  motion: {\n    div: ({ children, ...props }: any) => <div {...props}>{children}</div>,\n    h1: ({ children, ...props }: any) => <h1 {...props}>{children}</h1>,\n    p: ({ children, ...props }: any) => <p {...props}>{children}</p>,\n  },\n  AnimatePresence: ({ children }: any) => children,\n}))\n\nconst mockClients: Client[] = [\n  {\n    id: '1',\n    name: 'John Doe',\n    email: 'john@example.com',\n    phone: '+1 (555) 123-4567',\n    company: 'Acme Corp',\n    stage: 'lead',\n    value: 50000,\n    lastContact: '2024-01-15',\n    notes: [],\n    projects: [],\n    tags: ['enterprise'],\n    priority: 'high',\n    source: 'website',\n    assignedTo: 'sales-rep-1'\n  },\n  {\n    id: '2',\n    name: 'Jane Smith',\n    email: 'jane@example.com',\n    phone: '+1 (555) 987-6543',\n    company: 'Tech Solutions',\n    stage: 'qualified',\n    value: 75000,\n    lastContact: '2024-01-10',\n    notes: [],\n    projects: [],\n    tags: ['tech'],\n    priority: 'medium',\n    source: 'referral',\n    assignedTo: 'sales-rep-2'\n  },\n  {\n    id: '3',\n    name: 'Bob Wilson',\n    email: 'bob@example.com',\n    phone: '+1 (555) 456-7890',\n    company: 'StartupXYZ',\n    stage: 'closed',\n    value: 25000,\n    lastContact: '2024-01-05',\n    notes: [],\n    projects: [],\n    tags: ['startup'],\n    priority: 'low',\n    source: 'cold-call',\n    assignedTo: 'sales-rep-1'\n  }\n]\n\nconst mockTasks: Task[] = [\n  {\n    id: '1',\n    title: 'Follow up with John Doe',\n    description: 'Schedule demo call',\n    dueDate: '2024-01-20',\n    priority: 'high',\n    status: 'pending',\n    assignedTo: 'sales-rep-1',\n    clientId: '1'\n  },\n  {\n    id: '2',\n    title: 'Prepare proposal for Jane Smith',\n    description: 'Create detailed proposal',\n    dueDate: '2024-01-18',\n    priority: 'medium',\n    status: 'in-progress',\n    assignedTo: 'sales-rep-2',\n    clientId: '2'\n  }\n]\n\nconst mockContracts: Contract[] = [\n  {\n    id: '1',\n    clientId: '3',\n    title: 'Software Development Contract',\n    value: 25000,\n    startDate: '2024-01-01',\n    endDate: '2024-06-01',\n    status: 'active',\n    terms: 'Standard terms'\n  }\n]\n\nconst mockInvoices: Invoice[] = [\n  {\n    id: '1',\n    clientId: '3',\n    contractId: '1',\n    amount: 5000,\n    dueDate: '2024-01-30',\n    status: 'pending',\n    items: []\n  }\n]\n\nconst mockSalesStages = [\n  { id: 'lead', name: 'Lead', color: '#3B82F6' },\n  { id: 'qualified', name: 'Qualified', color: '#10B981' },\n  { id: 'proposal', name: 'Proposal', color: '#F59E0B' },\n  { id: 'closed', name: 'Closed', color: '#EF4444' }\n]\n\nconst mockInitialState = {\n  clients: mockClients,\n  salesStages: mockSalesStages,\n  contracts: mockContracts,\n  invoices: mockInvoices,\n  tasks: mockTasks,\n  projects: [],\n  reports: [],\n  settings: {\n    currency: 'USD',\n    dateFormat: 'MM/DD/YYYY',\n    timezone: 'UTC'\n  }\n}\n\nconst renderWithProvider = (component: React.ReactElement) => {\n  return render(\n    <AppProvider>\n      {component}\n    </AppProvider>\n  )\n}\n\ndescribe('Dashboard Component', () => {\n  beforeEach(() => {\n    jest.clearAllMocks()\n  })\n\n  test('renders dashboard component', async () => {\n    renderWithProvider(<Dashboard />)\n    // Wait for the animated Dashboard title to appear\n    await waitFor(() => {\n      expect(screen.getByText('Dashboard')).toBeInTheDocument()\n    })\n  })\n\n  test('displays active clients metric', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Active Clients')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('displays total pipeline value metric', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Total Pipeline Value')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('displays active projects metric', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Active Projects')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('displays task completion metric', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Tasks Completion')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('shows recent activity section', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Recent Activity')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('displays revenue trend chart', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Revenue Trend (Last 7 Months)')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('shows new clients chart', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('New Clients (Last 7 Months)')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('displays upcoming tasks and events', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Upcoming Tasks & Events')).toBeInTheDocument()\n      expect(screen.getByText('Client meeting')).toBeInTheDocument()\n      expect(screen.getByText('Send proposal')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('shows recent activity section', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Recent Activity')).toBeInTheDocument()\n      expect(screen.getByText('New client added')).toBeInTheDocument()\n      expect(screen.getByText('Task completed')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('displays client distribution by stage', async () => {\n    renderWithProvider(<Dashboard />)\n    \n    await waitFor(() => {\n      // Should show distribution: 1 lead, 1 qualified, 1 closed\n      const leadClients = mockClients.filter(c => c.stage === 'lead').length\n      const qualifiedClients = mockClients.filter(c => c.stage === 'qualified').length\n      const closedClients = mockClients.filter(c => c.stage === 'closed').length\n      \n      expect(leadClients).toBe(1)\n      expect(qualifiedClients).toBe(1)\n      expect(closedClients).toBe(1)\n    }, { timeout: 3000 })\n  })\n\n  test('handles setActiveTab prop correctly', async () => {\n    const mockSetActiveTab = jest.fn()\n    renderWithProvider(<Dashboard setActiveTab={mockSetActiveTab} />)\n    \n    // Component should render without errors when setActiveTab is provided\n    await waitFor(() => {\n      expect(screen.getByText('Dashboard')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('displays correct priority distribution', async () => {\n    renderWithProvider(<Dashboard />)\n    \n    await waitFor(() => {\n      const highPriorityCount = mockClients.filter(c => c.priority === 'high').length\n      const mediumPriorityCount = mockClients.filter(c => c.priority === 'medium').length\n      const lowPriorityCount = mockClients.filter(c => c.priority === 'low').length\n      \n      expect(highPriorityCount).toBe(1)\n      expect(mediumPriorityCount).toBe(1)\n      expect(lowPriorityCount).toBe(1)\n    }, { timeout: 3000 })\n  })\n\n  test('shows welcome message', async () => {\n    renderWithProvider(<Dashboard />)\n    await waitFor(() => {\n      expect(screen.getByText('Welcome back! Here\\'s an overview of your sales performance.')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('calculates task completion rate correctly', async () => {\n    renderWithProvider(<Dashboard />)\n    \n    // Component should calculate and display task completion rate\n    await waitFor(() => {\n      expect(screen.getByText('Tasks Completion')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('handles empty data gracefully', async () => {\n    const emptyState = {\n      ...mockInitialState,\n      clients: [],\n      tasks: [],\n      contracts: [],\n      invoices: []\n    }\n    \n    render(\n      <AppProvider initialState={emptyState}>\n        <Dashboard />\n      </AppProvider>\n    )\n    \n    await waitFor(() => {\n      expect(screen.getByText('0')).toBeInTheDocument() // Should show 0 for metrics\n    }, { timeout: 3000 })\n  })\n\n  test('chart components render without errors', async () => {\n    renderWithProvider(<Dashboard />)\n    \n    // Check that chart sections are present\n    await waitFor(() => {\n      expect(screen.getByText('Revenue Trend (Last 7 Months)')).toBeInTheDocument()\n      expect(screen.getByText('New Clients (Last 7 Months)')).toBeInTheDocument()\n    }, { timeout: 3000 })\n  })\n\n  test('activity feed shows recent client interactions', async () => {\n    renderWithProvider(<Dashboard />)\n    \n    // Should show recent client activities based on lastContact dates\n    await waitFor(() => {\n      expect(screen.getByText('Recent Activity')).toBeInTheDocument()\n    })\n  })\n\n  test('responsive design elements are present', async () => {\n    renderWithProvider(<Dashboard />)\n    \n    // Check that dashboard renders properly\n    await waitFor(() => {\n      expect(screen.getByText('Dashboard')).toBeInTheDocument()\n    })\n    expect(screen.getByText('Welcome back! Here\\'s an overview of your sales performance.')).toBeInTheDocument()\n  })\n})"],"names":["jest","mock","motion","div","children","props","h1","p","AnimatePresence","mockClients","id","name","email","phone","company","stage","value","lastContact","notes","projects","tags","priority","source","assignedTo","mockTasks","title","description","dueDate","status","clientId","mockContracts","startDate","endDate","terms","mockInvoices","contractId","amount","items","mockSalesStages","color","mockInitialState","clients","salesStages","contracts","invoices","tasks","reports","settings","currency","dateFormat","timezone","renderWithProvider","component","render","AppProvider","describe","beforeEach","clearAllMocks","test","Dashboard","waitFor","expect","screen","getByText","toBeInTheDocument","timeout","leadClients","filter","c","length","qualifiedClients","closedClients","toBe","mockSetActiveTab","fn","setActiveTab","highPriorityCount","mediumPriorityCount","lowPriorityCount","emptyState","initialState"],"mappings":"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"}