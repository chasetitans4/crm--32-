7e4b4938514af5f99276c5c4822f4be9
"use strict";

/* istanbul ignore next */
function cov_2hwbrux5hg() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskRecentView.tsx";
  var hash = "e549abca246da5995fd53ceeb706c6a948e1d966";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskRecentView.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "8": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "10": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "11": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "12": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "13": {
        start: {
          line: 83,
          column: 23
        },
        end: {
          line: 304,
          column: 1
        }
      },
      "14": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 303,
          column: 7
        }
      },
      "15": {
        start: {
          line: 95,
          column: 45
        },
        end: {
          line: 95,
          column: 66
        }
      },
      "16": {
        start: {
          line: 118,
          column: 62
        },
        end: {
          line: 282,
          column: 39
        }
      },
      "17": {
        start: {
          line: 238,
          column: 95
        },
        end: {
          line: 247,
          column: 56
        }
      },
      "18": {
        start: {
          line: 305,
          column: 17
        },
        end: {
          line: 305,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 23
          },
          end: {
            line: 83,
            column: 24
          }
        },
        loc: {
          start: {
            line: 83,
            column: 87
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 95,
            column: 41
          },
          end: {
            line: 95,
            column: 42
          }
        },
        loc: {
          start: {
            line: 95,
            column: 45
          },
          end: {
            line: 95,
            column: 66
          }
        },
        line: 95
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 118,
            column: 40
          },
          end: {
            line: 118,
            column: 41
          }
        },
        loc: {
          start: {
            line: 118,
            column: 62
          },
          end: {
            line: 282,
            column: 39
          }
        },
        line: 118
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 238,
            column: 64
          },
          end: {
            line: 238,
            column: 65
          }
        },
        loc: {
          start: {
            line: 238,
            column: 95
          },
          end: {
            line: 247,
            column: 56
          }
        },
        line: 238
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 14
          }
        }, {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 32
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 134,
            column: 105
          },
          end: {
            line: 134,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 105
          },
          end: {
            line: 134,
            column: 137
          }
        }, {
          start: {
            line: 134,
            column: 141
          },
          end: {
            line: 134,
            column: 164
          }
        }],
        line: 134
      },
      "3": {
        loc: {
          start: {
            line: 135,
            column: 70
          },
          end: {
            line: 135,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 70
          },
          end: {
            line: 135,
            column: 102
          }
        }, {
          start: {
            line: 135,
            column: 106
          },
          end: {
            line: 135,
            column: 113
          }
        }],
        line: 135
      },
      "4": {
        loc: {
          start: {
            line: 138,
            column: 112
          },
          end: {
            line: 138,
            column: 179
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 112
          },
          end: {
            line: 138,
            column: 148
          }
        }, {
          start: {
            line: 138,
            column: 152
          },
          end: {
            line: 138,
            column: 179
          }
        }],
        line: 138
      },
      "5": {
        loc: {
          start: {
            line: 139,
            column: 70
          },
          end: {
            line: 139,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 70
          },
          end: {
            line: 139,
            column: 106
          }
        }, {
          start: {
            line: 139,
            column: 110
          },
          end: {
            line: 139,
            column: 118
          }
        }],
        line: 139
      },
      "6": {
        loc: {
          start: {
            line: 141,
            column: 56
          },
          end: {
            line: 150,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 56
          },
          end: {
            line: 141,
            column: 75
          }
        }, {
          start: {
            line: 141,
            column: 93
          },
          end: {
            line: 150,
            column: 58
          }
        }],
        line: 141
      },
      "7": {
        loc: {
          start: {
            line: 153,
            column: 48
          },
          end: {
            line: 156,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 153,
            column: 48
          },
          end: {
            line: 153,
            column: 64
          }
        }, {
          start: {
            line: 153,
            column: 82
          },
          end: {
            line: 156,
            column: 50
          }
        }],
        line: 153
      },
      "8": {
        loc: {
          start: {
            line: 160,
            column: 56
          },
          end: {
            line: 169,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 56
          },
          end: {
            line: 160,
            column: 69
          }
        }, {
          start: {
            line: 160,
            column: 87
          },
          end: {
            line: 169,
            column: 58
          }
        }],
        line: 160
      },
      "9": {
        loc: {
          start: {
            line: 170,
            column: 56
          },
          end: {
            line: 179,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 170,
            column: 56
          },
          end: {
            line: 170,
            column: 68
          }
        }, {
          start: {
            line: 170,
            column: 86
          },
          end: {
            line: 179,
            column: 58
          }
        }],
        line: 170
      },
      "10": {
        loc: {
          start: {
            line: 171,
            column: 92
          },
          end: {
            line: 171,
            column: 133
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 114
          },
          end: {
            line: 171,
            column: 128
          }
        }, {
          start: {
            line: 171,
            column: 131
          },
          end: {
            line: 171,
            column: 133
          }
        }],
        line: 171
      },
      "11": {
        loc: {
          start: {
            line: 180,
            column: 56
          },
          end: {
            line: 189,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 56
          },
          end: {
            line: 180,
            column: 69
          }
        }, {
          start: {
            line: 180,
            column: 87
          },
          end: {
            line: 189,
            column: 58
          }
        }],
        line: 180
      },
      "12": {
        loc: {
          start: {
            line: 187,
            column: 64
          },
          end: {
            line: 187,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 64
          },
          end: {
            line: 187,
            column: 100
          }
        }, {
          start: {
            line: 187,
            column: 104
          },
          end: {
            line: 187,
            column: 117
          }
        }],
        line: 187
      },
      "13": {
        loc: {
          start: {
            line: 198,
            column: 64
          },
          end: {
            line: 198,
            column: 134
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 81
          },
          end: {
            line: 198,
            column: 126
          }
        }, {
          start: {
            line: 198,
            column: 129
          },
          end: {
            line: 198,
            column: 134
          }
        }],
        line: 198
      },
      "14": {
        loc: {
          start: {
            line: 206,
            column: 36
          },
          end: {
            line: 235,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 36
          },
          end: {
            line: 206,
            column: 58
          }
        }, {
          start: {
            line: 206,
            column: 76
          },
          end: {
            line: 235,
            column: 38
          }
        }],
        line: 206
      },
      "15": {
        loc: {
          start: {
            line: 228,
            column: 111
          },
          end: {
            line: 228,
            column: 211
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 136
          },
          end: {
            line: 228,
            column: 150
          }
        }, {
          start: {
            line: 228,
            column: 153
          },
          end: {
            line: 228,
            column: 211
          }
        }],
        line: 228
      },
      "16": {
        loc: {
          start: {
            line: 228,
            column: 153
          },
          end: {
            line: 228,
            column: 211
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 180
          },
          end: {
            line: 228,
            column: 195
          }
        }, {
          start: {
            line: 228,
            column: 198
          },
          end: {
            line: 228,
            column: 211
          }
        }],
        line: 228
      },
      "17": {
        loc: {
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 248,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 236,
            column: 36
          },
          end: {
            line: 236,
            column: 45
          }
        }, {
          start: {
            line: 236,
            column: 49
          },
          end: {
            line: 236,
            column: 69
          }
        }, {
          start: {
            line: 236,
            column: 87
          },
          end: {
            line: 248,
            column: 38
          }
        }],
        line: 236
      },
      "18": {
        loc: {
          start: {
            line: 249,
            column: 36
          },
          end: {
            line: 280,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 37
          },
          end: {
            line: 249,
            column: 56
          }
        }, {
          start: {
            line: 249,
            column: 60
          },
          end: {
            line: 249,
            column: 76
          }
        }, {
          start: {
            line: 249,
            column: 95
          },
          end: {
            line: 280,
            column: 38
          }
        }],
        line: 249
      },
      "19": {
        loc: {
          start: {
            line: 254,
            column: 48
          },
          end: {
            line: 265,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 254,
            column: 48
          },
          end: {
            line: 254,
            column: 67
          }
        }, {
          start: {
            line: 254,
            column: 85
          },
          end: {
            line: 265,
            column: 50
          }
        }],
        line: 254
      },
      "20": {
        loc: {
          start: {
            line: 266,
            column: 48
          },
          end: {
            line: 277,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 48
          },
          end: {
            line: 266,
            column: 64
          }
        }, {
          start: {
            line: 266,
            column: 82
          },
          end: {
            line: 277,
            column: 50
          }
        }],
        line: 266
      },
      "21": {
        loc: {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 298,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 283,
            column: 48
          }
        }, {
          start: {
            line: 283,
            column: 66
          },
          end: {
            line: 298,
            column: 26
          }
        }],
        line: 283
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskRecentView.tsx"],
      sourcesContent: ["import React from 'react';\nimport { ArrowLeft, User, Calendar, Tag, Clock, AlertCircle } from 'lucide-react';\nimport { Task } from '../../types/task';\n\ninterface TaskRecentViewProps {\n  recentTasks: Task[];\n  setViewMode: React.Dispatch<React.SetStateAction<'kanban' | 'list' | 'calendar' | 'recent'>>;\n  isTaskOverdue: (task: Task) => boolean;\n  getTaskProgress: (task: Task) => number;\n}\n\nconst TaskPriorities = {\n  LOW: {\n    label: 'Low',\n    color: 'text-green-600 bg-green-50 border-green-200'\n  },\n  MEDIUM: {\n    label: 'Medium',\n    color: 'text-yellow-600 bg-yellow-50 border-yellow-200'\n  },\n  HIGH: {\n    label: 'High',\n    color: 'text-orange-600 bg-orange-50 border-orange-200'\n  },\n  URGENT: {\n    label: 'Urgent',\n    color: 'text-red-600 bg-red-50 border-red-200'\n  }\n};\n\nconst TaskStatuses = {\n  TODO: {\n    label: 'To Do',\n    color: 'bg-gray-500 text-white'\n  },\n  IN_PROGRESS: {\n    label: 'In Progress',\n    color: 'bg-blue-500 text-white'\n  },\n  REVIEW: {\n    label: 'Review',\n    color: 'bg-purple-500 text-white'\n  },\n  DONE: {\n    label: 'Done',\n    color: 'bg-green-500 text-white'\n  }\n};\n\nconst TaskCategories = {\n  DEVELOPMENT: { label: 'Development' },\n  DESIGN: { label: 'Design' },\n  TESTING: { label: 'Testing' },\n  DOCUMENTATION: { label: 'Documentation' },\n  MEETING: { label: 'Meeting' },\n  RESEARCH: { label: 'Research' }\n};\n\nexport const TaskRecentView: React.FC<TaskRecentViewProps> = ({\n  recentTasks,\n  setViewMode,\n  isTaskOverdue,\n  getTaskProgress\n}) => {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n      <div className=\"p-6 border-b border-gray-100\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={() => setViewMode('kanban')}\n              className=\"flex items-center px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors\"\n            >\n              <ArrowLeft size={16} className=\"mr-2\" />\n              Back to Todo List\n            </button>\n          </div>\n          <h2 className=\"text-lg font-semibold text-gray-900\">Recent Tasks</h2>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        <div className=\"space-y-4\">\n          {recentTasks.map((task) => (\n            <div\n              key={task.id}\n              className=\"bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-colors\"\n            >\n              <div className=\"flex items-start justify-between mb-3\">\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-3 mb-2\">\n                    <h3 className=\"font-medium text-gray-900\">{task.title}</h3>\n                    <span\n                      className={`text-xs px-2 py-1 rounded-full ${TaskStatuses[task.status]?.color || TaskStatuses.TODO.color}`}\n                    >\n                      {TaskStatuses[task.status]?.label || \"To Do\"}\n                    </span>\n                    <span\n                      className={`text-xs px-2 py-1 rounded-full border ${TaskPriorities[task.priority]?.color || TaskPriorities.MEDIUM.color}`}\n                    >\n                      {TaskPriorities[task.priority]?.label || \"Medium\"}\n                    </span>\n                    {isTaskOverdue(task) && (\n                      <span className=\"inline-flex items-center text-xs px-2 py-1 bg-red-100 text-red-700 rounded-full\">\n                        <AlertCircle size={10} className=\"mr-1\" />\n                        Overdue\n                      </span>\n                    )}\n                  </div>\n                  \n                  {task.description && (\n                    <p className=\"text-sm text-gray-600 mb-3\">{task.description}</p>\n                  )}\n                  \n                  <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n                    {task.assignee && (\n                      <span className=\"flex items-center\">\n                        <User size={12} className=\"mr-1\" />\n                        {task.assignee}\n                      </span>\n                    )}\n                    {task.dueDate && (\n                      <span className={`flex items-center ${isTaskOverdue(task) ? \"text-red-600\" : \"\"}`}>\n                        <Calendar size={12} className=\"mr-1\" />\n                        {new Date(task.dueDate).toLocaleDateString()}\n                      </span>\n                    )}\n                    {task.category && (\n                      <span className=\"flex items-center\">\n                        <Tag size={12} className=\"mr-1\" />\n                        {TaskCategories[task.category as keyof typeof TaskCategories]?.label || task.category}\n                      </span>\n                    )}\n                    <span className=\"flex items-center\">\n                      <Clock size={12} className=\"mr-1\" />\n                      Updated {task.updatedAt ? new Date(task.updatedAt).toLocaleDateString() : 'N/A'}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Progress Bar */}\n              {task.status !== \"TODO\" && (\n                <div className=\"mt-3\">\n                  <div className=\"flex justify-between text-xs mb-1\">\n                    <span className=\"text-gray-500\">Progress</span>\n                    <span className=\"text-gray-700 font-medium\">{getTaskProgress(task)}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full transition-all duration-300 ${\n                        task.status === \"DONE\"\n                          ? \"bg-green-500\"\n                          : task.status === \"REVIEW\"\n                            ? \"bg-purple-500\"\n                            : \"bg-blue-500\"\n                      }`}\n                      style={{ width: `${getTaskProgress(task)}%` }}\n                    ></div>\n                  </div>\n                </div>\n              )}\n              \n              {/* Tags */}\n              {task.tags && task.tags.length > 0 && (\n                <div className=\"flex flex-wrap gap-1 mt-3\">\n                  {task.tags.map((tag, tagIndex) => (\n                    <span\n                      key={tagIndex}\n                      className=\"inline-flex items-center px-2 py-1 bg-white text-gray-700 text-xs rounded-full border\"\n                    >\n                      <Tag size={10} className=\"mr-1\" />\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n              )}\n              \n              {/* Time Tracking */}\n              {(task.estimatedHours || task.actualHours) && (\n                <div className=\"mt-3 pt-3 border-t border-gray-200\">\n                  <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                    {task.estimatedHours && (\n                      <span className=\"flex items-center\">\n                        <Clock size={10} className=\"mr-1\" />\n                        Estimated: {task.estimatedHours}h\n                      </span>\n                    )}\n                    {task.actualHours && (\n                      <span className=\"flex items-center\">\n                        <Clock size={10} className=\"mr-1\" />\n                        Actual: {task.actualHours}h\n                      </span>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n          \n          {recentTasks.length === 0 && (\n            <div className=\"text-center py-12\">\n              <Clock className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Recent Tasks</h3>\n              <p className=\"text-gray-500\">Tasks you've worked on recently will appear here.</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskRecentView;"],
      names: ["TaskRecentView", "TaskPriorities", "LOW", "label", "color", "MEDIUM", "HIGH", "URGENT", "TaskStatuses", "TODO", "IN_PROGRESS", "REVIEW", "DONE", "TaskCategories", "DEVELOPMENT", "DESIGN", "TESTING", "DOCUMENTATION", "MEETING", "RESEARCH", "recentTasks", "setViewMode", "isTaskOverdue", "getTaskProgress", "div", "className", "button", "onClick", "ArrowLeft", "size", "h2", "map", "task", "h3", "title", "span", "status", "priority", "AlertCircle", "description", "p", "assignee", "User", "dueDate", "Calendar", "Date", "toLocaleDateString", "category", "Tag", "Clock", "updatedAt", "style", "width", "tags", "length", "tag", "tagIndex", "estimatedHours", "actualHours", "id"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e549abca246da5995fd53ceeb706c6a948e1d966"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hwbrux5hg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hwbrux5hg();
cov_2hwbrux5hg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2hwbrux5hg().f[0]++;
  cov_2hwbrux5hg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2hwbrux5hg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2hwbrux5hg().s[3]++;
_export(exports, {
  get TaskRecentView() {
    /* istanbul ignore next */
    cov_2hwbrux5hg().f[1]++;
    cov_2hwbrux5hg().s[4]++;
    return TaskRecentView;
  },
  get default() {
    /* istanbul ignore next */
    cov_2hwbrux5hg().f[2]++;
    cov_2hwbrux5hg().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2hwbrux5hg().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2hwbrux5hg().s[7]++, _interop_require_default(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_2hwbrux5hg().s[8]++, require("lucide-react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2hwbrux5hg().f[3]++;
  cov_2hwbrux5hg().s[9]++;
  return /* istanbul ignore next */(cov_2hwbrux5hg().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2hwbrux5hg().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2hwbrux5hg().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2hwbrux5hg().b[0][1]++, {
    default: obj
  });
}
const TaskPriorities =
/* istanbul ignore next */
(cov_2hwbrux5hg().s[10]++, {
  LOW: {
    label: 'Low',
    color: 'text-green-600 bg-green-50 border-green-200'
  },
  MEDIUM: {
    label: 'Medium',
    color: 'text-yellow-600 bg-yellow-50 border-yellow-200'
  },
  HIGH: {
    label: 'High',
    color: 'text-orange-600 bg-orange-50 border-orange-200'
  },
  URGENT: {
    label: 'Urgent',
    color: 'text-red-600 bg-red-50 border-red-200'
  }
});
const TaskStatuses =
/* istanbul ignore next */
(cov_2hwbrux5hg().s[11]++, {
  TODO: {
    label: 'To Do',
    color: 'bg-gray-500 text-white'
  },
  IN_PROGRESS: {
    label: 'In Progress',
    color: 'bg-blue-500 text-white'
  },
  REVIEW: {
    label: 'Review',
    color: 'bg-purple-500 text-white'
  },
  DONE: {
    label: 'Done',
    color: 'bg-green-500 text-white'
  }
});
const TaskCategories =
/* istanbul ignore next */
(cov_2hwbrux5hg().s[12]++, {
  DEVELOPMENT: {
    label: 'Development'
  },
  DESIGN: {
    label: 'Design'
  },
  TESTING: {
    label: 'Testing'
  },
  DOCUMENTATION: {
    label: 'Documentation'
  },
  MEETING: {
    label: 'Meeting'
  },
  RESEARCH: {
    label: 'Research'
  }
});
/* istanbul ignore next */
cov_2hwbrux5hg().s[13]++;
const TaskRecentView = ({
  recentTasks,
  setViewMode,
  isTaskOverdue,
  getTaskProgress
}) => {
  /* istanbul ignore next */
  cov_2hwbrux5hg().f[4]++;
  cov_2hwbrux5hg().s[14]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "bg-white rounded-xl shadow-sm border border-gray-100",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-6 border-b border-gray-100",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center space-x-3",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_2hwbrux5hg().f[5]++;
              cov_2hwbrux5hg().s[15]++;
              return setViewMode('kanban');
            },
            className: "flex items-center px-3 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-lg transition-colors",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ArrowLeft, {
              size: 16,
              className: "mr-2"
            }), "Back to Todo List"]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-gray-900",
          children: "Recent Tasks"
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [recentTasks.map(task => {
          /* istanbul ignore next */
          cov_2hwbrux5hg().f[6]++;
          cov_2hwbrux5hg().s[16]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "bg-gray-50 rounded-lg p-4 hover:bg-gray-100 transition-colors",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "flex items-start justify-between mb-3",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-3 mb-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                    className: "font-medium text-gray-900",
                    children: task.title
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: `text-xs px-2 py-1 rounded-full ${
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[2][0]++, TaskStatuses[task.status]?.color) ||
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[2][1]++, TaskStatuses.TODO.color)}`,
                    children:
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[3][0]++, TaskStatuses[task.status]?.label) ||
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[3][1]++, "To Do")
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: `text-xs px-2 py-1 rounded-full border ${
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[4][0]++, TaskPriorities[task.priority]?.color) ||
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[4][1]++, TaskPriorities.MEDIUM.color)}`,
                    children:
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[5][0]++, TaskPriorities[task.priority]?.label) ||
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[5][1]++, "Medium")
                  }),
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[6][0]++, isTaskOverdue(task)) &&
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[6][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "inline-flex items-center text-xs px-2 py-1 bg-red-100 text-red-700 rounded-full",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                      size: 10,
                      className: "mr-1"
                    }), "Overdue"]
                  }))]
                }),
                /* istanbul ignore next */
                (cov_2hwbrux5hg().b[7][0]++, task.description) &&
                /* istanbul ignore next */
                (cov_2hwbrux5hg().b[7][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-sm text-gray-600 mb-3",
                  children: task.description
                })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center space-x-4 text-xs text-gray-500",
                  children: [
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[8][0]++, task.assignee) &&
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[8][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "flex items-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.User, {
                      size: 12,
                      className: "mr-1"
                    }), task.assignee]
                  })),
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[9][0]++, task.dueDate) &&
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[9][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: `flex items-center ${isTaskOverdue(task) ?
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[10][0]++, "text-red-600") :
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[10][1]++, "")}`,
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Calendar, {
                      size: 12,
                      className: "mr-1"
                    }), new Date(task.dueDate).toLocaleDateString()]
                  })),
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[11][0]++, task.category) &&
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[11][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "flex items-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Tag, {
                      size: 12,
                      className: "mr-1"
                    }),
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[12][0]++, TaskCategories[task.category]?.label) ||
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[12][1]++, task.category)]
                  })), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                    className: "flex items-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                      size: 12,
                      className: "mr-1"
                    }), "Updated ", task.updatedAt ?
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[13][0]++, new Date(task.updatedAt).toLocaleDateString()) :
                    /* istanbul ignore next */
                    (cov_2hwbrux5hg().b[13][1]++, 'N/A')]
                  })]
                })]
              })
            }),
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[14][0]++, task.status !== "TODO") &&
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[14][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "mt-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between text-xs mb-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-gray-500",
                  children: "Progress"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "text-gray-700 font-medium",
                  children: [getTaskProgress(task), "%"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "w-full bg-gray-200 rounded-full h-2",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: `h-2 rounded-full transition-all duration-300 ${task.status === "DONE" ?
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[15][0]++, "bg-green-500") :
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[15][1]++, task.status === "REVIEW" ?
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[16][0]++, "bg-purple-500") :
                  /* istanbul ignore next */
                  (cov_2hwbrux5hg().b[16][1]++, "bg-blue-500"))}`,
                  style: {
                    width: `${getTaskProgress(task)}%`
                  }
                })
              })]
            })),
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[17][0]++, task.tags) &&
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[17][1]++, task.tags.length > 0) &&
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[17][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "flex flex-wrap gap-1 mt-3",
              children: task.tags.map((tag, tagIndex) => {
                /* istanbul ignore next */
                cov_2hwbrux5hg().f[7]++;
                cov_2hwbrux5hg().s[17]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "inline-flex items-center px-2 py-1 bg-white text-gray-700 text-xs rounded-full border",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Tag, {
                    size: 10,
                    className: "mr-1"
                  }), tag]
                }, tagIndex);
              })
            })), (
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[18][0]++, task.estimatedHours) ||
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[18][1]++, task.actualHours)) &&
            /* istanbul ignore next */
            (cov_2hwbrux5hg().b[18][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "mt-3 pt-3 border-t border-gray-200",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center justify-between text-xs text-gray-500",
                children: [
                /* istanbul ignore next */
                (cov_2hwbrux5hg().b[19][0]++, task.estimatedHours) &&
                /* istanbul ignore next */
                (cov_2hwbrux5hg().b[19][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "flex items-center",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                    size: 10,
                    className: "mr-1"
                  }), "Estimated: ", task.estimatedHours, "h"]
                })),
                /* istanbul ignore next */
                (cov_2hwbrux5hg().b[20][0]++, task.actualHours) &&
                /* istanbul ignore next */
                (cov_2hwbrux5hg().b[20][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "flex items-center",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                    size: 10,
                    className: "mr-1"
                  }), "Actual: ", task.actualHours, "h"]
                }))]
              })
            }))]
          }, task.id);
        }),
        /* istanbul ignore next */
        (cov_2hwbrux5hg().b[21][0]++, recentTasks.length === 0) &&
        /* istanbul ignore next */
        (cov_2hwbrux5hg().b[21][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-center py-12",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
            className: "mx-auto h-12 w-12 text-gray-400 mb-4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-lg font-medium text-gray-900 mb-2",
            children: "No Recent Tasks"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-gray-500",
            children: "Tasks you've worked on recently will appear here."
          })]
        }))]
      })
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_2hwbrux5hg().s[18]++, TaskRecentView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,