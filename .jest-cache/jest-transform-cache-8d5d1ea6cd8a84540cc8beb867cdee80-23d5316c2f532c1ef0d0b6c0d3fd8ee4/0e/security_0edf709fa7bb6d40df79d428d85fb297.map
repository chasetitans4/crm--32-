{"version":3,"names":[],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\types\\security.ts"],"sourcesContent":["// Security Types and Interfaces\n// Comprehensive type definitions for the security system\n\n// Security Levels\nexport type SecurityLevel = \"public\" | \"user\" | \"admin\" | \"critical\"\n\n// Security Event Types\nexport type SecurityEventType =\n  | \"login\"\n  | \"logout\"\n  | \"failed_login\"\n  | \"account_locked\"\n  | \"password_change\"\n  | \"data_access\"\n  | \"data_modification\"\n  | \"security_violation\"\n  | \"permission_denied\"\n  | \"system_event\"\n\n// Security Severities\nexport type SecuritySeverity = \"critical\" | \"high\" | \"medium\" | \"low\" | \"info\"\n\n// Security Configuration Interface\nexport interface SecurityConfig {\n  // Password Policy\n  passwordMinLength: number\n  passwordRequireSpecialChars: boolean\n  passwordRequireNumbers: boolean\n  passwordRequireUppercase: boolean\n  passwordExpirationDays: number\n\n  // Session Management\n  sessionTimeoutMinutes: number\n  maxConcurrentSessions: number\n  rememberMeDays: number\n\n  // Login Security\n  maxLoginAttempts: number\n  lockoutDurationMinutes: number\n  requireTwoFactor: boolean\n  twoFactorForAdmins: boolean\n\n  // Rate Limiting\n  enableRateLimit: boolean\n  maxRequestsPerMinute: number\n  maxRequestsPerHour: number\n\n  // Security Features\n  enableCSRFProtection: boolean\n  enableInputSanitization: boolean\n  enableAuditLogging: boolean\n  enableSecurityHeaders: boolean\n\n  // Domain Security\n  allowedDomains: string[]\n  blockSuspiciousIPs: boolean\n  enableGeoBlocking: boolean\n\n  // Data Protection\n  encryptSensitiveData: boolean\n  enableDataMasking: boolean\n  autoLogoutOnInactivity: boolean\n}\n\n// Security Check Interface\nexport interface SecurityCheck {\n  id: string\n  name: string\n  description: string\n  status: \"passed\" | \"failed\" | \"warning\" | \"pending\"\n  severity: SecuritySeverity\n  lastChecked: Date\n  details?: string\n  recommendation?: string\n}\n\n// Security Metrics Interface\nexport interface SecurityMetrics {\n  totalEvents: number\n  criticalEvents: number\n  warningEvents: number\n  infoEvents: number\n  uniqueUsers: number\n  uniqueIPs: number\n  failedLogins: number\n  successfulLogins: number\n  blockedRequests: number\n  suspiciousActivity: number\n  activeSessions: number\n  passwordStrengthAverage: number\n  lastSecurityScan?: Date\n}\n\n// Security Event Interface\nexport interface SecurityEvent {\n  id: string\n  timestamp: Date\n  eventType: SecurityEventType\n  severity: SecuritySeverity\n  userId: string\n  userEmail: string\n  ipAddress: string\n  userAgent: string\n  action: string\n  resource: string\n  details: Record<string, unknown>\n  success: boolean\n  location?: {\n    country?: string\n    city?: string\n    coordinates?: [number, number]\n  }\n  riskScore?: number\n}\n\n// Security Vulnerability Interface\nexport interface SecurityVulnerability {\n  id: string\n  title: string\n  description: string\n  severity: SecuritySeverity\n  category: \"authentication\" | \"authorization\" | \"data_protection\" | \"network\" | \"application\" | \"configuration\"\n  status: \"open\" | \"in_progress\" | \"resolved\" | \"false_positive\"\n  discoveredAt: Date\n  resolvedAt?: Date\n  affectedComponents: string[]\n  cveId?: string\n  cvssScore?: number\n  recommendation: string\n  references?: string[]\n}\n\n// Security Alert Interface\nexport interface SecurityAlert {\n  id: string\n  title: string\n  message: string\n  severity: SecuritySeverity\n  type: \"security_breach\" | \"suspicious_activity\" | \"policy_violation\" | \"system_alert\"\n  timestamp: Date\n  acknowledged: boolean\n  acknowledgedBy?: string\n  acknowledgedAt?: Date\n  actions?: SecurityAlertAction[]\n}\n\n// Security Alert Action Interface\nexport interface SecurityAlertAction {\n  id: string\n  label: string\n  action: string\n  parameters?: Record<string, unknown>\n  dangerous?: boolean\n}\n\n// Authentication Context Interface\nexport interface AuthenticationContext {\n  userId: string\n  userEmail: string\n  roles: string[]\n  permissions: string[]\n  sessionId: string\n  ipAddress: string\n  userAgent: string\n  loginTime: Date\n  lastActivity: Date\n  mfaVerified: boolean\n  riskScore: number\n}\n\n// Security Validation Result Interface\nexport interface SecurityValidationResult {\n  valid: boolean\n  errors: string[]\n  warnings: string[]\n  score?: number\n  suggestions?: string[]\n}\n\n// Rate Limit Configuration Interface\nexport interface RateLimitConfig {\n  windowMs: number\n  maxRequests: number\n  skipSuccessfulRequests?: boolean\n  skipFailedRequests?: boolean\n  keyGenerator?: (req: unknown) => string\n  onLimitReached?: (req: unknown, res: unknown) => void\n}\n\n// CSRF Configuration Interface\nexport interface CSRFConfig {\n  enabled: boolean\n  secret: string\n  cookieName: string\n  headerName: string\n  ignoreMethods: string[]\n  sameSite: \"strict\" | \"lax\" | \"none\"\n}\n\n// Security Headers Configuration Interface\nexport interface SecurityHeadersConfig {\n  contentSecurityPolicy: string\n  strictTransportSecurity: string\n  xFrameOptions: string\n  xContentTypeOptions: string\n  referrerPolicy: string\n  permissionsPolicy: string\n}\n\n// Audit Log Filter Interface\nexport interface AuditLogFilter {\n  dateFrom?: Date\n  dateTo?: Date\n  eventTypes?: SecurityEventType[]\n  severities?: SecuritySeverity[]\n  userIds?: string[]\n  ipAddresses?: string[]\n  resources?: string[]\n  success?: boolean\n  limit?: number\n  offset?: number\n  sortBy?: \"timestamp\" | \"severity\" | \"eventType\"\n  sortOrder?: \"asc\" | \"desc\"\n}\n\n// Security Dashboard Widget Interface\nexport interface SecurityDashboardWidget {\n  id: string\n  title: string\n  type: \"metric\" | \"chart\" | \"list\" | \"alert\"\n  size: \"small\" | \"medium\" | \"large\"\n  position: { x: number; y: number }\n  config: Record<string, any>\n  refreshInterval?: number\n}\n\n// Security Policy Interface\nexport interface SecurityPolicy {\n  id: string\n  name: string\n  description: string\n  category: string\n  enabled: boolean\n  rules: SecurityPolicyRule[]\n  createdAt: Date\n  updatedAt: Date\n  createdBy: string\n  version: string\n}\n\n// Security Policy Rule Interface\nexport interface SecurityPolicyRule {\n  id: string\n  condition: string\n  action: \"allow\" | \"deny\" | \"warn\" | \"log\"\n  parameters: Record<string, any>\n  enabled: boolean\n}\n\n// Security Scan Result Interface\nexport interface SecurityScanResult {\n  id: string\n  scanType: \"vulnerability\" | \"compliance\" | \"penetration\" | \"code_analysis\"\n  status: \"running\" | \"completed\" | \"failed\" | \"cancelled\"\n  startTime: Date\n  endTime?: Date\n  findings: SecurityVulnerability[]\n  summary: {\n    totalFindings: number\n    criticalFindings: number\n    highFindings: number\n    mediumFindings: number\n    lowFindings: number\n    infoFindings: number\n  }\n  recommendations: string[]\n  reportUrl?: string\n}\n\n// Security Compliance Framework Interface\nexport interface SecurityComplianceFramework {\n  id: string\n  name: string\n  version: string\n  description: string\n  requirements: SecurityComplianceRequirement[]\n  overallScore: number\n  lastAssessment: Date\n}\n\n// Security Compliance Requirement Interface\nexport interface SecurityComplianceRequirement {\n  id: string\n  title: string\n  description: string\n  category: string\n  mandatory: boolean\n  status: \"compliant\" | \"non_compliant\" | \"partial\" | \"not_assessed\"\n  evidence?: string[]\n  lastChecked?: Date\n  score?: number\n}\n\n// Export all types for easy importing\n"],"mappings":"AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4SA","ignoreList":[]}