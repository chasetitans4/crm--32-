7f584a60773c9610ff76032b9b38064b
"use client";
"use strict";

/* istanbul ignore next */
function cov_bb6qyxdr9() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Reports.tsx";
  var hash = "45ea2e1cd516ef4ce5d99d4212b136f61e55c278";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Reports.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "7": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "8": {
        start: {
          line: 17,
          column: 31
        },
        end: {
          line: 17,
          column: 72
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "12": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "19": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "20": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "22": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 88
        }
      },
      "24": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "26": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 95
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "29": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 25
        }
      },
      "31": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "32": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 31
        }
      },
      "33": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "34": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 820,
          column: 1
        }
      },
      "35": {
        start: {
          line: 60,
          column: 22
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "36": {
        start: {
          line: 61,
          column: 52
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "37": {
        start: {
          line: 62,
          column: 83
        },
        end: {
          line: 62,
          column: 126
        }
      },
      "38": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 63,
          column: 75
        }
      },
      "39": {
        start: {
          line: 64,
          column: 34
        },
        end: {
          line: 68,
          column: 6
        }
      },
      "40": {
        start: {
          line: 69,
          column: 34
        },
        end: {
          line: 69,
          column: 60
        }
      },
      "41": {
        start: {
          line: 70,
          column: 42
        },
        end: {
          line: 70,
          column: 74
        }
      },
      "42": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "43": {
        start: {
          line: 73,
          column: 34
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "44": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 77,
          column: 20
        }
      },
      "45": {
        start: {
          line: 74,
          column: 32
        },
        end: {
          line: 77,
          column: 17
        }
      },
      "46": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 25
        }
      },
      "47": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 86,
          column: 36
        }
      },
      "48": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 72
        }
      },
      "49": {
        start: {
          line: 81,
          column: 45
        },
        end: {
          line: 81,
          column: 70
        }
      },
      "50": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 46
        }
      },
      "51": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 43
        }
      },
      "52": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 41
        }
      },
      "53": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 89,
          column: 13
        }
      },
      "54": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 39
        }
      },
      "55": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 93,
          column: 20
        }
      },
      "56": {
        start: {
          line: 90,
          column: 32
        },
        end: {
          line: 93,
          column: 17
        }
      },
      "57": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 28
        }
      },
      "58": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "59": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "60": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 107,
          column: 60
        }
      },
      "61": {
        start: {
          line: 107,
          column: 41
        },
        end: {
          line: 107,
          column: 53
        }
      },
      "62": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 43
        }
      },
      "63": {
        start: {
          line: 108,
          column: 23
        },
        end: {
          line: 108,
          column: 42
        }
      },
      "64": {
        start: {
          line: 116,
          column: 30
        },
        end: {
          line: 169,
          column: 6
        }
      },
      "65": {
        start: {
          line: 117,
          column: 23
        },
        end: {
          line: 134,
          column: 31
        }
      },
      "66": {
        start: {
          line: 118,
          column: 31
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "67": {
        start: {
          line: 119,
          column: 30
        },
        end: {
          line: 119,
          column: 132
        }
      },
      "68": {
        start: {
          line: 120,
          column: 16
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "69": {
        start: {
          line: 122,
          column: 39
        },
        end: {
          line: 122,
          column: 88
        }
      },
      "70": {
        start: {
          line: 122,
          column: 59
        },
        end: {
          line: 122,
          column: 80
        }
      },
      "71": {
        start: {
          line: 123,
          column: 35
        },
        end: {
          line: 123,
          column: 87
        }
      },
      "72": {
        start: {
          line: 123,
          column: 55
        },
        end: {
          line: 123,
          column: 79
        }
      },
      "73": {
        start: {
          line: 124,
          column: 40
        },
        end: {
          line: 124,
          column: 90
        }
      },
      "74": {
        start: {
          line: 124,
          column: 58
        },
        end: {
          line: 124,
          column: 82
        }
      },
      "75": {
        start: {
          line: 125,
          column: 40
        },
        end: {
          line: 125,
          column: 97
        }
      },
      "76": {
        start: {
          line: 125,
          column: 59
        },
        end: {
          line: 125,
          column: 89
        }
      },
      "77": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 133,
          column: 14
        }
      },
      "78": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "79": {
        start: {
          line: 137,
          column: 31
        },
        end: {
          line: 140,
          column: 17
        }
      },
      "80": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 138,
          column: 132
        }
      },
      "81": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 56
        }
      },
      "82": {
        start: {
          line: 141,
          column: 39
        },
        end: {
          line: 141,
          column: 88
        }
      },
      "83": {
        start: {
          line: 141,
          column: 59
        },
        end: {
          line: 141,
          column: 80
        }
      },
      "84": {
        start: {
          line: 142,
          column: 35
        },
        end: {
          line: 142,
          column: 87
        }
      },
      "85": {
        start: {
          line: 142,
          column: 55
        },
        end: {
          line: 142,
          column: 79
        }
      },
      "86": {
        start: {
          line: 143,
          column: 40
        },
        end: {
          line: 143,
          column: 90
        }
      },
      "87": {
        start: {
          line: 143,
          column: 58
        },
        end: {
          line: 143,
          column: 82
        }
      },
      "88": {
        start: {
          line: 144,
          column: 40
        },
        end: {
          line: 144,
          column: 97
        }
      },
      "89": {
        start: {
          line: 144,
          column: 59
        },
        end: {
          line: 144,
          column: 89
        }
      },
      "90": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 152,
          column: 14
        }
      },
      "91": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 50
        }
      },
      "92": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 162,
          column: 14
        }
      },
      "93": {
        start: {
          line: 171,
          column: 27
        },
        end: {
          line: 195,
          column: 6
        }
      },
      "94": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 175,
          column: 16
        }
      },
      "95": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "96": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 21
        }
      },
      "97": {
        start: {
          line: 177,
          column: 23
        },
        end: {
          line: 183,
          column: 29
        }
      },
      "98": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 68
        }
      },
      "99": {
        start: {
          line: 179,
          column: 41
        },
        end: {
          line: 179,
          column: 66
        }
      },
      "100": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 42
        }
      },
      "101": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 39
        }
      },
      "102": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 53
        }
      },
      "103": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "104": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 35
        }
      },
      "105": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 190,
          column: 16
        }
      },
      "106": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "107": {
        start: {
          line: 197,
          column: 25
        },
        end: {
          line: 222,
          column: 6
        }
      },
      "108": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 211,
          column: 32
        }
      },
      "109": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 202,
          column: 20
        }
      },
      "110": {
        start: {
          line: 199,
          column: 32
        },
        end: {
          line: 202,
          column: 17
        }
      },
      "111": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 67
        }
      },
      "112": {
        start: {
          line: 204,
          column: 41
        },
        end: {
          line: 204,
          column: 65
        }
      },
      "113": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 205,
          column: 29
        }
      },
      "114": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 209,
          column: 20
        }
      },
      "115": {
        start: {
          line: 206,
          column: 32
        },
        end: {
          line: 209,
          column: 17
        }
      },
      "116": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 210,
          column: 56
        }
      },
      "117": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "118": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 35
        }
      },
      "119": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 217,
          column: 20
        }
      },
      "120": {
        start: {
          line: 214,
          column: 32
        },
        end: {
          line: 217,
          column: 17
        }
      },
      "121": {
        start: {
          line: 224,
          column: 27
        },
        end: {
          line: 229,
          column: 6
        }
      },
      "122": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 21
        }
      },
      "123": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 33
        }
      },
      "124": {
        start: {
          line: 231,
          column: 23
        },
        end: {
          line: 238,
          column: 6
        }
      },
      "125": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 235,
          column: 14
        }
      },
      "126": {
        start: {
          line: 233,
          column: 26
        },
        end: {
          line: 233,
          column: 128
        }
      },
      "127": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 31
        }
      },
      "128": {
        start: {
          line: 240,
          column: 23
        },
        end: {
          line: 258,
          column: 6
        }
      },
      "129": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 253,
          column: 11
        }
      },
      "130": {
        start: {
          line: 242,
          column: 33
        },
        end: {
          line: 242,
          column: 84
        }
      },
      "131": {
        start: {
          line: 242,
          column: 58
        },
        end: {
          line: 242,
          column: 83
        }
      },
      "132": {
        start: {
          line: 243,
          column: 31
        },
        end: {
          line: 246,
          column: 17
        }
      },
      "133": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 244,
          column: 132
        }
      },
      "134": {
        start: {
          line: 245,
          column: 16
        },
        end: {
          line: 245,
          column: 35
        }
      },
      "135": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 252,
          column: 14
        }
      },
      "136": {
        start: {
          line: 260,
          column: 22
        },
        end: {
          line: 273,
          column: 6
        }
      },
      "137": {
        start: {
          line: 261,
          column: 29
        },
        end: {
          line: 261,
          column: 77
        }
      },
      "138": {
        start: {
          line: 261,
          column: 47
        },
        end: {
          line: 261,
          column: 69
        }
      },
      "139": {
        start: {
          line: 262,
          column: 32
        },
        end: {
          line: 262,
          column: 84
        }
      },
      "140": {
        start: {
          line: 262,
          column: 50
        },
        end: {
          line: 262,
          column: 76
        }
      },
      "141": {
        start: {
          line: 263,
          column: 31
        },
        end: {
          line: 263,
          column: 81
        }
      },
      "142": {
        start: {
          line: 263,
          column: 49
        },
        end: {
          line: 263,
          column: 73
        }
      },
      "143": {
        start: {
          line: 264,
          column: 31
        },
        end: {
          line: 264,
          column: 104
        }
      },
      "144": {
        start: {
          line: 265,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "145": {
        start: {
          line: 275,
          column: 23
        },
        end: {
          line: 290,
          column: 6
        }
      },
      "146": {
        start: {
          line: 276,
          column: 25
        },
        end: {
          line: 276,
          column: 72
        }
      },
      "147": {
        start: {
          line: 276,
          column: 44
        },
        end: {
          line: 276,
          column: 64
        }
      },
      "148": {
        start: {
          line: 277,
          column: 22
        },
        end: {
          line: 277,
          column: 66
        }
      },
      "149": {
        start: {
          line: 277,
          column: 41
        },
        end: {
          line: 277,
          column: 58
        }
      },
      "150": {
        start: {
          line: 278,
          column: 26
        },
        end: {
          line: 278,
          column: 74
        }
      },
      "151": {
        start: {
          line: 278,
          column: 45
        },
        end: {
          line: 278,
          column: 66
        }
      },
      "152": {
        start: {
          line: 279,
          column: 25
        },
        end: {
          line: 279,
          column: 73
        }
      },
      "153": {
        start: {
          line: 279,
          column: 44
        },
        end: {
          line: 279,
          column: 65
        }
      },
      "154": {
        start: {
          line: 280,
          column: 31
        },
        end: {
          line: 280,
          column: 163
        }
      },
      "155": {
        start: {
          line: 280,
          column: 50
        },
        end: {
          line: 280,
          column: 80
        }
      },
      "156": {
        start: {
          line: 280,
          column: 95
        },
        end: {
          line: 280,
          column: 150
        }
      },
      "157": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 287,
          column: 10
        }
      },
      "158": {
        start: {
          line: 292,
          column: 27
        },
        end: {
          line: 299,
          column: 6
        }
      },
      "159": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 296,
          column: 104
        }
      },
      "160": {
        start: {
          line: 293,
          column: 41
        },
        end: {
          line: 296,
          column: 19
        }
      },
      "161": {
        start: {
          line: 293,
          column: 67
        },
        end: {
          line: 296,
          column: 17
        }
      },
      "162": {
        start: {
          line: 296,
          column: 34
        },
        end: {
          line: 296,
          column: 89
        }
      },
      "163": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 322,
          column: 5
        }
      },
      "164": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 321,
          column: 11
        }
      },
      "165": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 819,
          column: 7
        }
      },
      "166": {
        start: {
          line: 374,
          column: 53
        },
        end: {
          line: 374,
          column: 126
        }
      },
      "167": {
        start: {
          line: 374,
          column: 70
        },
        end: {
          line: 374,
          column: 114
        }
      },
      "168": {
        start: {
          line: 392,
          column: 84
        },
        end: {
          line: 422,
          column: 43
        }
      },
      "169": {
        start: {
          line: 547,
          column: 53
        },
        end: {
          line: 547,
          column: 120
        }
      },
      "170": {
        start: {
          line: 547,
          column: 70
        },
        end: {
          line: 547,
          column: 110
        }
      },
      "171": {
        start: {
          line: 652,
          column: 53
        },
        end: {
          line: 652,
          column: 123
        }
      },
      "172": {
        start: {
          line: 652,
          column: 70
        },
        end: {
          line: 652,
          column: 112
        }
      },
      "173": {
        start: {
          line: 736,
          column: 116
        },
        end: {
          line: 751,
          column: 59
        }
      },
      "174": {
        start: {
          line: 770,
          column: 80
        },
        end: {
          line: 807,
          column: 35
        }
      },
      "175": {
        start: {
          line: 821,
          column: 17
        },
        end: {
          line: 821,
          column: 24
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 40
          }
        },
        loc: {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 16
          },
          end: {
            line: 59,
            column: 17
          }
        },
        loc: {
          start: {
            line: 59,
            column: 20
          },
          end: {
            line: 820,
            column: 1
          }
        },
        line: 59
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 72,
            column: 27
          }
        },
        loc: {
          start: {
            line: 72,
            column: 30
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 72
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 35
          }
        },
        loc: {
          start: {
            line: 73,
            column: 44
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 73
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 74,
            column: 23
          },
          end: {
            line: 74,
            column: 24
          }
        },
        loc: {
          start: {
            line: 74,
            column: 32
          },
          end: {
            line: 77,
            column: 17
          }
        },
        line: 74
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 79,
            column: 82
          },
          end: {
            line: 79,
            column: 83
          }
        },
        loc: {
          start: {
            line: 79,
            column: 92
          },
          end: {
            line: 86,
            column: 13
          }
        },
        line: 79
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 34
          },
          end: {
            line: 81,
            column: 35
          }
        },
        loc: {
          start: {
            line: 81,
            column: 45
          },
          end: {
            line: 81,
            column: 70
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 90,
            column: 23
          },
          end: {
            line: 90,
            column: 24
          }
        },
        loc: {
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 93,
            column: 17
          }
        },
        line: 90
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 105,
            column: 27
          }
        },
        loc: {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 105
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 38
          }
        },
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 107,
            column: 53
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 108,
            column: 19
          },
          end: {
            line: 108,
            column: 20
          }
        },
        loc: {
          start: {
            line: 108,
            column: 23
          },
          end: {
            line: 108,
            column: 42
          }
        },
        line: 108
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 116,
            column: 50
          },
          end: {
            line: 116,
            column: 51
          }
        },
        loc: {
          start: {
            line: 116,
            column: 54
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 116
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 117,
            column: 72
          },
          end: {
            line: 117,
            column: 73
          }
        },
        loc: {
          start: {
            line: 117,
            column: 82
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 117
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 118,
            column: 46
          },
          end: {
            line: 118,
            column: 47
          }
        },
        loc: {
          start: {
            line: 118,
            column: 61
          },
          end: {
            line: 121,
            column: 13
          }
        },
        line: 118
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 122,
            column: 54
          },
          end: {
            line: 122,
            column: 55
          }
        },
        loc: {
          start: {
            line: 122,
            column: 59
          },
          end: {
            line: 122,
            column: 80
          }
        },
        line: 122
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 123,
            column: 50
          },
          end: {
            line: 123,
            column: 51
          }
        },
        loc: {
          start: {
            line: 123,
            column: 55
          },
          end: {
            line: 123,
            column: 79
          }
        },
        line: 123
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 124,
            column: 53
          },
          end: {
            line: 124,
            column: 54
          }
        },
        loc: {
          start: {
            line: 124,
            column: 58
          },
          end: {
            line: 124,
            column: 82
          }
        },
        line: 124
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 125,
            column: 54
          },
          end: {
            line: 125,
            column: 55
          }
        },
        loc: {
          start: {
            line: 125,
            column: 59
          },
          end: {
            line: 125,
            column: 89
          }
        },
        line: 125
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 137,
            column: 46
          },
          end: {
            line: 137,
            column: 47
          }
        },
        loc: {
          start: {
            line: 137,
            column: 61
          },
          end: {
            line: 140,
            column: 13
          }
        },
        line: 137
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 141,
            column: 54
          },
          end: {
            line: 141,
            column: 55
          }
        },
        loc: {
          start: {
            line: 141,
            column: 59
          },
          end: {
            line: 141,
            column: 80
          }
        },
        line: 141
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 142,
            column: 50
          },
          end: {
            line: 142,
            column: 51
          }
        },
        loc: {
          start: {
            line: 142,
            column: 55
          },
          end: {
            line: 142,
            column: 79
          }
        },
        line: 142
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 143,
            column: 53
          },
          end: {
            line: 143,
            column: 54
          }
        },
        loc: {
          start: {
            line: 143,
            column: 58
          },
          end: {
            line: 143,
            column: 82
          }
        },
        line: 143
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 144,
            column: 54
          },
          end: {
            line: 144,
            column: 55
          }
        },
        loc: {
          start: {
            line: 144,
            column: 59
          },
          end: {
            line: 144,
            column: 89
          }
        },
        line: 144
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 171,
            column: 51
          },
          end: {
            line: 171,
            column: 52
          }
        },
        loc: {
          start: {
            line: 171,
            column: 61
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 171
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 172,
            column: 19
          },
          end: {
            line: 172,
            column: 20
          }
        },
        loc: {
          start: {
            line: 172,
            column: 28
          },
          end: {
            line: 175,
            column: 13
          }
        },
        line: 172
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 177,
            column: 78
          },
          end: {
            line: 177,
            column: 79
          }
        },
        loc: {
          start: {
            line: 177,
            column: 88
          },
          end: {
            line: 183,
            column: 9
          }
        },
        line: 177
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 179,
            column: 30
          },
          end: {
            line: 179,
            column: 31
          }
        },
        loc: {
          start: {
            line: 179,
            column: 41
          },
          end: {
            line: 179,
            column: 66
          }
        },
        line: 179
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 187,
            column: 19
          },
          end: {
            line: 187,
            column: 20
          }
        },
        loc: {
          start: {
            line: 187,
            column: 28
          },
          end: {
            line: 190,
            column: 13
          }
        },
        line: 187
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 197,
            column: 49
          },
          end: {
            line: 197,
            column: 50
          }
        },
        loc: {
          start: {
            line: 197,
            column: 83
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 197
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 198,
            column: 53
          },
          end: {
            line: 198,
            column: 54
          }
        },
        loc: {
          start: {
            line: 198,
            column: 63
          },
          end: {
            line: 211,
            column: 9
          }
        },
        line: 198
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 199,
            column: 23
          },
          end: {
            line: 199,
            column: 24
          }
        },
        loc: {
          start: {
            line: 199,
            column: 32
          },
          end: {
            line: 202,
            column: 17
          }
        },
        line: 199
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 204,
            column: 30
          },
          end: {
            line: 204,
            column: 31
          }
        },
        loc: {
          start: {
            line: 204,
            column: 41
          },
          end: {
            line: 204,
            column: 65
          }
        },
        line: 204
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 206,
            column: 23
          },
          end: {
            line: 206,
            column: 24
          }
        },
        loc: {
          start: {
            line: 206,
            column: 32
          },
          end: {
            line: 209,
            column: 17
          }
        },
        line: 206
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 214,
            column: 23
          },
          end: {
            line: 214,
            column: 24
          }
        },
        loc: {
          start: {
            line: 214,
            column: 32
          },
          end: {
            line: 217,
            column: 17
          }
        },
        line: 214
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 224,
            column: 51
          },
          end: {
            line: 224,
            column: 52
          }
        },
        loc: {
          start: {
            line: 224,
            column: 55
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 224
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 231,
            column: 43
          },
          end: {
            line: 231,
            column: 44
          }
        },
        loc: {
          start: {
            line: 231,
            column: 47
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 231
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 232,
            column: 30
          },
          end: {
            line: 232,
            column: 31
          }
        },
        loc: {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 235,
            column: 9
          }
        },
        line: 232
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 240,
            column: 43
          },
          end: {
            line: 240,
            column: 44
          }
        },
        loc: {
          start: {
            line: 240,
            column: 47
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 240
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 241,
            column: 31
          },
          end: {
            line: 241,
            column: 32
          }
        },
        loc: {
          start: {
            line: 241,
            column: 40
          },
          end: {
            line: 253,
            column: 9
          }
        },
        line: 241
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 242,
            column: 48
          },
          end: {
            line: 242,
            column: 49
          }
        },
        loc: {
          start: {
            line: 242,
            column: 58
          },
          end: {
            line: 242,
            column: 83
          }
        },
        line: 242
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 243,
            column: 51
          },
          end: {
            line: 243,
            column: 52
          }
        },
        loc: {
          start: {
            line: 243,
            column: 66
          },
          end: {
            line: 246,
            column: 13
          }
        },
        line: 243
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 260,
            column: 42
          },
          end: {
            line: 260,
            column: 43
          }
        },
        loc: {
          start: {
            line: 260,
            column: 46
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 260
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 261,
            column: 42
          },
          end: {
            line: 261,
            column: 43
          }
        },
        loc: {
          start: {
            line: 261,
            column: 47
          },
          end: {
            line: 261,
            column: 69
          }
        },
        line: 261
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 262,
            column: 45
          },
          end: {
            line: 262,
            column: 46
          }
        },
        loc: {
          start: {
            line: 262,
            column: 50
          },
          end: {
            line: 262,
            column: 76
          }
        },
        line: 262
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 263,
            column: 44
          },
          end: {
            line: 263,
            column: 45
          }
        },
        loc: {
          start: {
            line: 263,
            column: 49
          },
          end: {
            line: 263,
            column: 73
          }
        },
        line: 263
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 275,
            column: 43
          },
          end: {
            line: 275,
            column: 44
          }
        },
        loc: {
          start: {
            line: 275,
            column: 47
          },
          end: {
            line: 288,
            column: 5
          }
        },
        line: 275
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 276,
            column: 39
          },
          end: {
            line: 276,
            column: 40
          }
        },
        loc: {
          start: {
            line: 276,
            column: 44
          },
          end: {
            line: 276,
            column: 64
          }
        },
        line: 276
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 277,
            column: 36
          },
          end: {
            line: 277,
            column: 37
          }
        },
        loc: {
          start: {
            line: 277,
            column: 41
          },
          end: {
            line: 277,
            column: 58
          }
        },
        line: 277
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 278,
            column: 40
          },
          end: {
            line: 278,
            column: 41
          }
        },
        loc: {
          start: {
            line: 278,
            column: 45
          },
          end: {
            line: 278,
            column: 66
          }
        },
        line: 278
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 279,
            column: 39
          },
          end: {
            line: 279,
            column: 40
          }
        },
        loc: {
          start: {
            line: 279,
            column: 44
          },
          end: {
            line: 279,
            column: 65
          }
        },
        line: 279
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 280,
            column: 45
          },
          end: {
            line: 280,
            column: 46
          }
        },
        loc: {
          start: {
            line: 280,
            column: 50
          },
          end: {
            line: 280,
            column: 80
          }
        },
        line: 280
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 280,
            column: 87
          },
          end: {
            line: 280,
            column: 88
          }
        },
        loc: {
          start: {
            line: 280,
            column: 95
          },
          end: {
            line: 280,
            column: 150
          }
        },
        line: 280
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 292,
            column: 47
          },
          end: {
            line: 292,
            column: 48
          }
        },
        loc: {
          start: {
            line: 292,
            column: 51
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 292
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 293,
            column: 31
          },
          end: {
            line: 293,
            column: 32
          }
        },
        loc: {
          start: {
            line: 293,
            column: 41
          },
          end: {
            line: 296,
            column: 19
          }
        },
        line: 293
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 293,
            column: 58
          },
          end: {
            line: 293,
            column: 59
          }
        },
        loc: {
          start: {
            line: 293,
            column: 67
          },
          end: {
            line: 296,
            column: 17
          }
        },
        line: 293
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 296,
            column: 26
          },
          end: {
            line: 296,
            column: 27
          }
        },
        loc: {
          start: {
            line: 296,
            column: 34
          },
          end: {
            line: 296,
            column: 89
          }
        },
        line: 296
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 374,
            column: 49
          },
          end: {
            line: 374,
            column: 50
          }
        },
        loc: {
          start: {
            line: 374,
            column: 53
          },
          end: {
            line: 374,
            column: 126
          }
        },
        line: 374
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 374,
            column: 66
          },
          end: {
            line: 374,
            column: 67
          }
        },
        loc: {
          start: {
            line: 374,
            column: 70
          },
          end: {
            line: 374,
            column: 114
          }
        },
        line: 374
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 392,
            column: 57
          },
          end: {
            line: 392,
            column: 58
          }
        },
        loc: {
          start: {
            line: 392,
            column: 84
          },
          end: {
            line: 422,
            column: 43
          }
        },
        line: 392
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 547,
            column: 49
          },
          end: {
            line: 547,
            column: 50
          }
        },
        loc: {
          start: {
            line: 547,
            column: 53
          },
          end: {
            line: 547,
            column: 120
          }
        },
        line: 547
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 547,
            column: 66
          },
          end: {
            line: 547,
            column: 67
          }
        },
        loc: {
          start: {
            line: 547,
            column: 70
          },
          end: {
            line: 547,
            column: 110
          }
        },
        line: 547
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 652,
            column: 49
          },
          end: {
            line: 652,
            column: 50
          }
        },
        loc: {
          start: {
            line: 652,
            column: 53
          },
          end: {
            line: 652,
            column: 123
          }
        },
        line: 652
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 652,
            column: 66
          },
          end: {
            line: 652,
            column: 67
          }
        },
        loc: {
          start: {
            line: 652,
            column: 70
          },
          end: {
            line: 652,
            column: 112
          }
        },
        line: 652
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 736,
            column: 88
          },
          end: {
            line: 736,
            column: 89
          }
        },
        loc: {
          start: {
            line: 736,
            column: 116
          },
          end: {
            line: 751,
            column: 59
          }
        },
        line: 736
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 770,
            column: 53
          },
          end: {
            line: 770,
            column: 54
          }
        },
        loc: {
          start: {
            line: 770,
            column: 80
          },
          end: {
            line: 807,
            column: 35
          }
        },
        line: 770
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 45
          }
        }, {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 65
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 47
          }
        }, {
          start: {
            line: 30,
            column: 51
          },
          end: {
            line: 30,
            column: 76
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 13
          }
        }, {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 31
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 53
          }
        }, {
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 88
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "10": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 29
          }
        }, {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 79
          }
        }],
        line: 44
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 88
          }
        }, {
          start: {
            line: 45,
            column: 91
          },
          end: {
            line: 45,
            column: 95
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 50,
            column: 13
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 33
          }
        }, {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 46,
            column: 45
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "15": {
        loc: {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 89,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "16": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "17": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 20
          }
        }, {
          start: {
            line: 106,
            column: 24
          },
          end: {
            line: 106,
            column: 29
          }
        }],
        line: 106
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 30
          },
          end: {
            line: 119,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 119,
            column: 65
          },
          end: {
            line: 119,
            column: 117
          }
        }, {
          start: {
            line: 119,
            column: 120
          },
          end: {
            line: 119,
            column: 132
          }
        }],
        line: 119
      },
      "19": {
        loc: {
          start: {
            line: 120,
            column: 30
          },
          end: {
            line: 120,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 120,
            column: 46
          }
        }, {
          start: {
            line: 120,
            column: 49
          },
          end: {
            line: 120,
            column: 54
          }
        }],
        line: 120
      },
      "20": {
        loc: {
          start: {
            line: 128,
            column: 33
          },
          end: {
            line: 128,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 54
          },
          end: {
            line: 128,
            column: 81
          }
        }, {
          start: {
            line: 128,
            column: 84
          },
          end: {
            line: 128,
            column: 85
          }
        }],
        line: 128
      },
      "21": {
        loc: {
          start: {
            line: 130,
            column: 31
          },
          end: {
            line: 130,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 130,
            column: 52
          },
          end: {
            line: 130,
            column: 89
          }
        }, {
          start: {
            line: 130,
            column: 92
          },
          end: {
            line: 130,
            column: 93
          }
        }],
        line: 130
      },
      "22": {
        loc: {
          start: {
            line: 131,
            column: 36
          },
          end: {
            line: 131,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 55
          },
          end: {
            line: 131,
            column: 95
          }
        }, {
          start: {
            line: 131,
            column: 98
          },
          end: {
            line: 131,
            column: 99
          }
        }],
        line: 131
      },
      "23": {
        loc: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 138,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 138,
            column: 65
          },
          end: {
            line: 138,
            column: 117
          }
        }, {
          start: {
            line: 138,
            column: 120
          },
          end: {
            line: 138,
            column: 132
          }
        }],
        line: 138
      },
      "24": {
        loc: {
          start: {
            line: 139,
            column: 30
          },
          end: {
            line: 139,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 45
          },
          end: {
            line: 139,
            column: 46
          }
        }, {
          start: {
            line: 139,
            column: 49
          },
          end: {
            line: 139,
            column: 54
          }
        }],
        line: 139
      },
      "25": {
        loc: {
          start: {
            line: 147,
            column: 33
          },
          end: {
            line: 147,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 147,
            column: 81
          }
        }, {
          start: {
            line: 147,
            column: 84
          },
          end: {
            line: 147,
            column: 85
          }
        }],
        line: 147
      },
      "26": {
        loc: {
          start: {
            line: 149,
            column: 31
          },
          end: {
            line: 149,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 52
          },
          end: {
            line: 149,
            column: 89
          }
        }, {
          start: {
            line: 149,
            column: 92
          },
          end: {
            line: 149,
            column: 93
          }
        }],
        line: 149
      },
      "27": {
        loc: {
          start: {
            line: 150,
            column: 36
          },
          end: {
            line: 150,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 150,
            column: 55
          },
          end: {
            line: 150,
            column: 95
          }
        }, {
          start: {
            line: 150,
            column: 98
          },
          end: {
            line: 150,
            column: 99
          }
        }],
        line: 150
      },
      "28": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "29": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "30": {
        loc: {
          start: {
            line: 233,
            column: 26
          },
          end: {
            line: 233,
            column: 128
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 61
          },
          end: {
            line: 233,
            column: 113
          }
        }, {
          start: {
            line: 233,
            column: 116
          },
          end: {
            line: 233,
            column: 128
          }
        }],
        line: 233
      },
      "31": {
        loc: {
          start: {
            line: 244,
            column: 30
          },
          end: {
            line: 244,
            column: 132
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 65
          },
          end: {
            line: 244,
            column: 117
          }
        }, {
          start: {
            line: 244,
            column: 120
          },
          end: {
            line: 244,
            column: 132
          }
        }],
        line: 244
      },
      "32": {
        loc: {
          start: {
            line: 251,
            column: 28
          },
          end: {
            line: 251,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 45
          },
          end: {
            line: 251,
            column: 87
          }
        }, {
          start: {
            line: 251,
            column: 90
          },
          end: {
            line: 251,
            column: 91
          }
        }],
        line: 251
      },
      "33": {
        loc: {
          start: {
            line: 264,
            column: 31
          },
          end: {
            line: 264,
            column: 104
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 50
          },
          end: {
            line: 264,
            column: 98
          }
        }, {
          start: {
            line: 264,
            column: 101
          },
          end: {
            line: 264,
            column: 104
          }
        }],
        line: 264
      },
      "34": {
        loc: {
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "35": {
        loc: {
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 354,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 349,
            column: 60
          },
          end: {
            line: 352,
            column: 30
          }
        }, {
          start: {
            line: 352,
            column: 47
          },
          end: {
            line: 354,
            column: 30
          }
        }],
        line: 349
      },
      "36": {
        loc: {
          start: {
            line: 355,
            column: 28
          },
          end: {
            line: 355,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 355,
            column: 46
          },
          end: {
            line: 355,
            column: 61
          }
        }, {
          start: {
            line: 355,
            column: 64
          },
          end: {
            line: 355,
            column: 73
          }
        }],
        line: 355
      },
      "37": {
        loc: {
          start: {
            line: 379,
            column: 44
          },
          end: {
            line: 384,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 379,
            column: 75
          },
          end: {
            line: 382,
            column: 46
          }
        }, {
          start: {
            line: 382,
            column: 63
          },
          end: {
            line: 384,
            column: 46
          }
        }],
        line: 379
      },
      "38": {
        loc: {
          start: {
            line: 385,
            column: 44
          },
          end: {
            line: 385,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 385,
            column: 61
          },
          end: {
            line: 385,
            column: 75
          }
        }, {
          start: {
            line: 385,
            column: 78
          },
          end: {
            line: 385,
            column: 86
          }
        }],
        line: 385
      },
      "39": {
        loc: {
          start: {
            line: 450,
            column: 60
          },
          end: {
            line: 450,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 450,
            column: 60
          },
          end: {
            line: 450,
            column: 96
          }
        }, {
          start: {
            line: 450,
            column: 100
          },
          end: {
            line: 450,
            column: 103
          }
        }],
        line: 450
      },
      "40": {
        loc: {
          start: {
            line: 475,
            column: 60
          },
          end: {
            line: 475,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 475,
            column: 60
          },
          end: {
            line: 475,
            column: 101
          }
        }, {
          start: {
            line: 475,
            column: 105
          },
          end: {
            line: 475,
            column: 108
          }
        }],
        line: 475
      },
      "41": {
        loc: {
          start: {
            line: 495,
            column: 58
          },
          end: {
            line: 495,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 495,
            column: 58
          },
          end: {
            line: 495,
            column: 80
          }
        }, {
          start: {
            line: 495,
            column: 84
          },
          end: {
            line: 495,
            column: 85
          }
        }],
        line: 495
      },
      "42": {
        loc: {
          start: {
            line: 512,
            column: 60
          },
          end: {
            line: 512,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 512,
            column: 60
          },
          end: {
            line: 512,
            column: 93
          }
        }, {
          start: {
            line: 512,
            column: 97
          },
          end: {
            line: 512,
            column: 100
          }
        }],
        line: 512
      },
      "43": {
        loc: {
          start: {
            line: 516,
            column: 52
          },
          end: {
            line: 522,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 516,
            column: 103
          },
          end: {
            line: 519,
            column: 54
          }
        }, {
          start: {
            line: 519,
            column: 71
          },
          end: {
            line: 522,
            column: 54
          }
        }],
        line: 516
      },
      "44": {
        loc: {
          start: {
            line: 516,
            column: 53
          },
          end: {
            line: 516,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 53
          },
          end: {
            line: 516,
            column: 75
          }
        }, {
          start: {
            line: 516,
            column: 79
          },
          end: {
            line: 516,
            column: 80
          }
        }],
        line: 516
      },
      "45": {
        loc: {
          start: {
            line: 552,
            column: 44
          },
          end: {
            line: 557,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 552,
            column: 75
          },
          end: {
            line: 555,
            column: 46
          }
        }, {
          start: {
            line: 555,
            column: 63
          },
          end: {
            line: 557,
            column: 46
          }
        }],
        line: 552
      },
      "46": {
        loc: {
          start: {
            line: 558,
            column: 44
          },
          end: {
            line: 558,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 558,
            column: 61
          },
          end: {
            line: 558,
            column: 75
          }
        }, {
          start: {
            line: 558,
            column: 78
          },
          end: {
            line: 558,
            column: 86
          }
        }],
        line: 558
      },
      "47": {
        loc: {
          start: {
            line: 657,
            column: 44
          },
          end: {
            line: 662,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 657,
            column: 75
          },
          end: {
            line: 660,
            column: 46
          }
        }, {
          start: {
            line: 660,
            column: 63
          },
          end: {
            line: 662,
            column: 46
          }
        }],
        line: 657
      },
      "48": {
        loc: {
          start: {
            line: 663,
            column: 44
          },
          end: {
            line: 663,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 663,
            column: 61
          },
          end: {
            line: 663,
            column: 75
          }
        }, {
          start: {
            line: 663,
            column: 78
          },
          end: {
            line: 663,
            column: 86
          }
        }],
        line: 663
      },
      "49": {
        loc: {
          start: {
            line: 776,
            column: 44
          },
          end: {
            line: 779,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 776,
            column: 44
          },
          end: {
            line: 776,
            column: 64
          }
        }, {
          start: {
            line: 776,
            column: 82
          },
          end: {
            line: 779,
            column: 46
          }
        }],
        line: 776
      },
      "50": {
        loc: {
          start: {
            line: 780,
            column: 44
          },
          end: {
            line: 783,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 780,
            column: 44
          },
          end: {
            line: 780,
            column: 65
          }
        }, {
          start: {
            line: 780,
            column: 83
          },
          end: {
            line: 783,
            column: 46
          }
        }],
        line: 780
      },
      "51": {
        loc: {
          start: {
            line: 784,
            column: 44
          },
          end: {
            line: 787,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 784,
            column: 44
          },
          end: {
            line: 784,
            column: 67
          }
        }, {
          start: {
            line: 784,
            column: 85
          },
          end: {
            line: 787,
            column: 46
          }
        }],
        line: 784
      },
      "52": {
        loc: {
          start: {
            line: 811,
            column: 12
          },
          end: {
            line: 817,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 811,
            column: 12
          },
          end: {
            line: 811,
            column: 20
          }
        }, {
          start: {
            line: 811,
            column: 24
          },
          end: {
            line: 811,
            column: 29
          }
        }, {
          start: {
            line: 811,
            column: 47
          },
          end: {
            line: 817,
            column: 14
          }
        }],
        line: 811
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Reports.tsx"],
      sourcesContent: ["\"use client\"\n\nimport * as React from \"react\"\nimport { useState, useEffect, useMemo, useCallback } from \"react\"\nimport { Phone, Mail, Calendar, Download, AlertCircle, Loader2, RefreshCw, TrendingUp, TrendingDown, X } from \"lucide-react\"\nimport { useAppContext } from \"../context/AppContext\"\nimport { exportClientsToCSV, exportTasksToCSV, exportEventsToCSV } from \"../utils/exportData\"\nimport { useErrorState, useAsyncOperation, handleAsyncOperation, DefaultErrorFallback } from \"../utils/standardErrorHandling\"\n\ninterface LoadingState {\n  reports: boolean\n  export: boolean\n  refresh: boolean\n}\n\ninterface ReportMetrics {\n  totalValue: number\n  averageDealSize: number\n  activeClients: number\n  closedWonRate: number\n  taskCompletionRate: number\n  upcomingEvents: number\n}\n\nconst Reports: React.FC = () => {\n  const { state } = useAppContext()\n  const { clients, tasks, events, salesStages } = state\n  const { hasError, error, setError, clearError, setLoading: setErrorLoading } = useErrorState()\n  const exportOperation = useAsyncOperation()\n  const [loading, setLoading] = useState<LoadingState>({\n    reports: true,\n    export: false,\n    refresh: false,\n  })\n  const [metrics, setMetrics] = useState<ReportMetrics | null>(null)\n  const [lastUpdated, setLastUpdated] = useState<Date>(new Date())\n\n  // Initialize reports\n  useEffect(() => {\n    const initializeReports = async () => {\n      setLoading(prev => ({ ...prev, reports: true }))\n      clearError()\n      \n      const result = await handleAsyncOperation(async () => {\n        // Simulate API call delay\n        await new Promise(resolve => setTimeout(resolve, 1500))\n        \n        // Set calculated metrics\n        setMetrics(calculatedMetrics)\n        setLastUpdated(new Date())\n        \n        return calculatedMetrics\n      }, 'Initialize Reports')\n      \n      if (result.error) {\n        setError(result.error)\n      }\n      \n      setLoading(prev => ({ ...prev, reports: false }))\n    }\n\n    initializeReports()\n  }, [clients, tasks, events, salesStages, clearError, setError])\n\n  // Clear error after 5 seconds\n  useEffect(() => {\n    if (hasError && error) {\n      const timer = setTimeout(() => clearError(), 5000)\n      return () => clearTimeout(timer)\n    }\n  }, [hasError, error, clearError])\n\n  // Memoized metrics calculation for better performance\n  const calculatedMetrics = useMemo((): ReportMetrics => {\n    const result = handleAsyncOperation(async () => {\n      const totalValue = clients.reduce((sum, client) => {\n        const value = typeof client.value === 'string' ? Number.parseInt((client.value as string).replace(/[^0-9]/g, \"\")) : client.value\n        return sum + (isNaN(value) ? 0 : value)\n      }, 0)\n\n      const activeClientsCount = clients.filter((c) => c.status === \"active\").length\n      const closedWonCount = clients.filter((c) => c.stage === \"closed-won\").length\n      const completedTasksCount = tasks.filter((t) => t.status === \"completed\").length\n      const upcomingEventsCount = events.filter((e) => new Date(e.date) >= new Date()).length\n\n      return {\n        totalValue,\n        averageDealSize: clients.length > 0 ? totalValue / clients.length : 0,\n        activeClients: activeClientsCount,\n        closedWonRate: clients.length > 0 ? (closedWonCount / clients.length) * 100 : 0,\n        taskCompletionRate: tasks.length > 0 ? (completedTasksCount / tasks.length) * 100 : 0,\n        upcomingEvents: upcomingEventsCount,\n      }\n    }, 'Calculate Metrics')\n    \n    // For synchronous calculation, we'll handle it differently\n    try {\n      const totalValue = clients.reduce((sum, client) => {\n        const value = typeof client.value === 'string' ? Number.parseInt((client.value as string).replace(/[^0-9]/g, \"\")) : client.value\n        return sum + (isNaN(value) ? 0 : value)\n      }, 0)\n\n      const activeClientsCount = clients.filter((c) => c.status === \"active\").length\n      const closedWonCount = clients.filter((c) => c.stage === \"closed-won\").length\n      const completedTasksCount = tasks.filter((t) => t.status === \"completed\").length\n      const upcomingEventsCount = events.filter((e) => new Date(e.date) >= new Date()).length\n\n      return {\n        totalValue,\n        averageDealSize: clients.length > 0 ? totalValue / clients.length : 0,\n        activeClients: activeClientsCount,\n        closedWonRate: clients.length > 0 ? (closedWonCount / clients.length) * 100 : 0,\n        taskCompletionRate: tasks.length > 0 ? (completedTasksCount / tasks.length) * 100 : 0,\n        upcomingEvents: upcomingEventsCount,\n      }\n    } catch (err) {\n      setError('Error calculating metrics')\n      return {\n        totalValue: 0,\n        averageDealSize: 0,\n        activeClients: 0,\n        closedWonRate: 0,\n        taskCompletionRate: 0,\n        upcomingEvents: 0,\n      }\n    }\n  }, [clients, tasks, events, setError])\n\n  // Refresh reports with useCallback for performance\n  const refreshReports = useCallback(async () => {\n    setLoading(prev => ({ ...prev, refresh: true }))\n    clearError()\n    \n    const result = await handleAsyncOperation(async () => {\n      // Simulate API refresh\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      \n      setMetrics(calculatedMetrics)\n      setLastUpdated(new Date())\n      \n      return 'Reports refreshed successfully!'\n    }, 'Refresh Reports')\n    \n    if (result.error) {\n      setError(result.error)\n    }\n    \n    setLoading(prev => ({ ...prev, refresh: false }))\n  }, [calculatedMetrics, clearError, setError])\n\n  // Enhanced export function with error handling and useCallback\n  const handleExport = useCallback(async (exportFunction: () => void, dataType: string) => {\n    const result = await exportOperation.execute(async () => {\n      setLoading(prev => ({ ...prev, export: true }))\n      \n      // Simulate export delay\n      await new Promise(resolve => setTimeout(resolve, 500))\n      \n      exportFunction()\n      \n      setLoading(prev => ({ ...prev, export: false }))\n      return `${dataType} exported successfully!`\n    }, `Export ${dataType}`)\n    \n    if (result.error) {\n      setError(result.error)\n      setLoading(prev => ({ ...prev, export: false }))\n    }\n  }, [exportOperation, setError])\n\n  // Retry function with useCallback\n  const retryOperation = useCallback(() => {\n    clearError()\n    window.location.reload()\n  }, [clearError])\n\n  // Memoized total value calculation\n  const totalValue = useMemo(() => {\n    return clients.reduce((sum, client) => {\n      const value = typeof client.value === 'string' ? Number.parseInt((client.value as string).replace(/[^0-9]/g, \"\")) : client.value\n      return sum + value\n    }, 0)\n  }, [clients])\n\n  // Memoized stage statistics calculation\n  const stageStats = useMemo(() => {\n    return salesStages.map((stage) => {\n      const stageClients = clients.filter((client) => client.stage === stage.id)\n      const stageValue = stageClients.reduce((sum, client) => {\n        const value = typeof client.value === 'string' ? Number.parseInt((client.value as string).replace(/[^0-9]/g, \"\")) : client.value\n        return sum + value\n      }, 0)\n\n      return {\n        stage: stage.name,\n        clients: stageClients.length,\n        value: stageValue,\n        percentage: totalValue > 0 ? ((stageValue / totalValue) * 100).toFixed(1) : 0,\n      }\n    })\n  }, [salesStages, clients, totalValue])\n\n  // Memoized task statistics calculation\n  const taskStats = useMemo(() => {\n    const pendingTasks = tasks.filter((t) => t.status === \"pending\").length\n    const inProgressTasks = tasks.filter((t) => t.status === \"in-progress\").length\n    const completedTasks = tasks.filter((t) => t.status === \"completed\").length\n    const completionRate = tasks.length > 0 ? ((completedTasks / tasks.length) * 100).toFixed(1) : '0'\n    \n    return {\n      pending: pendingTasks,\n      inProgress: inProgressTasks,\n      completed: completedTasks,\n      completionRate\n    }\n  }, [tasks])\n\n  // Memoized event statistics calculation\n  const eventStats = useMemo(() => {\n    const meetings = events.filter((e) => e.type === \"meeting\").length\n    const calls = events.filter((e) => e.type === \"call\").length\n    const deadlines = events.filter((e) => e.type === \"deadline\").length\n    const internal = events.filter((e) => e.type === \"internal\").length\n    \n    const upcomingEvents = events\n      .filter((e) => new Date(e.date) >= new Date())\n      .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime())\n      .slice(0, 3)\n    \n    return {\n      meetings,\n      calls,\n      deadlines,\n      internal,\n      upcomingEvents\n    }\n  }, [events])\n\n  // Memoized recent activity calculation\n  const recentActivity = useMemo(() => {\n    return clients\n      .flatMap((client) =>\n        client.notes.map((note) => ({\n          ...note,\n          clientName: client.name,\n        }))\n      )\n      .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n      .slice(0, 10)\n  }, [clients])\n\n  // Loading state\n  if (loading.reports) {\n    return (\n      <div className=\"p-8\">\n        <div className=\"flex flex-col items-center justify-center h-96\">\n          <Loader2 size={48} className=\"text-blue-600 mb-4 animate-spin\" />\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Loading Reports</h3>\n          <p className=\"text-gray-500\">Please wait while we generate your analytics...</p>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-8\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Reports & Analytics</h2>\n          <p className=\"text-gray-500 mt-1\">\n            Last updated: {lastUpdated.toLocaleString()}\n          </p>\n        </div>\n        <button\n          onClick={refreshReports}\n          disabled={loading.refresh}\n          className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {loading.refresh ? (\n            <Loader2 size={16} className=\"animate-spin\" />\n          ) : (\n            <RefreshCw size={16} />\n          )}\n          {loading.refresh ? 'Refreshing...' : 'Refresh'}\n        </button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Pipeline by Stage</h3>\n            <button\n              onClick={() => handleExport(() => exportClientsToCSV(clients), 'Clients')}\n              disabled={loading.export}\n              className=\"flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n              aria-label=\"Export clients data to CSV\"\n            >\n              {loading.export ? (\n                <Loader2 size={14} className=\"animate-spin\" />\n              ) : (\n                <Download size={14} />\n              )}\n              {loading.export ? 'Exporting...' : 'Export'}\n            </button>\n          </div>\n          <div className=\"space-y-4\">\n            {stageStats.map((stat, idx) => (\n              <div key={idx}>\n                <div className=\"flex justify-between text-sm mb-1\">\n                  <span>{stat.stage}</span>\n                  <span>\n                    {stat.clients} clients - ${stat.value.toLocaleString()} ({stat.percentage}%)\n                  </span>\n                </div>\n                <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                  <div className=\"bg-blue-600 h-2 rounded-full\" style={{ width: `${stat.percentage}%` }}></div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <h3 className=\"text-lg font-semibold mb-4\">Quick Stats</h3>\n          <div className=\"space-y-3\">\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-600\">Total Pipeline Value</span>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"font-medium\">${metrics?.totalValue.toLocaleString() || '0'}</span>\n                <TrendingUp size={16} className=\"text-green-500\" />\n              </div>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-600\">Average Deal Size</span>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"font-medium\">${metrics?.averageDealSize.toLocaleString() || '0'}</span>\n                <TrendingUp size={16} className=\"text-green-500\" />\n              </div>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Active Clients</span>\n              <span className=\"font-medium\">{metrics?.activeClients || 0}</span>\n            </div>\n            <div className=\"flex justify-between items-center\">\n              <span className=\"text-gray-600\">Closed Won Rate</span>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"font-medium\">{metrics?.closedWonRate.toFixed(1) || '0'}%</span>\n                {(metrics?.closedWonRate || 0) > 50 ? (\n                  <TrendingUp size={16} className=\"text-green-500\" />\n                ) : (\n                  <TrendingDown size={16} className=\"text-red-500\" />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Task Summary</h3>\n            <button\n              onClick={() => handleExport(() => exportTasksToCSV(tasks), 'Tasks')}\n              disabled={loading.export}\n              className=\"flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n              aria-label=\"Export tasks data to CSV\"\n            >\n              {loading.export ? (\n                <Loader2 size={14} className=\"animate-spin\" />\n              ) : (\n                <Download size={14} />\n              )}\n              {loading.export ? 'Exporting...' : 'Export'}\n            </button>\n          </div>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-3 gap-4\">\n              <div className=\"bg-blue-50 p-4 rounded-lg text-center\">\n                <div className=\"text-2xl font-bold text-blue-700\">\n                  {taskStats.pending}\n                </div>\n                <div className=\"text-sm text-blue-600\">Pending</div>\n              </div>\n              <div className=\"bg-yellow-50 p-4 rounded-lg text-center\">\n                <div className=\"text-2xl font-bold text-yellow-700\">\n                  {taskStats.inProgress}\n                </div>\n                <div className=\"text-sm text-yellow-600\">In Progress</div>\n              </div>\n              <div className=\"bg-green-50 p-4 rounded-lg text-center\">\n                <div className=\"text-2xl font-bold text-green-700\">\n                  {taskStats.completed}\n                </div>\n                <div className=\"text-sm text-green-600\">Completed</div>\n              </div>\n            </div>\n            <div>\n              <div className=\"flex justify-between text-sm mb-1\">\n                <span>Completion Rate</span>\n                <span>\n                  {taskStats.completionRate}%\n                </span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div\n                  className=\"bg-green-600 h-2 rounded-full\"\n                  style={{\n                    width: `${taskStats.completionRate}%`,\n                  }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-lg shadow\">\n          <div className=\"flex justify-between items-center mb-4\">\n            <h3 className=\"text-lg font-semibold\">Calendar Events</h3>\n            <button\n              onClick={() => handleExport(() => exportEventsToCSV(events), 'Events')}\n              disabled={loading.export}\n              className=\"flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n              aria-label=\"Export events data to CSV\"\n            >\n              {loading.export ? (\n                <Loader2 size={14} className=\"animate-spin\" />\n              ) : (\n                <Download size={14} />\n              )}\n              {loading.export ? 'Exporting...' : 'Export'}\n            </button>\n          </div>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-4 gap-2\">\n              <div className=\"bg-blue-50 p-3 rounded-lg text-center\">\n                <div className=\"text-xl font-bold text-blue-700\">\n                  {eventStats.meetings}\n                </div>\n                <div className=\"text-xs text-blue-600\">Meetings</div>\n              </div>\n              <div className=\"bg-green-50 p-3 rounded-lg text-center\">\n                <div className=\"text-xl font-bold text-green-700\">{eventStats.calls}</div>\n                <div className=\"text-xs text-green-600\">Calls</div>\n              </div>\n              <div className=\"bg-red-50 p-3 rounded-lg text-center\">\n                <div className=\"text-xl font-bold text-red-700\">\n                  {eventStats.deadlines}\n                </div>\n                <div className=\"text-xs text-red-600\">Deadlines</div>\n              </div>\n              <div className=\"bg-gray-50 p-3 rounded-lg text-center\">\n                <div className=\"text-xl font-bold text-gray-700\">\n                  {eventStats.internal}\n                </div>\n                <div className=\"text-xs text-gray-600\">Internal</div>\n              </div>\n            </div>\n            <div>\n              <div className=\"text-sm font-medium mb-2\">Upcoming Events</div>\n              <div className=\"space-y-2\">\n                {eventStats.upcomingEvents.map((event, idx) => (\n                  <div key={idx} className=\"flex items-center justify-between text-sm p-2 border-b\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"font-medium\">{event.title}</span>\n                    </div>\n                    <span className=\"text-gray-500\">{event.date}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"bg-white p-6 rounded-lg shadow\">\n        <h3 className=\"text-lg font-semibold mb-4\">Recent Activity Summary</h3>\n        <div className=\"space-y-2\">\n          {recentActivity.map((note, idx) => (\n            <div key={idx} className=\"flex items-center justify-between text-sm py-2 border-b\">\n              <div className=\"flex items-center gap-3\">\n                {note.type === \"call\" && <Phone size={16} className=\"text-blue-600\" />}\n                {note.type === \"email\" && <Mail size={16} className=\"text-green-600\" />}\n                {note.type === \"meeting\" && <Calendar size={16} className=\"text-purple-600\" />}\n                <div>\n                  <span className=\"font-medium\">{note.clientName}</span>\n                  <span className=\"text-gray-500 ml-2\">{note.content}</span>\n                </div>\n              </div>\n              <span className=\"text-gray-400\">{note.date}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Error Display */}\n      {hasError && error && (\n        <div className=\"fixed top-4 right-4 z-50 max-w-md\">\n          <DefaultErrorFallback\n            error={error}\n            retry={clearError}\n          />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Reports\n"],
      names: ["Reports", "state", "useAppContext", "clients", "tasks", "events", "salesStages", "hasError", "error", "setError", "clearError", "setLoading", "setErrorLoading", "useErrorState", "exportOperation", "useAsyncOperation", "loading", "useState", "reports", "export", "refresh", "metrics", "setMetrics", "lastUpdated", "setLastUpdated", "Date", "useEffect", "initializeReports", "prev", "result", "handleAsyncOperation", "Promise", "resolve", "setTimeout", "calculatedMetrics", "timer", "clearTimeout", "useMemo", "totalValue", "reduce", "sum", "client", "value", "Number", "parseInt", "replace", "isNaN", "activeClientsCount", "filter", "c", "status", "length", "closedWonCount", "stage", "completedTasksCount", "t", "upcomingEventsCount", "e", "date", "averageDealSize", "activeClients", "closedWonRate", "taskCompletionRate", "upcomingEvents", "err", "refreshReports", "useCallback", "handleExport", "exportFunction", "dataType", "execute", "retryOperation", "window", "location", "reload", "stageStats", "map", "stageClients", "id", "stageValue", "name", "percentage", "toFixed", "taskStats", "pendingTasks", "inProgressTasks", "completedTasks", "completionRate", "pending", "inProgress", "completed", "eventStats", "meetings", "type", "calls", "deadlines", "internal", "sort", "a", "b", "getTime", "slice", "recentActivity", "flatMap", "notes", "note", "clientName", "div", "className", "Loader2", "size", "h3", "p", "h2", "toLocaleString", "button", "onClick", "disabled", "RefreshCw", "exportClientsToCSV", "aria-label", "Download", "stat", "idx", "span", "style", "width", "TrendingUp", "TrendingDown", "exportTasksToCSV", "exportEventsToCSV", "event", "title", "Phone", "Mail", "Calendar", "content", "DefaultErrorFallback", "retry"],
      mappings: "AAAA;;;;;+BA4fA;;;eAAA;;;;+DA1fuB;6BAEuF;4BAChF;4BAC0C;uCACqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiB7F,MAAMA,UAAoB;IACxB,MAAM,EAAEC,KAAK,EAAE,GAAGC,IAAAA,yBAAa;IAC/B,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,EAAE,GAAGL;IAChD,MAAM,EAAEM,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,YAAYC,eAAe,EAAE,GAAGC,IAAAA,oCAAa;IAC5F,MAAMC,kBAAkBC,IAAAA,wCAAiB;IACzC,MAAM,CAACC,SAASL,WAAW,GAAGM,IAAAA,eAAQ,EAAe;QACnDC,SAAS;QACTC,QAAQ;QACRC,SAAS;IACX;IACA,MAAM,CAACC,SAASC,WAAW,GAAGL,IAAAA,eAAQ,EAAuB;IAC7D,MAAM,CAACM,aAAaC,eAAe,GAAGP,IAAAA,eAAQ,EAAO,IAAIQ;IAEzD,qBAAqB;IACrBC,IAAAA,gBAAS,EAAC;QACR,MAAMC,oBAAoB;YACxBhB,WAAWiB,CAAAA,OAAS,CAAA;oBAAE,GAAGA,IAAI;oBAAEV,SAAS;gBAAK,CAAA;YAC7CR;YAEA,MAAMmB,SAAS,MAAMC,IAAAA,2CAAoB,EAAC;gBACxC,0BAA0B;gBAC1B,MAAM,IAAIC,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;gBAEjD,yBAAyB;gBACzBV,WAAWY;gBACXV,eAAe,IAAIC;gBAEnB,OAAOS;YACT,GAAG;YAEH,IAAIL,OAAOrB,KAAK,EAAE;gBAChBC,SAASoB,OAAOrB,KAAK;YACvB;YAEAG,WAAWiB,CAAAA,OAAS,CAAA;oBAAE,GAAGA,IAAI;oBAAEV,SAAS;gBAAM,CAAA;QAChD;QAEAS;IACF,GAAG;QAACxB;QAASC;QAAOC;QAAQC;QAAaI;QAAYD;KAAS;IAE9D,8BAA8B;IAC9BiB,IAAAA,gBAAS,EAAC;QACR,IAAInB,YAAYC,OAAO;YACrB,MAAM2B,QAAQF,WAAW,IAAMvB,cAAc;YAC7C,OAAO,IAAM0B,aAAaD;QAC5B;IACF,GAAG;QAAC5B;QAAUC;QAAOE;KAAW;IAEhC,sDAAsD;IACtD,MAAMwB,oBAAoBG,IAAAA,cAAO,EAAC;QAChC,MAAMR,SAASC,IAAAA,2CAAoB,EAAC;YAClC,MAAMQ,aAAanC,QAAQoC,MAAM,CAAC,CAACC,KAAKC;gBACtC,MAAMC,QAAQ,OAAOD,OAAOC,KAAK,KAAK,WAAWC,OAAOC,QAAQ,CAAC,AAACH,OAAOC,KAAK,CAAYG,OAAO,CAAC,WAAW,OAAOJ,OAAOC,KAAK;gBAChI,OAAOF,MAAOM,CAAAA,MAAMJ,SAAS,IAAIA,KAAI;YACvC,GAAG;YAEH,MAAMK,qBAAqB5C,QAAQ6C,MAAM,CAAC,CAACC,IAAMA,EAAEC,MAAM,KAAK,UAAUC,MAAM;YAC9E,MAAMC,iBAAiBjD,QAAQ6C,MAAM,CAAC,CAACC,IAAMA,EAAEI,KAAK,KAAK,cAAcF,MAAM;YAC7E,MAAMG,sBAAsBlD,MAAM4C,MAAM,CAAC,CAACO,IAAMA,EAAEL,MAAM,KAAK,aAAaC,MAAM;YAChF,MAAMK,sBAAsBnD,OAAO2C,MAAM,CAAC,CAACS,IAAM,IAAIhC,KAAKgC,EAAEC,IAAI,KAAK,IAAIjC,QAAQ0B,MAAM;YAEvF,OAAO;gBACLb;gBACAqB,iBAAiBxD,QAAQgD,MAAM,GAAG,IAAIb,aAAanC,QAAQgD,MAAM,GAAG;gBACpES,eAAeb;gBACfc,eAAe1D,QAAQgD,MAAM,GAAG,IAAI,AAACC,iBAAiBjD,QAAQgD,MAAM,GAAI,MAAM;gBAC9EW,oBAAoB1D,MAAM+C,MAAM,GAAG,IAAI,AAACG,sBAAsBlD,MAAM+C,MAAM,GAAI,MAAM;gBACpFY,gBAAgBP;YAClB;QACF,GAAG;QAEH,2DAA2D;QAC3D,IAAI;YACF,MAAMlB,aAAanC,QAAQoC,MAAM,CAAC,CAACC,KAAKC;gBACtC,MAAMC,QAAQ,OAAOD,OAAOC,KAAK,KAAK,WAAWC,OAAOC,QAAQ,CAAC,AAACH,OAAOC,KAAK,CAAYG,OAAO,CAAC,WAAW,OAAOJ,OAAOC,KAAK;gBAChI,OAAOF,MAAOM,CAAAA,MAAMJ,SAAS,IAAIA,KAAI;YACvC,GAAG;YAEH,MAAMK,qBAAqB5C,QAAQ6C,MAAM,CAAC,CAACC,IAAMA,EAAEC,MAAM,KAAK,UAAUC,MAAM;YAC9E,MAAMC,iBAAiBjD,QAAQ6C,MAAM,CAAC,CAACC,IAAMA,EAAEI,KAAK,KAAK,cAAcF,MAAM;YAC7E,MAAMG,sBAAsBlD,MAAM4C,MAAM,CAAC,CAACO,IAAMA,EAAEL,MAAM,KAAK,aAAaC,MAAM;YAChF,MAAMK,sBAAsBnD,OAAO2C,MAAM,CAAC,CAACS,IAAM,IAAIhC,KAAKgC,EAAEC,IAAI,KAAK,IAAIjC,QAAQ0B,MAAM;YAEvF,OAAO;gBACLb;gBACAqB,iBAAiBxD,QAAQgD,MAAM,GAAG,IAAIb,aAAanC,QAAQgD,MAAM,GAAG;gBACpES,eAAeb;gBACfc,eAAe1D,QAAQgD,MAAM,GAAG,IAAI,AAACC,iBAAiBjD,QAAQgD,MAAM,GAAI,MAAM;gBAC9EW,oBAAoB1D,MAAM+C,MAAM,GAAG,IAAI,AAACG,sBAAsBlD,MAAM+C,MAAM,GAAI,MAAM;gBACpFY,gBAAgBP;YAClB;QACF,EAAE,OAAOQ,KAAK;YACZvD,SAAS;YACT,OAAO;gBACL6B,YAAY;gBACZqB,iBAAiB;gBACjBC,eAAe;gBACfC,eAAe;gBACfC,oBAAoB;gBACpBC,gBAAgB;YAClB;QACF;IACF,GAAG;QAAC5D;QAASC;QAAOC;QAAQI;KAAS;IAErC,mDAAmD;IACnD,MAAMwD,iBAAiBC,IAAAA,kBAAW,EAAC;QACjCvD,WAAWiB,CAAAA,OAAS,CAAA;gBAAE,GAAGA,IAAI;gBAAER,SAAS;YAAK,CAAA;QAC7CV;QAEA,MAAMmB,SAAS,MAAMC,IAAAA,2CAAoB,EAAC;YACxC,uBAAuB;YACvB,MAAM,IAAIC,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;YAEjDV,WAAWY;YACXV,eAAe,IAAIC;YAEnB,OAAO;QACT,GAAG;QAEH,IAAII,OAAOrB,KAAK,EAAE;YAChBC,SAASoB,OAAOrB,KAAK;QACvB;QAEAG,WAAWiB,CAAAA,OAAS,CAAA;gBAAE,GAAGA,IAAI;gBAAER,SAAS;YAAM,CAAA;IAChD,GAAG;QAACc;QAAmBxB;QAAYD;KAAS;IAE5C,+DAA+D;IAC/D,MAAM0D,eAAeD,IAAAA,kBAAW,EAAC,OAAOE,gBAA4BC;QAClE,MAAMxC,SAAS,MAAMf,gBAAgBwD,OAAO,CAAC;YAC3C3D,WAAWiB,CAAAA,OAAS,CAAA;oBAAE,GAAGA,IAAI;oBAAET,QAAQ;gBAAK,CAAA;YAE5C,wBAAwB;YACxB,MAAM,IAAIY,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;YAEjDoC;YAEAzD,WAAWiB,CAAAA,OAAS,CAAA;oBAAE,GAAGA,IAAI;oBAAET,QAAQ;gBAAM,CAAA;YAC7C,OAAO,GAAGkD,SAAS,uBAAuB,CAAC;QAC7C,GAAG,CAAC,OAAO,EAAEA,UAAU;QAEvB,IAAIxC,OAAOrB,KAAK,EAAE;YAChBC,SAASoB,OAAOrB,KAAK;YACrBG,WAAWiB,CAAAA,OAAS,CAAA;oBAAE,GAAGA,IAAI;oBAAET,QAAQ;gBAAM,CAAA;QAC/C;IACF,GAAG;QAACL;QAAiBL;KAAS;IAE9B,kCAAkC;IAClC,MAAM8D,iBAAiBL,IAAAA,kBAAW,EAAC;QACjCxD;QACA8D,OAAOC,QAAQ,CAACC,MAAM;IACxB,GAAG;QAAChE;KAAW;IAEf,mCAAmC;IACnC,MAAM4B,aAAaD,IAAAA,cAAO,EAAC;QACzB,OAAOlC,QAAQoC,MAAM,CAAC,CAACC,KAAKC;YAC1B,MAAMC,QAAQ,OAAOD,OAAOC,KAAK,KAAK,WAAWC,OAAOC,QAAQ,CAAC,AAACH,OAAOC,KAAK,CAAYG,OAAO,CAAC,WAAW,OAAOJ,OAAOC,KAAK;YAChI,OAAOF,MAAME;QACf,GAAG;IACL,GAAG;QAACvC;KAAQ;IAEZ,wCAAwC;IACxC,MAAMwE,aAAatC,IAAAA,cAAO,EAAC;QACzB,OAAO/B,YAAYsE,GAAG,CAAC,CAACvB;YACtB,MAAMwB,eAAe1E,QAAQ6C,MAAM,CAAC,CAACP,SAAWA,OAAOY,KAAK,KAAKA,MAAMyB,EAAE;YACzE,MAAMC,aAAaF,aAAatC,MAAM,CAAC,CAACC,KAAKC;gBAC3C,MAAMC,QAAQ,OAAOD,OAAOC,KAAK,KAAK,WAAWC,OAAOC,QAAQ,CAAC,AAACH,OAAOC,KAAK,CAAYG,OAAO,CAAC,WAAW,OAAOJ,OAAOC,KAAK;gBAChI,OAAOF,MAAME;YACf,GAAG;YAEH,OAAO;gBACLW,OAAOA,MAAM2B,IAAI;gBACjB7E,SAAS0E,aAAa1B,MAAM;gBAC5BT,OAAOqC;gBACPE,YAAY3C,aAAa,IAAI,AAAC,CAAA,AAACyC,aAAazC,aAAc,GAAE,EAAG4C,OAAO,CAAC,KAAK;YAC9E;QACF;IACF,GAAG;QAAC5E;QAAaH;QAASmC;KAAW;IAErC,uCAAuC;IACvC,MAAM6C,YAAY9C,IAAAA,cAAO,EAAC;QACxB,MAAM+C,eAAehF,MAAM4C,MAAM,CAAC,CAACO,IAAMA,EAAEL,MAAM,KAAK,WAAWC,MAAM;QACvE,MAAMkC,kBAAkBjF,MAAM4C,MAAM,CAAC,CAACO,IAAMA,EAAEL,MAAM,KAAK,eAAeC,MAAM;QAC9E,MAAMmC,iBAAiBlF,MAAM4C,MAAM,CAAC,CAACO,IAAMA,EAAEL,MAAM,KAAK,aAAaC,MAAM;QAC3E,MAAMoC,iBAAiBnF,MAAM+C,MAAM,GAAG,IAAI,AAAC,CAAA,AAACmC,iBAAiBlF,MAAM+C,MAAM,GAAI,GAAE,EAAG+B,OAAO,CAAC,KAAK;QAE/F,OAAO;YACLM,SAASJ;YACTK,YAAYJ;YACZK,WAAWJ;YACXC;QACF;IACF,GAAG;QAACnF;KAAM;IAEV,wCAAwC;IACxC,MAAMuF,aAAatD,IAAAA,cAAO,EAAC;QACzB,MAAMuD,WAAWvF,OAAO2C,MAAM,CAAC,CAACS,IAAMA,EAAEoC,IAAI,KAAK,WAAW1C,MAAM;QAClE,MAAM2C,QAAQzF,OAAO2C,MAAM,CAAC,CAACS,IAAMA,EAAEoC,IAAI,KAAK,QAAQ1C,MAAM;QAC5D,MAAM4C,YAAY1F,OAAO2C,MAAM,CAAC,CAACS,IAAMA,EAAEoC,IAAI,KAAK,YAAY1C,MAAM;QACpE,MAAM6C,WAAW3F,OAAO2C,MAAM,CAAC,CAACS,IAAMA,EAAEoC,IAAI,KAAK,YAAY1C,MAAM;QAEnE,MAAMY,iBAAiB1D,OACpB2C,MAAM,CAAC,CAACS,IAAM,IAAIhC,KAAKgC,EAAEC,IAAI,KAAK,IAAIjC,QACtCwE,IAAI,CAAC,CAACC,GAAGC,IAAM,IAAI1E,KAAKyE,EAAExC,IAAI,EAAE0C,OAAO,KAAK,IAAI3E,KAAK0E,EAAEzC,IAAI,EAAE0C,OAAO,IACpEC,KAAK,CAAC,GAAG;QAEZ,OAAO;YACLT;YACAE;YACAC;YACAC;YACAjC;QACF;IACF,GAAG;QAAC1D;KAAO;IAEX,uCAAuC;IACvC,MAAMiG,iBAAiBjE,IAAAA,cAAO,EAAC;QAC7B,OAAOlC,QACJoG,OAAO,CAAC,CAAC9D,SACRA,OAAO+D,KAAK,CAAC5B,GAAG,CAAC,CAAC6B,OAAU,CAAA;oBAC1B,GAAGA,IAAI;oBACPC,YAAYjE,OAAOuC,IAAI;gBACzB,CAAA,IAEDiB,IAAI,CAAC,CAACC,GAAGC,IAAM,IAAI1E,KAAK0E,EAAEzC,IAAI,EAAE0C,OAAO,KAAK,IAAI3E,KAAKyE,EAAExC,IAAI,EAAE0C,OAAO,IACpEC,KAAK,CAAC,GAAG;IACd,GAAG;QAAClG;KAAQ;IAEZ,gBAAgB;IAChB,IAAIa,QAAQE,OAAO,EAAE;QACnB,qBACE,qBAACyF;YAAIC,WAAU;sBACb,cAAA,sBAACD;gBAAIC,WAAU;;kCACb,qBAACC,oBAAO;wBAACC,MAAM;wBAAIF,WAAU;;kCAC7B,qBAACG;wBAAGH,WAAU;kCAAyC;;kCACvD,qBAACI;wBAAEJ,WAAU;kCAAgB;;;;;IAIrC;IAEA,qBACE,sBAACD;QAAIC,WAAU;;0BACb,sBAACD;gBAAIC,WAAU;;kCACb,sBAACD;;0CACC,qBAACM;gCAAGL,WAAU;0CAAmC;;0CACjD,sBAACI;gCAAEJ,WAAU;;oCAAqB;oCACjBrF,YAAY2F,cAAc;;;;;kCAG7C,sBAACC;wBACCC,SAASnD;wBACToD,UAAUrG,QAAQI,OAAO;wBACzBwF,WAAU;;4BAET5F,QAAQI,OAAO,iBACd,qBAACyF,oBAAO;gCAACC,MAAM;gCAAIF,WAAU;+CAE7B,qBAACU,sBAAS;gCAACR,MAAM;;4BAElB9F,QAAQI,OAAO,GAAG,kBAAkB;;;;;0BAIzC,sBAACuF;gBAAIC,WAAU;;kCACb,sBAACD;wBAAIC,WAAU;;0CACb,sBAACD;gCAAIC,WAAU;;kDACb,qBAACG;wCAAGH,WAAU;kDAAwB;;kDACtC,sBAACO;wCACCC,SAAS,IAAMjD,aAAa,IAAMoD,IAAAA,8BAAkB,EAACpH,UAAU;wCAC/DkH,UAAUrG,QAAQG,MAAM;wCACxByF,WAAU;wCACVY,cAAW;;4CAEVxG,QAAQG,MAAM,iBACb,qBAAC0F,oBAAO;gDAACC,MAAM;gDAAIF,WAAU;+DAE7B,qBAACa,qBAAQ;gDAACX,MAAM;;4CAEjB9F,QAAQG,MAAM,GAAG,iBAAiB;;;;;0CAGvC,qBAACwF;gCAAIC,WAAU;0CACZjC,WAAWC,GAAG,CAAC,CAAC8C,MAAMC,oBACrB,sBAAChB;;0DACC,sBAACA;gDAAIC,WAAU;;kEACb,qBAACgB;kEAAMF,KAAKrE,KAAK;;kEACjB,sBAACuE;;4DACEF,KAAKvH,OAAO;4DAAC;4DAAauH,KAAKhF,KAAK,CAACwE,cAAc;4DAAG;4DAAGQ,KAAKzC,UAAU;4DAAC;;;;;0DAG9E,qBAAC0B;gDAAIC,WAAU;0DACb,cAAA,qBAACD;oDAAIC,WAAU;oDAA+BiB,OAAO;wDAAEC,OAAO,GAAGJ,KAAKzC,UAAU,CAAC,CAAC,CAAC;oDAAC;;;;uCAR9E0C;;;;kCAehB,sBAAChB;wBAAIC,WAAU;;0CACb,qBAACG;gCAAGH,WAAU;0CAA6B;;0CAC3C,sBAACD;gCAAIC,WAAU;;kDACb,sBAACD;wCAAIC,WAAU;;0DACb,qBAACgB;gDAAKhB,WAAU;0DAAgB;;0DAChC,sBAACD;gDAAIC,WAAU;;kEACb,sBAACgB;wDAAKhB,WAAU;;4DAAc;4DAAEvF,SAASiB,WAAW4E,oBAAoB;;;kEACxE,qBAACa,uBAAU;wDAACjB,MAAM;wDAAIF,WAAU;;;;;;kDAGpC,sBAACD;wCAAIC,WAAU;;0DACb,qBAACgB;gDAAKhB,WAAU;0DAAgB;;0DAChC,sBAACD;gDAAIC,WAAU;;kEACb,sBAACgB;wDAAKhB,WAAU;;4DAAc;4DAAEvF,SAASsC,gBAAgBuD,oBAAoB;;;kEAC7E,qBAACa,uBAAU;wDAACjB,MAAM;wDAAIF,WAAU;;;;;;kDAGpC,sBAACD;wCAAIC,WAAU;;0DACb,qBAACgB;gDAAKhB,WAAU;0DAAgB;;0DAChC,qBAACgB;gDAAKhB,WAAU;0DAAevF,SAASuC,iBAAiB;;;;kDAE3D,sBAAC+C;wCAAIC,WAAU;;0DACb,qBAACgB;gDAAKhB,WAAU;0DAAgB;;0DAChC,sBAACD;gDAAIC,WAAU;;kEACb,sBAACgB;wDAAKhB,WAAU;;4DAAevF,SAASwC,cAAcqB,QAAQ,MAAM;4DAAI;;;oDACtE7D,CAAAA,SAASwC,iBAAiB,CAAA,IAAK,mBAC/B,qBAACkE,uBAAU;wDAACjB,MAAM;wDAAIF,WAAU;uEAEhC,qBAACoB,yBAAY;wDAAClB,MAAM;wDAAIF,WAAU;;;;;;;;;;;;0BAQ9C,sBAACD;gBAAIC,WAAU;;kCACb,sBAACD;wBAAIC,WAAU;;0CACb,sBAACD;gCAAIC,WAAU;;kDACb,qBAACG;wCAAGH,WAAU;kDAAwB;;kDACtC,sBAACO;wCACCC,SAAS,IAAMjD,aAAa,IAAM8D,IAAAA,4BAAgB,EAAC7H,QAAQ;wCAC3DiH,UAAUrG,QAAQG,MAAM;wCACxByF,WAAU;wCACVY,cAAW;;4CAEVxG,QAAQG,MAAM,iBACb,qBAAC0F,oBAAO;gDAACC,MAAM;gDAAIF,WAAU;+DAE7B,qBAACa,qBAAQ;gDAACX,MAAM;;4CAEjB9F,QAAQG,MAAM,GAAG,iBAAiB;;;;;0CAGvC,sBAACwF;gCAAIC,WAAU;;kDACb,sBAACD;wCAAIC,WAAU;;0DACb,sBAACD;gDAAIC,WAAU;;kEACb,qBAACD;wDAAIC,WAAU;kEACZzB,UAAUK,OAAO;;kEAEpB,qBAACmB;wDAAIC,WAAU;kEAAwB;;;;0DAEzC,sBAACD;gDAAIC,WAAU;;kEACb,qBAACD;wDAAIC,WAAU;kEACZzB,UAAUM,UAAU;;kEAEvB,qBAACkB;wDAAIC,WAAU;kEAA0B;;;;0DAE3C,sBAACD;gDAAIC,WAAU;;kEACb,qBAACD;wDAAIC,WAAU;kEACZzB,UAAUO,SAAS;;kEAEtB,qBAACiB;wDAAIC,WAAU;kEAAyB;;;;;;kDAG5C,sBAACD;;0DACC,sBAACA;gDAAIC,WAAU;;kEACb,qBAACgB;kEAAK;;kEACN,sBAACA;;4DACEzC,UAAUI,cAAc;4DAAC;;;;;0DAG9B,qBAACoB;gDAAIC,WAAU;0DACb,cAAA,qBAACD;oDACCC,WAAU;oDACViB,OAAO;wDACLC,OAAO,GAAG3C,UAAUI,cAAc,CAAC,CAAC,CAAC;oDACvC;;;;;;;;;kCAOV,sBAACoB;wBAAIC,WAAU;;0CACb,sBAACD;gCAAIC,WAAU;;kDACb,qBAACG;wCAAGH,WAAU;kDAAwB;;kDACtC,sBAACO;wCACCC,SAAS,IAAMjD,aAAa,IAAM+D,IAAAA,6BAAiB,EAAC7H,SAAS;wCAC7DgH,UAAUrG,QAAQG,MAAM;wCACxByF,WAAU;wCACVY,cAAW;;4CAEVxG,QAAQG,MAAM,iBACb,qBAAC0F,oBAAO;gDAACC,MAAM;gDAAIF,WAAU;+DAE7B,qBAACa,qBAAQ;gDAACX,MAAM;;4CAEjB9F,QAAQG,MAAM,GAAG,iBAAiB;;;;;0CAGvC,sBAACwF;gCAAIC,WAAU;;kDACb,sBAACD;wCAAIC,WAAU;;0DACb,sBAACD;gDAAIC,WAAU;;kEACb,qBAACD;wDAAIC,WAAU;kEACZjB,WAAWC,QAAQ;;kEAEtB,qBAACe;wDAAIC,WAAU;kEAAwB;;;;0DAEzC,sBAACD;gDAAIC,WAAU;;kEACb,qBAACD;wDAAIC,WAAU;kEAAoCjB,WAAWG,KAAK;;kEACnE,qBAACa;wDAAIC,WAAU;kEAAyB;;;;0DAE1C,sBAACD;gDAAIC,WAAU;;kEACb,qBAACD;wDAAIC,WAAU;kEACZjB,WAAWI,SAAS;;kEAEvB,qBAACY;wDAAIC,WAAU;kEAAuB;;;;0DAExC,sBAACD;gDAAIC,WAAU;;kEACb,qBAACD;wDAAIC,WAAU;kEACZjB,WAAWK,QAAQ;;kEAEtB,qBAACW;wDAAIC,WAAU;kEAAwB;;;;;;kDAG3C,sBAACD;;0DACC,qBAACA;gDAAIC,WAAU;0DAA2B;;0DAC1C,qBAACD;gDAAIC,WAAU;0DACZjB,WAAW5B,cAAc,CAACa,GAAG,CAAC,CAACuD,OAAOR,oBACrC,sBAAChB;wDAAcC,WAAU;;0EACvB,qBAACD;gEAAIC,WAAU;0EACb,cAAA,qBAACgB;oEAAKhB,WAAU;8EAAeuB,MAAMC,KAAK;;;0EAE5C,qBAACR;gEAAKhB,WAAU;0EAAiBuB,MAAMzE,IAAI;;;uDAJnCiE;;;;;;;;;;0BAatB,sBAAChB;gBAAIC,WAAU;;kCACb,qBAACG;wBAAGH,WAAU;kCAA6B;;kCAC3C,qBAACD;wBAAIC,WAAU;kCACZN,eAAe1B,GAAG,CAAC,CAAC6B,MAAMkB,oBACzB,sBAAChB;gCAAcC,WAAU;;kDACvB,sBAACD;wCAAIC,WAAU;;4CACZH,KAAKZ,IAAI,KAAK,wBAAU,qBAACwC,kBAAK;gDAACvB,MAAM;gDAAIF,WAAU;;4CACnDH,KAAKZ,IAAI,KAAK,yBAAW,qBAACyC,iBAAI;gDAACxB,MAAM;gDAAIF,WAAU;;4CACnDH,KAAKZ,IAAI,KAAK,2BAAa,qBAAC0C,qBAAQ;gDAACzB,MAAM;gDAAIF,WAAU;;0DAC1D,sBAACD;;kEACC,qBAACiB;wDAAKhB,WAAU;kEAAeH,KAAKC,UAAU;;kEAC9C,qBAACkB;wDAAKhB,WAAU;kEAAsBH,KAAK+B,OAAO;;;;;;kDAGtD,qBAACZ;wCAAKhB,WAAU;kDAAiBH,KAAK/C,IAAI;;;+BAVlCiE;;;;YAiBfpH,YAAYC,uBACX,qBAACmG;gBAAIC,WAAU;0BACb,cAAA,qBAAC6B,2CAAoB;oBACnBjI,OAAOA;oBACPkI,OAAOhI;;;;;AAMnB;MAEA,WAAeV"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "45ea2e1cd516ef4ce5d99d4212b136f61e55c278"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bb6qyxdr9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bb6qyxdr9();
cov_bb6qyxdr9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_bb6qyxdr9().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[0]++;
    cov_bb6qyxdr9().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_bb6qyxdr9().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_bb6qyxdr9().s[4]++, _interop_require_wildcard(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_bb6qyxdr9().s[5]++, require("lucide-react"));
const _AppContext =
/* istanbul ignore next */
(cov_bb6qyxdr9().s[6]++, require("../context/AppContext"));
const _exportData =
/* istanbul ignore next */
(cov_bb6qyxdr9().s[7]++, require("../utils/exportData"));
const _standardErrorHandling =
/* istanbul ignore next */
(cov_bb6qyxdr9().s[8]++, require("../utils/standardErrorHandling"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_bb6qyxdr9().f[1]++;
  cov_bb6qyxdr9().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_bb6qyxdr9().b[0][0]++;
    cov_bb6qyxdr9().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_bb6qyxdr9().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[2]++;
    cov_bb6qyxdr9().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_bb6qyxdr9().f[3]++;
  cov_bb6qyxdr9().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_bb6qyxdr9().b[2][0]++;
    cov_bb6qyxdr9().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_bb6qyxdr9().b[2][1]++;
  }
  cov_bb6qyxdr9().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_bb6qyxdr9().b[4][0]++;
    cov_bb6qyxdr9().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_bb6qyxdr9().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_bb6qyxdr9().b[6][0]++;
    cov_bb6qyxdr9().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_bb6qyxdr9().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[23]++,
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_bb6qyxdr9().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_bb6qyxdr9().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_bb6qyxdr9().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_bb6qyxdr9().b[11][1]++, null));
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_bb6qyxdr9().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_bb6qyxdr9().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_bb6qyxdr9().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_bb6qyxdr9().b[12][0]++;
        cov_bb6qyxdr9().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_bb6qyxdr9().b[12][1]++;
        cov_bb6qyxdr9().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_bb6qyxdr9().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_bb6qyxdr9().b[14][0]++;
    cov_bb6qyxdr9().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_bb6qyxdr9().b[14][1]++;
  }
  cov_bb6qyxdr9().s[33]++;
  return newObj;
}
/* istanbul ignore next */
cov_bb6qyxdr9().s[34]++;
const Reports = () => {
  /* istanbul ignore next */
  cov_bb6qyxdr9().f[4]++;
  const {
    state
  } =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[35]++, (0, _AppContext.useAppContext)());
  const {
    clients,
    tasks,
    events,
    salesStages
  } =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[36]++, state);
  const {
    hasError,
    error,
    setError,
    clearError,
    setLoading: setErrorLoading
  } =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[37]++, (0, _standardErrorHandling.useErrorState)());
  const exportOperation =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[38]++, (0, _standardErrorHandling.useAsyncOperation)());
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[39]++, (0, _react.useState)({
    reports: true,
    export: false,
    refresh: false
  }));
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[40]++, (0, _react.useState)(null));
  const [lastUpdated, setLastUpdated] =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[41]++, (0, _react.useState)(new Date()));
  // Initialize reports
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[42]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[5]++;
    cov_bb6qyxdr9().s[43]++;
    const initializeReports = async () => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[6]++;
      cov_bb6qyxdr9().s[44]++;
      setLoading(prev => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[7]++;
        cov_bb6qyxdr9().s[45]++;
        return {
          ...prev,
          reports: true
        };
      });
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[46]++;
      clearError();
      const result =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[47]++, await (0, _standardErrorHandling.handleAsyncOperation)(async () => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[8]++;
        cov_bb6qyxdr9().s[48]++;
        // Simulate API call delay
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_bb6qyxdr9().f[9]++;
          cov_bb6qyxdr9().s[49]++;
          return setTimeout(resolve, 1500);
        });
        // Set calculated metrics
        /* istanbul ignore next */
        cov_bb6qyxdr9().s[50]++;
        setMetrics(calculatedMetrics);
        /* istanbul ignore next */
        cov_bb6qyxdr9().s[51]++;
        setLastUpdated(new Date());
        /* istanbul ignore next */
        cov_bb6qyxdr9().s[52]++;
        return calculatedMetrics;
      }, 'Initialize Reports'));
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[53]++;
      if (result.error) {
        /* istanbul ignore next */
        cov_bb6qyxdr9().b[15][0]++;
        cov_bb6qyxdr9().s[54]++;
        setError(result.error);
      } else
      /* istanbul ignore next */
      {
        cov_bb6qyxdr9().b[15][1]++;
      }
      cov_bb6qyxdr9().s[55]++;
      setLoading(prev => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[10]++;
        cov_bb6qyxdr9().s[56]++;
        return {
          ...prev,
          reports: false
        };
      });
    };
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[57]++;
    initializeReports();
  }, [clients, tasks, events, salesStages, clearError, setError]);
  // Clear error after 5 seconds
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[58]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[11]++;
    cov_bb6qyxdr9().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[17][0]++, hasError) &&
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[17][1]++, error)) {
      /* istanbul ignore next */
      cov_bb6qyxdr9().b[16][0]++;
      const timer =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[60]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[12]++;
        cov_bb6qyxdr9().s[61]++;
        return clearError();
      }, 5000));
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[62]++;
      return () => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[13]++;
        cov_bb6qyxdr9().s[63]++;
        return clearTimeout(timer);
      };
    } else
    /* istanbul ignore next */
    {
      cov_bb6qyxdr9().b[16][1]++;
    }
  }, [hasError, error, clearError]);
  // Memoized metrics calculation for better performance
  const calculatedMetrics =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[64]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[14]++;
    const result =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[65]++, (0, _standardErrorHandling.handleAsyncOperation)(async () => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[15]++;
      const totalValue =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[66]++, clients.reduce((sum, client) => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[16]++;
        const value =
        /* istanbul ignore next */
        (cov_bb6qyxdr9().s[67]++, typeof client.value === 'string' ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[18][0]++, Number.parseInt(client.value.replace(/[^0-9]/g, ""))) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[18][1]++, client.value));
        /* istanbul ignore next */
        cov_bb6qyxdr9().s[68]++;
        return sum + (isNaN(value) ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[19][0]++, 0) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[19][1]++, value));
      }, 0));
      const activeClientsCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[69]++, clients.filter(c => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[17]++;
        cov_bb6qyxdr9().s[70]++;
        return c.status === "active";
      }).length);
      const closedWonCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[71]++, clients.filter(c => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[18]++;
        cov_bb6qyxdr9().s[72]++;
        return c.stage === "closed-won";
      }).length);
      const completedTasksCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[73]++, tasks.filter(t => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[19]++;
        cov_bb6qyxdr9().s[74]++;
        return t.status === "completed";
      }).length);
      const upcomingEventsCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[75]++, events.filter(e => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[20]++;
        cov_bb6qyxdr9().s[76]++;
        return new Date(e.date) >= new Date();
      }).length);
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[77]++;
      return {
        totalValue,
        averageDealSize: clients.length > 0 ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[20][0]++, totalValue / clients.length) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[20][1]++, 0),
        activeClients: activeClientsCount,
        closedWonRate: clients.length > 0 ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[21][0]++, closedWonCount / clients.length * 100) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[21][1]++, 0),
        taskCompletionRate: tasks.length > 0 ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[22][0]++, completedTasksCount / tasks.length * 100) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[22][1]++, 0),
        upcomingEvents: upcomingEventsCount
      };
    }, 'Calculate Metrics'));
    // For synchronous calculation, we'll handle it differently
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[78]++;
    try {
      const totalValue =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[79]++, clients.reduce((sum, client) => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[21]++;
        const value =
        /* istanbul ignore next */
        (cov_bb6qyxdr9().s[80]++, typeof client.value === 'string' ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[23][0]++, Number.parseInt(client.value.replace(/[^0-9]/g, ""))) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[23][1]++, client.value));
        /* istanbul ignore next */
        cov_bb6qyxdr9().s[81]++;
        return sum + (isNaN(value) ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[24][0]++, 0) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[24][1]++, value));
      }, 0));
      const activeClientsCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[82]++, clients.filter(c => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[22]++;
        cov_bb6qyxdr9().s[83]++;
        return c.status === "active";
      }).length);
      const closedWonCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[84]++, clients.filter(c => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[23]++;
        cov_bb6qyxdr9().s[85]++;
        return c.stage === "closed-won";
      }).length);
      const completedTasksCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[86]++, tasks.filter(t => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[24]++;
        cov_bb6qyxdr9().s[87]++;
        return t.status === "completed";
      }).length);
      const upcomingEventsCount =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[88]++, events.filter(e => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[25]++;
        cov_bb6qyxdr9().s[89]++;
        return new Date(e.date) >= new Date();
      }).length);
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[90]++;
      return {
        totalValue,
        averageDealSize: clients.length > 0 ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[25][0]++, totalValue / clients.length) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[25][1]++, 0),
        activeClients: activeClientsCount,
        closedWonRate: clients.length > 0 ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[26][0]++, closedWonCount / clients.length * 100) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[26][1]++, 0),
        taskCompletionRate: tasks.length > 0 ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[27][0]++, completedTasksCount / tasks.length * 100) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[27][1]++, 0),
        upcomingEvents: upcomingEventsCount
      };
    } catch (err) {
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[91]++;
      setError('Error calculating metrics');
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[92]++;
      return {
        totalValue: 0,
        averageDealSize: 0,
        activeClients: 0,
        closedWonRate: 0,
        taskCompletionRate: 0,
        upcomingEvents: 0
      };
    }
  }, [clients, tasks, events, setError]));
  // Refresh reports with useCallback for performance
  const refreshReports =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[93]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[26]++;
    cov_bb6qyxdr9().s[94]++;
    setLoading(prev => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[27]++;
      cov_bb6qyxdr9().s[95]++;
      return {
        ...prev,
        refresh: true
      };
    });
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[96]++;
    clearError();
    const result =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[97]++, await (0, _standardErrorHandling.handleAsyncOperation)(async () => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[28]++;
      cov_bb6qyxdr9().s[98]++;
      // Simulate API refresh
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[29]++;
        cov_bb6qyxdr9().s[99]++;
        return setTimeout(resolve, 1000);
      });
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[100]++;
      setMetrics(calculatedMetrics);
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[101]++;
      setLastUpdated(new Date());
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[102]++;
      return 'Reports refreshed successfully!';
    }, 'Refresh Reports'));
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[103]++;
    if (result.error) {
      /* istanbul ignore next */
      cov_bb6qyxdr9().b[28][0]++;
      cov_bb6qyxdr9().s[104]++;
      setError(result.error);
    } else
    /* istanbul ignore next */
    {
      cov_bb6qyxdr9().b[28][1]++;
    }
    cov_bb6qyxdr9().s[105]++;
    setLoading(prev => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[30]++;
      cov_bb6qyxdr9().s[106]++;
      return {
        ...prev,
        refresh: false
      };
    });
  }, [calculatedMetrics, clearError, setError]));
  // Enhanced export function with error handling and useCallback
  const handleExport =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[107]++, (0, _react.useCallback)(async (exportFunction, dataType) => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[31]++;
    const result =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[108]++, await exportOperation.execute(async () => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[32]++;
      cov_bb6qyxdr9().s[109]++;
      setLoading(prev => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[33]++;
        cov_bb6qyxdr9().s[110]++;
        return {
          ...prev,
          export: true
        };
      });
      // Simulate export delay
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[111]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[34]++;
        cov_bb6qyxdr9().s[112]++;
        return setTimeout(resolve, 500);
      });
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[113]++;
      exportFunction();
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[114]++;
      setLoading(prev => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[35]++;
        cov_bb6qyxdr9().s[115]++;
        return {
          ...prev,
          export: false
        };
      });
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[116]++;
      return `${dataType} exported successfully!`;
    }, `Export ${dataType}`));
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[117]++;
    if (result.error) {
      /* istanbul ignore next */
      cov_bb6qyxdr9().b[29][0]++;
      cov_bb6qyxdr9().s[118]++;
      setError(result.error);
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[119]++;
      setLoading(prev => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[36]++;
        cov_bb6qyxdr9().s[120]++;
        return {
          ...prev,
          export: false
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_bb6qyxdr9().b[29][1]++;
    }
  }, [exportOperation, setError]));
  // Retry function with useCallback
  const retryOperation =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[121]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[37]++;
    cov_bb6qyxdr9().s[122]++;
    clearError();
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[123]++;
    window.location.reload();
  }, [clearError]));
  // Memoized total value calculation
  const totalValue =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[124]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[38]++;
    cov_bb6qyxdr9().s[125]++;
    return clients.reduce((sum, client) => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[39]++;
      const value =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[126]++, typeof client.value === 'string' ?
      /* istanbul ignore next */
      (cov_bb6qyxdr9().b[30][0]++, Number.parseInt(client.value.replace(/[^0-9]/g, ""))) :
      /* istanbul ignore next */
      (cov_bb6qyxdr9().b[30][1]++, client.value));
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[127]++;
      return sum + value;
    }, 0);
  }, [clients]));
  // Memoized stage statistics calculation
  const stageStats =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[128]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[40]++;
    cov_bb6qyxdr9().s[129]++;
    return salesStages.map(stage => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[41]++;
      const stageClients =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[130]++, clients.filter(client => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[42]++;
        cov_bb6qyxdr9().s[131]++;
        return client.stage === stage.id;
      }));
      const stageValue =
      /* istanbul ignore next */
      (cov_bb6qyxdr9().s[132]++, stageClients.reduce((sum, client) => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[43]++;
        const value =
        /* istanbul ignore next */
        (cov_bb6qyxdr9().s[133]++, typeof client.value === 'string' ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[31][0]++, Number.parseInt(client.value.replace(/[^0-9]/g, ""))) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[31][1]++, client.value));
        /* istanbul ignore next */
        cov_bb6qyxdr9().s[134]++;
        return sum + value;
      }, 0));
      /* istanbul ignore next */
      cov_bb6qyxdr9().s[135]++;
      return {
        stage: stage.name,
        clients: stageClients.length,
        value: stageValue,
        percentage: totalValue > 0 ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[32][0]++, (stageValue / totalValue * 100).toFixed(1)) :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[32][1]++, 0)
      };
    });
  }, [salesStages, clients, totalValue]));
  // Memoized task statistics calculation
  const taskStats =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[136]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[44]++;
    const pendingTasks =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[137]++, tasks.filter(t => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[45]++;
      cov_bb6qyxdr9().s[138]++;
      return t.status === "pending";
    }).length);
    const inProgressTasks =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[139]++, tasks.filter(t => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[46]++;
      cov_bb6qyxdr9().s[140]++;
      return t.status === "in-progress";
    }).length);
    const completedTasks =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[141]++, tasks.filter(t => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[47]++;
      cov_bb6qyxdr9().s[142]++;
      return t.status === "completed";
    }).length);
    const completionRate =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[143]++, tasks.length > 0 ?
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[33][0]++, (completedTasks / tasks.length * 100).toFixed(1)) :
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[33][1]++, '0'));
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[144]++;
    return {
      pending: pendingTasks,
      inProgress: inProgressTasks,
      completed: completedTasks,
      completionRate
    };
  }, [tasks]));
  // Memoized event statistics calculation
  const eventStats =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[145]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[48]++;
    const meetings =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[146]++, events.filter(e => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[49]++;
      cov_bb6qyxdr9().s[147]++;
      return e.type === "meeting";
    }).length);
    const calls =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[148]++, events.filter(e => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[50]++;
      cov_bb6qyxdr9().s[149]++;
      return e.type === "call";
    }).length);
    const deadlines =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[150]++, events.filter(e => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[51]++;
      cov_bb6qyxdr9().s[151]++;
      return e.type === "deadline";
    }).length);
    const internal =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[152]++, events.filter(e => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[52]++;
      cov_bb6qyxdr9().s[153]++;
      return e.type === "internal";
    }).length);
    const upcomingEvents =
    /* istanbul ignore next */
    (cov_bb6qyxdr9().s[154]++, events.filter(e => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[53]++;
      cov_bb6qyxdr9().s[155]++;
      return new Date(e.date) >= new Date();
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[54]++;
      cov_bb6qyxdr9().s[156]++;
      return new Date(a.date).getTime() - new Date(b.date).getTime();
    }).slice(0, 3));
    /* istanbul ignore next */
    cov_bb6qyxdr9().s[157]++;
    return {
      meetings,
      calls,
      deadlines,
      internal,
      upcomingEvents
    };
  }, [events]));
  // Memoized recent activity calculation
  const recentActivity =
  /* istanbul ignore next */
  (cov_bb6qyxdr9().s[158]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_bb6qyxdr9().f[55]++;
    cov_bb6qyxdr9().s[159]++;
    return clients.flatMap(client => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[56]++;
      cov_bb6qyxdr9().s[160]++;
      return client.notes.map(note => {
        /* istanbul ignore next */
        cov_bb6qyxdr9().f[57]++;
        cov_bb6qyxdr9().s[161]++;
        return {
          ...note,
          clientName: client.name
        };
      });
    }).sort((a, b) => {
      /* istanbul ignore next */
      cov_bb6qyxdr9().f[58]++;
      cov_bb6qyxdr9().s[162]++;
      return new Date(b.date).getTime() - new Date(a.date).getTime();
    }).slice(0, 10);
  }, [clients]));
  // Loading state
  /* istanbul ignore next */
  cov_bb6qyxdr9().s[163]++;
  if (loading.reports) {
    /* istanbul ignore next */
    cov_bb6qyxdr9().b[34][0]++;
    cov_bb6qyxdr9().s[164]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-8",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col items-center justify-center h-96",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
          size: 48,
          className: "text-blue-600 mb-4 animate-spin"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-medium text-gray-900 mb-2",
          children: "Loading Reports"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-gray-500",
          children: "Please wait while we generate your analytics..."
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_bb6qyxdr9().b[34][1]++;
  }
  cov_bb6qyxdr9().s[165]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-8",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-2xl font-bold text-gray-900",
          children: "Reports & Analytics"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          className: "text-gray-500 mt-1",
          children: ["Last updated: ", lastUpdated.toLocaleString()]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
        onClick: refreshReports,
        disabled: loading.refresh,
        className: "flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed",
        children: [loading.refresh ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_bb6qyxdr9().b[35][0]++, (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
          size: 16,
          className: "animate-spin"
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_bb6qyxdr9().b[35][1]++, (0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
          size: 16
        })), loading.refresh ?
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[36][0]++, 'Refreshing...') :
        /* istanbul ignore next */
        (cov_bb6qyxdr9().b[36][1]++, 'Refresh')]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 gap-6 mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white p-6 rounded-lg shadow",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between items-center mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-lg font-semibold",
            children: "Pipeline by Stage"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_bb6qyxdr9().f[59]++;
              cov_bb6qyxdr9().s[166]++;
              return handleExport(() => {
                /* istanbul ignore next */
                cov_bb6qyxdr9().f[60]++;
                cov_bb6qyxdr9().s[167]++;
                return (0, _exportData.exportClientsToCSV)(clients);
              }, 'Clients');
            },
            disabled: loading.export,
            className: "flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800 disabled:opacity-50 disabled:cursor-not-allowed",
            "aria-label": "Export clients data to CSV",
            children: [loading.export ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_bb6qyxdr9().b[37][0]++, (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              size: 14,
              className: "animate-spin"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_bb6qyxdr9().b[37][1]++, (0, _jsxruntime.jsx)(_lucidereact.Download, {
              size: 14
            })), loading.export ?
            /* istanbul ignore next */
            (cov_bb6qyxdr9().b[38][0]++, 'Exporting...') :
            /* istanbul ignore next */
            (cov_bb6qyxdr9().b[38][1]++, 'Export')]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: stageStats.map((stat, idx) => {
            /* istanbul ignore next */
            cov_bb6qyxdr9().f[61]++;
            cov_bb6qyxdr9().s[168]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex justify-between text-sm mb-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  children: stat.stage
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: [stat.clients, " clients - $", stat.value.toLocaleString(), " (", stat.percentage, "%)"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "w-full bg-gray-200 rounded-full h-2",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "bg-blue-600 h-2 rounded-full",
                  style: {
                    width: `${stat.percentage}%`
                  }
                })
              })]
            }, idx);
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white p-6 rounded-lg shadow",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-semibold mb-4",
          children: "Quick Stats"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-between items-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-gray-600",
              children: "Total Pipeline Value"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "font-medium",
                children: ["$",
                /* istanbul ignore next */
                (cov_bb6qyxdr9().b[39][0]++, metrics?.totalValue.toLocaleString()) ||
                /* istanbul ignore next */
                (cov_bb6qyxdr9().b[39][1]++, '0')]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
                size: 16,
                className: "text-green-500"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-between items-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-gray-600",
              children: "Average Deal Size"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "font-medium",
                children: ["$",
                /* istanbul ignore next */
                (cov_bb6qyxdr9().b[40][0]++, metrics?.averageDealSize.toLocaleString()) ||
                /* istanbul ignore next */
                (cov_bb6qyxdr9().b[40][1]++, '0')]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
                size: 16,
                className: "text-green-500"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-gray-600",
              children: "Active Clients"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "font-medium",
              children:
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[41][0]++, metrics?.activeClients) ||
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[41][1]++, 0)
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-between items-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-gray-600",
              children: "Closed Won Rate"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "font-medium",
                children: [
                /* istanbul ignore next */
                (cov_bb6qyxdr9().b[42][0]++, metrics?.closedWonRate.toFixed(1)) ||
                /* istanbul ignore next */
                (cov_bb6qyxdr9().b[42][1]++, '0'), "%"]
              }), (
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[44][0]++, metrics?.closedWonRate) ||
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[44][1]++, 0)) > 50 ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_bb6qyxdr9().b[43][0]++, (0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
                size: 16,
                className: "text-green-500"
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_bb6qyxdr9().b[43][1]++, (0, _jsxruntime.jsx)(_lucidereact.TrendingDown, {
                size: 16,
                className: "text-red-500"
              }))]
            })]
          })]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 gap-6 mb-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white p-6 rounded-lg shadow",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between items-center mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-lg font-semibold",
            children: "Task Summary"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_bb6qyxdr9().f[62]++;
              cov_bb6qyxdr9().s[169]++;
              return handleExport(() => {
                /* istanbul ignore next */
                cov_bb6qyxdr9().f[63]++;
                cov_bb6qyxdr9().s[170]++;
                return (0, _exportData.exportTasksToCSV)(tasks);
              }, 'Tasks');
            },
            disabled: loading.export,
            className: "flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800 disabled:opacity-50 disabled:cursor-not-allowed",
            "aria-label": "Export tasks data to CSV",
            children: [loading.export ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_bb6qyxdr9().b[45][0]++, (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              size: 14,
              className: "animate-spin"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_bb6qyxdr9().b[45][1]++, (0, _jsxruntime.jsx)(_lucidereact.Download, {
              size: 14
            })), loading.export ?
            /* istanbul ignore next */
            (cov_bb6qyxdr9().b[46][0]++, 'Exporting...') :
            /* istanbul ignore next */
            (cov_bb6qyxdr9().b[46][1]++, 'Export')]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-3 gap-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-blue-50 p-4 rounded-lg text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-2xl font-bold text-blue-700",
                children: taskStats.pending
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm text-blue-600",
                children: "Pending"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-yellow-50 p-4 rounded-lg text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-2xl font-bold text-yellow-700",
                children: taskStats.inProgress
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm text-yellow-600",
                children: "In Progress"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-green-50 p-4 rounded-lg text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-2xl font-bold text-green-700",
                children: taskStats.completed
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm text-green-600",
                children: "Completed"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-sm mb-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Completion Rate"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: [taskStats.completionRate, "%"]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-full bg-gray-200 rounded-full h-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "bg-green-600 h-2 rounded-full",
                style: {
                  width: `${taskStats.completionRate}%`
                }
              })
            })]
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white p-6 rounded-lg shadow",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between items-center mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
            className: "text-lg font-semibold",
            children: "Calendar Events"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_bb6qyxdr9().f[64]++;
              cov_bb6qyxdr9().s[171]++;
              return handleExport(() => {
                /* istanbul ignore next */
                cov_bb6qyxdr9().f[65]++;
                cov_bb6qyxdr9().s[172]++;
                return (0, _exportData.exportEventsToCSV)(events);
              }, 'Events');
            },
            disabled: loading.export,
            className: "flex items-center gap-1 text-sm text-blue-600 hover:text-blue-800 disabled:opacity-50 disabled:cursor-not-allowed",
            "aria-label": "Export events data to CSV",
            children: [loading.export ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_bb6qyxdr9().b[47][0]++, (0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              size: 14,
              className: "animate-spin"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_bb6qyxdr9().b[47][1]++, (0, _jsxruntime.jsx)(_lucidereact.Download, {
              size: 14
            })), loading.export ?
            /* istanbul ignore next */
            (cov_bb6qyxdr9().b[48][0]++, 'Exporting...') :
            /* istanbul ignore next */
            (cov_bb6qyxdr9().b[48][1]++, 'Export')]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "grid grid-cols-4 gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-blue-50 p-3 rounded-lg text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xl font-bold text-blue-700",
                children: eventStats.meetings
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-blue-600",
                children: "Meetings"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-green-50 p-3 rounded-lg text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xl font-bold text-green-700",
                children: eventStats.calls
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-green-600",
                children: "Calls"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-red-50 p-3 rounded-lg text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xl font-bold text-red-700",
                children: eventStats.deadlines
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-red-600",
                children: "Deadlines"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-gray-50 p-3 rounded-lg text-center",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xl font-bold text-gray-700",
                children: eventStats.internal
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-gray-600",
                children: "Internal"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm font-medium mb-2",
              children: "Upcoming Events"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "space-y-2",
              children: eventStats.upcomingEvents.map((event, idx) => {
                /* istanbul ignore next */
                cov_bb6qyxdr9().f[66]++;
                cov_bb6qyxdr9().s[173]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between text-sm p-2 border-b",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "flex items-center gap-2",
                    children: /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "font-medium",
                      children: event.title
                    })
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                    className: "text-gray-500",
                    children: event.date
                  })]
                }, idx);
              })
            })]
          })]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white p-6 rounded-lg shadow",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold mb-4",
        children: "Recent Activity Summary"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-2",
        children: recentActivity.map((note, idx) => {
          /* istanbul ignore next */
          cov_bb6qyxdr9().f[67]++;
          cov_bb6qyxdr9().s[174]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between text-sm py-2 border-b",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center gap-3",
              children: [
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[49][0]++, note.type === "call") &&
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[49][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Phone, {
                size: 16,
                className: "text-blue-600"
              })),
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[50][0]++, note.type === "email") &&
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[50][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Mail, {
                size: 16,
                className: "text-green-600"
              })),
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[51][0]++, note.type === "meeting") &&
              /* istanbul ignore next */
              (cov_bb6qyxdr9().b[51][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Calendar, {
                size: 16,
                className: "text-purple-600"
              })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "font-medium",
                  children: note.clientName
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-gray-500 ml-2",
                  children: note.content
                })]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-gray-400",
              children: note.date
            })]
          }, idx);
        })
      })]
    }),
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[52][0]++, hasError) &&
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[52][1]++, error) &&
    /* istanbul ignore next */
    (cov_bb6qyxdr9().b[52][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "fixed top-4 right-4 z-50 max-w-md",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_standardErrorHandling.DefaultErrorFallback, {
        error: error,
        retry: clearError
      })
    }))]
  });
};
const _default =
/* istanbul ignore next */
(cov_bb6qyxdr9().s[175]++, Reports);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,