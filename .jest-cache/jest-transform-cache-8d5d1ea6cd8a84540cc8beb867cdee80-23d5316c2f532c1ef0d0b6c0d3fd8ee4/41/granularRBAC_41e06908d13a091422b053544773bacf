279680a24fb5e2db31a7fafba8937108
"use strict";

/* istanbul ignore next */
function cov_2jej1skikm() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\granularRBAC.ts";
  var hash = "a252f1316845696ed79e58c370a7e4db177b62ad";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\granularRBAC.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "6": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 37
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "8": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 41
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 42
        }
      },
      "11": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 44
        }
      },
      "12": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 38
        }
      },
      "13": {
        start: {
          line: 32,
          column: 35
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "14": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 268,
          column: 11
        }
      },
      "15": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 60
        }
      },
      "16": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 30
        }
      },
      "17": {
        start: {
          line: 274,
          column: 29
        },
        end: {
          line: 416,
          column: 9
        }
      },
      "18": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 419,
          column: 11
        }
      },
      "19": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 418,
          column: 42
        }
      },
      "20": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 502,
          column: 9
        }
      },
      "21": {
        start: {
          line: 425,
          column: 36
        },
        end: {
          line: 425,
          column: 73
        }
      },
      "22": {
        start: {
          line: 426,
          column: 33
        },
        end: {
          line: 426,
          column: 56
        }
      },
      "23": {
        start: {
          line: 428,
          column: 12
        },
        end: {
          line: 441,
          column: 13
        }
      },
      "24": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 440,
          column: 18
        }
      },
      "25": {
        start: {
          line: 442,
          column: 31
        },
        end: {
          line: 442,
          column: 65
        }
      },
      "26": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 450,
          column: 13
        }
      },
      "27": {
        start: {
          line: 444,
          column: 16
        },
        end: {
          line: 449,
          column: 18
        }
      },
      "28": {
        start: {
          line: 452,
          column: 12
        },
        end: {
          line: 462,
          column: 13
        }
      },
      "29": {
        start: {
          line: 453,
          column: 34
        },
        end: {
          line: 453,
          column: 108
        }
      },
      "30": {
        start: {
          line: 454,
          column: 16
        },
        end: {
          line: 461,
          column: 17
        }
      },
      "31": {
        start: {
          line: 455,
          column: 20
        },
        end: {
          line: 460,
          column: 22
        }
      },
      "32": {
        start: {
          line: 464,
          column: 12
        },
        end: {
          line: 474,
          column: 13
        }
      },
      "33": {
        start: {
          line: 465,
          column: 32
        },
        end: {
          line: 465,
          column: 120
        }
      },
      "34": {
        start: {
          line: 466,
          column: 16
        },
        end: {
          line: 473,
          column: 17
        }
      },
      "35": {
        start: {
          line: 467,
          column: 20
        },
        end: {
          line: 472,
          column: 22
        }
      },
      "36": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 486,
          column: 13
        }
      },
      "37": {
        start: {
          line: 477,
          column: 39
        },
        end: {
          line: 477,
          column: 88
        }
      },
      "38": {
        start: {
          line: 478,
          column: 16
        },
        end: {
          line: 485,
          column: 17
        }
      },
      "39": {
        start: {
          line: 479,
          column: 20
        },
        end: {
          line: 484,
          column: 22
        }
      },
      "40": {
        start: {
          line: 488,
          column: 30
        },
        end: {
          line: 488,
          column: 86
        }
      },
      "41": {
        start: {
          line: 489,
          column: 12
        },
        end: {
          line: 493,
          column: 14
        }
      },
      "42": {
        start: {
          line: 495,
          column: 12
        },
        end: {
          line: 495,
          column: 59
        }
      },
      "43": {
        start: {
          line: 496,
          column: 12
        },
        end: {
          line: 501,
          column: 14
        }
      },
      "44": {
        start: {
          line: 508,
          column: 23
        },
        end: {
          line: 508,
          column: 55
        }
      },
      "45": {
        start: {
          line: 509,
          column: 8
        },
        end: {
          line: 511,
          column: 9
        }
      },
      "46": {
        start: {
          line: 510,
          column: 12
        },
        end: {
          line: 510,
          column: 38
        }
      },
      "47": {
        start: {
          line: 512,
          column: 36
        },
        end: {
          line: 512,
          column: 68
        }
      },
      "48": {
        start: {
          line: 513,
          column: 34
        },
        end: {
          line: 513,
          column: 159
        }
      },
      "49": {
        start: {
          line: 513,
          column: 75
        },
        end: {
          line: 513,
          column: 158
        }
      },
      "50": {
        start: {
          line: 514,
          column: 31
        },
        end: {
          line: 514,
          column: 40
        }
      },
      "51": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 530,
          column: 9
        }
      },
      "52": {
        start: {
          line: 516,
          column: 25
        },
        end: {
          line: 516,
          column: 58
        }
      },
      "53": {
        start: {
          line: 517,
          column: 12
        },
        end: {
          line: 529,
          column: 13
        }
      },
      "54": {
        start: {
          line: 519,
          column: 16
        },
        end: {
          line: 519,
          column: 91
        }
      },
      "55": {
        start: {
          line: 519,
          column: 57
        },
        end: {
          line: 519,
          column: 89
        }
      },
      "56": {
        start: {
          line: 521,
          column: 16
        },
        end: {
          line: 528,
          column: 17
        }
      },
      "57": {
        start: {
          line: 522,
          column: 20
        },
        end: {
          line: 527,
          column: 21
        }
      },
      "58": {
        start: {
          line: 523,
          column: 43
        },
        end: {
          line: 523,
          column: 71
        }
      },
      "59": {
        start: {
          line: 524,
          column: 24
        },
        end: {
          line: 526,
          column: 25
        }
      },
      "60": {
        start: {
          line: 525,
          column: 28
        },
        end: {
          line: 525,
          column: 109
        }
      },
      "61": {
        start: {
          line: 525,
          column: 75
        },
        end: {
          line: 525,
          column: 107
        }
      },
      "62": {
        start: {
          line: 531,
          column: 28
        },
        end: {
          line: 531,
          column: 54
        }
      },
      "63": {
        start: {
          line: 533,
          column: 8
        },
        end: {
          line: 536,
          column: 11
        }
      },
      "64": {
        start: {
          line: 537,
          column: 8
        },
        end: {
          line: 537,
          column: 27
        }
      },
      "65": {
        start: {
          line: 542,
          column: 8
        },
        end: {
          line: 571,
          column: 9
        }
      },
      "66": {
        start: {
          line: 543,
          column: 25
        },
        end: {
          line: 543,
          column: 47
        }
      },
      "67": {
        start: {
          line: 544,
          column: 12
        },
        end: {
          line: 546,
          column: 13
        }
      },
      "68": {
        start: {
          line: 545,
          column: 16
        },
        end: {
          line: 545,
          column: 62
        }
      },
      "69": {
        start: {
          line: 547,
          column: 31
        },
        end: {
          line: 555,
          column: 13
        }
      },
      "70": {
        start: {
          line: 556,
          column: 30
        },
        end: {
          line: 556,
          column: 62
        }
      },
      "71": {
        start: {
          line: 558,
          column: 34
        },
        end: {
          line: 558,
          column: 93
        }
      },
      "72": {
        start: {
          line: 558,
          column: 59
        },
        end: {
          line: 558,
          column: 92
        }
      },
      "73": {
        start: {
          line: 559,
          column: 12
        },
        end: {
          line: 563,
          column: 13
        }
      },
      "74": {
        start: {
          line: 560,
          column: 16
        },
        end: {
          line: 560,
          column: 54
        }
      },
      "75": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 562,
          column: 43
        }
      },
      "76": {
        start: {
          line: 564,
          column: 12
        },
        end: {
          line: 564,
          column: 50
        }
      },
      "77": {
        start: {
          line: 566,
          column: 12
        },
        end: {
          line: 566,
          column: 48
        }
      },
      "78": {
        start: {
          line: 567,
          column: 12
        },
        end: {
          line: 567,
          column: 24
        }
      },
      "79": {
        start: {
          line: 569,
          column: 12
        },
        end: {
          line: 569,
          column: 58
        }
      },
      "80": {
        start: {
          line: 570,
          column: 12
        },
        end: {
          line: 570,
          column: 25
        }
      },
      "81": {
        start: {
          line: 576,
          column: 8
        },
        end: {
          line: 589,
          column: 9
        }
      },
      "82": {
        start: {
          line: 577,
          column: 30
        },
        end: {
          line: 577,
          column: 62
        }
      },
      "83": {
        start: {
          line: 578,
          column: 33
        },
        end: {
          line: 581,
          column: 31
        }
      },
      "84": {
        start: {
          line: 578,
          column: 61
        },
        end: {
          line: 581,
          column: 30
        }
      },
      "85": {
        start: {
          line: 582,
          column: 12
        },
        end: {
          line: 582,
          column: 53
        }
      },
      "86": {
        start: {
          line: 584,
          column: 12
        },
        end: {
          line: 584,
          column: 48
        }
      },
      "87": {
        start: {
          line: 585,
          column: 12
        },
        end: {
          line: 585,
          column: 24
        }
      },
      "88": {
        start: {
          line: 587,
          column: 12
        },
        end: {
          line: 587,
          column: 57
        }
      },
      "89": {
        start: {
          line: 588,
          column: 12
        },
        end: {
          line: 588,
          column: 25
        }
      },
      "90": {
        start: {
          line: 594,
          column: 23
        },
        end: {
          line: 594,
          column: 88
        }
      },
      "91": {
        start: {
          line: 595,
          column: 20
        },
        end: {
          line: 595,
          column: 30
        }
      },
      "92": {
        start: {
          line: 596,
          column: 24
        },
        end: {
          line: 601,
          column: 9
        }
      },
      "93": {
        start: {
          line: 602,
          column: 8
        },
        end: {
          line: 602,
          column: 40
        }
      },
      "94": {
        start: {
          line: 603,
          column: 8
        },
        end: {
          line: 603,
          column: 22
        }
      },
      "95": {
        start: {
          line: 608,
          column: 8
        },
        end: {
          line: 629,
          column: 9
        }
      },
      "96": {
        start: {
          line: 609,
          column: 25
        },
        end: {
          line: 609,
          column: 47
        }
      },
      "97": {
        start: {
          line: 610,
          column: 12
        },
        end: {
          line: 612,
          column: 13
        }
      },
      "98": {
        start: {
          line: 611,
          column: 16
        },
        end: {
          line: 611,
          column: 50
        }
      },
      "99": {
        start: {
          line: 613,
          column: 12
        },
        end: {
          line: 615,
          column: 13
        }
      },
      "100": {
        start: {
          line: 614,
          column: 16
        },
        end: {
          line: 614,
          column: 77
        }
      },
      "101": {
        start: {
          line: 616,
          column: 32
        },
        end: {
          line: 621,
          column: 13
        }
      },
      "102": {
        start: {
          line: 622,
          column: 12
        },
        end: {
          line: 622,
          column: 48
        }
      },
      "103": {
        start: {
          line: 624,
          column: 12
        },
        end: {
          line: 624,
          column: 41
        }
      },
      "104": {
        start: {
          line: 625,
          column: 12
        },
        end: {
          line: 625,
          column: 24
        }
      },
      "105": {
        start: {
          line: 627,
          column: 12
        },
        end: {
          line: 627,
          column: 57
        }
      },
      "106": {
        start: {
          line: 628,
          column: 12
        },
        end: {
          line: 628,
          column: 25
        }
      },
      "107": {
        start: {
          line: 634,
          column: 21
        },
        end: {
          line: 634,
          column: 41
        }
      },
      "108": {
        start: {
          line: 635,
          column: 20
        },
        end: {
          line: 635,
          column: 38
        }
      },
      "109": {
        start: {
          line: 637,
          column: 8
        },
        end: {
          line: 645,
          column: 9
        }
      },
      "110": {
        start: {
          line: 638,
          column: 34
        },
        end: {
          line: 638,
          column: 115
        }
      },
      "111": {
        start: {
          line: 638,
          column: 74
        },
        end: {
          line: 638,
          column: 114
        }
      },
      "112": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 644,
          column: 13
        }
      },
      "113": {
        start: {
          line: 640,
          column: 16
        },
        end: {
          line: 643,
          column: 18
        }
      },
      "114": {
        start: {
          line: 647,
          column: 8
        },
        end: {
          line: 652,
          column: 9
        }
      },
      "115": {
        start: {
          line: 648,
          column: 12
        },
        end: {
          line: 651,
          column: 14
        }
      },
      "116": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 655,
          column: 10
        }
      },
      "117": {
        start: {
          line: 661,
          column: 8
        },
        end: {
          line: 666,
          column: 9
        }
      },
      "118": {
        start: {
          line: 662,
          column: 12
        },
        end: {
          line: 665,
          column: 14
        }
      },
      "119": {
        start: {
          line: 668,
          column: 8
        },
        end: {
          line: 673,
          column: 9
        }
      },
      "120": {
        start: {
          line: 669,
          column: 12
        },
        end: {
          line: 672,
          column: 14
        }
      },
      "121": {
        start: {
          line: 675,
          column: 8
        },
        end: {
          line: 688,
          column: 9
        }
      },
      "122": {
        start: {
          line: 676,
          column: 12
        },
        end: {
          line: 681,
          column: 13
        }
      },
      "123": {
        start: {
          line: 677,
          column: 16
        },
        end: {
          line: 680,
          column: 18
        }
      },
      "124": {
        start: {
          line: 682,
          column: 12
        },
        end: {
          line: 687,
          column: 13
        }
      },
      "125": {
        start: {
          line: 683,
          column: 16
        },
        end: {
          line: 686,
          column: 18
        }
      },
      "126": {
        start: {
          line: 689,
          column: 8
        },
        end: {
          line: 691,
          column: 10
        }
      },
      "127": {
        start: {
          line: 696,
          column: 8
        },
        end: {
          line: 698,
          column: 10
        }
      },
      "128": {
        start: {
          line: 696,
          column: 25
        },
        end: {
          line: 698,
          column: 10
        }
      },
      "129": {
        start: {
          line: 699,
          column: 8
        },
        end: {
          line: 735,
          column: 9
        }
      },
      "130": {
        start: {
          line: 700,
          column: 31
        },
        end: {
          line: 700,
          column: 58
        }
      },
      "131": {
        start: {
          line: 701,
          column: 35
        },
        end: {
          line: 701,
          column: 50
        }
      },
      "132": {
        start: {
          line: 702,
          column: 31
        },
        end: {
          line: 702,
          column: 36
        }
      },
      "133": {
        start: {
          line: 703,
          column: 12
        },
        end: {
          line: 728,
          column: 13
        }
      },
      "134": {
        start: {
          line: 705,
          column: 20
        },
        end: {
          line: 705,
          column: 65
        }
      },
      "135": {
        start: {
          line: 706,
          column: 20
        },
        end: {
          line: 706,
          column: 26
        }
      },
      "136": {
        start: {
          line: 708,
          column: 20
        },
        end: {
          line: 708,
          column: 65
        }
      },
      "137": {
        start: {
          line: 709,
          column: 20
        },
        end: {
          line: 709,
          column: 26
        }
      },
      "138": {
        start: {
          line: 711,
          column: 20
        },
        end: {
          line: 711,
          column: 87
        }
      },
      "139": {
        start: {
          line: 712,
          column: 20
        },
        end: {
          line: 712,
          column: 26
        }
      },
      "140": {
        start: {
          line: 714,
          column: 20
        },
        end: {
          line: 714,
          column: 88
        }
      },
      "141": {
        start: {
          line: 715,
          column: 20
        },
        end: {
          line: 715,
          column: 26
        }
      },
      "142": {
        start: {
          line: 717,
          column: 20
        },
        end: {
          line: 717,
          column: 79
        }
      },
      "143": {
        start: {
          line: 718,
          column: 20
        },
        end: {
          line: 718,
          column: 26
        }
      },
      "144": {
        start: {
          line: 720,
          column: 20
        },
        end: {
          line: 720,
          column: 79
        }
      },
      "145": {
        start: {
          line: 721,
          column: 20
        },
        end: {
          line: 721,
          column: 26
        }
      },
      "146": {
        start: {
          line: 723,
          column: 20
        },
        end: {
          line: 723,
          column: 104
        }
      },
      "147": {
        start: {
          line: 724,
          column: 20
        },
        end: {
          line: 724,
          column: 26
        }
      },
      "148": {
        start: {
          line: 726,
          column: 20
        },
        end: {
          line: 726,
          column: 105
        }
      },
      "149": {
        start: {
          line: 727,
          column: 20
        },
        end: {
          line: 727,
          column: 26
        }
      },
      "150": {
        start: {
          line: 729,
          column: 12
        },
        end: {
          line: 734,
          column: 13
        }
      },
      "151": {
        start: {
          line: 730,
          column: 16
        },
        end: {
          line: 733,
          column: 18
        }
      },
      "152": {
        start: {
          line: 736,
          column: 8
        },
        end: {
          line: 738,
          column: 10
        }
      },
      "153": {
        start: {
          line: 743,
          column: 20
        },
        end: {
          line: 743,
          column: 21
        }
      },
      "154": {
        start: {
          line: 745,
          column: 29
        },
        end: {
          line: 751,
          column: 9
        }
      },
      "155": {
        start: {
          line: 752,
          column: 8
        },
        end: {
          line: 752,
          column: 56
        }
      },
      "156": {
        start: {
          line: 754,
          column: 33
        },
        end: {
          line: 759,
          column: 9
        }
      },
      "157": {
        start: {
          line: 760,
          column: 8
        },
        end: {
          line: 760,
          column: 62
        }
      },
      "158": {
        start: {
          line: 762,
          column: 21
        },
        end: {
          line: 762,
          column: 49
        }
      },
      "159": {
        start: {
          line: 763,
          column: 8
        },
        end: {
          line: 765,
          column: 9
        }
      },
      "160": {
        start: {
          line: 764,
          column: 12
        },
        end: {
          line: 764,
          column: 25
        }
      },
      "161": {
        start: {
          line: 767,
          column: 20
        },
        end: {
          line: 767,
          column: 46
        }
      },
      "162": {
        start: {
          line: 768,
          column: 8
        },
        end: {
          line: 770,
          column: 9
        }
      },
      "163": {
        start: {
          line: 769,
          column: 12
        },
        end: {
          line: 769,
          column: 25
        }
      },
      "164": {
        start: {
          line: 771,
          column: 8
        },
        end: {
          line: 771,
          column: 47
        }
      },
      "165": {
        start: {
          line: 776,
          column: 8
        },
        end: {
          line: 776,
          column: 48
        }
      },
      "166": {
        start: {
          line: 781,
          column: 8
        },
        end: {
          line: 781,
          column: 47
        }
      },
      "167": {
        start: {
          line: 786,
          column: 8
        },
        end: {
          line: 786,
          column: 53
        }
      },
      "168": {
        start: {
          line: 791,
          column: 8
        },
        end: {
          line: 791,
          column: 44
        }
      },
      "169": {
        start: {
          line: 796,
          column: 8
        },
        end: {
          line: 796,
          column: 37
        }
      },
      "170": {
        start: {
          line: 799,
          column: 28
        },
        end: {
          line: 799,
          column: 53
        }
      },
      "171": {
        start: {
          line: 800,
          column: 17
        },
        end: {
          line: 800,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        loc: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 20
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 31,
            column: 6
          },
          end: {
            line: 31,
            column: 7
          }
        },
        loc: {
          start: {
            line: 31,
            column: 37
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 31
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 266,
            column: 35
          },
          end: {
            line: 266,
            column: 36
          }
        },
        loc: {
          start: {
            line: 266,
            column: 49
          },
          end: {
            line: 268,
            column: 9
          }
        },
        line: 266
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 272,
            column: 6
          },
          end: {
            line: 272,
            column: 7
          }
        },
        loc: {
          start: {
            line: 272,
            column: 31
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 272
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 417,
            column: 29
          },
          end: {
            line: 417,
            column: 30
          }
        },
        loc: {
          start: {
            line: 417,
            column: 37
          },
          end: {
            line: 419,
            column: 9
          }
        },
        line: 417
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 423,
            column: 6
          },
          end: {
            line: 423,
            column: 7
          }
        },
        loc: {
          start: {
            line: 423,
            column: 65
          },
          end: {
            line: 503,
            column: 5
          }
        },
        line: 423
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 506,
            column: 6
          },
          end: {
            line: 506,
            column: 7
          }
        },
        loc: {
          start: {
            line: 506,
            column: 39
          },
          end: {
            line: 538,
            column: 5
          }
        },
        line: 506
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 513,
            column: 61
          },
          end: {
            line: 513,
            column: 62
          }
        },
        loc: {
          start: {
            line: 513,
            column: 75
          },
          end: {
            line: 513,
            column: 158
          }
        },
        line: 513
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 519,
            column: 41
          },
          end: {
            line: 519,
            column: 42
          }
        },
        loc: {
          start: {
            line: 519,
            column: 57
          },
          end: {
            line: 519,
            column: 89
          }
        },
        line: 519
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 525,
            column: 59
          },
          end: {
            line: 525,
            column: 60
          }
        },
        loc: {
          start: {
            line: 525,
            column: 75
          },
          end: {
            line: 525,
            column: 107
          }
        },
        line: 525
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 541,
            column: 6
          },
          end: {
            line: 541,
            column: 7
          }
        },
        loc: {
          start: {
            line: 541,
            column: 74
          },
          end: {
            line: 572,
            column: 5
          }
        },
        line: 541
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 558,
            column: 54
          },
          end: {
            line: 558,
            column: 55
          }
        },
        loc: {
          start: {
            line: 558,
            column: 59
          },
          end: {
            line: 558,
            column: 92
          }
        },
        line: 558
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 575,
            column: 6
          },
          end: {
            line: 575,
            column: 7
          }
        },
        loc: {
          start: {
            line: 575,
            column: 39
          },
          end: {
            line: 590,
            column: 5
          }
        },
        line: 575
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 578,
            column: 47
          },
          end: {
            line: 578,
            column: 48
          }
        },
        loc: {
          start: {
            line: 578,
            column: 61
          },
          end: {
            line: 581,
            column: 30
          }
        },
        line: 578
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 593,
            column: 6
          },
          end: {
            line: 593,
            column: 7
          }
        },
        loc: {
          start: {
            line: 593,
            column: 29
          },
          end: {
            line: 604,
            column: 5
          }
        },
        line: 593
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 607,
            column: 6
          },
          end: {
            line: 607,
            column: 7
          }
        },
        loc: {
          start: {
            line: 607,
            column: 40
          },
          end: {
            line: 630,
            column: 5
          }
        },
        line: 607
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 633,
            column: 6
          },
          end: {
            line: 633,
            column: 7
          }
        },
        loc: {
          start: {
            line: 633,
            column: 53
          },
          end: {
            line: 656,
            column: 5
          }
        },
        line: 633
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 638,
            column: 65
          },
          end: {
            line: 638,
            column: 66
          }
        },
        loc: {
          start: {
            line: 638,
            column: 74
          },
          end: {
            line: 638,
            column: 114
          }
        },
        line: 638
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 659,
            column: 6
          },
          end: {
            line: 659,
            column: 7
          }
        },
        loc: {
          start: {
            line: 659,
            column: 61
          },
          end: {
            line: 692,
            column: 5
          }
        },
        line: 659
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 695,
            column: 6
          },
          end: {
            line: 695,
            column: 7
          }
        },
        loc: {
          start: {
            line: 695,
            column: 40
          },
          end: {
            line: 739,
            column: 5
          }
        },
        line: 695
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 742,
            column: 6
          },
          end: {
            line: 742,
            column: 7
          }
        },
        loc: {
          start: {
            line: 742,
            column: 58
          },
          end: {
            line: 772,
            column: 5
          }
        },
        line: 742
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 775,
            column: 6
          },
          end: {
            line: 775,
            column: 7
          }
        },
        loc: {
          start: {
            line: 775,
            column: 27
          },
          end: {
            line: 777,
            column: 5
          }
        },
        line: 775
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 780,
            column: 6
          },
          end: {
            line: 780,
            column: 7
          }
        },
        loc: {
          start: {
            line: 780,
            column: 20
          },
          end: {
            line: 782,
            column: 5
          }
        },
        line: 780
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 785,
            column: 6
          },
          end: {
            line: 785,
            column: 7
          }
        },
        loc: {
          start: {
            line: 785,
            column: 26
          },
          end: {
            line: 787,
            column: 5
          }
        },
        line: 785
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 790,
            column: 6
          },
          end: {
            line: 790,
            column: 7
          }
        },
        loc: {
          start: {
            line: 790,
            column: 29
          },
          end: {
            line: 792,
            column: 5
          }
        },
        line: 790
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 795,
            column: 6
          },
          end: {
            line: 795,
            column: 7
          }
        },
        loc: {
          start: {
            line: 795,
            column: 23
          },
          end: {
            line: 797,
            column: 5
          }
        },
        line: 795
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 441,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 428,
            column: 12
          },
          end: {
            line: 441,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 428
      },
      "1": {
        loc: {
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 450,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 443,
            column: 12
          },
          end: {
            line: 450,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 443
      },
      "2": {
        loc: {
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 462,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 452,
            column: 12
          },
          end: {
            line: 462,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 452
      },
      "3": {
        loc: {
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 461,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 454,
            column: 16
          },
          end: {
            line: 461,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 454
      },
      "4": {
        loc: {
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 474,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 12
          },
          end: {
            line: 474,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "5": {
        loc: {
          start: {
            line: 464,
            column: 16
          },
          end: {
            line: 464,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 464,
            column: 16
          },
          end: {
            line: 464,
            column: 41
          }
        }, {
          start: {
            line: 464,
            column: 45
          },
          end: {
            line: 464,
            column: 62
          }
        }],
        line: 464
      },
      "6": {
        loc: {
          start: {
            line: 466,
            column: 16
          },
          end: {
            line: 473,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 16
          },
          end: {
            line: 473,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "7": {
        loc: {
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 486,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 476,
            column: 12
          },
          end: {
            line: 486,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 476
      },
      "8": {
        loc: {
          start: {
            line: 476,
            column: 16
          },
          end: {
            line: 476,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 476,
            column: 16
          },
          end: {
            line: 476,
            column: 37
          }
        }, {
          start: {
            line: 476,
            column: 41
          },
          end: {
            line: 476,
            column: 45
          }
        }],
        line: 476
      },
      "9": {
        loc: {
          start: {
            line: 478,
            column: 16
          },
          end: {
            line: 485,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 478,
            column: 16
          },
          end: {
            line: 485,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 478
      },
      "10": {
        loc: {
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 511,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 509,
            column: 8
          },
          end: {
            line: 511,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 509
      },
      "11": {
        loc: {
          start: {
            line: 509,
            column: 12
          },
          end: {
            line: 509,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 509,
            column: 12
          },
          end: {
            line: 509,
            column: 18
          }
        }, {
          start: {
            line: 509,
            column: 22
          },
          end: {
            line: 509,
            column: 71
          }
        }],
        line: 509
      },
      "12": {
        loc: {
          start: {
            line: 512,
            column: 36
          },
          end: {
            line: 512,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 512,
            column: 36
          },
          end: {
            line: 512,
            column: 62
          }
        }, {
          start: {
            line: 512,
            column: 66
          },
          end: {
            line: 512,
            column: 68
          }
        }],
        line: 512
      },
      "13": {
        loc: {
          start: {
            line: 513,
            column: 75
          },
          end: {
            line: 513,
            column: 158
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 513,
            column: 75
          },
          end: {
            line: 513,
            column: 94
          }
        }, {
          start: {
            line: 513,
            column: 99
          },
          end: {
            line: 513,
            column: 120
          }
        }, {
          start: {
            line: 513,
            column: 124
          },
          end: {
            line: 513,
            column: 157
          }
        }],
        line: 513
      },
      "14": {
        loc: {
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 529,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 12
          },
          end: {
            line: 529,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "15": {
        loc: {
          start: {
            line: 517,
            column: 16
          },
          end: {
            line: 517,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 517,
            column: 16
          },
          end: {
            line: 517,
            column: 20
          }
        }, {
          start: {
            line: 517,
            column: 24
          },
          end: {
            line: 517,
            column: 37
          }
        }],
        line: 517
      },
      "16": {
        loc: {
          start: {
            line: 521,
            column: 16
          },
          end: {
            line: 528,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 521,
            column: 16
          },
          end: {
            line: 528,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 521
      },
      "17": {
        loc: {
          start: {
            line: 524,
            column: 24
          },
          end: {
            line: 526,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 524,
            column: 24
          },
          end: {
            line: 526,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 524
      },
      "18": {
        loc: {
          start: {
            line: 524,
            column: 28
          },
          end: {
            line: 524,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 524,
            column: 28
          },
          end: {
            line: 524,
            column: 38
          }
        }, {
          start: {
            line: 524,
            column: 42
          },
          end: {
            line: 524,
            column: 61
          }
        }],
        line: 524
      },
      "19": {
        loc: {
          start: {
            line: 544,
            column: 12
          },
          end: {
            line: 546,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 544,
            column: 12
          },
          end: {
            line: 546,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 544
      },
      "20": {
        loc: {
          start: {
            line: 544,
            column: 16
          },
          end: {
            line: 544,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 544,
            column: 16
          },
          end: {
            line: 544,
            column: 21
          }
        }, {
          start: {
            line: 544,
            column: 25
          },
          end: {
            line: 544,
            column: 39
          }
        }],
        line: 544
      },
      "21": {
        loc: {
          start: {
            line: 556,
            column: 30
          },
          end: {
            line: 556,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 556,
            column: 30
          },
          end: {
            line: 556,
            column: 56
          }
        }, {
          start: {
            line: 556,
            column: 60
          },
          end: {
            line: 556,
            column: 62
          }
        }],
        line: 556
      },
      "22": {
        loc: {
          start: {
            line: 558,
            column: 59
          },
          end: {
            line: 558,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 558,
            column: 59
          },
          end: {
            line: 558,
            column: 78
          }
        }, {
          start: {
            line: 558,
            column: 82
          },
          end: {
            line: 558,
            column: 92
          }
        }],
        line: 558
      },
      "23": {
        loc: {
          start: {
            line: 559,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 559,
            column: 12
          },
          end: {
            line: 563,
            column: 13
          }
        }, {
          start: {
            line: 561,
            column: 19
          },
          end: {
            line: 563,
            column: 13
          }
        }],
        line: 559
      },
      "24": {
        loc: {
          start: {
            line: 577,
            column: 30
          },
          end: {
            line: 577,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 577,
            column: 30
          },
          end: {
            line: 577,
            column: 56
          }
        }, {
          start: {
            line: 577,
            column: 60
          },
          end: {
            line: 577,
            column: 62
          }
        }],
        line: 577
      },
      "25": {
        loc: {
          start: {
            line: 578,
            column: 61
          },
          end: {
            line: 581,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 578,
            column: 92
          },
          end: {
            line: 581,
            column: 17
          }
        }, {
          start: {
            line: 581,
            column: 20
          },
          end: {
            line: 581,
            column: 30
          }
        }],
        line: 578
      },
      "26": {
        loc: {
          start: {
            line: 610,
            column: 12
          },
          end: {
            line: 612,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 610,
            column: 12
          },
          end: {
            line: 612,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 610
      },
      "27": {
        loc: {
          start: {
            line: 613,
            column: 12
          },
          end: {
            line: 615,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 613,
            column: 12
          },
          end: {
            line: 615,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 613
      },
      "28": {
        loc: {
          start: {
            line: 613,
            column: 16
          },
          end: {
            line: 613,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 613,
            column: 16
          },
          end: {
            line: 613,
            column: 33
          }
        }, {
          start: {
            line: 613,
            column: 37
          },
          end: {
            line: 613,
            column: 56
          }
        }],
        line: 613
      },
      "29": {
        loc: {
          start: {
            line: 637,
            column: 8
          },
          end: {
            line: 645,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 637,
            column: 8
          },
          end: {
            line: 645,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 637
      },
      "30": {
        loc: {
          start: {
            line: 638,
            column: 74
          },
          end: {
            line: 638,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 638,
            column: 74
          },
          end: {
            line: 638,
            column: 93
          }
        }, {
          start: {
            line: 638,
            column: 97
          },
          end: {
            line: 638,
            column: 114
          }
        }],
        line: 638
      },
      "31": {
        loc: {
          start: {
            line: 639,
            column: 12
          },
          end: {
            line: 644,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 639,
            column: 12
          },
          end: {
            line: 644,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 639
      },
      "32": {
        loc: {
          start: {
            line: 647,
            column: 8
          },
          end: {
            line: 652,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 647,
            column: 8
          },
          end: {
            line: 652,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 647
      },
      "33": {
        loc: {
          start: {
            line: 647,
            column: 12
          },
          end: {
            line: 647,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 647,
            column: 12
          },
          end: {
            line: 647,
            column: 36
          }
        }, {
          start: {
            line: 647,
            column: 40
          },
          end: {
            line: 647,
            column: 79
          }
        }],
        line: 647
      },
      "34": {
        loc: {
          start: {
            line: 661,
            column: 8
          },
          end: {
            line: 666,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 661,
            column: 8
          },
          end: {
            line: 666,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 661
      },
      "35": {
        loc: {
          start: {
            line: 668,
            column: 8
          },
          end: {
            line: 673,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 668,
            column: 8
          },
          end: {
            line: 673,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 668
      },
      "36": {
        loc: {
          start: {
            line: 668,
            column: 12
          },
          end: {
            line: 668,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 668,
            column: 12
          },
          end: {
            line: 668,
            column: 35
          }
        }, {
          start: {
            line: 668,
            column: 39
          },
          end: {
            line: 668,
            column: 83
          }
        }],
        line: 668
      },
      "37": {
        loc: {
          start: {
            line: 675,
            column: 8
          },
          end: {
            line: 688,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 675,
            column: 8
          },
          end: {
            line: 688,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 675
      },
      "38": {
        loc: {
          start: {
            line: 676,
            column: 12
          },
          end: {
            line: 681,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 676,
            column: 12
          },
          end: {
            line: 681,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 676
      },
      "39": {
        loc: {
          start: {
            line: 682,
            column: 12
          },
          end: {
            line: 687,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 682,
            column: 12
          },
          end: {
            line: 687,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 682
      },
      "40": {
        loc: {
          start: {
            line: 682,
            column: 16
          },
          end: {
            line: 682,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 682,
            column: 16
          },
          end: {
            line: 682,
            column: 45
          }
        }, {
          start: {
            line: 682,
            column: 49
          },
          end: {
            line: 682,
            column: 106
          }
        }],
        line: 682
      },
      "41": {
        loc: {
          start: {
            line: 696,
            column: 8
          },
          end: {
            line: 698,
            column: 10
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 696,
            column: 8
          },
          end: {
            line: 698,
            column: 10
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 696
      },
      "42": {
        loc: {
          start: {
            line: 700,
            column: 36
          },
          end: {
            line: 700,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 700,
            column: 36
          },
          end: {
            line: 700,
            column: 51
          }
        }, {
          start: {
            line: 700,
            column: 55
          },
          end: {
            line: 700,
            column: 57
          }
        }],
        line: 700
      },
      "43": {
        loc: {
          start: {
            line: 703,
            column: 12
          },
          end: {
            line: 728,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 704,
            column: 16
          },
          end: {
            line: 706,
            column: 26
          }
        }, {
          start: {
            line: 707,
            column: 16
          },
          end: {
            line: 709,
            column: 26
          }
        }, {
          start: {
            line: 710,
            column: 16
          },
          end: {
            line: 712,
            column: 26
          }
        }, {
          start: {
            line: 713,
            column: 16
          },
          end: {
            line: 715,
            column: 26
          }
        }, {
          start: {
            line: 716,
            column: 16
          },
          end: {
            line: 718,
            column: 26
          }
        }, {
          start: {
            line: 719,
            column: 16
          },
          end: {
            line: 721,
            column: 26
          }
        }, {
          start: {
            line: 722,
            column: 16
          },
          end: {
            line: 724,
            column: 26
          }
        }, {
          start: {
            line: 725,
            column: 16
          },
          end: {
            line: 727,
            column: 26
          }
        }],
        line: 703
      },
      "44": {
        loc: {
          start: {
            line: 723,
            column: 35
          },
          end: {
            line: 723,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 723,
            column: 35
          },
          end: {
            line: 723,
            column: 64
          }
        }, {
          start: {
            line: 723,
            column: 68
          },
          end: {
            line: 723,
            column: 103
          }
        }],
        line: 723
      },
      "45": {
        loc: {
          start: {
            line: 726,
            column: 35
          },
          end: {
            line: 726,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 726,
            column: 35
          },
          end: {
            line: 726,
            column: 64
          }
        }, {
          start: {
            line: 726,
            column: 68
          },
          end: {
            line: 726,
            column: 104
          }
        }],
        line: 726
      },
      "46": {
        loc: {
          start: {
            line: 729,
            column: 12
          },
          end: {
            line: 734,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 729,
            column: 12
          },
          end: {
            line: 734,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 729
      },
      "47": {
        loc: {
          start: {
            line: 752,
            column: 17
          },
          end: {
            line: 752,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 752,
            column: 17
          },
          end: {
            line: 752,
            column: 48
          }
        }, {
          start: {
            line: 752,
            column: 52
          },
          end: {
            line: 752,
            column: 55
          }
        }],
        line: 752
      },
      "48": {
        loc: {
          start: {
            line: 760,
            column: 34
          },
          end: {
            line: 760,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 760,
            column: 34
          },
          end: {
            line: 760,
            column: 50
          }
        }, {
          start: {
            line: 760,
            column: 54
          },
          end: {
            line: 760,
            column: 60
          }
        }],
        line: 760
      },
      "49": {
        loc: {
          start: {
            line: 763,
            column: 8
          },
          end: {
            line: 765,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 763,
            column: 8
          },
          end: {
            line: 765,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 763
      },
      "50": {
        loc: {
          start: {
            line: 763,
            column: 12
          },
          end: {
            line: 763,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 763,
            column: 12
          },
          end: {
            line: 763,
            column: 20
          }
        }, {
          start: {
            line: 763,
            column: 24
          },
          end: {
            line: 763,
            column: 33
          }
        }],
        line: 763
      },
      "51": {
        loc: {
          start: {
            line: 768,
            column: 8
          },
          end: {
            line: 770,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 768,
            column: 8
          },
          end: {
            line: 770,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 768
      },
      "52": {
        loc: {
          start: {
            line: 768,
            column: 12
          },
          end: {
            line: 768,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 768,
            column: 12
          },
          end: {
            line: 768,
            column: 21
          }
        }, {
          start: {
            line: 768,
            column: 25
          },
          end: {
            line: 768,
            column: 34
          }
        }],
        line: 768
      },
      "53": {
        loc: {
          start: {
            line: 776,
            column: 15
          },
          end: {
            line: 776,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 776,
            column: 15
          },
          end: {
            line: 776,
            column: 41
          }
        }, {
          start: {
            line: 776,
            column: 45
          },
          end: {
            line: 776,
            column: 47
          }
        }],
        line: 776
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0, 0, 0, 0, 0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\granularRBAC.ts"],
      sourcesContent: ["import { rbacService, type Permission, type Role } from './rbacService';\n\nexport interface GranularPermission {\n  id: string;\n  name: string;\n  resource: string;\n  action: string;\n  conditions?: {\n    field?: string;\n    operator: 'equals' | 'not_equals' | 'contains' | 'not_contains' | 'greater_than' | 'less_than' | 'in' | 'not_in';\n    value: any;\n  }[];\n  scope?: 'global' | 'organization' | 'team' | 'personal';\n  timeRestrictions?: {\n    allowedHours?: { start: number; end: number }[];\n    allowedDays?: number[]; // 0-6, Sunday-Saturday\n    timezone?: string;\n  };\n  ipRestrictions?: {\n    allowedIPs?: string[];\n    blockedIPs?: string[];\n    allowedCountries?: string[];\n    blockedCountries?: string[];\n  };\n  dataFilters?: {\n    field: string;\n    operator: 'equals' | 'not_equals' | 'contains' | 'not_contains' | 'greater_than' | 'less_than';\n    value: any;\n  }[];\n}\n\nexport interface GranularRole {\n  id: string;\n  name: string;\n  description: string;\n  permissions: string[]; // Permission IDs\n  inheritsFrom?: string[]; // Parent role IDs\n  isSystemRole: boolean;\n  isActive: boolean;\n  maxSessions?: number;\n  sessionTimeout?: number; // minutes\n  requiresMFA?: boolean;\n  allowedFeatures?: string[];\n  deniedFeatures?: string[];\n  dataAccessLevel: 'none' | 'read' | 'write' | 'admin';\n  auditLevel: 'none' | 'basic' | 'detailed' | 'full';\n  createdAt: Date;\n  updatedAt: Date;\n  createdBy: string;\n}\n\nexport interface UserRoleAssignment {\n  userId: string;\n  roleId: string;\n  assignedBy: string;\n  assignedAt: Date;\n  expiresAt?: Date;\n  isActive: boolean;\n  conditions?: {\n    field: string;\n    operator: string;\n    value: any;\n  }[];\n}\n\nexport interface AccessContext {\n  userId: string;\n  userEmail: string;\n  ipAddress?: string;\n  userAgent?: string;\n  location?: {\n    country?: string;\n    city?: string;\n  };\n  timestamp: Date;\n  sessionId?: string;\n  organizationId?: string;\n  teamId?: string;\n}\n\nexport interface AccessResult {\n  allowed: boolean;\n  reason?: string;\n  requiredPermissions?: string[];\n  missingPermissions?: string[];\n  conditions?: any;\n  auditRequired: boolean;\n  riskScore: number;\n}\n\nclass GranularRBACService {\n  private permissions: Map<string, GranularPermission> = new Map();\n  private roles: Map<string, GranularRole> = new Map();\n  private userRoles: Map<string, UserRoleAssignment[]> = new Map();\n  private permissionCache: Map<string, { permissions: string[]; timestamp: number }> = new Map();\n  private cacheTimeout = 5 * 60 * 1000; // 5 minutes\n\n  constructor() {\n    this.initializeDefaultPermissions();\n    this.initializeDefaultRoles();\n  }\n\n  /**\n   * Initialize default system permissions\n   */\n  private initializeDefaultPermissions(): void {\n    const defaultPermissions: GranularPermission[] = [\n      // User Management\n      {\n        id: 'users.read',\n        name: 'Read Users',\n        resource: 'users',\n        action: 'read',\n        scope: 'organization'\n      },\n      {\n        id: 'users.create',\n        name: 'Create Users',\n        resource: 'users',\n        action: 'create',\n        scope: 'organization'\n      },\n      {\n        id: 'users.update',\n        name: 'Update Users',\n        resource: 'users',\n        action: 'update',\n        scope: 'organization'\n      },\n      {\n        id: 'users.delete',\n        name: 'Delete Users',\n        resource: 'users',\n        action: 'delete',\n        scope: 'organization'\n      },\n      \n      // Contact Management\n      {\n        id: 'contacts.read',\n        name: 'Read Contacts',\n        resource: 'contacts',\n        action: 'read',\n        scope: 'team'\n      },\n      {\n        id: 'contacts.create',\n        name: 'Create Contacts',\n        resource: 'contacts',\n        action: 'create',\n        scope: 'team'\n      },\n      {\n        id: 'contacts.update',\n        name: 'Update Contacts',\n        resource: 'contacts',\n        action: 'update',\n        scope: 'team'\n      },\n      {\n        id: 'contacts.delete',\n        name: 'Delete Contacts',\n        resource: 'contacts',\n        action: 'delete',\n        scope: 'team'\n      },\n      \n      // Quote Management\n      {\n        id: 'quotes.read',\n        name: 'Read Quotes',\n        resource: 'quotes',\n        action: 'read',\n        scope: 'team'\n      },\n      {\n        id: 'quotes.create',\n        name: 'Create Quotes',\n        resource: 'quotes',\n        action: 'create',\n        scope: 'team'\n      },\n      {\n        id: 'quotes.update',\n        name: 'Update Quotes',\n        resource: 'quotes',\n        action: 'update',\n        scope: 'team'\n      },\n      {\n        id: 'quotes.delete',\n        name: 'Delete Quotes',\n        resource: 'quotes',\n        action: 'delete',\n        scope: 'team'\n      },\n      {\n        id: 'quotes.approve',\n        name: 'Approve Quotes',\n        resource: 'quotes',\n        action: 'approve',\n        scope: 'team',\n        conditions: [{\n          field: 'amount',\n          operator: 'less_than',\n          value: 10000\n        }]\n      },\n      \n      // Contract Management\n      {\n        id: 'contracts.read',\n        name: 'Read Contracts',\n        resource: 'contracts',\n        action: 'read',\n        scope: 'team'\n      },\n      {\n        id: 'contracts.create',\n        name: 'Create Contracts',\n        resource: 'contracts',\n        action: 'create',\n        scope: 'team'\n      },\n      {\n        id: 'contracts.update',\n        name: 'Update Contracts',\n        resource: 'contracts',\n        action: 'update',\n        scope: 'team'\n      },\n      {\n        id: 'contracts.delete',\n        name: 'Delete Contracts',\n        resource: 'contracts',\n        action: 'delete',\n        scope: 'team'\n      },\n      {\n        id: 'contracts.sign',\n        name: 'Sign Contracts',\n        resource: 'contracts',\n        action: 'sign',\n        scope: 'team'\n      },\n      \n      // Invoice Management\n      {\n        id: 'invoices.read',\n        name: 'Read Invoices',\n        resource: 'invoices',\n        action: 'read',\n        scope: 'team'\n      },\n      {\n        id: 'invoices.create',\n        name: 'Create Invoices',\n        resource: 'invoices',\n        action: 'create',\n        scope: 'team'\n      },\n      {\n        id: 'invoices.update',\n        name: 'Update Invoices',\n        resource: 'invoices',\n        action: 'update',\n        scope: 'team'\n      },\n      {\n        id: 'invoices.delete',\n        name: 'Delete Invoices',\n        resource: 'invoices',\n        action: 'delete',\n        scope: 'team'\n      },\n      {\n        id: 'invoices.send',\n        name: 'Send Invoices',\n        resource: 'invoices',\n        action: 'send',\n        scope: 'team'\n      },\n      \n      // Reporting\n      {\n        id: 'reports.read',\n        name: 'Read Reports',\n        resource: 'reports',\n        action: 'read',\n        scope: 'team'\n      },\n      {\n        id: 'reports.create',\n        name: 'Create Reports',\n        resource: 'reports',\n        action: 'create',\n        scope: 'team'\n      },\n      {\n        id: 'reports.export',\n        name: 'Export Reports',\n        resource: 'reports',\n        action: 'export',\n        scope: 'team'\n      },\n      \n      // System Administration\n      {\n        id: 'system.admin',\n        name: 'System Administration',\n        resource: 'system',\n        action: 'admin',\n        scope: 'global',\n        timeRestrictions: {\n          allowedHours: [{ start: 9, end: 17 }],\n          allowedDays: [1, 2, 3, 4, 5] // Monday-Friday\n        }\n      },\n      {\n        id: 'audit.read',\n        name: 'Read Audit Logs',\n        resource: 'audit',\n        action: 'read',\n        scope: 'organization'\n      },\n      {\n        id: 'security.manage',\n        name: 'Manage Security',\n        resource: 'security',\n        action: 'manage',\n        scope: 'global'\n      }\n    ];\n\n    defaultPermissions.forEach(permission => {\n      this.permissions.set(permission.id, permission);\n    });\n  }\n\n  /**\n   * Initialize default system roles\n   */\n  private initializeDefaultRoles(): void {\n    const now = new Date();\n    \n    const defaultRoles: GranularRole[] = [\n      {\n        id: 'super_admin',\n        name: 'Super Administrator',\n        description: 'Full system access with all permissions',\n        permissions: Array.from(this.permissions.keys()),\n        isSystemRole: true,\n        isActive: true,\n        requiresMFA: true,\n        dataAccessLevel: 'admin',\n        auditLevel: 'full',\n        maxSessions: 2,\n        sessionTimeout: 60,\n        createdAt: now,\n        updatedAt: now,\n        createdBy: 'system'\n      },\n      {\n        id: 'admin',\n        name: 'Administrator',\n        description: 'Organization administrator with most permissions',\n        permissions: [\n          'users.read', 'users.create', 'users.update',\n          'contacts.read', 'contacts.create', 'contacts.update', 'contacts.delete',\n          'quotes.read', 'quotes.create', 'quotes.update', 'quotes.delete', 'quotes.approve',\n          'contracts.read', 'contracts.create', 'contracts.update', 'contracts.delete', 'contracts.sign',\n          'invoices.read', 'invoices.create', 'invoices.update', 'invoices.delete', 'invoices.send',\n          'reports.read', 'reports.create', 'reports.export',\n          'audit.read'\n        ],\n        isSystemRole: true,\n        isActive: true,\n        requiresMFA: true,\n        dataAccessLevel: 'admin',\n        auditLevel: 'detailed',\n        maxSessions: 3,\n        sessionTimeout: 120,\n        createdAt: now,\n        updatedAt: now,\n        createdBy: 'system'\n      },\n      {\n        id: 'manager',\n        name: 'Manager',\n        description: 'Team manager with elevated permissions',\n        permissions: [\n          'contacts.read', 'contacts.create', 'contacts.update',\n          'quotes.read', 'quotes.create', 'quotes.update', 'quotes.approve',\n          'contracts.read', 'contracts.create', 'contracts.update', 'contracts.sign',\n          'invoices.read', 'invoices.create', 'invoices.update', 'invoices.send',\n          'reports.read', 'reports.create'\n        ],\n        isSystemRole: true,\n        isActive: true,\n        requiresMFA: false,\n        dataAccessLevel: 'write',\n        auditLevel: 'basic',\n        maxSessions: 2,\n        sessionTimeout: 240,\n        createdAt: now,\n        updatedAt: now,\n        createdBy: 'system'\n      },\n      {\n        id: 'sales_rep',\n        name: 'Sales Representative',\n        description: 'Sales team member with standard permissions',\n        permissions: [\n          'contacts.read', 'contacts.create', 'contacts.update',\n          'quotes.read', 'quotes.create', 'quotes.update',\n          'contracts.read',\n          'invoices.read',\n          'reports.read'\n        ],\n        isSystemRole: true,\n        isActive: true,\n        requiresMFA: false,\n        dataAccessLevel: 'write',\n        auditLevel: 'basic',\n        maxSessions: 1,\n        sessionTimeout: 480,\n        createdAt: now,\n        updatedAt: now,\n        createdBy: 'system'\n      },\n      {\n        id: 'viewer',\n        name: 'Viewer',\n        description: 'Read-only access to basic information',\n        permissions: [\n          'contacts.read',\n          'quotes.read',\n          'contracts.read',\n          'invoices.read',\n          'reports.read'\n        ],\n        isSystemRole: true,\n        isActive: true,\n        requiresMFA: false,\n        dataAccessLevel: 'read',\n        auditLevel: 'basic',\n        maxSessions: 1,\n        sessionTimeout: 480,\n        createdAt: now,\n        updatedAt: now,\n        createdBy: 'system'\n      }\n    ];\n\n    defaultRoles.forEach(role => {\n      this.roles.set(role.id, role);\n    });\n  }\n\n  /**\n   * Check if user has permission to perform an action\n   */\n  async checkAccess(\n    userId: string,\n    resource: string,\n    action: string,\n    context: AccessContext,\n    data?: any\n  ): Promise<AccessResult> {\n    try {\n      const userPermissions = await this.getUserPermissions(userId);\n      const permissionId = `${resource}.${action}`;\n      \n      // Check if user has the required permission\n      if (!userPermissions.includes(permissionId)) {\n        return {\n          allowed: false,\n          reason: 'Insufficient permissions',\n          requiredPermissions: [permissionId],\n          missingPermissions: [permissionId],\n          auditRequired: true,\n          riskScore: 0.7\n        };\n      }\n\n      const permission = this.permissions.get(permissionId);\n      if (!permission) {\n        return {\n          allowed: false,\n          reason: 'Permission not found',\n          auditRequired: true,\n          riskScore: 0.8\n        };\n      }\n\n      // Check time restrictions\n      if (permission.timeRestrictions) {\n        const timeCheck = this.checkTimeRestrictions(permission.timeRestrictions, context.timestamp);\n        if (!timeCheck.allowed) {\n          return {\n            allowed: false,\n            reason: timeCheck.reason,\n            auditRequired: true,\n            riskScore: 0.6\n          };\n        }\n      }\n\n      // Check IP restrictions\n      if (permission.ipRestrictions && context.ipAddress) {\n        const ipCheck = this.checkIPRestrictions(permission.ipRestrictions, context.ipAddress, context.location);\n        if (!ipCheck.allowed) {\n          return {\n            allowed: false,\n            reason: ipCheck.reason,\n            auditRequired: true,\n            riskScore: 0.9\n          };\n        }\n      }\n\n      // Check data conditions\n      if (permission.conditions && data) {\n        const conditionCheck = this.checkConditions(permission.conditions, data);\n        if (!conditionCheck.allowed) {\n          return {\n            allowed: false,\n            reason: conditionCheck.reason,\n            auditRequired: true,\n            riskScore: 0.5\n          };\n        }\n      }\n\n      // Calculate risk score\n      const riskScore = this.calculateAccessRiskScore(permission, context, data);\n\n      return {\n        allowed: true,\n        auditRequired: riskScore > 0.5,\n        riskScore\n      };\n    } catch (error) {\n      console.error('Error checking access:', error);\n      return {\n        allowed: false,\n        reason: 'Access check failed',\n        auditRequired: true,\n        riskScore: 1.0\n      };\n    }\n  }\n\n  /**\n   * Get all permissions for a user\n   */\n  async getUserPermissions(userId: string): Promise<string[]> {\n    // Check cache first\n    const cached = this.permissionCache.get(userId);\n    if (cached && Date.now() - cached.timestamp < this.cacheTimeout) {\n      return cached.permissions;\n    }\n\n    const userRoleAssignments = this.userRoles.get(userId) || [];\n    const activeAssignments = userRoleAssignments.filter(assignment => \n      assignment.isActive && \n      (!assignment.expiresAt || assignment.expiresAt > new Date())\n    );\n\n    const allPermissions = new Set<string>();\n\n    for (const assignment of activeAssignments) {\n      const role = this.roles.get(assignment.roleId);\n      if (role && role.isActive) {\n        // Add direct permissions\n        role.permissions.forEach(permissionId => allPermissions.add(permissionId));\n        \n        // Add inherited permissions\n        if (role.inheritsFrom) {\n          for (const parentRoleId of role.inheritsFrom) {\n            const parentRole = this.roles.get(parentRoleId);\n            if (parentRole && parentRole.isActive) {\n              parentRole.permissions.forEach(permissionId => allPermissions.add(permissionId));\n            }\n          }\n        }\n      }\n    }\n\n    const permissions = Array.from(allPermissions);\n    \n    // Cache the result\n    this.permissionCache.set(userId, {\n      permissions,\n      timestamp: Date.now()\n    });\n\n    return permissions;\n  }\n\n  /**\n   * Assign role to user\n   */\n  async assignRole(\n    userId: string,\n    roleId: string,\n    assignedBy: string,\n    expiresAt?: Date,\n    conditions?: any[]\n  ): Promise<boolean> {\n    try {\n      const role = this.roles.get(roleId);\n      if (!role || !role.isActive) {\n        throw new Error('Role not found or inactive');\n      }\n\n      const assignment: UserRoleAssignment = {\n        userId,\n        roleId,\n        assignedBy,\n        assignedAt: new Date(),\n        expiresAt,\n        isActive: true,\n        conditions\n      };\n\n      const userRoles = this.userRoles.get(userId) || [];\n      \n      // Check if assignment already exists\n      const existingIndex = userRoles.findIndex(a => a.roleId === roleId && a.isActive);\n      if (existingIndex >= 0) {\n        userRoles[existingIndex] = assignment; // Update existing\n      } else {\n        userRoles.push(assignment); // Add new\n      }\n      \n      this.userRoles.set(userId, userRoles);\n      \n      // Clear permission cache\n      this.permissionCache.delete(userId);\n      \n      return true;\n    } catch (error) {\n      console.error('Error assigning role:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Remove role from user\n   */\n  async removeRole(userId: string, roleId: string): Promise<boolean> {\n    try {\n      const userRoles = this.userRoles.get(userId) || [];\n      const updatedRoles = userRoles.map(assignment => \n        assignment.roleId === roleId \n          ? { ...assignment, isActive: false }\n          : assignment\n      );\n      \n      this.userRoles.set(userId, updatedRoles);\n      \n      // Clear permission cache\n      this.permissionCache.delete(userId);\n      \n      return true;\n    } catch (error) {\n      console.error('Error removing role:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create custom role\n   */\n  async createRole(role: Omit<GranularRole, 'id' | 'createdAt' | 'updatedAt'>): Promise<string> {\n    const roleId = `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    const now = new Date();\n    \n    const newRole: GranularRole = {\n      ...role,\n      id: roleId,\n      createdAt: now,\n      updatedAt: now\n    };\n    \n    this.roles.set(roleId, newRole);\n    return roleId;\n  }\n\n  /**\n   * Update role\n   */\n  async updateRole(roleId: string, updates: Partial<GranularRole>): Promise<boolean> {\n    try {\n      const role = this.roles.get(roleId);\n      if (!role) {\n        throw new Error('Role not found');\n      }\n      \n      if (role.isSystemRole && updates.permissions) {\n        throw new Error('Cannot modify permissions of system roles');\n      }\n      \n      const updatedRole: GranularRole = {\n        ...role,\n        ...updates,\n        id: roleId, // Ensure ID doesn't change\n        updatedAt: new Date()\n      };\n      \n      this.roles.set(roleId, updatedRole);\n      \n      // Clear all permission caches since role permissions changed\n      this.permissionCache.clear();\n      \n      return true;\n    } catch (error) {\n      console.error('Error updating role:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Check time restrictions\n   */\n  private checkTimeRestrictions(\n    restrictions: NonNullable<GranularPermission['timeRestrictions']>,\n    timestamp: Date\n  ): { allowed: boolean; reason?: string } {\n    const hour = timestamp.getHours();\n    const day = timestamp.getDay();\n    \n    // Check allowed hours\n    if (restrictions.allowedHours) {\n      const isAllowedHour = restrictions.allowedHours.some(range => \n        hour >= range.start && hour <= range.end\n      );\n      if (!isAllowedHour) {\n        return {\n          allowed: false,\n          reason: 'Access not allowed during current hours'\n        };\n      }\n    }\n    \n    // Check allowed days\n    if (restrictions.allowedDays && !restrictions.allowedDays.includes(day)) {\n      return {\n        allowed: false,\n        reason: 'Access not allowed on current day'\n      };\n    }\n    \n    return { allowed: true };\n  }\n\n  /**\n   * Check IP restrictions\n   */\n  private checkIPRestrictions(\n    restrictions: NonNullable<GranularPermission['ipRestrictions']>,\n    ipAddress: string,\n    location?: AccessContext['location']\n  ): { allowed: boolean; reason?: string } {\n    // Check blocked IPs\n    if (restrictions.blockedIPs?.includes(ipAddress)) {\n      return {\n        allowed: false,\n        reason: 'IP address is blocked'\n      };\n    }\n    \n    // Check allowed IPs\n    if (restrictions.allowedIPs && !restrictions.allowedIPs.includes(ipAddress)) {\n      return {\n        allowed: false,\n        reason: 'IP address not in allowed list'\n      };\n    }\n    \n    // Check country restrictions\n    if (location?.country) {\n      if (restrictions.blockedCountries?.includes(location.country)) {\n        return {\n          allowed: false,\n          reason: 'Access blocked from current country'\n        };\n      }\n      \n      if (restrictions.allowedCountries && !restrictions.allowedCountries.includes(location.country)) {\n        return {\n          allowed: false,\n          reason: 'Country not in allowed list'\n        };\n      }\n    }\n    \n    return { allowed: true };\n  }\n\n  /**\n   * Check data conditions\n   */\n  private checkConditions(\n    conditions: GranularPermission['conditions'],\n    data: any\n  ): { allowed: boolean; reason?: string } {\n    if (!conditions) return { allowed: true };\n    \n    for (const condition of conditions) {\n      const fieldValue = data[condition.field || ''];\n      const conditionValue = condition.value;\n      \n      let conditionMet = false;\n      \n      switch (condition.operator) {\n        case 'equals':\n          conditionMet = fieldValue === conditionValue;\n          break;\n        case 'not_equals':\n          conditionMet = fieldValue !== conditionValue;\n          break;\n        case 'contains':\n          conditionMet = String(fieldValue).includes(String(conditionValue));\n          break;\n        case 'not_contains':\n          conditionMet = !String(fieldValue).includes(String(conditionValue));\n          break;\n        case 'greater_than':\n          conditionMet = Number(fieldValue) > Number(conditionValue);\n          break;\n        case 'less_than':\n          conditionMet = Number(fieldValue) < Number(conditionValue);\n          break;\n        case 'in':\n          conditionMet = Array.isArray(conditionValue) && conditionValue.includes(fieldValue);\n          break;\n        case 'not_in':\n          conditionMet = Array.isArray(conditionValue) && !conditionValue.includes(fieldValue);\n          break;\n      }\n      \n      if (!conditionMet) {\n        return {\n          allowed: false,\n          reason: `Condition not met: ${condition.field} ${condition.operator} ${condition.value}`\n        };\n      }\n    }\n    \n    return { allowed: true };\n  }\n\n  /**\n   * Calculate access risk score\n   */\n  private calculateAccessRiskScore(\n    permission: GranularPermission,\n    context: AccessContext,\n    data?: any\n  ): number {\n    let score = 0;\n    \n    // Base score by action sensitivity\n    const actionScores = {\n      'delete': 0.8,\n      'admin': 0.9,\n      'create': 0.4,\n      'update': 0.5,\n      'read': 0.1\n    };\n    \n    score += actionScores[permission.action as keyof typeof actionScores] || 0.3;\n    \n    // Scope multiplier\n    const scopeMultipliers = {\n      'global': 1.0,\n      'organization': 0.8,\n      'team': 0.6,\n      'personal': 0.4\n    };\n    \n    score *= scopeMultipliers[permission.scope || 'team'];\n    \n    // Time-based risk\n    const hour = context.timestamp.getHours();\n    if (hour < 6 || hour > 22) {\n      score += 0.2; // Off-hours access\n    }\n    \n    // Weekend access\n    const day = context.timestamp.getDay();\n    if (day === 0 || day === 6) {\n      score += 0.1;\n    }\n    \n    return Math.min(Math.max(score, 0), 1);\n  }\n\n  /**\n   * Get user roles\n   */\n  getUserRoles(userId: string): UserRoleAssignment[] {\n    return this.userRoles.get(userId) || [];\n  }\n\n  /**\n   * Get all roles\n   */\n  getAllRoles(): GranularRole[] {\n    return Array.from(this.roles.values());\n  }\n\n  /**\n   * Get all permissions\n   */\n  getAllPermissions(): GranularPermission[] {\n    return Array.from(this.permissions.values());\n  }\n\n  /**\n   * Clear permission cache for user\n   */\n  clearUserCache(userId: string): void {\n    this.permissionCache.delete(userId);\n  }\n\n  /**\n   * Clear all permission caches\n   */\n  clearAllCaches(): void {\n    this.permissionCache.clear();\n  }\n}\n\nexport const granularRBACService = new GranularRBACService();\nexport default granularRBACService;"],
      names: ["granularRBACService", "GranularRBACService", "permissions", "Map", "roles", "userRoles", "permissionCache", "cacheTimeout", "initializeDefaultPermissions", "initializeDefaultRoles", "defaultPermissions", "id", "name", "resource", "action", "scope", "conditions", "field", "operator", "value", "timeRestrictions", "allowedHours", "start", "end", "allowedDays", "forEach", "permission", "set", "now", "Date", "defaultRoles", "description", "Array", "from", "keys", "isSystemRole", "isActive", "requiresMFA", "dataAccessLevel", "auditLevel", "maxSessions", "sessionTimeout", "createdAt", "updatedAt", "createdBy", "role", "checkAccess", "userId", "context", "data", "userPermissions", "getUserPermissions", "permissionId", "includes", "allowed", "reason", "requiredPermissions", "missingPermissions", "auditRequired", "riskScore", "get", "timeCheck", "checkTimeRestrictions", "timestamp", "ipRestrictions", "ipAddress", "ipCheck", "checkIPRestrictions", "location", "conditionCheck", "checkConditions", "calculateAccessRiskScore", "error", "console", "cached", "userRoleAssignments", "activeAssignments", "filter", "assignment", "expiresAt", "allPermissions", "Set", "roleId", "add", "inheritsFrom", "parentRoleId", "parentRole", "assignRole", "assignedBy", "Error", "assignedAt", "existingIndex", "findIndex", "a", "push", "delete", "removeRole", "updatedRoles", "map", "createRole", "Math", "random", "toString", "substr", "newRole", "updateRole", "updates", "updatedRole", "clear", "restrictions", "hour", "getHours", "day", "getDay", "isAllowedHour", "some", "range", "blockedIPs", "allowedIPs", "country", "blockedCountries", "allowedCountries", "condition", "fieldValue", "conditionValue", "conditionMet", "String", "Number", "isArray", "score", "actionScores", "scopeMultipliers", "min", "max", "getUserRoles", "getAllRoles", "values", "getAllPermissions", "clearUserCache", "clearAllCaches"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a252f1316845696ed79e58c370a7e4db177b62ad"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jej1skikm = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jej1skikm();
cov_2jej1skikm().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2jej1skikm().f[0]++;
  cov_2jej1skikm().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2jej1skikm().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2jej1skikm().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[1]++;
    cov_2jej1skikm().s[4]++;
    return _default;
  },
  get granularRBACService() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[2]++;
    cov_2jej1skikm().s[5]++;
    return granularRBACService;
  }
});
class GranularRBACService {
  constructor() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[3]++;
    cov_2jej1skikm().s[6]++;
    this.permissions = new Map();
    /* istanbul ignore next */
    cov_2jej1skikm().s[7]++;
    this.roles = new Map();
    /* istanbul ignore next */
    cov_2jej1skikm().s[8]++;
    this.userRoles = new Map();
    /* istanbul ignore next */
    cov_2jej1skikm().s[9]++;
    this.permissionCache = new Map();
    /* istanbul ignore next */
    cov_2jej1skikm().s[10]++;
    this.cacheTimeout = 5 * 60 * 1000; // 5 minutes
    /* istanbul ignore next */
    cov_2jej1skikm().s[11]++;
    this.initializeDefaultPermissions();
    /* istanbul ignore next */
    cov_2jej1skikm().s[12]++;
    this.initializeDefaultRoles();
  }
  /**
  * Initialize default system permissions
  */
  initializeDefaultPermissions() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[4]++;
    const defaultPermissions =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[13]++, [
    // User Management
    {
      id: 'users.read',
      name: 'Read Users',
      resource: 'users',
      action: 'read',
      scope: 'organization'
    }, {
      id: 'users.create',
      name: 'Create Users',
      resource: 'users',
      action: 'create',
      scope: 'organization'
    }, {
      id: 'users.update',
      name: 'Update Users',
      resource: 'users',
      action: 'update',
      scope: 'organization'
    }, {
      id: 'users.delete',
      name: 'Delete Users',
      resource: 'users',
      action: 'delete',
      scope: 'organization'
    },
    // Contact Management
    {
      id: 'contacts.read',
      name: 'Read Contacts',
      resource: 'contacts',
      action: 'read',
      scope: 'team'
    }, {
      id: 'contacts.create',
      name: 'Create Contacts',
      resource: 'contacts',
      action: 'create',
      scope: 'team'
    }, {
      id: 'contacts.update',
      name: 'Update Contacts',
      resource: 'contacts',
      action: 'update',
      scope: 'team'
    }, {
      id: 'contacts.delete',
      name: 'Delete Contacts',
      resource: 'contacts',
      action: 'delete',
      scope: 'team'
    },
    // Quote Management
    {
      id: 'quotes.read',
      name: 'Read Quotes',
      resource: 'quotes',
      action: 'read',
      scope: 'team'
    }, {
      id: 'quotes.create',
      name: 'Create Quotes',
      resource: 'quotes',
      action: 'create',
      scope: 'team'
    }, {
      id: 'quotes.update',
      name: 'Update Quotes',
      resource: 'quotes',
      action: 'update',
      scope: 'team'
    }, {
      id: 'quotes.delete',
      name: 'Delete Quotes',
      resource: 'quotes',
      action: 'delete',
      scope: 'team'
    }, {
      id: 'quotes.approve',
      name: 'Approve Quotes',
      resource: 'quotes',
      action: 'approve',
      scope: 'team',
      conditions: [{
        field: 'amount',
        operator: 'less_than',
        value: 10000
      }]
    },
    // Contract Management
    {
      id: 'contracts.read',
      name: 'Read Contracts',
      resource: 'contracts',
      action: 'read',
      scope: 'team'
    }, {
      id: 'contracts.create',
      name: 'Create Contracts',
      resource: 'contracts',
      action: 'create',
      scope: 'team'
    }, {
      id: 'contracts.update',
      name: 'Update Contracts',
      resource: 'contracts',
      action: 'update',
      scope: 'team'
    }, {
      id: 'contracts.delete',
      name: 'Delete Contracts',
      resource: 'contracts',
      action: 'delete',
      scope: 'team'
    }, {
      id: 'contracts.sign',
      name: 'Sign Contracts',
      resource: 'contracts',
      action: 'sign',
      scope: 'team'
    },
    // Invoice Management
    {
      id: 'invoices.read',
      name: 'Read Invoices',
      resource: 'invoices',
      action: 'read',
      scope: 'team'
    }, {
      id: 'invoices.create',
      name: 'Create Invoices',
      resource: 'invoices',
      action: 'create',
      scope: 'team'
    }, {
      id: 'invoices.update',
      name: 'Update Invoices',
      resource: 'invoices',
      action: 'update',
      scope: 'team'
    }, {
      id: 'invoices.delete',
      name: 'Delete Invoices',
      resource: 'invoices',
      action: 'delete',
      scope: 'team'
    }, {
      id: 'invoices.send',
      name: 'Send Invoices',
      resource: 'invoices',
      action: 'send',
      scope: 'team'
    },
    // Reporting
    {
      id: 'reports.read',
      name: 'Read Reports',
      resource: 'reports',
      action: 'read',
      scope: 'team'
    }, {
      id: 'reports.create',
      name: 'Create Reports',
      resource: 'reports',
      action: 'create',
      scope: 'team'
    }, {
      id: 'reports.export',
      name: 'Export Reports',
      resource: 'reports',
      action: 'export',
      scope: 'team'
    },
    // System Administration
    {
      id: 'system.admin',
      name: 'System Administration',
      resource: 'system',
      action: 'admin',
      scope: 'global',
      timeRestrictions: {
        allowedHours: [{
          start: 9,
          end: 17
        }],
        allowedDays: [1, 2, 3, 4, 5] // Monday-Friday
      }
    }, {
      id: 'audit.read',
      name: 'Read Audit Logs',
      resource: 'audit',
      action: 'read',
      scope: 'organization'
    }, {
      id: 'security.manage',
      name: 'Manage Security',
      resource: 'security',
      action: 'manage',
      scope: 'global'
    }]);
    /* istanbul ignore next */
    cov_2jej1skikm().s[14]++;
    defaultPermissions.forEach(permission => {
      /* istanbul ignore next */
      cov_2jej1skikm().f[5]++;
      cov_2jej1skikm().s[15]++;
      this.permissions.set(permission.id, permission);
    });
  }
  /**
  * Initialize default system roles
  */
  initializeDefaultRoles() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[6]++;
    const now =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[16]++, new Date());
    const defaultRoles =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[17]++, [{
      id: 'super_admin',
      name: 'Super Administrator',
      description: 'Full system access with all permissions',
      permissions: Array.from(this.permissions.keys()),
      isSystemRole: true,
      isActive: true,
      requiresMFA: true,
      dataAccessLevel: 'admin',
      auditLevel: 'full',
      maxSessions: 2,
      sessionTimeout: 60,
      createdAt: now,
      updatedAt: now,
      createdBy: 'system'
    }, {
      id: 'admin',
      name: 'Administrator',
      description: 'Organization administrator with most permissions',
      permissions: ['users.read', 'users.create', 'users.update', 'contacts.read', 'contacts.create', 'contacts.update', 'contacts.delete', 'quotes.read', 'quotes.create', 'quotes.update', 'quotes.delete', 'quotes.approve', 'contracts.read', 'contracts.create', 'contracts.update', 'contracts.delete', 'contracts.sign', 'invoices.read', 'invoices.create', 'invoices.update', 'invoices.delete', 'invoices.send', 'reports.read', 'reports.create', 'reports.export', 'audit.read'],
      isSystemRole: true,
      isActive: true,
      requiresMFA: true,
      dataAccessLevel: 'admin',
      auditLevel: 'detailed',
      maxSessions: 3,
      sessionTimeout: 120,
      createdAt: now,
      updatedAt: now,
      createdBy: 'system'
    }, {
      id: 'manager',
      name: 'Manager',
      description: 'Team manager with elevated permissions',
      permissions: ['contacts.read', 'contacts.create', 'contacts.update', 'quotes.read', 'quotes.create', 'quotes.update', 'quotes.approve', 'contracts.read', 'contracts.create', 'contracts.update', 'contracts.sign', 'invoices.read', 'invoices.create', 'invoices.update', 'invoices.send', 'reports.read', 'reports.create'],
      isSystemRole: true,
      isActive: true,
      requiresMFA: false,
      dataAccessLevel: 'write',
      auditLevel: 'basic',
      maxSessions: 2,
      sessionTimeout: 240,
      createdAt: now,
      updatedAt: now,
      createdBy: 'system'
    }, {
      id: 'sales_rep',
      name: 'Sales Representative',
      description: 'Sales team member with standard permissions',
      permissions: ['contacts.read', 'contacts.create', 'contacts.update', 'quotes.read', 'quotes.create', 'quotes.update', 'contracts.read', 'invoices.read', 'reports.read'],
      isSystemRole: true,
      isActive: true,
      requiresMFA: false,
      dataAccessLevel: 'write',
      auditLevel: 'basic',
      maxSessions: 1,
      sessionTimeout: 480,
      createdAt: now,
      updatedAt: now,
      createdBy: 'system'
    }, {
      id: 'viewer',
      name: 'Viewer',
      description: 'Read-only access to basic information',
      permissions: ['contacts.read', 'quotes.read', 'contracts.read', 'invoices.read', 'reports.read'],
      isSystemRole: true,
      isActive: true,
      requiresMFA: false,
      dataAccessLevel: 'read',
      auditLevel: 'basic',
      maxSessions: 1,
      sessionTimeout: 480,
      createdAt: now,
      updatedAt: now,
      createdBy: 'system'
    }]);
    /* istanbul ignore next */
    cov_2jej1skikm().s[18]++;
    defaultRoles.forEach(role => {
      /* istanbul ignore next */
      cov_2jej1skikm().f[7]++;
      cov_2jej1skikm().s[19]++;
      this.roles.set(role.id, role);
    });
  }
  /**
  * Check if user has permission to perform an action
  */
  async checkAccess(userId, resource, action, context, data) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[8]++;
    cov_2jej1skikm().s[20]++;
    try {
      const userPermissions =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[21]++, await this.getUserPermissions(userId));
      const permissionId =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[22]++, `${resource}.${action}`);
      // Check if user has the required permission
      /* istanbul ignore next */
      cov_2jej1skikm().s[23]++;
      if (!userPermissions.includes(permissionId)) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[0][0]++;
        cov_2jej1skikm().s[24]++;
        return {
          allowed: false,
          reason: 'Insufficient permissions',
          requiredPermissions: [permissionId],
          missingPermissions: [permissionId],
          auditRequired: true,
          riskScore: 0.7
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[0][1]++;
      }
      const permission =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[25]++, this.permissions.get(permissionId));
      /* istanbul ignore next */
      cov_2jej1skikm().s[26]++;
      if (!permission) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[1][0]++;
        cov_2jej1skikm().s[27]++;
        return {
          allowed: false,
          reason: 'Permission not found',
          auditRequired: true,
          riskScore: 0.8
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[1][1]++;
      }
      // Check time restrictions
      cov_2jej1skikm().s[28]++;
      if (permission.timeRestrictions) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[2][0]++;
        const timeCheck =
        /* istanbul ignore next */
        (cov_2jej1skikm().s[29]++, this.checkTimeRestrictions(permission.timeRestrictions, context.timestamp));
        /* istanbul ignore next */
        cov_2jej1skikm().s[30]++;
        if (!timeCheck.allowed) {
          /* istanbul ignore next */
          cov_2jej1skikm().b[3][0]++;
          cov_2jej1skikm().s[31]++;
          return {
            allowed: false,
            reason: timeCheck.reason,
            auditRequired: true,
            riskScore: 0.6
          };
        } else
        /* istanbul ignore next */
        {
          cov_2jej1skikm().b[3][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[2][1]++;
      }
      // Check IP restrictions
      cov_2jej1skikm().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_2jej1skikm().b[5][0]++, permission.ipRestrictions) &&
      /* istanbul ignore next */
      (cov_2jej1skikm().b[5][1]++, context.ipAddress)) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[4][0]++;
        const ipCheck =
        /* istanbul ignore next */
        (cov_2jej1skikm().s[33]++, this.checkIPRestrictions(permission.ipRestrictions, context.ipAddress, context.location));
        /* istanbul ignore next */
        cov_2jej1skikm().s[34]++;
        if (!ipCheck.allowed) {
          /* istanbul ignore next */
          cov_2jej1skikm().b[6][0]++;
          cov_2jej1skikm().s[35]++;
          return {
            allowed: false,
            reason: ipCheck.reason,
            auditRequired: true,
            riskScore: 0.9
          };
        } else
        /* istanbul ignore next */
        {
          cov_2jej1skikm().b[6][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[4][1]++;
      }
      // Check data conditions
      cov_2jej1skikm().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_2jej1skikm().b[8][0]++, permission.conditions) &&
      /* istanbul ignore next */
      (cov_2jej1skikm().b[8][1]++, data)) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[7][0]++;
        const conditionCheck =
        /* istanbul ignore next */
        (cov_2jej1skikm().s[37]++, this.checkConditions(permission.conditions, data));
        /* istanbul ignore next */
        cov_2jej1skikm().s[38]++;
        if (!conditionCheck.allowed) {
          /* istanbul ignore next */
          cov_2jej1skikm().b[9][0]++;
          cov_2jej1skikm().s[39]++;
          return {
            allowed: false,
            reason: conditionCheck.reason,
            auditRequired: true,
            riskScore: 0.5
          };
        } else
        /* istanbul ignore next */
        {
          cov_2jej1skikm().b[9][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[7][1]++;
      }
      // Calculate risk score
      const riskScore =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[40]++, this.calculateAccessRiskScore(permission, context, data));
      /* istanbul ignore next */
      cov_2jej1skikm().s[41]++;
      return {
        allowed: true,
        auditRequired: riskScore > 0.5,
        riskScore
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2jej1skikm().s[42]++;
      console.error('Error checking access:', error);
      /* istanbul ignore next */
      cov_2jej1skikm().s[43]++;
      return {
        allowed: false,
        reason: 'Access check failed',
        auditRequired: true,
        riskScore: 1.0
      };
    }
  }
  /**
  * Get all permissions for a user
  */
  async getUserPermissions(userId) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[9]++;
    // Check cache first
    const cached =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[44]++, this.permissionCache.get(userId));
    /* istanbul ignore next */
    cov_2jej1skikm().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_2jej1skikm().b[11][0]++, cached) &&
    /* istanbul ignore next */
    (cov_2jej1skikm().b[11][1]++, Date.now() - cached.timestamp < this.cacheTimeout)) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[10][0]++;
      cov_2jej1skikm().s[46]++;
      return cached.permissions;
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[10][1]++;
    }
    const userRoleAssignments =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[47]++,
    /* istanbul ignore next */
    (cov_2jej1skikm().b[12][0]++, this.userRoles.get(userId)) ||
    /* istanbul ignore next */
    (cov_2jej1skikm().b[12][1]++, []));
    const activeAssignments =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[48]++, userRoleAssignments.filter(assignment => {
      /* istanbul ignore next */
      cov_2jej1skikm().f[10]++;
      cov_2jej1skikm().s[49]++;
      return /* istanbul ignore next */(cov_2jej1skikm().b[13][0]++, assignment.isActive) && (
      /* istanbul ignore next */
      (cov_2jej1skikm().b[13][1]++, !assignment.expiresAt) ||
      /* istanbul ignore next */
      (cov_2jej1skikm().b[13][2]++, assignment.expiresAt > new Date()));
    }));
    const allPermissions =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[50]++, new Set());
    /* istanbul ignore next */
    cov_2jej1skikm().s[51]++;
    for (const assignment of activeAssignments) {
      const role =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[52]++, this.roles.get(assignment.roleId));
      /* istanbul ignore next */
      cov_2jej1skikm().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_2jej1skikm().b[15][0]++, role) &&
      /* istanbul ignore next */
      (cov_2jej1skikm().b[15][1]++, role.isActive)) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[14][0]++;
        cov_2jej1skikm().s[54]++;
        // Add direct permissions
        role.permissions.forEach(permissionId => {
          /* istanbul ignore next */
          cov_2jej1skikm().f[11]++;
          cov_2jej1skikm().s[55]++;
          return allPermissions.add(permissionId);
        });
        // Add inherited permissions
        /* istanbul ignore next */
        cov_2jej1skikm().s[56]++;
        if (role.inheritsFrom) {
          /* istanbul ignore next */
          cov_2jej1skikm().b[16][0]++;
          cov_2jej1skikm().s[57]++;
          for (const parentRoleId of role.inheritsFrom) {
            const parentRole =
            /* istanbul ignore next */
            (cov_2jej1skikm().s[58]++, this.roles.get(parentRoleId));
            /* istanbul ignore next */
            cov_2jej1skikm().s[59]++;
            if (
            /* istanbul ignore next */
            (cov_2jej1skikm().b[18][0]++, parentRole) &&
            /* istanbul ignore next */
            (cov_2jej1skikm().b[18][1]++, parentRole.isActive)) {
              /* istanbul ignore next */
              cov_2jej1skikm().b[17][0]++;
              cov_2jej1skikm().s[60]++;
              parentRole.permissions.forEach(permissionId => {
                /* istanbul ignore next */
                cov_2jej1skikm().f[12]++;
                cov_2jej1skikm().s[61]++;
                return allPermissions.add(permissionId);
              });
            } else
            /* istanbul ignore next */
            {
              cov_2jej1skikm().b[17][1]++;
            }
          }
        } else
        /* istanbul ignore next */
        {
          cov_2jej1skikm().b[16][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[14][1]++;
      }
    }
    const permissions =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[62]++, Array.from(allPermissions));
    // Cache the result
    /* istanbul ignore next */
    cov_2jej1skikm().s[63]++;
    this.permissionCache.set(userId, {
      permissions,
      timestamp: Date.now()
    });
    /* istanbul ignore next */
    cov_2jej1skikm().s[64]++;
    return permissions;
  }
  /**
  * Assign role to user
  */
  async assignRole(userId, roleId, assignedBy, expiresAt, conditions) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[13]++;
    cov_2jej1skikm().s[65]++;
    try {
      const role =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[66]++, this.roles.get(roleId));
      /* istanbul ignore next */
      cov_2jej1skikm().s[67]++;
      if (
      /* istanbul ignore next */
      (cov_2jej1skikm().b[20][0]++, !role) ||
      /* istanbul ignore next */
      (cov_2jej1skikm().b[20][1]++, !role.isActive)) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[19][0]++;
        cov_2jej1skikm().s[68]++;
        throw new Error('Role not found or inactive');
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[19][1]++;
      }
      const assignment =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[69]++, {
        userId,
        roleId,
        assignedBy,
        assignedAt: new Date(),
        expiresAt,
        isActive: true,
        conditions
      });
      const userRoles =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[70]++,
      /* istanbul ignore next */
      (cov_2jej1skikm().b[21][0]++, this.userRoles.get(userId)) ||
      /* istanbul ignore next */
      (cov_2jej1skikm().b[21][1]++, []));
      // Check if assignment already exists
      const existingIndex =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[71]++, userRoles.findIndex(a => {
        /* istanbul ignore next */
        cov_2jej1skikm().f[14]++;
        cov_2jej1skikm().s[72]++;
        return /* istanbul ignore next */(cov_2jej1skikm().b[22][0]++, a.roleId === roleId) &&
        /* istanbul ignore next */
        (cov_2jej1skikm().b[22][1]++, a.isActive);
      }));
      /* istanbul ignore next */
      cov_2jej1skikm().s[73]++;
      if (existingIndex >= 0) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[23][0]++;
        cov_2jej1skikm().s[74]++;
        userRoles[existingIndex] = assignment; // Update existing
      } else {
        /* istanbul ignore next */
        cov_2jej1skikm().b[23][1]++;
        cov_2jej1skikm().s[75]++;
        userRoles.push(assignment); // Add new
      }
      /* istanbul ignore next */
      cov_2jej1skikm().s[76]++;
      this.userRoles.set(userId, userRoles);
      // Clear permission cache
      /* istanbul ignore next */
      cov_2jej1skikm().s[77]++;
      this.permissionCache.delete(userId);
      /* istanbul ignore next */
      cov_2jej1skikm().s[78]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2jej1skikm().s[79]++;
      console.error('Error assigning role:', error);
      /* istanbul ignore next */
      cov_2jej1skikm().s[80]++;
      return false;
    }
  }
  /**
  * Remove role from user
  */
  async removeRole(userId, roleId) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[15]++;
    cov_2jej1skikm().s[81]++;
    try {
      const userRoles =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[82]++,
      /* istanbul ignore next */
      (cov_2jej1skikm().b[24][0]++, this.userRoles.get(userId)) ||
      /* istanbul ignore next */
      (cov_2jej1skikm().b[24][1]++, []));
      const updatedRoles =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[83]++, userRoles.map(assignment => {
        /* istanbul ignore next */
        cov_2jej1skikm().f[16]++;
        cov_2jej1skikm().s[84]++;
        return assignment.roleId === roleId ?
        /* istanbul ignore next */
        (cov_2jej1skikm().b[25][0]++, {
          ...assignment,
          isActive: false
        }) :
        /* istanbul ignore next */
        (cov_2jej1skikm().b[25][1]++, assignment);
      }));
      /* istanbul ignore next */
      cov_2jej1skikm().s[85]++;
      this.userRoles.set(userId, updatedRoles);
      // Clear permission cache
      /* istanbul ignore next */
      cov_2jej1skikm().s[86]++;
      this.permissionCache.delete(userId);
      /* istanbul ignore next */
      cov_2jej1skikm().s[87]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2jej1skikm().s[88]++;
      console.error('Error removing role:', error);
      /* istanbul ignore next */
      cov_2jej1skikm().s[89]++;
      return false;
    }
  }
  /**
  * Create custom role
  */
  async createRole(role) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[17]++;
    const roleId =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[90]++, `custom_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`);
    const now =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[91]++, new Date());
    const newRole =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[92]++, {
      ...role,
      id: roleId,
      createdAt: now,
      updatedAt: now
    });
    /* istanbul ignore next */
    cov_2jej1skikm().s[93]++;
    this.roles.set(roleId, newRole);
    /* istanbul ignore next */
    cov_2jej1skikm().s[94]++;
    return roleId;
  }
  /**
  * Update role
  */
  async updateRole(roleId, updates) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[18]++;
    cov_2jej1skikm().s[95]++;
    try {
      const role =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[96]++, this.roles.get(roleId));
      /* istanbul ignore next */
      cov_2jej1skikm().s[97]++;
      if (!role) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[26][0]++;
        cov_2jej1skikm().s[98]++;
        throw new Error('Role not found');
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[26][1]++;
      }
      cov_2jej1skikm().s[99]++;
      if (
      /* istanbul ignore next */
      (cov_2jej1skikm().b[28][0]++, role.isSystemRole) &&
      /* istanbul ignore next */
      (cov_2jej1skikm().b[28][1]++, updates.permissions)) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[27][0]++;
        cov_2jej1skikm().s[100]++;
        throw new Error('Cannot modify permissions of system roles');
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[27][1]++;
      }
      const updatedRole =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[101]++, {
        ...role,
        ...updates,
        id: roleId,
        updatedAt: new Date()
      });
      /* istanbul ignore next */
      cov_2jej1skikm().s[102]++;
      this.roles.set(roleId, updatedRole);
      // Clear all permission caches since role permissions changed
      /* istanbul ignore next */
      cov_2jej1skikm().s[103]++;
      this.permissionCache.clear();
      /* istanbul ignore next */
      cov_2jej1skikm().s[104]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2jej1skikm().s[105]++;
      console.error('Error updating role:', error);
      /* istanbul ignore next */
      cov_2jej1skikm().s[106]++;
      return false;
    }
  }
  /**
  * Check time restrictions
  */
  checkTimeRestrictions(restrictions, timestamp) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[19]++;
    const hour =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[107]++, timestamp.getHours());
    const day =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[108]++, timestamp.getDay());
    // Check allowed hours
    /* istanbul ignore next */
    cov_2jej1skikm().s[109]++;
    if (restrictions.allowedHours) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[29][0]++;
      const isAllowedHour =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[110]++, restrictions.allowedHours.some(range => {
        /* istanbul ignore next */
        cov_2jej1skikm().f[20]++;
        cov_2jej1skikm().s[111]++;
        return /* istanbul ignore next */(cov_2jej1skikm().b[30][0]++, hour >= range.start) &&
        /* istanbul ignore next */
        (cov_2jej1skikm().b[30][1]++, hour <= range.end);
      }));
      /* istanbul ignore next */
      cov_2jej1skikm().s[112]++;
      if (!isAllowedHour) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[31][0]++;
        cov_2jej1skikm().s[113]++;
        return {
          allowed: false,
          reason: 'Access not allowed during current hours'
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[31][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[29][1]++;
    }
    // Check allowed days
    cov_2jej1skikm().s[114]++;
    if (
    /* istanbul ignore next */
    (cov_2jej1skikm().b[33][0]++, restrictions.allowedDays) &&
    /* istanbul ignore next */
    (cov_2jej1skikm().b[33][1]++, !restrictions.allowedDays.includes(day))) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[32][0]++;
      cov_2jej1skikm().s[115]++;
      return {
        allowed: false,
        reason: 'Access not allowed on current day'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[32][1]++;
    }
    cov_2jej1skikm().s[116]++;
    return {
      allowed: true
    };
  }
  /**
  * Check IP restrictions
  */
  checkIPRestrictions(restrictions, ipAddress, location) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[21]++;
    cov_2jej1skikm().s[117]++;
    // Check blocked IPs
    if (restrictions.blockedIPs?.includes(ipAddress)) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[34][0]++;
      cov_2jej1skikm().s[118]++;
      return {
        allowed: false,
        reason: 'IP address is blocked'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[34][1]++;
    }
    // Check allowed IPs
    cov_2jej1skikm().s[119]++;
    if (
    /* istanbul ignore next */
    (cov_2jej1skikm().b[36][0]++, restrictions.allowedIPs) &&
    /* istanbul ignore next */
    (cov_2jej1skikm().b[36][1]++, !restrictions.allowedIPs.includes(ipAddress))) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[35][0]++;
      cov_2jej1skikm().s[120]++;
      return {
        allowed: false,
        reason: 'IP address not in allowed list'
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[35][1]++;
    }
    // Check country restrictions
    cov_2jej1skikm().s[121]++;
    if (location?.country) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[37][0]++;
      cov_2jej1skikm().s[122]++;
      if (restrictions.blockedCountries?.includes(location.country)) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[38][0]++;
        cov_2jej1skikm().s[123]++;
        return {
          allowed: false,
          reason: 'Access blocked from current country'
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[38][1]++;
      }
      cov_2jej1skikm().s[124]++;
      if (
      /* istanbul ignore next */
      (cov_2jej1skikm().b[40][0]++, restrictions.allowedCountries) &&
      /* istanbul ignore next */
      (cov_2jej1skikm().b[40][1]++, !restrictions.allowedCountries.includes(location.country))) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[39][0]++;
        cov_2jej1skikm().s[125]++;
        return {
          allowed: false,
          reason: 'Country not in allowed list'
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[39][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[37][1]++;
    }
    cov_2jej1skikm().s[126]++;
    return {
      allowed: true
    };
  }
  /**
  * Check data conditions
  */
  checkConditions(conditions, data) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[22]++;
    cov_2jej1skikm().s[127]++;
    if (!conditions) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[41][0]++;
      cov_2jej1skikm().s[128]++;
      return {
        allowed: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[41][1]++;
    }
    cov_2jej1skikm().s[129]++;
    for (const condition of conditions) {
      const fieldValue =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[130]++, data[
      /* istanbul ignore next */
      (cov_2jej1skikm().b[42][0]++, condition.field) ||
      /* istanbul ignore next */
      (cov_2jej1skikm().b[42][1]++, '')]);
      const conditionValue =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[131]++, condition.value);
      let conditionMet =
      /* istanbul ignore next */
      (cov_2jej1skikm().s[132]++, false);
      /* istanbul ignore next */
      cov_2jej1skikm().s[133]++;
      switch (condition.operator) {
        case 'equals':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][0]++;
          cov_2jej1skikm().s[134]++;
          conditionMet = fieldValue === conditionValue;
          /* istanbul ignore next */
          cov_2jej1skikm().s[135]++;
          break;
        case 'not_equals':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][1]++;
          cov_2jej1skikm().s[136]++;
          conditionMet = fieldValue !== conditionValue;
          /* istanbul ignore next */
          cov_2jej1skikm().s[137]++;
          break;
        case 'contains':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][2]++;
          cov_2jej1skikm().s[138]++;
          conditionMet = String(fieldValue).includes(String(conditionValue));
          /* istanbul ignore next */
          cov_2jej1skikm().s[139]++;
          break;
        case 'not_contains':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][3]++;
          cov_2jej1skikm().s[140]++;
          conditionMet = !String(fieldValue).includes(String(conditionValue));
          /* istanbul ignore next */
          cov_2jej1skikm().s[141]++;
          break;
        case 'greater_than':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][4]++;
          cov_2jej1skikm().s[142]++;
          conditionMet = Number(fieldValue) > Number(conditionValue);
          /* istanbul ignore next */
          cov_2jej1skikm().s[143]++;
          break;
        case 'less_than':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][5]++;
          cov_2jej1skikm().s[144]++;
          conditionMet = Number(fieldValue) < Number(conditionValue);
          /* istanbul ignore next */
          cov_2jej1skikm().s[145]++;
          break;
        case 'in':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][6]++;
          cov_2jej1skikm().s[146]++;
          conditionMet =
          /* istanbul ignore next */
          (cov_2jej1skikm().b[44][0]++, Array.isArray(conditionValue)) &&
          /* istanbul ignore next */
          (cov_2jej1skikm().b[44][1]++, conditionValue.includes(fieldValue));
          /* istanbul ignore next */
          cov_2jej1skikm().s[147]++;
          break;
        case 'not_in':
          /* istanbul ignore next */
          cov_2jej1skikm().b[43][7]++;
          cov_2jej1skikm().s[148]++;
          conditionMet =
          /* istanbul ignore next */
          (cov_2jej1skikm().b[45][0]++, Array.isArray(conditionValue)) &&
          /* istanbul ignore next */
          (cov_2jej1skikm().b[45][1]++, !conditionValue.includes(fieldValue));
          /* istanbul ignore next */
          cov_2jej1skikm().s[149]++;
          break;
      }
      /* istanbul ignore next */
      cov_2jej1skikm().s[150]++;
      if (!conditionMet) {
        /* istanbul ignore next */
        cov_2jej1skikm().b[46][0]++;
        cov_2jej1skikm().s[151]++;
        return {
          allowed: false,
          reason: `Condition not met: ${condition.field} ${condition.operator} ${condition.value}`
        };
      } else
      /* istanbul ignore next */
      {
        cov_2jej1skikm().b[46][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2jej1skikm().s[152]++;
    return {
      allowed: true
    };
  }
  /**
  * Calculate access risk score
  */
  calculateAccessRiskScore(permission, context, data) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[23]++;
    let score =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[153]++, 0);
    // Base score by action sensitivity
    const actionScores =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[154]++, {
      'delete': 0.8,
      'admin': 0.9,
      'create': 0.4,
      'update': 0.5,
      'read': 0.1
    });
    /* istanbul ignore next */
    cov_2jej1skikm().s[155]++;
    score +=
    /* istanbul ignore next */
    (cov_2jej1skikm().b[47][0]++, actionScores[permission.action]) ||
    /* istanbul ignore next */
    (cov_2jej1skikm().b[47][1]++, 0.3);
    // Scope multiplier
    const scopeMultipliers =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[156]++, {
      'global': 1.0,
      'organization': 0.8,
      'team': 0.6,
      'personal': 0.4
    });
    /* istanbul ignore next */
    cov_2jej1skikm().s[157]++;
    score *= scopeMultipliers[
    /* istanbul ignore next */
    (cov_2jej1skikm().b[48][0]++, permission.scope) ||
    /* istanbul ignore next */
    (cov_2jej1skikm().b[48][1]++, 'team')];
    // Time-based risk
    const hour =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[158]++, context.timestamp.getHours());
    /* istanbul ignore next */
    cov_2jej1skikm().s[159]++;
    if (
    /* istanbul ignore next */
    (cov_2jej1skikm().b[50][0]++, hour < 6) ||
    /* istanbul ignore next */
    (cov_2jej1skikm().b[50][1]++, hour > 22)) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[49][0]++;
      cov_2jej1skikm().s[160]++;
      score += 0.2; // Off-hours access
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[49][1]++;
    }
    // Weekend access
    const day =
    /* istanbul ignore next */
    (cov_2jej1skikm().s[161]++, context.timestamp.getDay());
    /* istanbul ignore next */
    cov_2jej1skikm().s[162]++;
    if (
    /* istanbul ignore next */
    (cov_2jej1skikm().b[52][0]++, day === 0) ||
    /* istanbul ignore next */
    (cov_2jej1skikm().b[52][1]++, day === 6)) {
      /* istanbul ignore next */
      cov_2jej1skikm().b[51][0]++;
      cov_2jej1skikm().s[163]++;
      score += 0.1;
    } else
    /* istanbul ignore next */
    {
      cov_2jej1skikm().b[51][1]++;
    }
    cov_2jej1skikm().s[164]++;
    return Math.min(Math.max(score, 0), 1);
  }
  /**
  * Get user roles
  */
  getUserRoles(userId) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[24]++;
    cov_2jej1skikm().s[165]++;
    return /* istanbul ignore next */(cov_2jej1skikm().b[53][0]++, this.userRoles.get(userId)) ||
    /* istanbul ignore next */
    (cov_2jej1skikm().b[53][1]++, []);
  }
  /**
  * Get all roles
  */
  getAllRoles() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[25]++;
    cov_2jej1skikm().s[166]++;
    return Array.from(this.roles.values());
  }
  /**
  * Get all permissions
  */
  getAllPermissions() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[26]++;
    cov_2jej1skikm().s[167]++;
    return Array.from(this.permissions.values());
  }
  /**
  * Clear permission cache for user
  */
  clearUserCache(userId) {
    /* istanbul ignore next */
    cov_2jej1skikm().f[27]++;
    cov_2jej1skikm().s[168]++;
    this.permissionCache.delete(userId);
  }
  /**
  * Clear all permission caches
  */
  clearAllCaches() {
    /* istanbul ignore next */
    cov_2jej1skikm().f[28]++;
    cov_2jej1skikm().s[169]++;
    this.permissionCache.clear();
  }
}
const granularRBACService =
/* istanbul ignore next */
(cov_2jej1skikm().s[170]++, new GranularRBACService());
const _default =
/* istanbul ignore next */
(cov_2jej1skikm().s[171]++, granularRBACService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,