48f1800f074b1ab5758e68cd984fba51
// React hooks for performance monitoring and Web Vitals tracking
"use strict";

/* istanbul ignore next */
function cov_1xpdjfyitg() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\usePerformance.ts";
  var hash = "bdd4ed1fac119889569c3ae3bfd4934078bd2603";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\usePerformance.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 28
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "11": {
        start: {
          line: 35,
          column: 29
        },
        end: {
          line: 35,
          column: 72
        }
      },
      "12": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 52
        }
      },
      "13": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "14": {
        start: {
          line: 38,
          column: 39
        },
        end: {
          line: 38,
          column: 51
        }
      },
      "15": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 39,
          column: 41
        }
      },
      "16": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "17": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 66
        }
      },
      "19": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 19
        }
      },
      "21": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 53,
          column: 5
        }
      },
      "22": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 52,
          column: 10
        }
      },
      "23": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 53
        }
      },
      "24": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "25": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 30
        }
      },
      "26": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "27": {
        start: {
          line: 61,
          column: 32
        },
        end: {
          line: 61,
          column: 88
        }
      },
      "28": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "29": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "30": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 64,
          column: 95
        }
      },
      "31": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 13
        }
      },
      "32": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 57
        }
      },
      "33": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 39
        }
      },
      "34": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 72,
          column: 25
        }
      },
      "35": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "36": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 31
        }
      },
      "37": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 18
        }
      },
      "38": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 98
        }
      },
      "39": {
        start: {
          line: 80,
          column: 30
        },
        end: {
          line: 80,
          column: 92
        }
      },
      "40": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "41": {
        start: {
          line: 82,
          column: 28
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "42": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 35
        }
      },
      "43": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 63
        }
      },
      "44": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 27
        }
      },
      "45": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "46": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 67
        }
      },
      "47": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 63
        }
      },
      "48": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 98,
          column: 48
        }
      },
      "49": {
        start: {
          line: 99,
          column: 25
        },
        end: {
          line: 99,
          column: 46
        }
      },
      "50": {
        start: {
          line: 100,
          column: 42
        },
        end: {
          line: 100,
          column: 66
        }
      },
      "51": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "52": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 33
        }
      },
      "53": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 41
        }
      },
      "54": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "55": {
        start: {
          line: 105,
          column: 31
        },
        end: {
          line: 105,
          column: 61
        }
      },
      "56": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 109,
          column: 19
        }
      },
      "57": {
        start: {
          line: 106,
          column: 35
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "58": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 82
        }
      },
      "59": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 39
        }
      },
      "60": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 115,
          column: 126
        }
      },
      "61": {
        start: {
          line: 115,
          column: 87
        },
        end: {
          line: 115,
          column: 97
        }
      },
      "62": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 121,
          column: 6
        }
      },
      "63": {
        start: {
          line: 124,
          column: 40
        },
        end: {
          line: 128,
          column: 6
        }
      },
      "64": {
        start: {
          line: 129,
          column: 27
        },
        end: {
          line: 186,
          column: 10
        }
      },
      "65": {
        start: {
          line: 130,
          column: 26
        },
        end: {
          line: 130,
          column: 43
        }
      },
      "66": {
        start: {
          line: 131,
          column: 26
        },
        end: {
          line: 131,
          column: 63
        }
      },
      "67": {
        start: {
          line: 132,
          column: 24
        },
        end: {
          line: 132,
          column: 59
        }
      },
      "68": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 36
        }
      },
      "69": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "70": {
        start: {
          line: 135,
          column: 27
        },
        end: {
          line: 135,
          column: 42
        }
      },
      "71": {
        start: {
          line: 136,
          column: 28
        },
        end: {
          line: 136,
          column: 45
        }
      },
      "72": {
        start: {
          line: 137,
          column: 29
        },
        end: {
          line: 137,
          column: 48
        }
      },
      "73": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 38
        }
      },
      "74": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 71
        }
      },
      "75": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "76": {
        start: {
          line: 141,
          column: 33
        },
        end: {
          line: 149,
          column: 17
        }
      },
      "77": {
        start: {
          line: 150,
          column: 40
        },
        end: {
          line: 150,
          column: 110
        }
      },
      "78": {
        start: {
          line: 150,
          column: 69
        },
        end: {
          line: 150,
          column: 88
        }
      },
      "79": {
        start: {
          line: 151,
          column: 35
        },
        end: {
          line: 151,
          column: 90
        }
      },
      "80": {
        start: {
          line: 151,
          column: 59
        },
        end: {
          line: 151,
          column: 82
        }
      },
      "81": {
        start: {
          line: 152,
          column: 34
        },
        end: {
          line: 152,
          column: 68
        }
      },
      "82": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 157,
          column: 18
        }
      },
      "83": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 26
        }
      },
      "84": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 45
        }
      },
      "85": {
        start: {
          line: 162,
          column: 29
        },
        end: {
          line: 162,
          column: 48
        }
      },
      "86": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 38
        }
      },
      "87": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 77
        }
      },
      "88": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 183,
          column: 15
        }
      },
      "89": {
        start: {
          line: 166,
          column: 33
        },
        end: {
          line: 174,
          column: 17
        }
      },
      "90": {
        start: {
          line: 175,
          column: 40
        },
        end: {
          line: 175,
          column: 110
        }
      },
      "91": {
        start: {
          line: 175,
          column: 69
        },
        end: {
          line: 175,
          column: 88
        }
      },
      "92": {
        start: {
          line: 176,
          column: 35
        },
        end: {
          line: 176,
          column: 90
        }
      },
      "93": {
        start: {
          line: 176,
          column: 59
        },
        end: {
          line: 176,
          column: 82
        }
      },
      "94": {
        start: {
          line: 177,
          column: 34
        },
        end: {
          line: 177,
          column: 68
        }
      },
      "95": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 182,
          column: 18
        }
      },
      "96": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 24
        }
      },
      "97": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 190,
          column: 6
        }
      },
      "98": {
        start: {
          line: 193,
          column: 44
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "99": {
        start: {
          line: 197,
          column: 31
        },
        end: {
          line: 218,
          column: 10
        }
      },
      "100": {
        start: {
          line: 198,
          column: 24
        },
        end: {
          line: 198,
          column: 41
        }
      },
      "101": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 44
        }
      },
      "102": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 200,
          column: 47
        }
      },
      "103": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 107
        }
      },
      "104": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 217,
          column: 11
        }
      },
      "105": {
        start: {
          line: 203,
          column: 31
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "106": {
        start: {
          line: 212,
          column: 34
        },
        end: {
          line: 212,
          column: 112
        }
      },
      "107": {
        start: {
          line: 212,
          column: 67
        },
        end: {
          line: 212,
          column: 88
        }
      },
      "108": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 14
        }
      },
      "109": {
        start: {
          line: 219,
          column: 29
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "110": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 54
        }
      },
      "111": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 33
        }
      },
      "112": {
        start: {
          line: 223,
          column: 4
        },
        end: {
          line: 227,
          column: 6
        }
      },
      "113": {
        start: {
          line: 230,
          column: 40
        },
        end: {
          line: 230,
          column: 66
        }
      },
      "114": {
        start: {
          line: 231,
          column: 29
        },
        end: {
          line: 245,
          column: 10
        }
      },
      "115": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "116": {
        start: {
          line: 233,
          column: 27
        },
        end: {
          line: 233,
          column: 45
        }
      },
      "117": {
        start: {
          line: 234,
          column: 25
        },
        end: {
          line: 234,
          column: 72
        }
      },
      "118": {
        start: {
          line: 235,
          column: 26
        },
        end: {
          line: 235,
          column: 74
        }
      },
      "119": {
        start: {
          line: 236,
          column: 26
        },
        end: {
          line: 236,
          column: 74
        }
      },
      "120": {
        start: {
          line: 237,
          column: 31
        },
        end: {
          line: 237,
          column: 61
        }
      },
      "121": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 243,
          column: 15
        }
      },
      "122": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 252,
          column: 7
        }
      },
      "123": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 27
        }
      },
      "124": {
        start: {
          line: 248,
          column: 25
        },
        end: {
          line: 248,
          column: 60
        }
      },
      "125": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 43
        }
      },
      "126": {
        start: {
          line: 249,
          column: 19
        },
        end: {
          line: 249,
          column: 42
        }
      },
      "127": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 257,
          column: 6
        }
      },
      "128": {
        start: {
          line: 260,
          column: 22
        },
        end: {
          line: 260,
          column: 36
        }
      },
      "129": {
        start: {
          line: 261,
          column: 19
        },
        end: {
          line: 261,
          column: 40
        }
      },
      "130": {
        start: {
          line: 262,
          column: 44
        },
        end: {
          line: 262,
          column: 70
        }
      },
      "131": {
        start: {
          line: 263,
          column: 54
        },
        end: {
          line: 263,
          column: 78
        }
      },
      "132": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 316,
          column: 7
        }
      },
      "133": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 34
        }
      },
      "134": {
        start: {
          line: 266,
          column: 27
        },
        end: {
          line: 266,
          column: 34
        }
      },
      "135": {
        start: {
          line: 267,
          column: 33
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "136": {
        start: {
          line: 268,
          column: 27
        },
        end: {
          line: 268,
          column: 29
        }
      },
      "137": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 277,
          column: 13
        }
      },
      "138": {
        start: {
          line: 271,
          column: 16
        },
        end: {
          line: 276,
          column: 19
        }
      },
      "139": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 285,
          column: 13
        }
      },
      "140": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 284,
          column: 19
        }
      },
      "141": {
        start: {
          line: 286,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "142": {
        start: {
          line: 287,
          column: 16
        },
        end: {
          line: 292,
          column: 19
        }
      },
      "143": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 302,
          column: 13
        }
      },
      "144": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 301,
          column: 19
        }
      },
      "145": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 308,
          column: 13
        }
      },
      "146": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 307,
          column: 23
        }
      },
      "147": {
        start: {
          line: 304,
          column: 45
        },
        end: {
          line: 307,
          column: 21
        }
      },
      "148": {
        start: {
          line: 310,
          column: 25
        },
        end: {
          line: 310,
          column: 61
        }
      },
      "149": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 311,
          column: 43
        }
      },
      "150": {
        start: {
          line: 311,
          column: 19
        },
        end: {
          line: 311,
          column: 42
        }
      },
      "151": {
        start: {
          line: 317,
          column: 27
        },
        end: {
          line: 331,
          column: 6
        }
      },
      "152": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 326,
          column: 10
        }
      },
      "153": {
        start: {
          line: 332,
          column: 24
        },
        end: {
          line: 334,
          column: 10
        }
      },
      "154": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 33
        }
      },
      "155": {
        start: {
          line: 335,
          column: 4
        },
        end: {
          line: 345,
          column: 6
        }
      },
      "156": {
        start: {
          line: 348,
          column: 4
        },
        end: {
          line: 358,
          column: 6
        }
      },
      "157": {
        start: {
          line: 349,
          column: 27
        },
        end: {
          line: 349,
          column: 62
        }
      },
      "158": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "159": {
        start: {
          line: 351,
          column: 12
        },
        end: {
          line: 353,
          column: 13
        }
      },
      "160": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 352,
          column: 125
        }
      },
      "161": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 61
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 36
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 33
          }
        },
        loc: {
          start: {
            line: 37,
            column: 47
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 37
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 41,
            column: 39
          },
          end: {
            line: 41,
            column: 40
          }
        },
        loc: {
          start: {
            line: 41,
            column: 61
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 41
      },
      "10": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 34
          }
        },
        loc: {
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 77,
            column: 1
          }
        },
        line: 45
      },
      "11": {
        name: "useWebVitals",
        decl: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 21
          }
        },
        loc: {
          start: {
            line: 78,
            column: 24
          },
          end: {
            line: 96,
            column: 1
          }
        },
        line: 78
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 81,
            column: 26
          },
          end: {
            line: 81,
            column: 27
          }
        },
        loc: {
          start: {
            line: 81,
            column: 30
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 81
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 82,
            column: 67
          },
          end: {
            line: 82,
            column: 68
          }
        },
        loc: {
          start: {
            line: 82,
            column: 81
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 82
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 91,
            column: 17
          },
          end: {
            line: 91,
            column: 18
          }
        },
        loc: {
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 94,
            column: 9
          }
        },
        line: 91
      },
      "15": {
        name: "useRenderPerformance",
        decl: {
          start: {
            line: 97,
            column: 9
          },
          end: {
            line: 97,
            column: 29
          }
        },
        loc: {
          start: {
            line: 97,
            column: 45
          },
          end: {
            line: 122,
            column: 1
          }
        },
        line: 97
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 101,
            column: 26
          },
          end: {
            line: 101,
            column: 27
          }
        },
        loc: {
          start: {
            line: 101,
            column: 30
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 101
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 106,
            column: 27
          },
          end: {
            line: 106,
            column: 28
          }
        },
        loc: {
          start: {
            line: 106,
            column: 35
          },
          end: {
            line: 109,
            column: 17
          }
        },
        line: 106
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 115,
            column: 74
          },
          end: {
            line: 115,
            column: 75
          }
        },
        loc: {
          start: {
            line: 115,
            column: 87
          },
          end: {
            line: 115,
            column: 97
          }
        },
        line: 115
      },
      "19": {
        name: "useApiPerformance",
        decl: {
          start: {
            line: 123,
            column: 9
          },
          end: {
            line: 123,
            column: 26
          }
        },
        loc: {
          start: {
            line: 123,
            column: 29
          },
          end: {
            line: 191,
            column: 1
          }
        },
        line: 123
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 129,
            column: 51
          },
          end: {
            line: 129,
            column: 52
          }
        },
        loc: {
          start: {
            line: 129,
            column: 78
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 129
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 140,
            column: 26
          },
          end: {
            line: 140,
            column: 27
          }
        },
        loc: {
          start: {
            line: 140,
            column: 34
          },
          end: {
            line: 158,
            column: 13
          }
        },
        line: 140
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 150,
            column: 56
          },
          end: {
            line: 150,
            column: 57
          }
        },
        loc: {
          start: {
            line: 150,
            column: 69
          },
          end: {
            line: 150,
            column: 88
          }
        },
        line: 150
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 151,
            column: 51
          },
          end: {
            line: 151,
            column: 52
          }
        },
        loc: {
          start: {
            line: 151,
            column: 59
          },
          end: {
            line: 151,
            column: 82
          }
        },
        line: 151
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 165,
            column: 27
          }
        },
        loc: {
          start: {
            line: 165,
            column: 34
          },
          end: {
            line: 183,
            column: 13
          }
        },
        line: 165
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 175,
            column: 56
          },
          end: {
            line: 175,
            column: 57
          }
        },
        loc: {
          start: {
            line: 175,
            column: 69
          },
          end: {
            line: 175,
            column: 88
          }
        },
        line: 175
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 176,
            column: 51
          },
          end: {
            line: 176,
            column: 52
          }
        },
        loc: {
          start: {
            line: 176,
            column: 59
          },
          end: {
            line: 176,
            column: 82
          }
        },
        line: 176
      },
      "27": {
        name: "useRoutePerformance",
        decl: {
          start: {
            line: 192,
            column: 9
          },
          end: {
            line: 192,
            column: 28
          }
        },
        loc: {
          start: {
            line: 192,
            column: 31
          },
          end: {
            line: 228,
            column: 1
          }
        },
        line: 192
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 197,
            column: 55
          },
          end: {
            line: 197,
            column: 56
          }
        },
        loc: {
          start: {
            line: 197,
            column: 78
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 197
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 202,
            column: 24
          },
          end: {
            line: 202,
            column: 25
          }
        },
        loc: {
          start: {
            line: 202,
            column: 32
          },
          end: {
            line: 217,
            column: 9
          }
        },
        line: 202
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 212,
            column: 52
          },
          end: {
            line: 212,
            column: 53
          }
        },
        loc: {
          start: {
            line: 212,
            column: 67
          },
          end: {
            line: 212,
            column: 88
          }
        },
        line: 212
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 219,
            column: 53
          },
          end: {
            line: 219,
            column: 54
          }
        },
        loc: {
          start: {
            line: 219,
            column: 66
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 219
      },
      "32": {
        name: "useMemoryMonitoring",
        decl: {
          start: {
            line: 229,
            column: 9
          },
          end: {
            line: 229,
            column: 28
          }
        },
        loc: {
          start: {
            line: 229,
            column: 31
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 229
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 231,
            column: 53
          },
          end: {
            line: 231,
            column: 54
          }
        },
        loc: {
          start: {
            line: 231,
            column: 57
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 231
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 246,
            column: 26
          },
          end: {
            line: 246,
            column: 27
          }
        },
        loc: {
          start: {
            line: 246,
            column: 30
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 246
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 249,
            column: 15
          },
          end: {
            line: 249,
            column: 16
          }
        },
        loc: {
          start: {
            line: 249,
            column: 19
          },
          end: {
            line: 249,
            column: 42
          }
        },
        line: 249
      },
      "36": {
        name: "usePerformanceMonitoring",
        decl: {
          start: {
            line: 259,
            column: 9
          },
          end: {
            line: 259,
            column: 33
          }
        },
        loc: {
          start: {
            line: 259,
            column: 36
          },
          end: {
            line: 346,
            column: 1
          }
        },
        line: 259
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 265,
            column: 26
          },
          end: {
            line: 265,
            column: 27
          }
        },
        loc: {
          start: {
            line: 265,
            column: 30
          },
          end: {
            line: 312,
            column: 5
          }
        },
        line: 265
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 267,
            column: 33
          },
          end: {
            line: 267,
            column: 34
          }
        },
        loc: {
          start: {
            line: 267,
            column: 37
          },
          end: {
            line: 309,
            column: 9
          }
        },
        line: 267
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 304,
            column: 37
          },
          end: {
            line: 304,
            column: 38
          }
        },
        loc: {
          start: {
            line: 304,
            column: 45
          },
          end: {
            line: 307,
            column: 21
          }
        },
        line: 304
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 311,
            column: 15
          },
          end: {
            line: 311,
            column: 16
          }
        },
        loc: {
          start: {
            line: 311,
            column: 19
          },
          end: {
            line: 311,
            column: 42
          }
        },
        line: 311
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 317,
            column: 51
          },
          end: {
            line: 317,
            column: 52
          }
        },
        loc: {
          start: {
            line: 317,
            column: 55
          },
          end: {
            line: 327,
            column: 5
          }
        },
        line: 317
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 332,
            column: 48
          },
          end: {
            line: 332,
            column: 49
          }
        },
        loc: {
          start: {
            line: 332,
            column: 52
          },
          end: {
            line: 334,
            column: 5
          }
        },
        line: 332
      },
      "43": {
        name: "withPerformanceTracking",
        decl: {
          start: {
            line: 347,
            column: 9
          },
          end: {
            line: 347,
            column: 32
          }
        },
        loc: {
          start: {
            line: 347,
            column: 66
          },
          end: {
            line: 359,
            column: 1
          }
        },
        line: 347
      },
      "44": {
        name: "PerformanceTrackedComponent",
        decl: {
          start: {
            line: 348,
            column: 20
          },
          end: {
            line: 348,
            column: 47
          }
        },
        loc: {
          start: {
            line: 348,
            column: 55
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 348
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 350,
            column: 30
          },
          end: {
            line: 350,
            column: 31
          }
        },
        loc: {
          start: {
            line: 350,
            column: 34
          },
          end: {
            line: 354,
            column: 9
          }
        },
        line: 350
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 42,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 29
          },
          end: {
            line: 42,
            column: 45
          }
        }, {
          start: {
            line: 42,
            column: 48
          },
          end: {
            line: 42,
            column: 65
          }
        }],
        line: 42
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 24
          },
          end: {
            line: 46,
            column: 27
          }
        }, {
          start: {
            line: 46,
            column: 31
          },
          end: {
            line: 46,
            column: 45
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 53,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 47
          }
        }, {
          start: {
            line: 49,
            column: 51
          },
          end: {
            line: 49,
            column: 76
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 31
          }
        }],
        line: 55
      },
      "8": {
        loc: {
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 32
          },
          end: {
            line: 61,
            column: 53
          }
        }, {
          start: {
            line: 61,
            column: 57
          },
          end: {
            line: 61,
            column: 88
          }
        }],
        line: 61
      },
      "9": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "10": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 63,
            column: 29
          }
        }, {
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 79
          }
        }],
        line: 63
      },
      "11": {
        loc: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 47
          },
          end: {
            line: 64,
            column: 88
          }
        }, {
          start: {
            line: 64,
            column: 91
          },
          end: {
            line: 64,
            column: 95
          }
        }],
        line: 64
      },
      "12": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 69,
            column: 13
          }
        }, {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 69,
            column: 13
          }
        }],
        line: 65
      },
      "13": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 20
          }
        }, {
          start: {
            line: 65,
            column: 25
          },
          end: {
            line: 65,
            column: 33
          }
        }, {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 65,
            column: 45
          }
        }],
        line: 65
      },
      "14": {
        loc: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "15": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "16": {
        loc: {
          start: {
            line: 115,
            column: 30
          },
          end: {
            line: 115,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 55
          },
          end: {
            line: 115,
            column: 122
          }
        }, {
          start: {
            line: 115,
            column: 125
          },
          end: {
            line: 115,
            column: 126
          }
        }],
        line: 115
      },
      "17": {
        loc: {
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 59
          }
        }, {
          start: {
            line: 120,
            column: 63
          },
          end: {
            line: 120,
            column: 64
          }
        }],
        line: 120
      },
      "18": {
        loc: {
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "19": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 266,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 266,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "20": {
        loc: {
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 12
          },
          end: {
            line: 277,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "21": {
        loc: {
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 270,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 270,
            column: 16
          },
          end: {
            line: 270,
            column: 37
          }
        }, {
          start: {
            line: 270,
            column: 41
          },
          end: {
            line: 270,
            column: 69
          }
        }],
        line: 270
      },
      "22": {
        loc: {
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 12
          },
          end: {
            line: 285,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "23": {
        loc: {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 278,
            column: 37
          }
        }, {
          start: {
            line: 278,
            column: 41
          },
          end: {
            line: 278,
            column: 68
          }
        }],
        line: 278
      },
      "24": {
        loc: {
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 286
      },
      "25": {
        loc: {
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 286,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 286,
            column: 16
          },
          end: {
            line: 286,
            column: 37
          }
        }, {
          start: {
            line: 286,
            column: 41
          },
          end: {
            line: 286,
            column: 69
          }
        }],
        line: 286
      },
      "26": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 302,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "27": {
        loc: {
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 295,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 295,
            column: 16
          },
          end: {
            line: 295,
            column: 33
          }
        }, {
          start: {
            line: 295,
            column: 37
          },
          end: {
            line: 295,
            column: 70
          }
        }],
        line: 295
      },
      "28": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 308,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "29": {
        loc: {
          start: {
            line: 324,
            column: 17
          },
          end: {
            line: 324,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 324,
            column: 49
          },
          end: {
            line: 324,
            column: 69
          }
        }, {
          start: {
            line: 324,
            column: 72
          },
          end: {
            line: 324,
            column: 74
          }
        }],
        line: 324
      },
      "30": {
        loc: {
          start: {
            line: 325,
            column: 23
          },
          end: {
            line: 325,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 325,
            column: 58
          },
          end: {
            line: 325,
            column: 77
          }
        }, {
          start: {
            line: 325,
            column: 80
          },
          end: {
            line: 325,
            column: 82
          }
        }],
        line: 325
      },
      "31": {
        loc: {
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 353,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 12
          },
          end: {
            line: 353,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\usePerformance.ts"],
      sourcesContent: ["// React hooks for performance monitoring and Web Vitals tracking\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport * as React from 'react';\nimport { webVitalsTracker, WebVitalsMetrics, CustomPerformanceMetrics } from '../utils/performance';\n\ninterface PerformanceState {\n  webVitals: WebVitalsMetrics;\n  customMetrics: CustomPerformanceMetrics;\n  score: { overall: number; breakdown: Record<string, { score: number; rating: string }> };\n  isLoading: boolean;\n}\n\n// Hook for Web Vitals monitoring\nexport function useWebVitals() {\n  const [metrics, setMetrics] = useState<WebVitalsMetrics>(webVitalsTracker.getMetrics());\n  const [score, setScore] = useState(webVitalsTracker.getScore());\n\n  useEffect(() => {\n    const unsubscribe = webVitalsTracker.onUpdate((newMetrics) => {\n      setMetrics(newMetrics);\n      setScore(webVitalsTracker.getScore());\n    });\n\n    return unsubscribe;\n  }, []);\n\n  return {\n    metrics,\n    score,\n    refresh: () => {\n      setMetrics(webVitalsTracker.getMetrics());\n      setScore(webVitalsTracker.getScore());\n    }\n  };\n}\n\n// Hook for measuring component render performance\nexport function useRenderPerformance(componentName: string) {\n  const renderCountRef = useRef(0);\n  const startTimeRef = useRef<number>(0);\n  const [renderTimes, setRenderTimes] = useState<number[]>([]);\n\n  useEffect(() => {\n    renderCountRef.current++;\n    const endTime = performance.now();\n    \n    if (startTimeRef.current > 0) {\n      const renderTime = endTime - startTimeRef.current;\n      setRenderTimes(prev => [...prev.slice(-9), renderTime]); // Keep last 10 renders\n      \n      // Mark performance for debugging\n      performance.mark(`${componentName}-render-${renderCountRef.current}`);\n    }\n    \n    startTimeRef.current = endTime;\n  });\n\n  const averageRenderTime = renderTimes.length > 0 \n    ? renderTimes.reduce((sum, time) => sum + time, 0) / renderTimes.length \n    : 0;\n\n  return {\n    renderCount: renderCountRef.current,\n    renderTimes,\n    averageRenderTime,\n    lastRenderTime: renderTimes[renderTimes.length - 1] || 0\n  };\n}\n\n// Hook for measuring API call performance\nexport function useApiPerformance() {\n  const [apiMetrics, setApiMetrics] = useState<{\n    calls: Array<{ endpoint: string; duration: number; timestamp: number; status: 'success' | 'error' }>;\n    averageResponseTime: number;\n    errorRate: number;\n  }>({\n    calls: [],\n    averageResponseTime: 0,\n    errorRate: 0\n  });\n\n  const measureApiCall = useCallback(async <T>(\n    endpoint: string,\n    apiCall: () => Promise<T>\n  ): Promise<T> => {\n    const startTime = performance.now();\n    const startMark = `api-${endpoint}-start-${Date.now()}`;\n    const endMark = `api-${endpoint}-end-${Date.now()}`;\n    \n    performance.mark(startMark);\n    \n    try {\n      const result = await apiCall();\n      const endTime = performance.now();\n      const duration = endTime - startTime;\n      \n      performance.mark(endMark);\n      performance.measure(`api-${endpoint}`, startMark, endMark);\n      \n      setApiMetrics(prev => {\n        const newCalls = [...prev.calls.slice(-19), { // Keep last 20 calls\n          endpoint,\n          duration,\n          timestamp: Date.now(),\n          status: 'success' as const\n        }];\n        \n        const avgResponseTime = newCalls.reduce((sum, call) => sum + call.duration, 0) / newCalls.length;\n        const errorCount = newCalls.filter(call => call.status === 'error').length;\n        const errorRate = (errorCount / newCalls.length) * 100;\n        \n        return {\n          calls: newCalls,\n          averageResponseTime: avgResponseTime,\n          errorRate\n        };\n      });\n      \n      return result;\n    } catch (error) {\n      const endTime = performance.now();\n      const duration = endTime - startTime;\n      \n      performance.mark(endMark);\n      performance.measure(`api-${endpoint}-error`, startMark, endMark);\n      \n      setApiMetrics(prev => {\n        const newCalls = [...prev.calls.slice(-19), {\n          endpoint,\n          duration,\n          timestamp: Date.now(),\n          status: 'error' as const\n        }];\n        \n        const avgResponseTime = newCalls.reduce((sum, call) => sum + call.duration, 0) / newCalls.length;\n        const errorCount = newCalls.filter(call => call.status === 'error').length;\n        const errorRate = (errorCount / newCalls.length) * 100;\n        \n        return {\n          calls: newCalls,\n          averageResponseTime: avgResponseTime,\n          errorRate\n        };\n      });\n      \n      throw error;\n    }\n  }, []);\n\n  return {\n    ...apiMetrics,\n    measureApiCall\n  };\n}\n\n// Hook for measuring route change performance\nexport function useRoutePerformance() {\n  const [routeMetrics, setRouteMetrics] = useState<{\n    changes: Array<{ from: string; to: string; duration: number; timestamp: number }>;\n    averageChangeTime: number;\n  }>({\n    changes: [],\n    averageChangeTime: 0\n  });\n\n  const measureRouteChange = useCallback((from: string, to: string, startTime: number) => {\n    const endTime = performance.now();\n    const duration = endTime - startTime;\n    \n    performance.mark(`route-change-${to}`);\n    performance.measure(`route-change-${from}-to-${to}`, `route-change-${from}`, `route-change-${to}`);\n    \n    setRouteMetrics(prev => {\n      const newChanges = [...prev.changes.slice(-9), { // Keep last 10 route changes\n        from,\n        to,\n        duration,\n        timestamp: Date.now()\n      }];\n      \n      const avgChangeTime = newChanges.reduce((sum, change) => sum + change.duration, 0) / newChanges.length;\n      \n      return {\n        changes: newChanges,\n        averageChangeTime: avgChangeTime\n      };\n    });\n  }, []);\n\n  const startRouteChange = useCallback((routeName: string) => {\n    performance.mark(`route-change-${routeName}`);\n    return performance.now();\n  }, []);\n\n  return {\n    ...routeMetrics,\n    measureRouteChange,\n    startRouteChange\n  };\n}\n\n// Hook for memory usage monitoring\nexport function useMemoryMonitoring() {\n  const [memoryInfo, setMemoryInfo] = useState<{\n    used: number;\n    total: number;\n    limit: number;\n    percentage: number;\n  } | null>(null);\n\n  const updateMemoryInfo = useCallback(() => {\n    if ('memory' in performance) {\n      const memory = (performance as any).memory;\n      const used = Math.round(memory.usedJSHeapSize / 1024 / 1024);\n      const total = Math.round(memory.totalJSHeapSize / 1024 / 1024);\n      const limit = Math.round(memory.jsHeapSizeLimit / 1024 / 1024);\n      const percentage = Math.round((used / limit) * 100);\n      \n      setMemoryInfo({ used, total, limit, percentage });\n    }\n  }, []);\n\n  useEffect(() => {\n    updateMemoryInfo();\n    const interval = setInterval(updateMemoryInfo, 5000); // Update every 5 seconds\n    \n    return () => clearInterval(interval);\n  }, [updateMemoryInfo]);\n\n  return {\n    memoryInfo,\n    updateMemoryInfo,\n    isMemorySupported: 'memory' in performance\n  };\n}\n\n// Hook for comprehensive performance monitoring\nexport function usePerformanceMonitoring() {\n  const webVitals = useWebVitals();\n  const memory = useMemoryMonitoring();\n  const [isMonitoring, setIsMonitoring] = useState(true);\n  const [performanceAlerts, setPerformanceAlerts] = useState<Array<{\n    type: 'warning' | 'error';\n    message: string;\n    timestamp: number;\n    metric: string;\n  }>>([]);\n\n  // Monitor for performance issues\n  useEffect(() => {\n    if (!isMonitoring) return;\n\n    const checkPerformance = () => {\n      const alerts: typeof performanceAlerts = [];\n      \n      // Check Web Vitals\n      if (webVitals.metrics.lcp && webVitals.metrics.lcp > 4000) {\n        alerts.push({\n          type: 'error',\n          message: `Poor LCP: ${webVitals.metrics.lcp}ms (should be < 2500ms)`,\n          timestamp: Date.now(),\n          metric: 'lcp'\n        });\n      }\n      \n      if (webVitals.metrics.inp && webVitals.metrics.inp > 300) {\n        alerts.push({\n          type: 'error',\n          message: `Poor INP: ${webVitals.metrics.inp}ms (should be < 200ms)`,\n          timestamp: Date.now(),\n          metric: 'inp'\n        });\n      }\n      \n      if (webVitals.metrics.cls && webVitals.metrics.cls > 0.25) {\n        alerts.push({\n          type: 'error',\n          message: `Poor CLS: ${webVitals.metrics.cls} (should be < 0.1)`,\n          timestamp: Date.now(),\n          metric: 'cls'\n        });\n      }\n      \n      // Check memory usage\n      if (memory.memoryInfo && memory.memoryInfo.percentage > 80) {\n        alerts.push({\n          type: 'warning',\n          message: `High memory usage: ${memory.memoryInfo.percentage}% (${memory.memoryInfo.used}MB)`,\n          timestamp: Date.now(),\n          metric: 'memory'\n        });\n      }\n      \n      if (alerts.length > 0) {\n        setPerformanceAlerts(prev => [...prev.slice(-9), ...alerts]); // Keep last 10 alerts\n      }\n    };\n\n    const interval = setInterval(checkPerformance, 10000); // Check every 10 seconds\n    return () => clearInterval(interval);\n  }, [isMonitoring, webVitals.metrics, memory.memoryInfo]);\n\n  const generateReport = useCallback(() => {\n    return {\n      timestamp: new Date().toISOString(),\n      webVitals: webVitals.metrics,\n      score: webVitals.score,\n      memory: memory.memoryInfo,\n      alerts: performanceAlerts,\n      url: typeof window !== 'undefined' ? window.location.href : '',\n      userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : ''\n    };\n  }, [webVitals, memory.memoryInfo, performanceAlerts]);\n\n  const clearAlerts = useCallback(() => {\n    setPerformanceAlerts([]);\n  }, []);\n\n  return {\n    webVitals: webVitals.metrics,\n    score: webVitals.score,\n    memory: memory.memoryInfo,\n    alerts: performanceAlerts,\n    isMonitoring,\n    setIsMonitoring,\n    generateReport,\n    clearAlerts,\n    refresh: webVitals.refresh\n  };\n}\n\n// Performance measurement decorators for React components\nexport function withPerformanceTracking<P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  componentName: string\n) {\n  return function PerformanceTrackedComponent(props: P) {\n    const renderPerf = useRenderPerformance(componentName);\n    \n    useEffect(() => {\n      if (renderPerf.averageRenderTime > 16) { // 60fps threshold\n        console.warn(`Component ${componentName} average render time: ${renderPerf.averageRenderTime.toFixed(2)}ms`);\n      }\n    }, [renderPerf.averageRenderTime]);\n    \n    return React.createElement(WrappedComponent, props);\n  };\n}"],
      names: ["useApiPerformance", "useMemoryMonitoring", "usePerformanceMonitoring", "useRenderPerformance", "useRoutePerformance", "useWebVitals", "withPerformanceTracking", "metrics", "setMetrics", "useState", "webVitalsTracker", "getMetrics", "score", "setScore", "getScore", "useEffect", "unsubscribe", "onUpdate", "newMetrics", "refresh", "componentName", "renderCountRef", "useRef", "startTimeRef", "renderTimes", "setRenderTimes", "current", "endTime", "performance", "now", "renderTime", "prev", "slice", "mark", "averageRenderTime", "length", "reduce", "sum", "time", "renderCount", "lastRenderTime", "apiMetrics", "setApiMetrics", "calls", "averageResponseTime", "errorRate", "measureApiCall", "useCallback", "endpoint", "apiCall", "startTime", "startMark", "Date", "endMark", "result", "duration", "measure", "newCalls", "timestamp", "status", "avgResponseTime", "call", "errorCount", "filter", "error", "routeMetrics", "setRouteMetrics", "changes", "averageChangeTime", "measureRouteChange", "from", "to", "newChanges", "avgChangeTime", "change", "startRouteChange", "routeName", "memoryInfo", "setMemoryInfo", "updateMemoryInfo", "memory", "used", "Math", "round", "usedJSHeapSize", "total", "totalJSHeapSize", "limit", "jsHeapSizeLimit", "percentage", "interval", "setInterval", "clearInterval", "isMemorySupported", "webVitals", "isMonitoring", "setIsMonitoring", "performanceAlerts", "setPerformanceAlerts", "checkPerformance", "alerts", "lcp", "push", "type", "message", "metric", "inp", "cls", "generateReport", "toISOString", "url", "window", "location", "href", "userAgent", "navigator", "clearAlerts", "WrappedComponent", "PerformanceTrackedComponent", "props", "renderPerf", "console", "warn", "toFixed", "React", "createElement"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bdd4ed1fac119889569c3ae3bfd4934078bd2603"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1xpdjfyitg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1xpdjfyitg();
cov_1xpdjfyitg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[0]++;
  cov_1xpdjfyitg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1xpdjfyitg().s[3]++;
_export(exports, {
  get useApiPerformance() {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[1]++;
    cov_1xpdjfyitg().s[4]++;
    return useApiPerformance;
  },
  get useMemoryMonitoring() {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[2]++;
    cov_1xpdjfyitg().s[5]++;
    return useMemoryMonitoring;
  },
  get usePerformanceMonitoring() {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[3]++;
    cov_1xpdjfyitg().s[6]++;
    return usePerformanceMonitoring;
  },
  get useRenderPerformance() {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[4]++;
    cov_1xpdjfyitg().s[7]++;
    return useRenderPerformance;
  },
  get useRoutePerformance() {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[5]++;
    cov_1xpdjfyitg().s[8]++;
    return useRoutePerformance;
  },
  get useWebVitals() {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[6]++;
    cov_1xpdjfyitg().s[9]++;
    return useWebVitals;
  },
  get withPerformanceTracking() {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[7]++;
    cov_1xpdjfyitg().s[10]++;
    return withPerformanceTracking;
  }
});
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1xpdjfyitg().s[11]++, _interop_require_wildcard(require("react")));
const _performance =
/* istanbul ignore next */
(cov_1xpdjfyitg().s[12]++, require("../utils/performance"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[8]++;
  cov_1xpdjfyitg().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1xpdjfyitg().b[0][0]++;
    cov_1xpdjfyitg().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1xpdjfyitg().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[9]++;
    cov_1xpdjfyitg().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1xpdjfyitg().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1xpdjfyitg().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[10]++;
  cov_1xpdjfyitg().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().b[2][0]++;
    cov_1xpdjfyitg().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1xpdjfyitg().b[2][1]++;
  }
  cov_1xpdjfyitg().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().b[4][0]++;
    cov_1xpdjfyitg().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1xpdjfyitg().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().b[6][0]++;
    cov_1xpdjfyitg().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1xpdjfyitg().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[27]++,
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_1xpdjfyitg().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1xpdjfyitg().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1xpdjfyitg().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[12][0]++;
        cov_1xpdjfyitg().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[12][1]++;
        cov_1xpdjfyitg().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1xpdjfyitg().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().b[14][0]++;
    cov_1xpdjfyitg().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1xpdjfyitg().b[14][1]++;
  }
  cov_1xpdjfyitg().s[37]++;
  return newObj;
}
function useWebVitals() {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[11]++;
  const [metrics, setMetrics] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[38]++, (0, _react.useState)(_performance.webVitalsTracker.getMetrics()));
  const [score, setScore] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[39]++, (0, _react.useState)(_performance.webVitalsTracker.getScore()));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[40]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[12]++;
    const unsubscribe =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[41]++, _performance.webVitalsTracker.onUpdate(newMetrics => {
      /* istanbul ignore next */
      cov_1xpdjfyitg().f[13]++;
      cov_1xpdjfyitg().s[42]++;
      setMetrics(newMetrics);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[43]++;
      setScore(_performance.webVitalsTracker.getScore());
    }));
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[44]++;
    return unsubscribe;
  }, []);
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[45]++;
  return {
    metrics,
    score,
    refresh: () => {
      /* istanbul ignore next */
      cov_1xpdjfyitg().f[14]++;
      cov_1xpdjfyitg().s[46]++;
      setMetrics(_performance.webVitalsTracker.getMetrics());
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[47]++;
      setScore(_performance.webVitalsTracker.getScore());
    }
  };
}
function useRenderPerformance(componentName) {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[15]++;
  const renderCountRef =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[48]++, (0, _react.useRef)(0));
  const startTimeRef =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[49]++, (0, _react.useRef)(0));
  const [renderTimes, setRenderTimes] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[50]++, (0, _react.useState)([]));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[51]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[16]++;
    cov_1xpdjfyitg().s[52]++;
    renderCountRef.current++;
    const endTime =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[53]++, performance.now());
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[54]++;
    if (startTimeRef.current > 0) {
      /* istanbul ignore next */
      cov_1xpdjfyitg().b[15][0]++;
      const renderTime =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[55]++, endTime - startTimeRef.current);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[56]++;
      setRenderTimes(prev => {
        /* istanbul ignore next */
        cov_1xpdjfyitg().f[17]++;
        cov_1xpdjfyitg().s[57]++;
        return [...prev.slice(-9), renderTime];
      }); // Keep last 10 renders
      // Mark performance for debugging
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[58]++;
      performance.mark(`${componentName}-render-${renderCountRef.current}`);
    } else
    /* istanbul ignore next */
    {
      cov_1xpdjfyitg().b[15][1]++;
    }
    cov_1xpdjfyitg().s[59]++;
    startTimeRef.current = endTime;
  });
  const averageRenderTime =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[60]++, renderTimes.length > 0 ?
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[16][0]++, renderTimes.reduce((sum, time) => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[18]++;
    cov_1xpdjfyitg().s[61]++;
    return sum + time;
  }, 0) / renderTimes.length) :
  /* istanbul ignore next */
  (cov_1xpdjfyitg().b[16][1]++, 0));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[62]++;
  return {
    renderCount: renderCountRef.current,
    renderTimes,
    averageRenderTime,
    lastRenderTime:
    /* istanbul ignore next */
    (cov_1xpdjfyitg().b[17][0]++, renderTimes[renderTimes.length - 1]) ||
    /* istanbul ignore next */
    (cov_1xpdjfyitg().b[17][1]++, 0)
  };
}
function useApiPerformance() {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[19]++;
  const [apiMetrics, setApiMetrics] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[63]++, (0, _react.useState)({
    calls: [],
    averageResponseTime: 0,
    errorRate: 0
  }));
  const measureApiCall =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[64]++, (0, _react.useCallback)(async (endpoint, apiCall) => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[20]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[65]++, performance.now());
    const startMark =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[66]++, `api-${endpoint}-start-${Date.now()}`);
    const endMark =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[67]++, `api-${endpoint}-end-${Date.now()}`);
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[68]++;
    performance.mark(startMark);
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[69]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[70]++, await apiCall());
      const endTime =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[71]++, performance.now());
      const duration =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[72]++, endTime - startTime);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[73]++;
      performance.mark(endMark);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[74]++;
      performance.measure(`api-${endpoint}`, startMark, endMark);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[75]++;
      setApiMetrics(prev => {
        /* istanbul ignore next */
        cov_1xpdjfyitg().f[21]++;
        const newCalls =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[76]++, [...prev.calls.slice(-19), {
          endpoint,
          duration,
          timestamp: Date.now(),
          status: 'success'
        }]);
        const avgResponseTime =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[77]++, newCalls.reduce((sum, call) => {
          /* istanbul ignore next */
          cov_1xpdjfyitg().f[22]++;
          cov_1xpdjfyitg().s[78]++;
          return sum + call.duration;
        }, 0) / newCalls.length);
        const errorCount =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[79]++, newCalls.filter(call => {
          /* istanbul ignore next */
          cov_1xpdjfyitg().f[23]++;
          cov_1xpdjfyitg().s[80]++;
          return call.status === 'error';
        }).length);
        const errorRate =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[81]++, errorCount / newCalls.length * 100);
        /* istanbul ignore next */
        cov_1xpdjfyitg().s[82]++;
        return {
          calls: newCalls,
          averageResponseTime: avgResponseTime,
          errorRate
        };
      });
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[83]++;
      return result;
    } catch (error) {
      const endTime =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[84]++, performance.now());
      const duration =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[85]++, endTime - startTime);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[86]++;
      performance.mark(endMark);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[87]++;
      performance.measure(`api-${endpoint}-error`, startMark, endMark);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[88]++;
      setApiMetrics(prev => {
        /* istanbul ignore next */
        cov_1xpdjfyitg().f[24]++;
        const newCalls =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[89]++, [...prev.calls.slice(-19), {
          endpoint,
          duration,
          timestamp: Date.now(),
          status: 'error'
        }]);
        const avgResponseTime =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[90]++, newCalls.reduce((sum, call) => {
          /* istanbul ignore next */
          cov_1xpdjfyitg().f[25]++;
          cov_1xpdjfyitg().s[91]++;
          return sum + call.duration;
        }, 0) / newCalls.length);
        const errorCount =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[92]++, newCalls.filter(call => {
          /* istanbul ignore next */
          cov_1xpdjfyitg().f[26]++;
          cov_1xpdjfyitg().s[93]++;
          return call.status === 'error';
        }).length);
        const errorRate =
        /* istanbul ignore next */
        (cov_1xpdjfyitg().s[94]++, errorCount / newCalls.length * 100);
        /* istanbul ignore next */
        cov_1xpdjfyitg().s[95]++;
        return {
          calls: newCalls,
          averageResponseTime: avgResponseTime,
          errorRate
        };
      });
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[96]++;
      throw error;
    }
  }, []));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[97]++;
  return {
    ...apiMetrics,
    measureApiCall
  };
}
function useRoutePerformance() {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[27]++;
  const [routeMetrics, setRouteMetrics] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[98]++, (0, _react.useState)({
    changes: [],
    averageChangeTime: 0
  }));
  const measureRouteChange =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[99]++, (0, _react.useCallback)((from, to, startTime) => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[28]++;
    const endTime =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[100]++, performance.now());
    const duration =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[101]++, endTime - startTime);
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[102]++;
    performance.mark(`route-change-${to}`);
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[103]++;
    performance.measure(`route-change-${from}-to-${to}`, `route-change-${from}`, `route-change-${to}`);
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[104]++;
    setRouteMetrics(prev => {
      /* istanbul ignore next */
      cov_1xpdjfyitg().f[29]++;
      const newChanges =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[105]++, [...prev.changes.slice(-9), {
        from,
        to,
        duration,
        timestamp: Date.now()
      }]);
      const avgChangeTime =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[106]++, newChanges.reduce((sum, change) => {
        /* istanbul ignore next */
        cov_1xpdjfyitg().f[30]++;
        cov_1xpdjfyitg().s[107]++;
        return sum + change.duration;
      }, 0) / newChanges.length);
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[108]++;
      return {
        changes: newChanges,
        averageChangeTime: avgChangeTime
      };
    });
  }, []));
  const startRouteChange =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[109]++, (0, _react.useCallback)(routeName => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[31]++;
    cov_1xpdjfyitg().s[110]++;
    performance.mark(`route-change-${routeName}`);
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[111]++;
    return performance.now();
  }, []));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[112]++;
  return {
    ...routeMetrics,
    measureRouteChange,
    startRouteChange
  };
}
function useMemoryMonitoring() {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[32]++;
  const [memoryInfo, setMemoryInfo] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[113]++, (0, _react.useState)(null));
  const updateMemoryInfo =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[114]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[33]++;
    cov_1xpdjfyitg().s[115]++;
    if ('memory' in performance) {
      /* istanbul ignore next */
      cov_1xpdjfyitg().b[18][0]++;
      const memory =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[116]++, performance.memory);
      const used =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[117]++, Math.round(memory.usedJSHeapSize / 1024 / 1024));
      const total =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[118]++, Math.round(memory.totalJSHeapSize / 1024 / 1024));
      const limit =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[119]++, Math.round(memory.jsHeapSizeLimit / 1024 / 1024));
      const percentage =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[120]++, Math.round(used / limit * 100));
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[121]++;
      setMemoryInfo({
        used,
        total,
        limit,
        percentage
      });
    } else
    /* istanbul ignore next */
    {
      cov_1xpdjfyitg().b[18][1]++;
    }
  }, []));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[122]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[34]++;
    cov_1xpdjfyitg().s[123]++;
    updateMemoryInfo();
    const interval =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[124]++, setInterval(updateMemoryInfo, 5000)); // Update every 5 seconds
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[125]++;
    return () => {
      /* istanbul ignore next */
      cov_1xpdjfyitg().f[35]++;
      cov_1xpdjfyitg().s[126]++;
      return clearInterval(interval);
    };
  }, [updateMemoryInfo]);
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[127]++;
  return {
    memoryInfo,
    updateMemoryInfo,
    isMemorySupported: 'memory' in performance
  };
}
function usePerformanceMonitoring() {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[36]++;
  const webVitals =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[128]++, useWebVitals());
  const memory =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[129]++, useMemoryMonitoring());
  const [isMonitoring, setIsMonitoring] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[130]++, (0, _react.useState)(true));
  const [performanceAlerts, setPerformanceAlerts] =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[131]++, (0, _react.useState)([]));
  // Monitor for performance issues
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[132]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[37]++;
    cov_1xpdjfyitg().s[133]++;
    if (!isMonitoring) {
      /* istanbul ignore next */
      cov_1xpdjfyitg().b[19][0]++;
      cov_1xpdjfyitg().s[134]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1xpdjfyitg().b[19][1]++;
    }
    cov_1xpdjfyitg().s[135]++;
    const checkPerformance = () => {
      /* istanbul ignore next */
      cov_1xpdjfyitg().f[38]++;
      const alerts =
      /* istanbul ignore next */
      (cov_1xpdjfyitg().s[136]++, []);
      // Check Web Vitals
      /* istanbul ignore next */
      cov_1xpdjfyitg().s[137]++;
      if (
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[21][0]++, webVitals.metrics.lcp) &&
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[21][1]++, webVitals.metrics.lcp > 4000)) {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[20][0]++;
        cov_1xpdjfyitg().s[138]++;
        alerts.push({
          type: 'error',
          message: `Poor LCP: ${webVitals.metrics.lcp}ms (should be < 2500ms)`,
          timestamp: Date.now(),
          metric: 'lcp'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1xpdjfyitg().b[20][1]++;
      }
      cov_1xpdjfyitg().s[139]++;
      if (
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[23][0]++, webVitals.metrics.inp) &&
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[23][1]++, webVitals.metrics.inp > 300)) {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[22][0]++;
        cov_1xpdjfyitg().s[140]++;
        alerts.push({
          type: 'error',
          message: `Poor INP: ${webVitals.metrics.inp}ms (should be < 200ms)`,
          timestamp: Date.now(),
          metric: 'inp'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1xpdjfyitg().b[22][1]++;
      }
      cov_1xpdjfyitg().s[141]++;
      if (
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[25][0]++, webVitals.metrics.cls) &&
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[25][1]++, webVitals.metrics.cls > 0.25)) {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[24][0]++;
        cov_1xpdjfyitg().s[142]++;
        alerts.push({
          type: 'error',
          message: `Poor CLS: ${webVitals.metrics.cls} (should be < 0.1)`,
          timestamp: Date.now(),
          metric: 'cls'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1xpdjfyitg().b[24][1]++;
      }
      // Check memory usage
      cov_1xpdjfyitg().s[143]++;
      if (
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[27][0]++, memory.memoryInfo) &&
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[27][1]++, memory.memoryInfo.percentage > 80)) {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[26][0]++;
        cov_1xpdjfyitg().s[144]++;
        alerts.push({
          type: 'warning',
          message: `High memory usage: ${memory.memoryInfo.percentage}% (${memory.memoryInfo.used}MB)`,
          timestamp: Date.now(),
          metric: 'memory'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1xpdjfyitg().b[26][1]++;
      }
      cov_1xpdjfyitg().s[145]++;
      if (alerts.length > 0) {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[28][0]++;
        cov_1xpdjfyitg().s[146]++;
        setPerformanceAlerts(prev => {
          /* istanbul ignore next */
          cov_1xpdjfyitg().f[39]++;
          cov_1xpdjfyitg().s[147]++;
          return [...prev.slice(-9), ...alerts];
        }); // Keep last 10 alerts
      } else
      /* istanbul ignore next */
      {
        cov_1xpdjfyitg().b[28][1]++;
      }
    };
    const interval =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[148]++, setInterval(checkPerformance, 10000)); // Check every 10 seconds
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[149]++;
    return () => {
      /* istanbul ignore next */
      cov_1xpdjfyitg().f[40]++;
      cov_1xpdjfyitg().s[150]++;
      return clearInterval(interval);
    };
  }, [isMonitoring, webVitals.metrics, memory.memoryInfo]);
  const generateReport =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[151]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[41]++;
    cov_1xpdjfyitg().s[152]++;
    return {
      timestamp: new Date().toISOString(),
      webVitals: webVitals.metrics,
      score: webVitals.score,
      memory: memory.memoryInfo,
      alerts: performanceAlerts,
      url: typeof window !== 'undefined' ?
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[29][0]++, window.location.href) :
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[29][1]++, ''),
      userAgent: typeof navigator !== 'undefined' ?
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[30][0]++, navigator.userAgent) :
      /* istanbul ignore next */
      (cov_1xpdjfyitg().b[30][1]++, '')
    };
  }, [webVitals, memory.memoryInfo, performanceAlerts]));
  const clearAlerts =
  /* istanbul ignore next */
  (cov_1xpdjfyitg().s[153]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[42]++;
    cov_1xpdjfyitg().s[154]++;
    setPerformanceAlerts([]);
  }, []));
  /* istanbul ignore next */
  cov_1xpdjfyitg().s[155]++;
  return {
    webVitals: webVitals.metrics,
    score: webVitals.score,
    memory: memory.memoryInfo,
    alerts: performanceAlerts,
    isMonitoring,
    setIsMonitoring,
    generateReport,
    clearAlerts,
    refresh: webVitals.refresh
  };
}
function withPerformanceTracking(WrappedComponent, componentName) {
  /* istanbul ignore next */
  cov_1xpdjfyitg().f[43]++;
  cov_1xpdjfyitg().s[156]++;
  return function PerformanceTrackedComponent(props) {
    /* istanbul ignore next */
    cov_1xpdjfyitg().f[44]++;
    const renderPerf =
    /* istanbul ignore next */
    (cov_1xpdjfyitg().s[157]++, useRenderPerformance(componentName));
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[158]++;
    (0, _react.useEffect)(() => {
      /* istanbul ignore next */
      cov_1xpdjfyitg().f[45]++;
      cov_1xpdjfyitg().s[159]++;
      if (renderPerf.averageRenderTime > 16) {
        /* istanbul ignore next */
        cov_1xpdjfyitg().b[31][0]++;
        cov_1xpdjfyitg().s[160]++;
        console.warn(`Component ${componentName} average render time: ${renderPerf.averageRenderTime.toFixed(2)}ms`);
      } else
      /* istanbul ignore next */
      {
        cov_1xpdjfyitg().b[31][1]++;
      }
    }, [renderPerf.averageRenderTime]);
    /* istanbul ignore next */
    cov_1xpdjfyitg().s[161]++;
    return _react.createElement(WrappedComponent, props);
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,