01265b0eaa4e7808c2915620f17ab444
"use strict";

/* istanbul ignore next */
function cov_yh5qz8gaw() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskCalendarView.tsx";
  var hash = "b2e8cda611f9660d32a2775211448512111934cb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskCalendarView.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "8": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 44
        }
      },
      "9": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 25,
          column: 6
        }
      },
      "10": {
        start: {
          line: 27,
          column: 23
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "11": {
        start: {
          line: 45,
          column: 21
        },
        end: {
          line: 62,
          column: 1
        }
      },
      "12": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 82,
          column: 1
        }
      },
      "13": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 279,
          column: 1
        }
      },
      "14": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "15": {
        start: {
          line: 100,
          column: 49
        },
        end: {
          line: 100,
          column: 134
        }
      },
      "16": {
        start: {
          line: 114,
          column: 49
        },
        end: {
          line: 114,
          column: 134
        }
      },
      "17": {
        start: {
          line: 138,
          column: 51
        },
        end: {
          line: 141,
          column: 35
        }
      },
      "18": {
        start: {
          line: 148,
          column: 41
        },
        end: {
          line: 148,
          column: 109
        }
      },
      "19": {
        start: {
          line: 149,
          column: 45
        },
        end: {
          line: 153,
          column: 30
        }
      },
      "20": {
        start: {
          line: 150,
          column: 32
        },
        end: {
          line: 150,
          column: 64
        }
      },
      "21": {
        start: {
          line: 150,
          column: 51
        },
        end: {
          line: 150,
          column: 64
        }
      },
      "22": {
        start: {
          line: 151,
          column: 49
        },
        end: {
          line: 151,
          column: 71
        }
      },
      "23": {
        start: {
          line: 152,
          column: 32
        },
        end: {
          line: 152,
          column: 87
        }
      },
      "24": {
        start: {
          line: 154,
          column: 51
        },
        end: {
          line: 154,
          column: 94
        }
      },
      "25": {
        start: {
          line: 155,
          column: 44
        },
        end: {
          line: 155,
          column: 93
        }
      },
      "26": {
        start: {
          line: 156,
          column: 28
        },
        end: {
          line: 222,
          column: 34
        }
      },
      "27": {
        start: {
          line: 166,
          column: 91
        },
        end: {
          line: 210,
          column: 59
        }
      },
      "28": {
        start: {
          line: 235,
          column: 100
        },
        end: {
          line: 246,
          column: 47
        }
      },
      "29": {
        start: {
          line: 280,
          column: 17
        },
        end: {
          line: 280,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 28
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 22,
            column: 9
          },
          end: {
            line: 22,
            column: 33
          }
        },
        loc: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 26,
            column: 1
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 83,
            column: 26
          }
        },
        loc: {
          start: {
            line: 83,
            column: 84
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 83
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 100,
            column: 45
          },
          end: {
            line: 100,
            column: 46
          }
        },
        loc: {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 100,
            column: 134
          }
        },
        line: 100
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 114,
            column: 46
          }
        },
        loc: {
          start: {
            line: 114,
            column: 49
          },
          end: {
            line: 114,
            column: 134
          }
        },
        line: 114
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 138,
            column: 31
          }
        },
        loc: {
          start: {
            line: 138,
            column: 51
          },
          end: {
            line: 141,
            column: 35
          }
        },
        line: 138
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 147,
            column: 27
          },
          end: {
            line: 147,
            column: 28
          }
        },
        loc: {
          start: {
            line: 147,
            column: 35
          },
          end: {
            line: 223,
            column: 25
          }
        },
        line: 147
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 149,
            column: 58
          },
          end: {
            line: 149,
            column: 59
          }
        },
        loc: {
          start: {
            line: 149,
            column: 66
          },
          end: {
            line: 153,
            column: 29
          }
        },
        line: 149
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 166,
            column: 69
          },
          end: {
            line: 166,
            column: 70
          }
        },
        loc: {
          start: {
            line: 166,
            column: 91
          },
          end: {
            line: 210,
            column: 59
          }
        },
        line: 166
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 235,
            column: 69
          },
          end: {
            line: 235,
            column: 70
          }
        },
        loc: {
          start: {
            line: 235,
            column: 100
          },
          end: {
            line: 246,
            column: 47
          }
        },
        line: 235
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 35
          },
          end: {
            line: 23,
            column: 38
          }
        }, {
          start: {
            line: 23,
            column: 41
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 11
          },
          end: {
            line: 23,
            column: 14
          }
        }, {
          start: {
            line: 23,
            column: 18
          },
          end: {
            line: 23,
            column: 32
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 150,
            column: 32
          },
          end: {
            line: 150,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 32
          },
          end: {
            line: 150,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "3": {
        loc: {
          start: {
            line: 157,
            column: 98
          },
          end: {
            line: 157,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 115
          },
          end: {
            line: 157,
            column: 125
          }
        }, {
          start: {
            line: 157,
            column: 128
          },
          end: {
            line: 157,
            column: 140
          }
        }],
        line: 157
      },
      "4": {
        loc: {
          start: {
            line: 157,
            column: 144
          },
          end: {
            line: 157,
            column: 181
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 154
          },
          end: {
            line: 157,
            column: 176
          }
        }, {
          start: {
            line: 157,
            column: 179
          },
          end: {
            line: 157,
            column: 181
          }
        }],
        line: 157
      },
      "5": {
        loc: {
          start: {
            line: 160,
            column: 79
          },
          end: {
            line: 160,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 96
          },
          end: {
            line: 160,
            column: 111
          }
        }, {
          start: {
            line: 160,
            column: 114
          },
          end: {
            line: 160,
            column: 129
          }
        }],
        line: 160
      },
      "6": {
        loc: {
          start: {
            line: 167,
            column: 144
          },
          end: {
            line: 167,
            column: 203
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 144
          },
          end: {
            line: 167,
            column: 176
          }
        }, {
          start: {
            line: 167,
            column: 180
          },
          end: {
            line: 167,
            column: 203
          }
        }],
        line: 167
      },
      "7": {
        loc: {
          start: {
            line: 167,
            column: 207
          },
          end: {
            line: 167,
            column: 255
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 229
          },
          end: {
            line: 167,
            column: 250
          }
        }, {
          start: {
            line: 167,
            column: 253
          },
          end: {
            line: 167,
            column: 255
          }
        }],
        line: 167
      },
      "8": {
        loc: {
          start: {
            line: 168,
            column: 78
          },
          end: {
            line: 168,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 78
          },
          end: {
            line: 168,
            column: 91
          }
        }, {
          start: {
            line: 168,
            column: 95
          },
          end: {
            line: 168,
            column: 107
          }
        }],
        line: 168
      },
      "9": {
        loc: {
          start: {
            line: 173,
            column: 64
          },
          end: {
            line: 176,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 64
          },
          end: {
            line: 173,
            column: 83
          }
        }, {
          start: {
            line: 173,
            column: 101
          },
          end: {
            line: 176,
            column: 66
          }
        }],
        line: 173
      },
      "10": {
        loc: {
          start: {
            line: 183,
            column: 56
          },
          end: {
            line: 195,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 56
          },
          end: {
            line: 183,
            column: 69
          }
        }, {
          start: {
            line: 183,
            column: 87
          },
          end: {
            line: 195,
            column: 58
          }
        }],
        line: 183
      },
      "11": {
        loc: {
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 208,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 56
          },
          end: {
            line: 196,
            column: 69
          }
        }, {
          start: {
            line: 196,
            column: 87
          },
          end: {
            line: 208,
            column: 58
          }
        }],
        line: 196
      },
      "12": {
        loc: {
          start: {
            line: 205,
            column: 78
          },
          end: {
            line: 205,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 205,
            column: 78
          },
          end: {
            line: 205,
            column: 114
          }
        }, {
          start: {
            line: 205,
            column: 118
          },
          end: {
            line: 205,
            column: 131
          }
        }],
        line: 205
      },
      "13": {
        loc: {
          start: {
            line: 211,
            column: 44
          },
          end: {
            line: 218,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 44
          },
          end: {
            line: 211,
            column: 63
          }
        }, {
          start: {
            line: 211,
            column: 81
          },
          end: {
            line: 218,
            column: 46
          }
        }],
        line: 211
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskCalendarView.tsx"],
      sourcesContent: ["import React from 'react';\nimport { ChevronLeft, ChevronRight, Calendar, User, Tag, AlertCircle } from 'lucide-react';\nimport { Task } from '../../types/task';\n\ninterface TaskCalendarViewProps {\n  tasks: Task[];\n  calendarDate: Date;\n  setCalendarDate: React.Dispatch<React.SetStateAction<Date>>;\n  isTaskOverdue: (task: Task) => boolean;\n}\n\nconst TaskPriorities = {\n  LOW: {\n    label: 'Low',\n    color: 'bg-green-100 text-green-800'\n  },\n  MEDIUM: {\n    label: 'Medium',\n    color: 'bg-yellow-100 text-yellow-800'\n  },\n  HIGH: {\n    label: 'High',\n    color: 'bg-orange-100 text-orange-800'\n  },\n  URGENT: {\n    label: 'Urgent',\n    color: 'bg-red-100 text-red-800'\n  }\n};\n\nconst TaskStatuses = {\n  TODO: {\n    label: 'To Do',\n    color: 'bg-gray-100 text-gray-800'\n  },\n  IN_PROGRESS: {\n    label: 'In Progress',\n    color: 'bg-blue-100 text-blue-800'\n  },\n  REVIEW: {\n    label: 'Review',\n    color: 'bg-purple-100 text-purple-800'\n  },\n  DONE: {\n    label: 'Done',\n    color: 'bg-green-100 text-green-800'\n  }\n};\n\nconst TaskCategories = {\n  DEVELOPMENT: { label: 'Development' },\n  DESIGN: { label: 'Design' },\n  TESTING: { label: 'Testing' },\n  DOCUMENTATION: { label: 'Documentation' },\n  MEETING: { label: 'Meeting' },\n  RESEARCH: { label: 'Research' }\n};\n\nexport const TaskCalendarView: React.FC<TaskCalendarViewProps> = ({\n  tasks,\n  calendarDate,\n  setCalendarDate,\n  isTaskOverdue\n}) => {\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm border border-gray-100\">\n      <div className=\"p-6 border-b border-gray-100\">\n        <div className=\"flex items-center justify-between\">\n          <h2 className=\"text-lg font-semibold text-gray-900\">Task Calendar</h2>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setCalendarDate(new Date(calendarDate.getFullYear(), calendarDate.getMonth() - 1, 1))}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n            >\n              <ChevronLeft size={16} />\n            </button>\n            <span className=\"text-sm font-medium text-gray-700 min-w-[120px] text-center\">\n              {calendarDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\n            </span>\n            <button\n              onClick={() => setCalendarDate(new Date(calendarDate.getFullYear(), calendarDate.getMonth() + 1, 1))}\n              className=\"p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100\"\n            >\n              <ChevronRight size={16} />\n            </button>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"p-6\">\n        <div className=\"grid grid-cols-7 gap-2 mb-4\">\n          {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n            <div key={day} className=\"text-center text-sm font-medium text-gray-500 py-2\">\n              {day}\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"grid grid-cols-7 gap-2\">\n          {Array.from({ length: 35 }, (_, i) => {\n            const date = new Date(calendarDate.getFullYear(), calendarDate.getMonth(), i - 6)\n            const dayTasks = tasks.filter(task => {\n              if (!task.dueDate) return false\n              const taskDate = new Date(task.dueDate)\n              return taskDate.toDateString() === date.toDateString()\n            })\n            const isCurrentMonth = date.getMonth() === calendarDate.getMonth()\n            const isToday = date.toDateString() === new Date().toDateString()\n            \n            return (\n              <div\n                key={i}\n                className={`min-h-[100px] p-2 border border-gray-100 rounded-lg ${\n                  isCurrentMonth ? 'bg-white' : 'bg-gray-50'\n                } ${isToday ? 'ring-2 ring-blue-500' : ''}`}\n              >\n                <div className={`text-sm font-medium mb-1 ${\n                  isCurrentMonth ? 'text-gray-900' : 'text-gray-400'\n                }`}>\n                  {date.getDate()}\n                </div>\n                \n                <div className=\"space-y-1\">\n                  {dayTasks.slice(0, 3).map(task => (\n                    <div\n                      key={task.id}\n                      className={`text-xs p-1 rounded truncate cursor-pointer hover:shadow-sm transition-shadow ${\n                        TaskStatuses[task.status]?.color || TaskStatuses.TODO.color\n                      } ${isTaskOverdue(task) ? 'ring-1 ring-red-400' : ''}`}\n                      title={`${task.title} - ${task.assignee || 'Unassigned'}`}\n                    >\n                      <div className=\"flex items-center space-x-1\">\n                        {isTaskOverdue(task) && (\n                          <AlertCircle size={8} className=\"text-red-600 flex-shrink-0\" />\n                        )}\n                        <span className=\"truncate\">{task.title}</span>\n                      </div>\n                      \n                      {task.assignee && (\n                        <div className=\"flex items-center mt-1 text-gray-600\">\n                          <User size={8} className=\"mr-1\" />\n                          <span className=\"truncate\">{task.assignee}</span>\n                        </div>\n                      )}\n                      \n                      {task.category && (\n                        <div className=\"flex items-center mt-1 text-gray-600\">\n                          <Tag size={8} className=\"mr-1\" />\n                          <span className=\"truncate\">\n                            {TaskCategories[task.category as keyof typeof TaskCategories]?.label || task.category}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                  \n                  {dayTasks.length > 3 && (\n                    <div className=\"text-xs text-gray-500 text-center py-1\">\n                      +{dayTasks.length - 3} more\n                    </div>\n                  )}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        \n        {/* Calendar Legend */}\n        <div className=\"mt-6 pt-4 border-t border-gray-100\">\n          <h3 className=\"text-sm font-medium text-gray-700 mb-3\">Legend</h3>\n          <div className=\"flex flex-wrap gap-4\">\n            {Object.entries(TaskStatuses).map(([key, status]) => (\n              <div key={key} className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded ${status.color}`}></div>\n                <span className=\"text-xs text-gray-600\">{status.label}</span>\n              </div>\n            ))}\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 rounded border-2 border-red-400\"></div>\n              <span className=\"text-xs text-gray-600\">Overdue</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 rounded ring-2 ring-blue-500\"></div>\n              <span className=\"text-xs text-gray-600\">Today</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskCalendarView;"],
      names: ["TaskCalendarView", "TaskPriorities", "LOW", "label", "color", "MEDIUM", "HIGH", "URGENT", "TaskStatuses", "TODO", "IN_PROGRESS", "REVIEW", "DONE", "TaskCategories", "DEVELOPMENT", "DESIGN", "TESTING", "DOCUMENTATION", "MEETING", "RESEARCH", "tasks", "calendarDate", "setCalendarDate", "isTaskOverdue", "div", "className", "h2", "button", "onClick", "Date", "getFullYear", "getMonth", "ChevronLeft", "size", "span", "toLocaleDateString", "month", "year", "ChevronRight", "map", "day", "Array", "from", "length", "_", "i", "date", "dayTasks", "filter", "task", "dueDate", "taskDate", "toDateString", "isCurrentMonth", "isToday", "getDate", "slice", "status", "title", "assignee", "AlertCircle", "User", "category", "Tag", "id", "h3", "Object", "entries", "key"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b2e8cda611f9660d32a2775211448512111934cb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_yh5qz8gaw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_yh5qz8gaw();
cov_yh5qz8gaw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_yh5qz8gaw().f[0]++;
  cov_yh5qz8gaw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_yh5qz8gaw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_yh5qz8gaw().s[3]++;
_export(exports, {
  get TaskCalendarView() {
    /* istanbul ignore next */
    cov_yh5qz8gaw().f[1]++;
    cov_yh5qz8gaw().s[4]++;
    return TaskCalendarView;
  },
  get default() {
    /* istanbul ignore next */
    cov_yh5qz8gaw().f[2]++;
    cov_yh5qz8gaw().s[5]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_yh5qz8gaw().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_yh5qz8gaw().s[7]++, _interop_require_default(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_yh5qz8gaw().s[8]++, require("lucide-react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_yh5qz8gaw().f[3]++;
  cov_yh5qz8gaw().s[9]++;
  return /* istanbul ignore next */(cov_yh5qz8gaw().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_yh5qz8gaw().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_yh5qz8gaw().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_yh5qz8gaw().b[0][1]++, {
    default: obj
  });
}
const TaskPriorities =
/* istanbul ignore next */
(cov_yh5qz8gaw().s[10]++, {
  LOW: {
    label: 'Low',
    color: 'bg-green-100 text-green-800'
  },
  MEDIUM: {
    label: 'Medium',
    color: 'bg-yellow-100 text-yellow-800'
  },
  HIGH: {
    label: 'High',
    color: 'bg-orange-100 text-orange-800'
  },
  URGENT: {
    label: 'Urgent',
    color: 'bg-red-100 text-red-800'
  }
});
const TaskStatuses =
/* istanbul ignore next */
(cov_yh5qz8gaw().s[11]++, {
  TODO: {
    label: 'To Do',
    color: 'bg-gray-100 text-gray-800'
  },
  IN_PROGRESS: {
    label: 'In Progress',
    color: 'bg-blue-100 text-blue-800'
  },
  REVIEW: {
    label: 'Review',
    color: 'bg-purple-100 text-purple-800'
  },
  DONE: {
    label: 'Done',
    color: 'bg-green-100 text-green-800'
  }
});
const TaskCategories =
/* istanbul ignore next */
(cov_yh5qz8gaw().s[12]++, {
  DEVELOPMENT: {
    label: 'Development'
  },
  DESIGN: {
    label: 'Design'
  },
  TESTING: {
    label: 'Testing'
  },
  DOCUMENTATION: {
    label: 'Documentation'
  },
  MEETING: {
    label: 'Meeting'
  },
  RESEARCH: {
    label: 'Research'
  }
});
/* istanbul ignore next */
cov_yh5qz8gaw().s[13]++;
const TaskCalendarView = ({
  tasks,
  calendarDate,
  setCalendarDate,
  isTaskOverdue
}) => {
  /* istanbul ignore next */
  cov_yh5qz8gaw().f[4]++;
  cov_yh5qz8gaw().s[14]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "bg-white rounded-xl shadow-sm border border-gray-100",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "p-6 border-b border-gray-100",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-lg font-semibold text-gray-900",
          children: "Task Calendar"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_yh5qz8gaw().f[5]++;
              cov_yh5qz8gaw().s[15]++;
              return setCalendarDate(new Date(calendarDate.getFullYear(), calendarDate.getMonth() - 1, 1));
            },
            className: "p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronLeft, {
              size: 16
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-sm font-medium text-gray-700 min-w-[120px] text-center",
            children: calendarDate.toLocaleDateString('en-US', {
              month: 'long',
              year: 'numeric'
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_yh5qz8gaw().f[6]++;
              cov_yh5qz8gaw().s[16]++;
              return setCalendarDate(new Date(calendarDate.getFullYear(), calendarDate.getMonth() + 1, 1));
            },
            className: "p-2 text-gray-400 hover:text-gray-600 rounded-lg hover:bg-gray-100",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.ChevronRight, {
              size: 16
            })
          })]
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "p-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid grid-cols-7 gap-2 mb-4",
        children: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => {
          /* istanbul ignore next */
          cov_yh5qz8gaw().f[7]++;
          cov_yh5qz8gaw().s[17]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "text-center text-sm font-medium text-gray-500 py-2",
            children: day
          }, day);
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid grid-cols-7 gap-2",
        children: Array.from({
          length: 35
        }, (_, i) => {
          /* istanbul ignore next */
          cov_yh5qz8gaw().f[8]++;
          const date =
          /* istanbul ignore next */
          (cov_yh5qz8gaw().s[18]++, new Date(calendarDate.getFullYear(), calendarDate.getMonth(), i - 6));
          const dayTasks =
          /* istanbul ignore next */
          (cov_yh5qz8gaw().s[19]++, tasks.filter(task => {
            /* istanbul ignore next */
            cov_yh5qz8gaw().f[9]++;
            cov_yh5qz8gaw().s[20]++;
            if (!task.dueDate) {
              /* istanbul ignore next */
              cov_yh5qz8gaw().b[2][0]++;
              cov_yh5qz8gaw().s[21]++;
              return false;
            } else
            /* istanbul ignore next */
            {
              cov_yh5qz8gaw().b[2][1]++;
            }
            const taskDate =
            /* istanbul ignore next */
            (cov_yh5qz8gaw().s[22]++, new Date(task.dueDate));
            /* istanbul ignore next */
            cov_yh5qz8gaw().s[23]++;
            return taskDate.toDateString() === date.toDateString();
          }));
          const isCurrentMonth =
          /* istanbul ignore next */
          (cov_yh5qz8gaw().s[24]++, date.getMonth() === calendarDate.getMonth());
          const isToday =
          /* istanbul ignore next */
          (cov_yh5qz8gaw().s[25]++, date.toDateString() === new Date().toDateString());
          /* istanbul ignore next */
          cov_yh5qz8gaw().s[26]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: `min-h-[100px] p-2 border border-gray-100 rounded-lg ${isCurrentMonth ?
            /* istanbul ignore next */
            (cov_yh5qz8gaw().b[3][0]++, 'bg-white') :
            /* istanbul ignore next */
            (cov_yh5qz8gaw().b[3][1]++, 'bg-gray-50')} ${isToday ?
            /* istanbul ignore next */
            (cov_yh5qz8gaw().b[4][0]++, 'ring-2 ring-blue-500') :
            /* istanbul ignore next */
            (cov_yh5qz8gaw().b[4][1]++, '')}`,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: `text-sm font-medium mb-1 ${isCurrentMonth ?
              /* istanbul ignore next */
              (cov_yh5qz8gaw().b[5][0]++, 'text-gray-900') :
              /* istanbul ignore next */
              (cov_yh5qz8gaw().b[5][1]++, 'text-gray-400')}`,
              children: date.getDate()
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-1",
              children: [dayTasks.slice(0, 3).map(task => {
                /* istanbul ignore next */
                cov_yh5qz8gaw().f[10]++;
                cov_yh5qz8gaw().s[27]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: `text-xs p-1 rounded truncate cursor-pointer hover:shadow-sm transition-shadow ${
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[6][0]++, TaskStatuses[task.status]?.color) ||
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[6][1]++, TaskStatuses.TODO.color)} ${isTaskOverdue(task) ?
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[7][0]++, 'ring-1 ring-red-400') :
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[7][1]++, '')}`,
                  title: `${task.title} - ${
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[8][0]++, task.assignee) ||
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[8][1]++, 'Unassigned')}`,
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-1",
                    children: [
                    /* istanbul ignore next */
                    (cov_yh5qz8gaw().b[9][0]++, isTaskOverdue(task)) &&
                    /* istanbul ignore next */
                    (cov_yh5qz8gaw().b[9][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
                      size: 8,
                      className: "text-red-600 flex-shrink-0"
                    })), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "truncate",
                      children: task.title
                    })]
                  }),
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[10][0]++, task.assignee) &&
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[10][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center mt-1 text-gray-600",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.User, {
                      size: 8,
                      className: "mr-1"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "truncate",
                      children: task.assignee
                    })]
                  })),
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[11][0]++, task.category) &&
                  /* istanbul ignore next */
                  (cov_yh5qz8gaw().b[11][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center mt-1 text-gray-600",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Tag, {
                      size: 8,
                      className: "mr-1"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "truncate",
                      children:
                      /* istanbul ignore next */
                      (cov_yh5qz8gaw().b[12][0]++, TaskCategories[task.category]?.label) ||
                      /* istanbul ignore next */
                      (cov_yh5qz8gaw().b[12][1]++, task.category)
                    })]
                  }))]
                }, task.id);
              }),
              /* istanbul ignore next */
              (cov_yh5qz8gaw().b[13][0]++, dayTasks.length > 3) &&
              /* istanbul ignore next */
              (cov_yh5qz8gaw().b[13][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-xs text-gray-500 text-center py-1",
                children: ["+", dayTasks.length - 3, " more"]
              }))]
            })]
          }, i);
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "mt-6 pt-4 border-t border-gray-100",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-sm font-medium text-gray-700 mb-3",
          children: "Legend"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex flex-wrap gap-4",
          children: [Object.entries(TaskStatuses).map(([key, status]) => {
            /* istanbul ignore next */
            cov_yh5qz8gaw().f[11]++;
            cov_yh5qz8gaw().s[28]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: `w-3 h-3 rounded ${status.color}`
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-xs text-gray-600",
                children: status.label
              })]
            }, key);
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-3 h-3 rounded border-2 border-red-400"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-xs text-gray-600",
              children: "Overdue"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-3 h-3 rounded ring-2 ring-blue-500"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-xs text-gray-600",
              children: "Today"
            })]
          })]
        })]
      })]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_yh5qz8gaw().s[29]++, TaskCalendarView);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,