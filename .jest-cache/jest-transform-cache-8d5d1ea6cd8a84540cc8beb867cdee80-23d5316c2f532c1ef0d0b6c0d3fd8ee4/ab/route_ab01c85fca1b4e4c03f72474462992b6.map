{"version":3,"names":["GET","cov_17n5gbog93","f","s","POST","mockClients","id","name","email","phone","status","created_at","updated_at","request","Promise","resolve","setTimeout","_server","NextResponse","json","success","data","total","length","error","console","body","newClient","Date","now","toString","toISOString","push"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\app\\api\\clients\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\n// Mock client data\nconst mockClients = [\n  {\n    id: '1',\n    name: 'Acme Corporation',\n    email: 'contact@acme.com',\n    phone: '+1-555-0123',\n    status: 'active',\n    created_at: '2024-01-15T10:00:00Z',\n    updated_at: '2024-01-20T15:30:00Z'\n  },\n  {\n    id: '2',\n    name: 'TechStart Inc',\n    email: 'hello@techstart.com',\n    phone: '+1-555-0456',\n    status: 'active',\n    created_at: '2024-01-10T09:00:00Z',\n    updated_at: '2024-01-25T11:45:00Z'\n  }\n]\n\n// GET /api/clients\nexport async function GET(request: NextRequest) {\n  try {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 100))\n    \n    return NextResponse.json({\n      success: true,\n      data: mockClients,\n      total: mockClients.length\n    })\n  } catch (error) {\n    console.error('Error fetching clients:', error)\n    return NextResponse.json(\n      { success: false, error: 'Failed to fetch clients' },\n      { status: 500 }\n    )\n  }\n}\n\n// POST /api/clients\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json()\n    \n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 200))\n    \n    const newClient = {\n      id: Date.now().toString(),\n      ...body,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    }\n    \n    mockClients.push(newClient)\n    \n    return NextResponse.json({\n      success: true,\n      data: newClient\n    }, { status: 201 })\n  } catch (error) {\n    console.error('Error creating client:', error)\n    return NextResponse.json(\n      { success: false, error: 'Failed to create client' },\n      { status: 500 }\n    )\n  }\n}"],"mappings":"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","ignoreList":[]}