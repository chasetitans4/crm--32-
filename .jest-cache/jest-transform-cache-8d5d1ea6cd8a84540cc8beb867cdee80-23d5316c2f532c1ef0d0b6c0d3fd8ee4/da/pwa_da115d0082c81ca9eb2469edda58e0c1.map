{"version":3,"names":["cov_je44a6cbf","actualCoverage","s","PWAManager","f","clearAllCaches","getCacheUsage","getInstallationStatus","getNetworkInfo","getStorageEstimate","isAppInstalled","isOnline","pwaManager","registerPWA","showInstallPrompt","updateServiceWorker","usePWA","constructor","deferredPrompt","isInstalled","installPromptShown","serviceWorkerRegistration","init","checkIfInstalled","window","addEventListener","e","preventDefault","notifyInstallAvailable","notifyAppInstalled","registerServiceWorker","matchMedia","matches","b","navigator","standalone","document","referrer","includes","console","log","registration","serviceWorker","register","scope","newWorker","installing","state","controller","notifyUpdateAvailable","error","isInstallable","prompt","userChoice","promptShown","serviceWorkerActive","active","update","skipWaiting","waiting","postMessage","type","dispatchEvent","CustomEvent","detail","canInstall","installed","updateAvailable","onLine","connection","mozConnection","webkitConnection","effectiveType","downlink","rtt","saveData","storage","estimate","quota","usage","usagePercentage","clearCaches","cacheNames","caches","keys","Promise","all","map","name","delete","cacheInfo","cache","open","entries","length","urls","req","url","installPrompt","setInstallPrompt","_react","default","useState","setIsInstalled","setUpdateAvailable","setIsOnline","useEffect","status","handleInstallAvailable","then","handleAppInstalled","handleUpdateAvailable","handleOnline","handleOffline","removeEventListener","install","choice","outcome","location","reload"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\pwa.ts"],"sourcesContent":["// PWA utilities for service worker registration and installation\n\ninterface BeforeInstallPromptEvent extends Event {\n  readonly platforms: string[];\n  readonly userChoice: Promise<{\n    outcome: 'accepted' | 'dismissed';\n    platform: string;\n  }>;\n  prompt(): Promise<void>;\n}\n\ninterface PWAInstallPrompt {\n  isInstallable: boolean;\n  isInstalled: boolean;\n  prompt: (() => Promise<void>) | null;\n  userChoice: Promise<{ outcome: 'accepted' | 'dismissed'; platform: string }> | null;\n}\n\nclass PWAManager {\n  private deferredPrompt: BeforeInstallPromptEvent | null = null;\n  private isInstalled = false;\n  private installPromptShown = false;\n  private serviceWorkerRegistration: ServiceWorkerRegistration | null = null;\n\n  constructor() {\n    this.init();\n  }\n\n  private async init() {\n    // Check if already installed\n    this.isInstalled = this.checkIfInstalled();\n\n    // Listen for install prompt\n    window.addEventListener('beforeinstallprompt', (e) => {\n      e.preventDefault();\n      this.deferredPrompt = e as BeforeInstallPromptEvent;\n      this.notifyInstallAvailable();\n    });\n\n    // Listen for app installed\n    window.addEventListener('appinstalled', () => {\n      this.isInstalled = true;\n      this.deferredPrompt = null;\n      this.notifyAppInstalled();\n    });\n\n    // Register service worker\n    await this.registerServiceWorker();\n  }\n\n  private checkIfInstalled(): boolean {\n    // Check if running in standalone mode\n    if (window.matchMedia('(display-mode: standalone)').matches) {\n      return true;\n    }\n\n    // Check if running as PWA on mobile\n    if ((window.navigator as any).standalone === true) {\n      return true;\n    }\n\n    // Check for TWA (Trusted Web Activity) on Android\n    if (document.referrer.includes('android-app://')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  async registerServiceWorker(): Promise<ServiceWorkerRegistration | null> {\n    if (!('serviceWorker' in navigator)) {\n      console.log('Service Worker not supported');\n      return null;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.register('/sw.js', {\n        scope: '/'\n      });\n\n      this.serviceWorkerRegistration = registration;\n\n      registration.addEventListener('updatefound', () => {\n        const newWorker = registration.installing;\n        if (newWorker) {\n          newWorker.addEventListener('statechange', () => {\n            if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n              this.notifyUpdateAvailable();\n            }\n          });\n        }\n      });\n\n      console.log('Service Worker registered successfully');\n      return registration;\n    } catch (error) {\n      console.error('Service Worker registration failed:', error);\n      return null;\n    }\n  }\n\n  async showInstallPrompt(): Promise<PWAInstallPrompt> {\n    if (!this.deferredPrompt) {\n      return {\n        isInstallable: false,\n        isInstalled: this.isInstalled,\n        prompt: null,\n        userChoice: null\n      };\n    }\n\n    const prompt = async () => {\n      if (this.deferredPrompt) {\n        await this.deferredPrompt.prompt();\n        this.installPromptShown = true;\n      }\n    };\n\n    return {\n      isInstallable: true,\n      isInstalled: this.isInstalled,\n      prompt,\n      userChoice: this.deferredPrompt.userChoice\n    };\n  }\n\n  getInstallationStatus() {\n    return {\n      isInstalled: this.isInstalled,\n      isInstallable: !!this.deferredPrompt,\n      promptShown: this.installPromptShown,\n      serviceWorkerActive: !!this.serviceWorkerRegistration?.active\n    };\n  }\n\n  async updateServiceWorker(): Promise<boolean> {\n    if (!this.serviceWorkerRegistration) {\n      return false;\n    }\n\n    try {\n      await this.serviceWorkerRegistration.update();\n      return true;\n    } catch (error) {\n      console.error('Service Worker update failed:', error);\n      return false;\n    }\n  }\n\n  async skipWaiting(): Promise<void> {\n    if (this.serviceWorkerRegistration?.waiting) {\n      this.serviceWorkerRegistration.waiting.postMessage({ type: 'SKIP_WAITING' });\n    }\n  }\n\n  private notifyInstallAvailable() {\n    // Dispatch custom event for install availability\n    window.dispatchEvent(new CustomEvent('pwa-install-available', {\n      detail: { canInstall: true }\n    }));\n  }\n\n  private notifyAppInstalled() {\n    // Dispatch custom event for app installation\n    window.dispatchEvent(new CustomEvent('pwa-installed', {\n      detail: { installed: true }\n    }));\n  }\n\n  private notifyUpdateAvailable() {\n    // Dispatch custom event for update availability\n    window.dispatchEvent(new CustomEvent('pwa-update-available', {\n      detail: { updateAvailable: true }\n    }));\n  }\n\n  // Offline detection\n  isOnline(): boolean {\n    return navigator.onLine;\n  }\n\n  // Network information (if available)\n  getNetworkInfo() {\n    const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n    \n    if (connection) {\n      return {\n        effectiveType: connection.effectiveType,\n        downlink: connection.downlink,\n        rtt: connection.rtt,\n        saveData: connection.saveData\n      };\n    }\n\n    return null;\n  }\n\n  // Storage estimation\n  async getStorageEstimate() {\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      try {\n        const estimate = await navigator.storage.estimate();\n        return {\n          quota: estimate.quota,\n          usage: estimate.usage,\n          usagePercentage: estimate.quota ? (estimate.usage! / estimate.quota) * 100 : 0\n        };\n      } catch (error) {\n        console.error('Storage estimate failed:', error);\n      }\n    }\n    return null;\n  }\n\n  // Clear all caches\n  async clearCaches(): Promise<boolean> {\n    try {\n      const cacheNames = await caches.keys();\n      await Promise.all(cacheNames.map(name => caches.delete(name)));\n      return true;\n    } catch (error) {\n      console.error('Cache clearing failed:', error);\n      return false;\n    }\n  }\n\n  // Get cache usage\n  async getCacheUsage() {\n    try {\n      const cacheNames = await caches.keys();\n      const cacheInfo = await Promise.all(\n        cacheNames.map(async (name) => {\n          const cache = await caches.open(name);\n          const keys = await cache.keys();\n          return {\n            name,\n            entries: keys.length,\n            urls: keys.map(req => req.url)\n          };\n        })\n      );\n      return cacheInfo;\n    } catch (error) {\n      console.error('Cache usage check failed:', error);\n      return [];\n    }\n  }\n}\n\n// Singleton instance\nconst pwaManager = new PWAManager();\n\n// Export utilities\nexport { pwaManager, PWAManager };\nexport type { PWAInstallPrompt, BeforeInstallPromptEvent };\n\n// Convenience functions\nexport const registerPWA = () => pwaManager.registerServiceWorker();\nexport const showInstallPrompt = () => pwaManager.showInstallPrompt();\nexport const getInstallationStatus = () => pwaManager.getInstallationStatus();\nexport const updateServiceWorker = () => pwaManager.updateServiceWorker();\nexport const isAppInstalled = () => pwaManager.getInstallationStatus().isInstalled;\nexport const isOnline = () => pwaManager.isOnline();\nexport const getNetworkInfo = () => pwaManager.getNetworkInfo();\nexport const getStorageEstimate = () => pwaManager.getStorageEstimate();\nexport const clearAllCaches = () => pwaManager.clearCaches();\nexport const getCacheUsage = () => pwaManager.getCacheUsage();\n\n// React hook for PWA functionality\nexport function usePWA() {\n  const [installPrompt, setInstallPrompt] = React.useState<PWAInstallPrompt | null>(null);\n  const [isInstalled, setIsInstalled] = React.useState(false);\n  const [updateAvailable, setUpdateAvailable] = React.useState(false);\n  const [isOnline, setIsOnline] = React.useState(navigator.onLine);\n\n  React.useEffect(() => {\n    // Initial status\n    const status = getInstallationStatus();\n    setIsInstalled(status.isInstalled);\n\n    // Listen for PWA events\n    const handleInstallAvailable = () => {\n      showInstallPrompt().then(setInstallPrompt);\n    };\n\n    const handleAppInstalled = () => {\n      setIsInstalled(true);\n      setInstallPrompt(null);\n    };\n\n    const handleUpdateAvailable = () => {\n      setUpdateAvailable(true);\n    };\n\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('pwa-install-available', handleInstallAvailable);\n    window.addEventListener('pwa-installed', handleAppInstalled);\n    window.addEventListener('pwa-update-available', handleUpdateAvailable);\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('pwa-install-available', handleInstallAvailable);\n      window.removeEventListener('pwa-installed', handleAppInstalled);\n      window.removeEventListener('pwa-update-available', handleUpdateAvailable);\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  const install = async () => {\n    if (installPrompt?.prompt) {\n      await installPrompt.prompt();\n      const choice = await installPrompt.userChoice;\n      if (choice?.outcome === 'accepted') {\n        setIsInstalled(true);\n        setInstallPrompt(null);\n      }\n    }\n  };\n\n  const update = async () => {\n    await updateServiceWorker();\n    await pwaManager.skipWaiting();\n    setUpdateAvailable(false);\n    window.location.reload();\n  };\n\n  return {\n    isInstalled,\n    installPrompt,\n    updateAvailable,\n    isOnline,\n    install,\n    update,\n    getStorageEstimate,\n    clearCaches: clearAllCaches,\n    getCacheUsage\n  };\n}\n\n// Add React import for the hook\nimport React from 'react';"],"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","ignoreList":[]}