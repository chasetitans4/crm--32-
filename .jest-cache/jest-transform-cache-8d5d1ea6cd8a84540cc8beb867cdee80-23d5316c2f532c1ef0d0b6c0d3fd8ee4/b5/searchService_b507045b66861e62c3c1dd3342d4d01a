2bc9900d69a4822818675d8475d7ca96
"use strict";

/* istanbul ignore next */
function cov_1mfw8nm532() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\searchService.ts";
  var hash = "11548c25c8f2fa87fbbe731608289825ac871071";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\searchService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 29
        }
      },
      "3": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 17,
          column: 12
        }
      },
      "4": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "5": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "6": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 60
        }
      },
      "7": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 27,
          column: 13
        }
      },
      "8": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 45
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 34,
          column: 11
        }
      },
      "10": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 37,
          column: 46
        }
      },
      "11": {
        start: {
          line: 38,
          column: 20
        },
        end: {
          line: 38,
          column: 21
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "13": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 24
        }
      },
      "14": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 44,
          column: 13
        }
      },
      "15": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 27
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "17": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 23
        }
      },
      "18": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "19": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 24
        }
      },
      "20": {
        start: {
          line: 55,
          column: 32
        },
        end: {
          line: 55,
          column: 125
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "22": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 23
        }
      },
      "23": {
        start: {
          line: 58,
          column: 15
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "24": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 23
        }
      },
      "25": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 21
        }
      },
      "26": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 64,
          column: 44
        }
      },
      "27": {
        start: {
          line: 65,
          column: 27
        },
        end: {
          line: 65,
          column: 46
        }
      },
      "28": {
        start: {
          line: 67,
          column: 26
        },
        end: {
          line: 67,
          column: 59
        }
      },
      "29": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 68,
          column: 22
        }
      },
      "30": {
        start: {
          line: 69,
          column: 24
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "31": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "32": {
        start: {
          line: 70,
          column: 20
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "33": {
        start: {
          line: 71,
          column: 24
        },
        end: {
          line: 71,
          column: 29
        }
      },
      "34": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "35": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 33
        }
      },
      "36": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 77,
          column: 17
        }
      },
      "37": {
        start: {
          line: 74,
          column: 20
        },
        end: {
          line: 74,
          column: 38
        }
      },
      "38": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 33
        }
      },
      "39": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 26
        }
      },
      "40": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "41": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 80,
          column: 25
        }
      },
      "42": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 53
        }
      },
      "43": {
        start: {
          line: 81,
          column: 40
        },
        end: {
          line: 81,
          column: 53
        }
      },
      "44": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 20
        }
      },
      "45": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 118,
          column: 10
        }
      },
      "46": {
        start: {
          line: 121,
          column: 25
        },
        end: {
          line: 121,
          column: 71
        }
      },
      "47": {
        start: {
          line: 122,
          column: 23
        },
        end: {
          line: 122,
          column: 47
        }
      },
      "48": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "49": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 34
        }
      },
      "50": {
        start: {
          line: 127,
          column: 29
        },
        end: {
          line: 127,
          column: 64
        }
      },
      "51": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 57
        }
      },
      "52": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 42
        }
      },
      "53": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "54": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 65
        }
      },
      "55": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 63
        }
      },
      "56": {
        start: {
          line: 135,
          column: 37
        },
        end: {
          line: 135,
          column: 61
        }
      },
      "57": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 136,
          column: 46
        }
      },
      "58": {
        start: {
          line: 137,
          column: 22
        },
        end: {
          line: 137,
          column: 24
        }
      },
      "59": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "60": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "61": {
        start: {
          line: 140,
          column: 37
        },
        end: {
          line: 140,
          column: 250
        }
      },
      "62": {
        start: {
          line: 141,
          column: 36
        },
        end: {
          line: 141,
          column: 88
        }
      },
      "63": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 51
        }
      },
      "64": {
        start: {
          line: 143,
          column: 28
        },
        end: {
          line: 150,
          column: 17
        }
      },
      "65": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 155,
          column: 17
        }
      },
      "66": {
        start: {
          line: 152,
          column: 34
        },
        end: {
          line: 152,
          column: 66
        }
      },
      "67": {
        start: {
          line: 153,
          column: 34
        },
        end: {
          line: 153,
          column: 66
        }
      },
      "68": {
        start: {
          line: 154,
          column: 20
        },
        end: {
          line: 154,
          column: 87
        }
      },
      "69": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 49
        }
      },
      "70": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "71": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 96
        }
      },
      "72": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 43
        }
      },
      "73": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 23
        }
      },
      "74": {
        start: {
          line: 166,
          column: 39
        },
        end: {
          line: 169,
          column: 10
        }
      },
      "75": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 173,
          column: 10
        }
      },
      "76": {
        start: {
          line: 176,
          column: 28
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "77": {
        start: {
          line: 188,
          column: 25
        },
        end: {
          line: 188,
          column: 82
        }
      },
      "78": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 35
        }
      },
      "79": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 72
        }
      },
      "80": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 27
        }
      },
      "81": {
        start: {
          line: 195,
          column: 22
        },
        end: {
          line: 195,
          column: 79
        }
      },
      "82": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 72
        }
      },
      "83": {
        start: {
          line: 196,
          column: 42
        },
        end: {
          line: 196,
          column: 62
        }
      },
      "84": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 82
        }
      },
      "85": {
        start: {
          line: 200,
          column: 25
        },
        end: {
          line: 200,
          column: 58
        }
      },
      "86": {
        start: {
          line: 200,
          column: 46
        },
        end: {
          line: 200,
          column: 57
        }
      },
      "87": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 72
        }
      },
      "88": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 204,
          column: 30
        }
      },
      "89": {
        start: {
          line: 206,
          column: 35
        },
        end: {
          line: 210,
          column: 15
        }
      },
      "90": {
        start: {
          line: 206,
          column: 66
        },
        end: {
          line: 206,
          column: 126
        }
      },
      "91": {
        start: {
          line: 206,
          column: 150
        },
        end: {
          line: 210,
          column: 13
        }
      },
      "92": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 48
        }
      },
      "93": {
        start: {
          line: 213,
          column: 34
        },
        end: {
          line: 229,
          column: 59
        }
      },
      "94": {
        start: {
          line: 229,
          column: 22
        },
        end: {
          line: 229,
          column: 58
        }
      },
      "95": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 47
        }
      },
      "96": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 71
        }
      },
      "97": {
        start: {
          line: 231,
          column: 40
        },
        end: {
          line: 231,
          column: 57
        }
      },
      "98": {
        start: {
          line: 234,
          column: 30
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "99": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 121
        }
      },
      "100": {
        start: {
          line: 242,
          column: 70
        },
        end: {
          line: 242,
          column: 81
        }
      },
      "101": {
        start: {
          line: 242,
          column: 114
        },
        end: {
          line: 242,
          column: 119
        }
      },
      "102": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 27
        }
      },
      "103": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 31
        }
      },
      "104": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 39
        }
      },
      "105": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 34
        }
      },
      "106": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 32
        }
      },
      "107": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 40
        }
      },
      "108": {
        start: {
          line: 255,
          column: 22
        },
        end: {
          line: 255,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 46
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 41
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 86,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        loc: {
          start: {
            line: 86,
            column: 21
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 86
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 5
          }
        },
        loc: {
          start: {
            line: 120,
            column: 42
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 120
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 135,
            column: 26
          },
          end: {
            line: 135,
            column: 27
          }
        },
        loc: {
          start: {
            line: 135,
            column: 37
          },
          end: {
            line: 135,
            column: 61
          }
        },
        line: 135
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 139,
            column: 38
          },
          end: {
            line: 139,
            column: 39
          }
        },
        loc: {
          start: {
            line: 139,
            column: 46
          },
          end: {
            line: 143,
            column: 13
          }
        },
        line: 139
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 143,
            column: 19
          },
          end: {
            line: 143,
            column: 20
          }
        },
        loc: {
          start: {
            line: 143,
            column: 28
          },
          end: {
            line: 150,
            column: 17
          }
        },
        line: 143
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 150,
            column: 26
          }
        },
        loc: {
          start: {
            line: 150,
            column: 33
          },
          end: {
            line: 157,
            column: 13
          }
        },
        line: 150
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 39
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 165
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 175,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        loc: {
          start: {
            line: 175,
            column: 52
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 175
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 35
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 193
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 196,
            column: 37
          },
          end: {
            line: 196,
            column: 38
          }
        },
        loc: {
          start: {
            line: 196,
            column: 42
          },
          end: {
            line: 196,
            column: 62
          }
        },
        line: 196
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 32
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 198
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 200,
            column: 41
          },
          end: {
            line: 200,
            column: 42
          }
        },
        loc: {
          start: {
            line: 200,
            column: 46
          },
          end: {
            line: 200,
            column: 57
          }
        },
        line: 200
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        loc: {
          start: {
            line: 203,
            column: 38
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 203
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 206,
            column: 61
          },
          end: {
            line: 206,
            column: 62
          }
        },
        loc: {
          start: {
            line: 206,
            column: 66
          },
          end: {
            line: 206,
            column: 126
          }
        },
        line: 206
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 206,
            column: 144
          },
          end: {
            line: 206,
            column: 145
          }
        },
        loc: {
          start: {
            line: 206,
            column: 150
          },
          end: {
            line: 210,
            column: 13
          }
        },
        line: 206
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 229,
            column: 17
          },
          end: {
            line: 229,
            column: 18
          }
        },
        loc: {
          start: {
            line: 229,
            column: 22
          },
          end: {
            line: 229,
            column: 58
          }
        },
        line: 229
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 231,
            column: 32
          },
          end: {
            line: 231,
            column: 33
          }
        },
        loc: {
          start: {
            line: 231,
            column: 40
          },
          end: {
            line: 231,
            column: 57
          }
        },
        line: 231
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 42
          },
          end: {
            line: 240,
            column: 5
          }
        },
        line: 233
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 241,
            column: 4
          },
          end: {
            line: 241,
            column: 5
          }
        },
        loc: {
          start: {
            line: 241,
            column: 41
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 241
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 242,
            column: 62
          },
          end: {
            line: 242,
            column: 63
          }
        },
        loc: {
          start: {
            line: 242,
            column: 70
          },
          end: {
            line: 242,
            column: 81
          }
        },
        line: 242
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 242,
            column: 103
          },
          end: {
            line: 242,
            column: 104
          }
        },
        loc: {
          start: {
            line: 242,
            column: 114
          },
          end: {
            line: 242,
            column: 119
          }
        },
        line: 242
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 244,
            column: 5
          }
        },
        loc: {
          start: {
            line: 244,
            column: 17
          },
          end: {
            line: 246,
            column: 5
          }
        },
        line: 244
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 247,
            column: 5
          }
        },
        loc: {
          start: {
            line: 247,
            column: 17
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 247
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 12
          },
          end: {
            line: 27,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 55
          },
          end: {
            line: 55,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 55
          },
          end: {
            line: 55,
            column: 70
          }
        }, {
          start: {
            line: 55,
            column: 74
          },
          end: {
            line: 55,
            column: 89
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 60,
            column: 9
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 72,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 72,
            column: 55
          }
        }, {
          start: {
            line: 72,
            column: 59
          },
          end: {
            line: 72,
            column: 76
          }
        }],
        line: 72
      },
      "10": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 77,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 77,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "11": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "12": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "13": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 125,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "14": {
        loc: {
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 12
          },
          end: {
            line: 123,
            column: 18
          }
        }, {
          start: {
            line: 123,
            column: 22
          },
          end: {
            line: 123,
            column: 47
          }
        }],
        line: 123
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 29
          },
          end: {
            line: 127,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 29
          },
          end: {
            line: 127,
            column: 59
          }
        }, {
          start: {
            line: 127,
            column: 63
          },
          end: {
            line: 127,
            column: 64
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "17": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "18": {
        loc: {
          start: {
            line: 140,
            column: 37
          },
          end: {
            line: 140,
            column: 250
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 60
          },
          end: {
            line: 140,
            column: 127
          }
        }, {
          start: {
            line: 140,
            column: 130
          },
          end: {
            line: 140,
            column: 250
          }
        }],
        line: 140
      },
      "19": {
        loc: {
          start: {
            line: 140,
            column: 96
          },
          end: {
            line: 140,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 96
          },
          end: {
            line: 140,
            column: 112
          }
        }, {
          start: {
            line: 140,
            column: 116
          },
          end: {
            line: 140,
            column: 118
          }
        }],
        line: 140
      },
      "20": {
        loc: {
          start: {
            line: 140,
            column: 130
          },
          end: {
            line: 140,
            column: 250
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 130
          },
          end: {
            line: 140,
            column: 185
          }
        }, {
          start: {
            line: 140,
            column: 189
          },
          end: {
            line: 140,
            column: 250
          }
        }],
        line: 140
      },
      "21": {
        loc: {
          start: {
            line: 141,
            column: 36
          },
          end: {
            line: 141,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 141,
            column: 36
          },
          end: {
            line: 141,
            column: 51
          }
        }, {
          start: {
            line: 141,
            column: 55
          },
          end: {
            line: 141,
            column: 88
          }
        }],
        line: 141
      },
      "22": {
        loc: {
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 35
          }
        }, {
          start: {
            line: 142,
            column: 39
          },
          end: {
            line: 142,
            column: 50
          }
        }],
        line: 142
      },
      "23": {
        loc: {
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "24": {
        loc: {
          start: {
            line: 154,
            column: 27
          },
          end: {
            line: 154,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 57
          },
          end: {
            line: 154,
            column: 70
          }
        }, {
          start: {
            line: 154,
            column: 73
          },
          end: {
            line: 154,
            column: 86
          }
        }],
        line: 154
      },
      "25": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "26": {
        loc: {
          start: {
            line: 160,
            column: 36
          },
          end: {
            line: 160,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 36
          },
          end: {
            line: 160,
            column: 50
          }
        }, {
          start: {
            line: 160,
            column: 54
          },
          end: {
            line: 160,
            column: 55
          }
        }],
        line: 160
      },
      "27": {
        loc: {
          start: {
            line: 160,
            column: 58
          },
          end: {
            line: 160,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 58
          },
          end: {
            line: 160,
            column: 72
          }
        }, {
          start: {
            line: 160,
            column: 76
          },
          end: {
            line: 160,
            column: 77
          }
        }],
        line: 160
      },
      "28": {
        loc: {
          start: {
            line: 182,
            column: 21
          },
          end: {
            line: 182,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 21
          },
          end: {
            line: 182,
            column: 28
          }
        }, {
          start: {
            line: 182,
            column: 32
          },
          end: {
            line: 182,
            column: 34
          }
        }],
        line: 182
      },
      "29": {
        loc: {
          start: {
            line: 188,
            column: 36
          },
          end: {
            line: 188,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 36
          },
          end: {
            line: 188,
            column: 73
          }
        }, {
          start: {
            line: 188,
            column: 77
          },
          end: {
            line: 188,
            column: 81
          }
        }],
        line: 188
      },
      "30": {
        loc: {
          start: {
            line: 195,
            column: 33
          },
          end: {
            line: 195,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 33
          },
          end: {
            line: 195,
            column: 70
          }
        }, {
          start: {
            line: 195,
            column: 74
          },
          end: {
            line: 195,
            column: 78
          }
        }],
        line: 195
      },
      "31": {
        loc: {
          start: {
            line: 196,
            column: 15
          },
          end: {
            line: 196,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 196,
            column: 24
          },
          end: {
            line: 196,
            column: 63
          }
        }, {
          start: {
            line: 196,
            column: 66
          },
          end: {
            line: 196,
            column: 71
          }
        }],
        line: 196
      },
      "32": {
        loc: {
          start: {
            line: 199,
            column: 36
          },
          end: {
            line: 199,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 36
          },
          end: {
            line: 199,
            column: 73
          }
        }, {
          start: {
            line: 199,
            column: 77
          },
          end: {
            line: 199,
            column: 81
          }
        }],
        line: 199
      },
      "33": {
        loc: {
          start: {
            line: 206,
            column: 66
          },
          end: {
            line: 206,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 66
          },
          end: {
            line: 206,
            column: 111
          }
        }, {
          start: {
            line: 206,
            column: 115
          },
          end: {
            line: 206,
            column: 126
          }
        }],
        line: 206
      },
      "34": {
        loc: {
          start: {
            line: 241,
            column: 29
          },
          end: {
            line: 241,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 241,
            column: 37
          },
          end: {
            line: 241,
            column: 39
          }
        }],
        line: 241
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\searchService.ts"],
      sourcesContent: ["import type { Database } from \"../lib/supabase\"\n\ntype Tables<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Row\"]\n\nexport interface SearchResult {\n  id: string\n  type: \"client\" | \"task\" | \"event\" | \"project\" | \"invoice\" | \"email\" | \"document\" | \"note\"\n  title: string\n  subtitle?: string\n  description?: string\n  url: string\n  relevance: number\n  metadata?: Record<string, unknown>\n  highlights?: string[]\n  created_at: string\n  updated_at: string\n}\n\nexport interface SearchFilters {\n  types?: SearchResult[\"type\"][]\n  dateRange?: {\n    start: Date\n    end: Date\n  }\n  status?: string[]\n  assignedTo?: string[]\n  tags?: string[]\n  priority?: string[]\n  clients?: string[]\n  projects?: string[]\n}\n\nexport interface SearchOptions {\n  limit?: number\n  offset?: number\n  sortBy?: \"relevance\" | \"date\" | \"title\"\n  sortOrder?: \"asc\" | \"desc\"\n  includeArchived?: boolean\n  fuzzySearch?: boolean\n}\n\nexport interface SavedSearch {\n  id: string\n  user_id: string\n  name: string\n  query: string\n  filters: SearchFilters\n  options: SearchOptions\n  is_public: boolean\n  created_at: string\n  updated_at: string\n}\n\nexport interface SearchAnalytics {\n  query: string\n  user_id: string\n  results_count: number\n  clicked_result_id?: string\n  search_time_ms: number\n  timestamp: string\n}\n\nexport interface SearchCache {\n  key: string\n  results: SearchResult[]\n  timestamp: number\n  ttl: number\n}\n\nexport interface SearchSuggestion {\n  text: string\n  type: 'query' | 'filter' | 'entity'\n  score: number\n  metadata?: Record<string, unknown>\n}\n\n// Enhanced search service with intelligent algorithms\nexport interface SearchService {\n  search: (query: string, filters?: SearchFilters, options?: SearchOptions) => Promise<SearchResult[]>\n  searchWithSuggestions: (query: string) => Promise<{ results: SearchResult[], suggestions: SearchSuggestion[] }>\n  saveSearch: (name: string, query: string, filters: SearchFilters, options?: SearchOptions) => Promise<SavedSearch>\n  getSavedSearches: (userId?: string) => Promise<SavedSearch[]>\n  deleteSavedSearch: (id: string) => Promise<void>\n  getSearchSuggestions: (query: string) => Promise<SearchSuggestion[]>\n  trackSearchAnalytics: (analytics: Omit<SearchAnalytics, 'timestamp'>) => Promise<void>\n  getPopularSearches: (limit?: number) => Promise<string[]>\n  clearCache: () => void\n}\n\nclass SearchServiceImpl implements SearchService {\n  private cache = new Map<string, SearchCache>()\n  private readonly CACHE_TTL = 5 * 60 * 1000 // 5 minutes\n  private readonly MAX_CACHE_SIZE = 100\n  private searchHistory: string[] = []\n  private popularQueries = new Map<string, number>()\n\n  private generateCacheKey(query: string, filters?: SearchFilters, options?: SearchOptions): string {\n    return btoa(JSON.stringify({ query, filters, options }))\n  }\n\n  private isValidCache(cache: SearchCache): boolean {\n    return Date.now() - cache.timestamp < cache.ttl\n  }\n\n  private addToCache(key: string, results: SearchResult[]): void {\n    if (this.cache.size >= this.MAX_CACHE_SIZE) {\n      const oldestKey = this.cache.keys().next().value\n      if (oldestKey) {\n        this.cache.delete(oldestKey)\n      }\n    }\n\n    this.cache.set(key, {\n      key,\n      results,\n      timestamp: Date.now(),\n      ttl: this.CACHE_TTL\n    })\n  }\n\n  private calculateRelevanceScore(item: any, query: string): number {\n    const queryLower = query.toLowerCase()\n    let score = 0\n\n    // Title match (highest weight)\n    if (item.title?.toLowerCase().includes(queryLower)) {\n      score += 10\n      if (item.title?.toLowerCase().startsWith(queryLower)) {\n        score += 5\n      }\n    }\n\n    // Description match\n    if (item.description?.toLowerCase().includes(queryLower)) {\n      score += 5\n    }\n\n    // Exact match bonus\n    if (item.title?.toLowerCase() === queryLower) {\n      score += 20\n    }\n\n    // Recent activity bonus\n    const daysSinceUpdate = (Date.now() - new Date(item.updated_at || item.created_at).getTime()) / (1000 * 60 * 60 * 24)\n    if (daysSinceUpdate < 7) {\n      score += 3\n    } else if (daysSinceUpdate < 30) {\n      score += 1\n    }\n\n    return score\n  }\n\n  private fuzzyMatch(text: string, query: string): boolean {\n    const textLower = text.toLowerCase()\n    const queryLower = query.toLowerCase()\n    \n    // Simple fuzzy matching - allows for 1 character difference per 4 characters\n    const maxErrors = Math.floor(queryLower.length / 4)\n    let errors = 0\n    let textIndex = 0\n    \n    for (let i = 0; i < queryLower.length; i++) {\n      let found = false\n      for (let j = textIndex; j < textLower.length && j < textIndex + 2; j++) {\n        if (textLower[j] === queryLower[i]) {\n          textIndex = j + 1\n          found = true\n          break\n        }\n      }\n      if (!found) {\n        errors++\n        if (errors > maxErrors) return false\n      }\n    }\n    \n    return true\n  }\n\n  private mockSearchData(): SearchResult[] {\n    return [\n      {\n        id: '1',\n        type: 'client',\n        title: 'Acme Corporation',\n        description: 'Large enterprise client with multiple projects',\n        url: '/clients/1',\n        relevance: 0.95,\n        created_at: '2024-01-15T10:00:00Z',\n        updated_at: '2024-01-20T15:30:00Z'\n      },\n      {\n        id: '2',\n        type: 'project',\n        title: 'Website Redesign',\n        description: 'Complete overhaul of company website with modern design',\n        url: '/projects/2',\n        relevance: 0.88,\n        created_at: '2024-01-10T09:00:00Z',\n        updated_at: '2024-01-25T11:45:00Z'\n      },\n      {\n        id: '3',\n        type: 'task',\n        title: 'Design Homepage Mockup',\n        description: 'Create initial design concepts for homepage',\n        url: '/tasks/3',\n        relevance: 0.82,\n        created_at: '2024-01-12T14:00:00Z',\n        updated_at: '2024-01-18T16:20:00Z'\n      }\n    ]\n  }\n\n  async search(query: string, filters?: SearchFilters, options?: SearchOptions): Promise<SearchResult[]> {\n    const cacheKey = this.generateCacheKey(query, filters, options)\n    const cached = this.cache.get(cacheKey)\n    \n    if (cached && this.isValidCache(cached)) {\n      return cached.results\n    }\n\n    // Track query popularity\n    const currentCount = this.popularQueries.get(query) || 0\n    this.popularQueries.set(query, currentCount + 1)\n    \n    // Add to search history\n    this.searchHistory.unshift(query)\n    if (this.searchHistory.length > 50) {\n      this.searchHistory = this.searchHistory.slice(0, 50)\n    }\n\n    // Simulate search delay\n    await new Promise(resolve => setTimeout(resolve, 100))\n\n    const mockData = this.mockSearchData()\n    let results: SearchResult[] = []\n\n    if (query.trim()) {\n      results = mockData\n        .filter(item => {\n          const matchesQuery = options?.fuzzySearch \n            ? this.fuzzyMatch(item.title + ' ' + (item.description || ''), query)\n            : (item.title?.toLowerCase().includes(query.toLowerCase()) || \n               item.description?.toLowerCase().includes(query.toLowerCase()))\n          \n          const matchesType = !filters?.types || filters.types.includes(item.type)\n          \n          return matchesQuery && matchesType\n        })\n        .map(item => ({\n          ...item,\n          url: `/${item.type}/${item.id}`,\n          relevance: this.calculateRelevanceScore(item, query),\n          highlights: [query]\n        }))\n        .sort((a, b) => {\n          if (options?.sortBy === 'date') {\n            const dateA = new Date(a.updated_at).getTime()\n            const dateB = new Date(b.updated_at).getTime()\n            return options.sortOrder === 'asc' ? dateA - dateB : dateB - dateA\n          }\n          return b.relevance - a.relevance\n        })\n    }\n\n    if (options?.limit) {\n      results = results.slice(options.offset || 0, (options.offset || 0) + options.limit)\n    }\n\n    this.addToCache(cacheKey, results)\n    return results\n  }\n\n  async searchWithSuggestions(query: string): Promise<{ results: SearchResult[], suggestions: SearchSuggestion[] }> {\n    const [results, suggestions] = await Promise.all([\n      this.search(query),\n      this.getSearchSuggestions(query)\n    ])\n\n    return { results, suggestions }\n  }\n\n  async saveSearch(name: string, query: string, filters: SearchFilters, options?: SearchOptions): Promise<SavedSearch> {\n    const savedSearch: SavedSearch = {\n      id: Date.now().toString(),\n      user_id: 'current-user',\n      name,\n      query,\n      filters,\n      options: options || {},\n      is_public: false,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString()\n    }\n\n    // In a real implementation, this would save to a database\n    const existing = JSON.parse(localStorage.getItem('savedSearches') || '[]')\n    existing.push(savedSearch)\n    localStorage.setItem('savedSearches', JSON.stringify(existing))\n\n    return savedSearch\n  }\n\n  async getSavedSearches(userId?: string): Promise<SavedSearch[]> {\n    // In a real implementation, this would fetch from a database\n    const saved = JSON.parse(localStorage.getItem('savedSearches') || '[]')\n    return userId ? saved.filter((s: SavedSearch) => s.user_id === userId) : saved\n  }\n\n  async deleteSavedSearch(id: string): Promise<void> {\n    const existing = JSON.parse(localStorage.getItem('savedSearches') || '[]')\n    const filtered = existing.filter((s: SavedSearch) => s.id !== id)\n    localStorage.setItem('savedSearches', JSON.stringify(filtered))\n  }\n\n  async getSearchSuggestions(query: string): Promise<SearchSuggestion[]> {\n    const suggestions: SearchSuggestion[] = []\n    \n    // Query suggestions from history\n    const historySuggestions = this.searchHistory\n      .filter(h => h.toLowerCase().includes(query.toLowerCase()) && h !== query)\n      .slice(0, 3)\n      .map(h => ({ text: h, type: 'query' as const, score: 0.8 }))\n    \n    suggestions.push(...historySuggestions)\n    \n    // Entity suggestions\n    const entitySuggestions = [\n      { text: 'clients', type: 'filter' as const, score: 0.6 },\n      { text: 'projects', type: 'filter' as const, score: 0.6 },\n      { text: 'tasks', type: 'filter' as const, score: 0.6 }\n    ].filter(s => s.text.includes(query.toLowerCase()))\n    \n    suggestions.push(...entitySuggestions)\n    \n    return suggestions.sort((a, b) => b.score - a.score).slice(0, 5)\n  }\n\n  async trackSearchAnalytics(analytics: Omit<SearchAnalytics, 'timestamp'>): Promise<void> {\n    const fullAnalytics: SearchAnalytics = {\n      ...analytics,\n      timestamp: new Date().toISOString()\n    }\n    \n    // In a real implementation, this would send to analytics service\n    // Silent logging - Search Analytics tracked\n  }\n\n  async getPopularSearches(limit = 10): Promise<string[]> {\n    return Array.from(this.popularQueries.entries())\n      .sort((a, b) => b[1] - a[1])\n      .slice(0, limit)\n      .map(([query]) => query)\n  }\n\n  clearCache(): void {\n    this.cache.clear()\n  }\n}\n\nexport const searchService = new SearchServiceImpl()\n"],
      names: ["searchService", "SearchServiceImpl", "generateCacheKey", "query", "filters", "options", "btoa", "JSON", "stringify", "isValidCache", "cache", "Date", "now", "timestamp", "ttl", "addToCache", "key", "results", "size", "MAX_CACHE_SIZE", "oldestKey", "keys", "next", "value", "delete", "set", "CACHE_TTL", "calculateRelevanceScore", "item", "queryLower", "toLowerCase", "score", "title", "includes", "startsWith", "description", "daysSinceUpdate", "updated_at", "created_at", "getTime", "fuzzyMatch", "text", "textLower", "maxErrors", "Math", "floor", "length", "errors", "textIndex", "i", "found", "j", "mockSearchData", "id", "type", "url", "relevance", "search", "cacheKey", "cached", "get", "currentCount", "popularQueries", "searchHistory", "unshift", "slice", "Promise", "resolve", "setTimeout", "mockData", "trim", "filter", "matchesQuery", "fuzzySearch", "matchesType", "types", "map", "highlights", "sort", "a", "b", "sortBy", "dateA", "dateB", "sortOrder", "limit", "offset", "searchWithSuggestions", "suggestions", "all", "getSearchSuggestions", "saveSearch", "name", "savedSearch", "toString", "user_id", "is_public", "toISOString", "existing", "parse", "localStorage", "getItem", "push", "setItem", "getSavedSearches", "userId", "saved", "s", "deleteSavedSearch", "filtered", "historySuggestions", "h", "entitySuggestions", "trackSearchAnalytics", "analytics", "fullAnalytics", "getPopularSearches", "Array", "from", "entries", "clearCache", "clear", "Map"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "11548c25c8f2fa87fbbe731608289825ac871071"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mfw8nm532 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mfw8nm532();
cov_1mfw8nm532().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1mfw8nm532().s[1]++;
Object.defineProperty(exports, "searchService", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[0]++;
    cov_1mfw8nm532().s[2]++;
    return searchService;
  }
});
class SearchServiceImpl {
  generateCacheKey(query, filters, options) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[1]++;
    cov_1mfw8nm532().s[3]++;
    return btoa(JSON.stringify({
      query,
      filters,
      options
    }));
  }
  isValidCache(cache) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[2]++;
    cov_1mfw8nm532().s[4]++;
    return Date.now() - cache.timestamp < cache.ttl;
  }
  addToCache(key, results) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[3]++;
    cov_1mfw8nm532().s[5]++;
    if (this.cache.size >= this.MAX_CACHE_SIZE) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[0][0]++;
      const oldestKey =
      /* istanbul ignore next */
      (cov_1mfw8nm532().s[6]++, this.cache.keys().next().value);
      /* istanbul ignore next */
      cov_1mfw8nm532().s[7]++;
      if (oldestKey) {
        /* istanbul ignore next */
        cov_1mfw8nm532().b[1][0]++;
        cov_1mfw8nm532().s[8]++;
        this.cache.delete(oldestKey);
      } else
      /* istanbul ignore next */
      {
        cov_1mfw8nm532().b[1][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[0][1]++;
    }
    cov_1mfw8nm532().s[9]++;
    this.cache.set(key, {
      key,
      results,
      timestamp: Date.now(),
      ttl: this.CACHE_TTL
    });
  }
  calculateRelevanceScore(item, query) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[4]++;
    const queryLower =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[10]++, query.toLowerCase());
    let score =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[11]++, 0);
    // Title match (highest weight)
    /* istanbul ignore next */
    cov_1mfw8nm532().s[12]++;
    if (item.title?.toLowerCase().includes(queryLower)) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[2][0]++;
      cov_1mfw8nm532().s[13]++;
      score += 10;
      /* istanbul ignore next */
      cov_1mfw8nm532().s[14]++;
      if (item.title?.toLowerCase().startsWith(queryLower)) {
        /* istanbul ignore next */
        cov_1mfw8nm532().b[3][0]++;
        cov_1mfw8nm532().s[15]++;
        score += 5;
      } else
      /* istanbul ignore next */
      {
        cov_1mfw8nm532().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[2][1]++;
    }
    // Description match
    cov_1mfw8nm532().s[16]++;
    if (item.description?.toLowerCase().includes(queryLower)) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[4][0]++;
      cov_1mfw8nm532().s[17]++;
      score += 5;
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[4][1]++;
    }
    // Exact match bonus
    cov_1mfw8nm532().s[18]++;
    if (item.title?.toLowerCase() === queryLower) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[5][0]++;
      cov_1mfw8nm532().s[19]++;
      score += 20;
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[5][1]++;
    }
    // Recent activity bonus
    const daysSinceUpdate =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[20]++, (Date.now() - new Date(
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[6][0]++, item.updated_at) ||
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[6][1]++, item.created_at)).getTime()) / (1000 * 60 * 60 * 24));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[21]++;
    if (daysSinceUpdate < 7) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[7][0]++;
      cov_1mfw8nm532().s[22]++;
      score += 3;
    } else {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[7][1]++;
      cov_1mfw8nm532().s[23]++;
      if (daysSinceUpdate < 30) {
        /* istanbul ignore next */
        cov_1mfw8nm532().b[8][0]++;
        cov_1mfw8nm532().s[24]++;
        score += 1;
      } else
      /* istanbul ignore next */
      {
        cov_1mfw8nm532().b[8][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1mfw8nm532().s[25]++;
    return score;
  }
  fuzzyMatch(text, query) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[5]++;
    const textLower =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[26]++, text.toLowerCase());
    const queryLower =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[27]++, query.toLowerCase());
    // Simple fuzzy matching - allows for 1 character difference per 4 characters
    const maxErrors =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[28]++, Math.floor(queryLower.length / 4));
    let errors =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[29]++, 0);
    let textIndex =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[30]++, 0);
    /* istanbul ignore next */
    cov_1mfw8nm532().s[31]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[32]++, 0); i < queryLower.length; i++) {
      let found =
      /* istanbul ignore next */
      (cov_1mfw8nm532().s[33]++, false);
      /* istanbul ignore next */
      cov_1mfw8nm532().s[34]++;
      for (let j =
      /* istanbul ignore next */
      (cov_1mfw8nm532().s[35]++, textIndex);
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[9][0]++, j < textLower.length) &&
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[9][1]++, j < textIndex + 2); j++) {
        /* istanbul ignore next */
        cov_1mfw8nm532().s[36]++;
        if (textLower[j] === queryLower[i]) {
          /* istanbul ignore next */
          cov_1mfw8nm532().b[10][0]++;
          cov_1mfw8nm532().s[37]++;
          textIndex = j + 1;
          /* istanbul ignore next */
          cov_1mfw8nm532().s[38]++;
          found = true;
          /* istanbul ignore next */
          cov_1mfw8nm532().s[39]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_1mfw8nm532().b[10][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1mfw8nm532().s[40]++;
      if (!found) {
        /* istanbul ignore next */
        cov_1mfw8nm532().b[11][0]++;
        cov_1mfw8nm532().s[41]++;
        errors++;
        /* istanbul ignore next */
        cov_1mfw8nm532().s[42]++;
        if (errors > maxErrors) {
          /* istanbul ignore next */
          cov_1mfw8nm532().b[12][0]++;
          cov_1mfw8nm532().s[43]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_1mfw8nm532().b[12][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1mfw8nm532().b[11][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1mfw8nm532().s[44]++;
    return true;
  }
  mockSearchData() {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[6]++;
    cov_1mfw8nm532().s[45]++;
    return [{
      id: '1',
      type: 'client',
      title: 'Acme Corporation',
      description: 'Large enterprise client with multiple projects',
      url: '/clients/1',
      relevance: 0.95,
      created_at: '2024-01-15T10:00:00Z',
      updated_at: '2024-01-20T15:30:00Z'
    }, {
      id: '2',
      type: 'project',
      title: 'Website Redesign',
      description: 'Complete overhaul of company website with modern design',
      url: '/projects/2',
      relevance: 0.88,
      created_at: '2024-01-10T09:00:00Z',
      updated_at: '2024-01-25T11:45:00Z'
    }, {
      id: '3',
      type: 'task',
      title: 'Design Homepage Mockup',
      description: 'Create initial design concepts for homepage',
      url: '/tasks/3',
      relevance: 0.82,
      created_at: '2024-01-12T14:00:00Z',
      updated_at: '2024-01-18T16:20:00Z'
    }];
  }
  async search(query, filters, options) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[7]++;
    const cacheKey =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[46]++, this.generateCacheKey(query, filters, options));
    const cached =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[47]++, this.cache.get(cacheKey));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[14][0]++, cached) &&
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[14][1]++, this.isValidCache(cached))) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[13][0]++;
      cov_1mfw8nm532().s[49]++;
      return cached.results;
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[13][1]++;
    }
    // Track query popularity
    const currentCount =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[50]++,
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[15][0]++, this.popularQueries.get(query)) ||
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[15][1]++, 0));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[51]++;
    this.popularQueries.set(query, currentCount + 1);
    // Add to search history
    /* istanbul ignore next */
    cov_1mfw8nm532().s[52]++;
    this.searchHistory.unshift(query);
    /* istanbul ignore next */
    cov_1mfw8nm532().s[53]++;
    if (this.searchHistory.length > 50) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[16][0]++;
      cov_1mfw8nm532().s[54]++;
      this.searchHistory = this.searchHistory.slice(0, 50);
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[16][1]++;
    }
    // Simulate search delay
    cov_1mfw8nm532().s[55]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[8]++;
      cov_1mfw8nm532().s[56]++;
      return setTimeout(resolve, 100);
    });
    const mockData =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[57]++, this.mockSearchData());
    let results =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[58]++, []);
    /* istanbul ignore next */
    cov_1mfw8nm532().s[59]++;
    if (query.trim()) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[17][0]++;
      cov_1mfw8nm532().s[60]++;
      results = mockData.filter(item => {
        /* istanbul ignore next */
        cov_1mfw8nm532().f[9]++;
        const matchesQuery =
        /* istanbul ignore next */
        (cov_1mfw8nm532().s[61]++, options?.fuzzySearch ?
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[18][0]++, this.fuzzyMatch(item.title + ' ' + (
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[19][0]++, item.description) ||
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[19][1]++, '')), query)) :
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[18][1]++,
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[20][0]++, item.title?.toLowerCase().includes(query.toLowerCase())) ||
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[20][1]++, item.description?.toLowerCase().includes(query.toLowerCase()))));
        const matchesType =
        /* istanbul ignore next */
        (cov_1mfw8nm532().s[62]++,
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[21][0]++, !filters?.types) ||
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[21][1]++, filters.types.includes(item.type)));
        /* istanbul ignore next */
        cov_1mfw8nm532().s[63]++;
        return /* istanbul ignore next */(cov_1mfw8nm532().b[22][0]++, matchesQuery) &&
        /* istanbul ignore next */
        (cov_1mfw8nm532().b[22][1]++, matchesType);
      }).map(item => {
        /* istanbul ignore next */
        cov_1mfw8nm532().f[10]++;
        cov_1mfw8nm532().s[64]++;
        return {
          ...item,
          url: `/${item.type}/${item.id}`,
          relevance: this.calculateRelevanceScore(item, query),
          highlights: [query]
        };
      }).sort((a, b) => {
        /* istanbul ignore next */
        cov_1mfw8nm532().f[11]++;
        cov_1mfw8nm532().s[65]++;
        if (options?.sortBy === 'date') {
          /* istanbul ignore next */
          cov_1mfw8nm532().b[23][0]++;
          const dateA =
          /* istanbul ignore next */
          (cov_1mfw8nm532().s[66]++, new Date(a.updated_at).getTime());
          const dateB =
          /* istanbul ignore next */
          (cov_1mfw8nm532().s[67]++, new Date(b.updated_at).getTime());
          /* istanbul ignore next */
          cov_1mfw8nm532().s[68]++;
          return options.sortOrder === 'asc' ?
          /* istanbul ignore next */
          (cov_1mfw8nm532().b[24][0]++, dateA - dateB) :
          /* istanbul ignore next */
          (cov_1mfw8nm532().b[24][1]++, dateB - dateA);
        } else
        /* istanbul ignore next */
        {
          cov_1mfw8nm532().b[23][1]++;
        }
        cov_1mfw8nm532().s[69]++;
        return b.relevance - a.relevance;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[17][1]++;
    }
    cov_1mfw8nm532().s[70]++;
    if (options?.limit) {
      /* istanbul ignore next */
      cov_1mfw8nm532().b[25][0]++;
      cov_1mfw8nm532().s[71]++;
      results = results.slice(
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[26][0]++, options.offset) ||
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[26][1]++, 0), (
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[27][0]++, options.offset) ||
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[27][1]++, 0)) + options.limit);
    } else
    /* istanbul ignore next */
    {
      cov_1mfw8nm532().b[25][1]++;
    }
    cov_1mfw8nm532().s[72]++;
    this.addToCache(cacheKey, results);
    /* istanbul ignore next */
    cov_1mfw8nm532().s[73]++;
    return results;
  }
  async searchWithSuggestions(query) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[12]++;
    const [results, suggestions] =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[74]++, await Promise.all([this.search(query), this.getSearchSuggestions(query)]));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[75]++;
    return {
      results,
      suggestions
    };
  }
  async saveSearch(name, query, filters, options) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[13]++;
    const savedSearch =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[76]++, {
      id: Date.now().toString(),
      user_id: 'current-user',
      name,
      query,
      filters,
      options:
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[28][0]++, options) ||
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[28][1]++, {}),
      is_public: false,
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    });
    // In a real implementation, this would save to a database
    const existing =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[77]++, JSON.parse(
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[29][0]++, localStorage.getItem('savedSearches')) ||
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[29][1]++, '[]')));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[78]++;
    existing.push(savedSearch);
    /* istanbul ignore next */
    cov_1mfw8nm532().s[79]++;
    localStorage.setItem('savedSearches', JSON.stringify(existing));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[80]++;
    return savedSearch;
  }
  async getSavedSearches(userId) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[14]++;
    // In a real implementation, this would fetch from a database
    const saved =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[81]++, JSON.parse(
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[30][0]++, localStorage.getItem('savedSearches')) ||
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[30][1]++, '[]')));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[82]++;
    return userId ?
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[31][0]++, saved.filter(s => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[15]++;
      cov_1mfw8nm532().s[83]++;
      return s.user_id === userId;
    })) :
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[31][1]++, saved);
  }
  async deleteSavedSearch(id) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[16]++;
    const existing =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[84]++, JSON.parse(
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[32][0]++, localStorage.getItem('savedSearches')) ||
    /* istanbul ignore next */
    (cov_1mfw8nm532().b[32][1]++, '[]')));
    const filtered =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[85]++, existing.filter(s => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[17]++;
      cov_1mfw8nm532().s[86]++;
      return s.id !== id;
    }));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[87]++;
    localStorage.setItem('savedSearches', JSON.stringify(filtered));
  }
  async getSearchSuggestions(query) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[18]++;
    const suggestions =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[88]++, []);
    // Query suggestions from history
    const historySuggestions =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[89]++, this.searchHistory.filter(h => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[19]++;
      cov_1mfw8nm532().s[90]++;
      return /* istanbul ignore next */(cov_1mfw8nm532().b[33][0]++, h.toLowerCase().includes(query.toLowerCase())) &&
      /* istanbul ignore next */
      (cov_1mfw8nm532().b[33][1]++, h !== query);
    }).slice(0, 3).map(h => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[20]++;
      cov_1mfw8nm532().s[91]++;
      return {
        text: h,
        type: 'query',
        score: 0.8
      };
    }));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[92]++;
    suggestions.push(...historySuggestions);
    // Entity suggestions
    const entitySuggestions =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[93]++, [{
      text: 'clients',
      type: 'filter',
      score: 0.6
    }, {
      text: 'projects',
      type: 'filter',
      score: 0.6
    }, {
      text: 'tasks',
      type: 'filter',
      score: 0.6
    }].filter(s => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[21]++;
      cov_1mfw8nm532().s[94]++;
      return s.text.includes(query.toLowerCase());
    }));
    /* istanbul ignore next */
    cov_1mfw8nm532().s[95]++;
    suggestions.push(...entitySuggestions);
    /* istanbul ignore next */
    cov_1mfw8nm532().s[96]++;
    return suggestions.sort((a, b) => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[22]++;
      cov_1mfw8nm532().s[97]++;
      return b.score - a.score;
    }).slice(0, 5);
  }
  async trackSearchAnalytics(analytics) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[23]++;
    const fullAnalytics =
    /* istanbul ignore next */
    (cov_1mfw8nm532().s[98]++, {
      ...analytics,
      timestamp: new Date().toISOString()
    });
    // In a real implementation, this would send to analytics service
    // Silent logging - Search Analytics tracked
  }
  async getPopularSearches(limit =
  /* istanbul ignore next */
  (cov_1mfw8nm532().b[34][0]++, 10)) {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[24]++;
    cov_1mfw8nm532().s[99]++;
    return Array.from(this.popularQueries.entries()).sort((a, b) => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[25]++;
      cov_1mfw8nm532().s[100]++;
      return b[1] - a[1];
    }).slice(0, limit).map(([query]) => {
      /* istanbul ignore next */
      cov_1mfw8nm532().f[26]++;
      cov_1mfw8nm532().s[101]++;
      return query;
    });
  }
  clearCache() {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[27]++;
    cov_1mfw8nm532().s[102]++;
    this.cache.clear();
  }
  constructor() {
    /* istanbul ignore next */
    cov_1mfw8nm532().f[28]++;
    cov_1mfw8nm532().s[103]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_1mfw8nm532().s[104]++;
    this.CACHE_TTL = 5 * 60 * 1000; // 5 minutes
    /* istanbul ignore next */
    cov_1mfw8nm532().s[105]++;
    this.MAX_CACHE_SIZE = 100;
    /* istanbul ignore next */
    cov_1mfw8nm532().s[106]++;
    this.searchHistory = [];
    /* istanbul ignore next */
    cov_1mfw8nm532().s[107]++;
    this.popularQueries = new Map();
  }
}
const searchService =
/* istanbul ignore next */
(cov_1mfw8nm532().s[108]++, new SearchServiceImpl());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,