8f472e1cbe32ba370d010ec02ca53603
"use client";
"use strict";

/* istanbul ignore next */
function cov_2rk82y87nx() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\formValidationUtils.ts";
  var hash = "45a7d1ae9087d6ec6c77342cfdd5a602620ede85";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\formValidationUtils.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 40,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 38
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 39
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 29
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 34
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 33
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "13": {
        start: {
          line: 41,
          column: 13
        },
        end: {
          line: 41,
          column: 27
        }
      },
      "14": {
        start: {
          line: 42,
          column: 15
        },
        end: {
          line: 42,
          column: 31
        }
      },
      "15": {
        start: {
          line: 43,
          column: 22
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "16": {
        start: {
          line: 46,
          column: 27
        },
        end: {
          line: 46,
          column: 77
        }
      },
      "17": {
        start: {
          line: 47,
          column: 33
        },
        end: {
          line: 47,
          column: 108
        }
      },
      "18": {
        start: {
          line: 48,
          column: 33
        },
        end: {
          line: 48,
          column: 97
        }
      },
      "19": {
        start: {
          line: 50,
          column: 41
        },
        end: {
          line: 50,
          column: 65
        }
      },
      "20": {
        start: {
          line: 52,
          column: 31
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "21": {
        start: {
          line: 52,
          column: 35
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "22": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "23": {
        start: {
          line: 59,
          column: 36
        },
        end: {
          line: 65,
          column: 6
        }
      },
      "24": {
        start: {
          line: 67,
          column: 63
        },
        end: {
          line: 67,
          column: 70
        }
      },
      "25": {
        start: {
          line: 68,
          column: 36
        },
        end: {
          line: 68,
          column: 69
        }
      },
      "26": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 69,
          column: 56
        }
      },
      "27": {
        start: {
          line: 70,
          column: 34
        },
        end: {
          line: 70,
          column: 61
        }
      },
      "28": {
        start: {
          line: 71,
          column: 44
        },
        end: {
          line: 71,
          column: 71
        }
      },
      "29": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 72,
          column: 60
        }
      },
      "30": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 99,
          column: 6
        }
      },
      "31": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "32": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "33": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "34": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 77,
          column: 51
        }
      },
      "35": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 84,
          column: 19
        }
      },
      "36": {
        start: {
          line: 79,
          column: 38
        },
        end: {
          line: 81,
          column: 21
        }
      },
      "37": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 44
        }
      },
      "38": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 37
        }
      },
      "39": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 28
        }
      },
      "40": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "41": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 92,
          column: 24
        }
      },
      "42": {
        start: {
          line: 89,
          column: 35
        },
        end: {
          line: 92,
          column: 21
        }
      },
      "43": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 21
        }
      },
      "44": {
        start: {
          line: 100,
          column: 25
        },
        end: {
          line: 120,
          column: 6
        }
      },
      "45": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "46": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 35
        }
      },
      "47": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 26
        }
      },
      "48": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 24
        }
      },
      "49": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "50": {
        start: {
          line: 107,
          column: 34
        },
        end: {
          line: 107,
          column: 36
        }
      },
      "51": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 112,
          column: 19
        }
      },
      "52": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 111,
          column: 21
        }
      },
      "53": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 61
        }
      },
      "54": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 37
        }
      },
      "55": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 25
        }
      },
      "56": {
        start: {
          line: 121,
          column: 24
        },
        end: {
          line: 134,
          column: 6
        }
      },
      "57": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 125,
          column: 16
        }
      },
      "58": {
        start: {
          line: 122,
          column: 29
        },
        end: {
          line: 125,
          column: 13
        }
      },
      "59": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 25
        }
      },
      "60": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "61": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 54
        }
      },
      "62": {
        start: {
          line: 129,
          column: 27
        },
        end: {
          line: 129,
          column: 47
        }
      },
      "63": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 147,
          column: 6
        }
      },
      "64": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 139,
          column: 16
        }
      },
      "65": {
        start: {
          line: 136,
          column: 29
        },
        end: {
          line: 139,
          column: 13
        }
      },
      "66": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 25
        }
      },
      "67": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "68": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "69": {
        start: {
          line: 142,
          column: 27
        },
        end: {
          line: 142,
          column: 41
        }
      },
      "70": {
        start: {
          line: 148,
          column: 22
        },
        end: {
          line: 159,
          column: 6
        }
      },
      "71": {
        start: {
          line: 149,
          column: 26
        },
        end: {
          line: 152,
          column: 23
        }
      },
      "72": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 31
        }
      },
      "73": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 22
        }
      },
      "74": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 155,
          column: 26
        }
      },
      "75": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 31
        }
      },
      "76": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "77": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 73
        }
      },
      "78": {
        start: {
          line: 166,
          column: 20
        },
        end: {
          line: 171,
          column: 6
        }
      },
      "79": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 59
        }
      },
      "80": {
        start: {
          line: 172,
          column: 22
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "81": {
        start: {
          line: 179,
          column: 24
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "82": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 191,
          column: 6
        }
      },
      "83": {
        start: {
          line: 194,
          column: 32
        },
        end: {
          line: 194,
          column: 59
        }
      },
      "84": {
        start: {
          line: 195,
          column: 38
        },
        end: {
          line: 195,
          column: 65
        }
      },
      "85": {
        start: {
          line: 196,
          column: 22
        },
        end: {
          line: 199,
          column: 10
        }
      },
      "86": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 24
        }
      },
      "87": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 28
        }
      },
      "88": {
        start: {
          line: 200,
          column: 23
        },
        end: {
          line: 206,
          column: 10
        }
      },
      "89": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 27
        }
      },
      "90": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 205,
          column: 16
        }
      },
      "91": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 29
        }
      },
      "92": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 32
        }
      },
      "93": {
        start: {
          line: 207,
          column: 25
        },
        end: {
          line: 220,
          column: 6
        }
      },
      "94": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 215,
          column: 9
        }
      },
      "95": {
        start: {
          line: 209,
          column: 30
        },
        end: {
          line: 209,
          column: 53
        }
      },
      "96": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "97": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 29
        }
      },
      "98": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 28
        }
      },
      "99": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 25
        }
      },
      "100": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 21
        }
      },
      "101": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 20
        }
      },
      "102": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 231,
          column: 6
        }
      },
      "103": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 260,
          column: 6
        }
      },
      "104": {
        start: {
          line: 235,
          column: 115
        },
        end: {
          line: 235,
          column: 122
        }
      },
      "105": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "106": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 19
        }
      },
      "107": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 40
        }
      },
      "108": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "109": {
        start: {
          line: 241,
          column: 27
        },
        end: {
          line: 241,
          column: 47
        }
      },
      "110": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "111": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 59
        }
      },
      "112": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "113": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 40
        }
      },
      "114": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 30
        }
      },
      "115": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 26
        }
      },
      "116": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 254,
          column: 13
        }
      },
      "117": {
        start: {
          line: 253,
          column: 16
        },
        end: {
          line: 253,
          column: 64
        }
      },
      "118": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 29
        }
      },
      "119": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 24
        }
      },
      "120": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 45
        }
      },
      "121": {
        start: {
          line: 263,
          column: 4
        },
        end: {
          line: 263,
          column: 64
        }
      },
      "122": {
        start: {
          line: 266,
          column: 4
        },
        end: {
          line: 266,
          column: 29
        }
      },
      "123": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 269,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 34
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 35
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 25
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 30
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 25
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 46,
            column: 14
          },
          end: {
            line: 46,
            column: 15
          }
        },
        loc: {
          start: {
            line: 46,
            column: 27
          },
          end: {
            line: 46,
            column: 77
          }
        },
        line: 46
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 16
          }
        },
        loc: {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 108
          }
        },
        line: 47
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 48,
            column: 20
          },
          end: {
            line: 48,
            column: 21
          }
        },
        loc: {
          start: {
            line: 48,
            column: 33
          },
          end: {
            line: 48,
            column: 97
          }
        },
        line: 48
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 34
          }
        },
        loc: {
          start: {
            line: 50,
            column: 41
          },
          end: {
            line: 50,
            column: 65
          }
        },
        line: 50
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 52,
            column: 32
          }
        },
        loc: {
          start: {
            line: 52,
            column: 35
          },
          end: {
            line: 58,
            column: 6
          }
        },
        line: 52
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 33
          }
        },
        loc: {
          start: {
            line: 59,
            column: 36
          },
          end: {
            line: 65,
            column: 6
          }
        },
        line: 59
      },
      "16": {
        name: "useFormValidation",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 26
          }
        },
        loc: {
          start: {
            line: 66,
            column: 62
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 66
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 73,
            column: 50
          },
          end: {
            line: 73,
            column: 51
          }
        },
        loc: {
          start: {
            line: 73,
            column: 59
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 73
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 27
          }
        },
        loc: {
          start: {
            line: 78,
            column: 34
          },
          end: {
            line: 84,
            column: 17
          }
        },
        line: 78
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 89,
            column: 27
          }
        },
        loc: {
          start: {
            line: 89,
            column: 35
          },
          end: {
            line: 92,
            column: 21
          }
        },
        line: 89
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 100,
            column: 49
          },
          end: {
            line: 100,
            column: 50
          }
        },
        loc: {
          start: {
            line: 100,
            column: 53
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 100
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 108,
            column: 37
          },
          end: {
            line: 108,
            column: 38
          }
        },
        loc: {
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 112,
            column: 17
          }
        },
        line: 108
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 121,
            column: 48
          },
          end: {
            line: 121,
            column: 49
          }
        },
        loc: {
          start: {
            line: 121,
            column: 64
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 121
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 122,
            column: 20
          },
          end: {
            line: 122,
            column: 21
          }
        },
        loc: {
          start: {
            line: 122,
            column: 29
          },
          end: {
            line: 125,
            column: 13
          }
        },
        line: 122
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 129,
            column: 23
          },
          end: {
            line: 129,
            column: 24
          }
        },
        loc: {
          start: {
            line: 129,
            column: 27
          },
          end: {
            line: 129,
            column: 47
          }
        },
        line: 129
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 135,
            column: 49
          },
          end: {
            line: 135,
            column: 50
          }
        },
        loc: {
          start: {
            line: 135,
            column: 59
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 135
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 136,
            column: 20
          },
          end: {
            line: 136,
            column: 21
          }
        },
        loc: {
          start: {
            line: 136,
            column: 29
          },
          end: {
            line: 139,
            column: 13
          }
        },
        line: 136
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 142,
            column: 23
          },
          end: {
            line: 142,
            column: 24
          }
        },
        loc: {
          start: {
            line: 142,
            column: 27
          },
          end: {
            line: 142,
            column: 41
          }
        },
        line: 142
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 148,
            column: 46
          },
          end: {
            line: 148,
            column: 47
          }
        },
        loc: {
          start: {
            line: 148,
            column: 57
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 148
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 160,
            column: 54
          },
          end: {
            line: 160,
            column: 55
          }
        },
        loc: {
          start: {
            line: 160,
            column: 58
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 160
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 166,
            column: 40
          },
          end: {
            line: 166,
            column: 41
          }
        },
        loc: {
          start: {
            line: 166,
            column: 44
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 166
      },
      "31": {
        name: "useModalState",
        decl: {
          start: {
            line: 193,
            column: 9
          },
          end: {
            line: 193,
            column: 22
          }
        },
        loc: {
          start: {
            line: 193,
            column: 25
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 193
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 196,
            column: 46
          },
          end: {
            line: 196,
            column: 47
          }
        },
        loc: {
          start: {
            line: 196,
            column: 50
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 196
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 200,
            column: 47
          },
          end: {
            line: 200,
            column: 48
          }
        },
        loc: {
          start: {
            line: 200,
            column: 51
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 200
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 202,
            column: 19
          },
          end: {
            line: 202,
            column: 20
          }
        },
        loc: {
          start: {
            line: 202,
            column: 23
          },
          end: {
            line: 205,
            column: 9
          }
        },
        line: 202
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 207,
            column: 49
          },
          end: {
            line: 207,
            column: 50
          }
        },
        loc: {
          start: {
            line: 207,
            column: 180
          },
          end: {
            line: 218,
            column: 5
          }
        },
        line: 207
      },
      "36": {
        name: "createSubmissionHandler",
        decl: {
          start: {
            line: 233,
            column: 9
          },
          end: {
            line: 233,
            column: 32
          }
        },
        loc: {
          start: {
            line: 233,
            column: 70
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 233
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 234,
            column: 11
          },
          end: {
            line: 234,
            column: 12
          }
        },
        loc: {
          start: {
            line: 234,
            column: 25
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 234
      },
      "38": {
        name: "hasFormDataChanged",
        decl: {
          start: {
            line: 262,
            column: 9
          },
          end: {
            line: 262,
            column: 27
          }
        },
        loc: {
          start: {
            line: 262,
            column: 47
          },
          end: {
            line: 264,
            column: 1
          }
        },
        line: 262
      },
      "39": {
        name: "getFieldError",
        decl: {
          start: {
            line: 265,
            column: 9
          },
          end: {
            line: 265,
            column: 22
          }
        },
        loc: {
          start: {
            line: 265,
            column: 42
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 265
      },
      "40": {
        name: "hasFieldError",
        decl: {
          start: {
            line: 268,
            column: 9
          },
          end: {
            line: 268,
            column: 22
          }
        },
        loc: {
          start: {
            line: 268,
            column: 42
          },
          end: {
            line: 270,
            column: 1
          }
        },
        line: 268
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 66,
            column: 48
          },
          end: {
            line: 66,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 66,
            column: 58
          },
          end: {
            line: 66,
            column: 60
          }
        }],
        line: 66
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 67,
            column: 31
          },
          end: {
            line: 67,
            column: 35
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 67,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 67,
            column: 53
          },
          end: {
            line: 67,
            column: 58
          }
        }],
        line: 67
      },
      "3": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 93,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 91,
            column: 33
          },
          end: {
            line: 91,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 33
          },
          end: {
            line: 91,
            column: 57
          }
        }, {
          start: {
            line: 91,
            column: 61
          },
          end: {
            line: 91,
            column: 76
          }
        }],
        line: 91
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 111,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 20
          },
          end: {
            line: 111,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "8": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "9": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "10": {
        loc: {
          start: {
            line: 149,
            column: 26
          },
          end: {
            line: 152,
            column: 23
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 36
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: 152,
            column: 12
          },
          end: {
            line: 152,
            column: 23
          }
        }],
        line: 149
      },
      "11": {
        loc: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 47
          }
        }, {
          start: {
            line: 167,
            column: 51
          },
          end: {
            line: 167,
            column: 58
          }
        }],
        line: 167
      },
      "12": {
        loc: {
          start: {
            line: 207,
            column: 75
          },
          end: {
            line: 207,
            column: 177
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 207,
            column: 85
          },
          end: {
            line: 207,
            column: 177
          }
        }],
        line: 207
      },
      "13": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 215,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 208
      },
      "14": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "15": {
        loc: {
          start: {
            line: 233,
            column: 56
          },
          end: {
            line: 233,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 233,
            column: 66
          },
          end: {
            line: 233,
            column: 68
          }
        }],
        line: 233
      },
      "16": {
        loc: {
          start: {
            line: 235,
            column: 36
          },
          end: {
            line: 235,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 53
          },
          end: {
            line: 235,
            column: 58
          }
        }],
        line: 235
      },
      "17": {
        loc: {
          start: {
            line: 235,
            column: 60
          },
          end: {
            line: 235,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 81
          },
          end: {
            line: 235,
            column: 85
          }
        }],
        line: 235
      },
      "18": {
        loc: {
          start: {
            line: 235,
            column: 87
          },
          end: {
            line: 235,
            column: 110
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 106
          },
          end: {
            line: 235,
            column: 110
          }
        }],
        line: 235
      },
      "19": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "20": {
        loc: {
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "21": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "22": {
        loc: {
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 12
          },
          end: {
            line: 254,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\formValidationUtils.ts"],
      sourcesContent: ["\"use client\"\n\nimport { z } from \"zod\"\nimport { useState, useCallback, useMemo } from \"react\"\n\n// Common validation schemas\nexport const commonSchemas = {\n  email: z.string().email(\"Please enter a valid email address\"),\n  phone: z.string().regex(/^[\\+]?[1-9][\\d]{0,15}$/, \"Please enter a valid phone number\"),\n  required: (fieldName: string) => z.string().min(1, `${fieldName} is required`),\n  minLength: (fieldName: string, min: number) => \n    z.string().min(min, `${fieldName} must be at least ${min} characters`),\n  positiveNumber: (fieldName: string) => \n    z.number().min(0, `${fieldName} must be a positive number`),\n  currency: z.number().min(0, \"Amount must be positive\"),\n  date: z.string().refine((date) => !isNaN(Date.parse(date)), \"Please enter a valid date\")\n}\n\n// Common form validation patterns\nexport const createClientFormSchema = () => z.object({\n  clientName: commonSchemas.required(\"Client name\"),\n  clientEmail: commonSchemas.email,\n  clientPhone: commonSchemas.phone.optional(),\n  businessName: commonSchemas.required(\"Business name\"),\n  industry: commonSchemas.required(\"Industry\")\n})\n\nexport const createProjectFormSchema = () => z.object({\n  projectTitle: commonSchemas.minLength(\"Project title\", 5),\n  description: commonSchemas.minLength(\"Description\", 10),\n  timeline: commonSchemas.required(\"Timeline\"),\n  budget: commonSchemas.required(\"Budget\"),\n  requirements: commonSchemas.minLength(\"Requirements\", 10)\n})\n\n// Form state management hook\nexport interface FormState<T> {\n  data: T\n  errors: Record<string, string>\n  isValid: boolean\n  isDirty: boolean\n  isSubmitting: boolean\n}\n\nexport interface FormActions<T> {\n  updateField: (field: keyof T, value: unknown) => void\n  updateFields: (fields: Partial<T>) => void\n  validateField: (field: keyof T) => boolean\n  validateForm: () => boolean\n  resetForm: (newData?: Partial<T>) => void\n  setSubmitting: (submitting: boolean) => void\n  hasUnsavedChanges: () => boolean\n}\n\nexport function useFormValidation<T extends Record<string, unknown>>(\n  initialData: T,\n  schema: z.ZodSchema<T>,\n  options: {\n    validateOnChange?: boolean\n    resetOnSubmit?: boolean\n  } = {}\n): [FormState<T>, FormActions<T>] {\n  const { validateOnChange = true, resetOnSubmit = false } = options\n  \n  const [formData, setFormData] = useState<T>(initialData)\n  const [errors, setErrors] = useState<Record<string, string>>({})\n  const [isDirty, setIsDirty] = useState(false)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [originalData] = useState<T>(initialData)\n\n  const validateField = useCallback((field: keyof T): boolean => {\n    try {\n      const fieldSchema = (schema as any).shape?.[field as string]\n      if (fieldSchema) {\n        fieldSchema.parse(formData[field])\n        setErrors(prev => {\n          const newErrors = { ...prev }\n          delete newErrors[field as string]\n          return newErrors\n        })\n        return true\n      }\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        setErrors(prev => ({\n          ...prev,\n          [field as string]: error.errors[0]?.message || \"Invalid value\"\n        }))\n      }\n    }\n    return false\n  }, [formData, schema])\n\n  const validateForm = useCallback((): boolean => {\n    try {\n      schema.parse(formData)\n      setErrors({})\n      return true\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const newErrors: Record<string, string> = {}\n        error.errors.forEach(err => {\n          if (err.path.length > 0) {\n            newErrors[err.path[0] as string] = err.message\n          }\n        })\n        setErrors(newErrors)\n      }\n      return false\n    }\n  }, [formData, schema])\n\n  const updateField = useCallback((field: keyof T, value: unknown) => {\n    setFormData(prev => ({ ...prev, [field]: value }))\n    setIsDirty(true)\n    \n    if (validateOnChange) {\n      // Validate after a short delay to avoid excessive validation\n      setTimeout(() => validateField(field), 100)\n    }\n  }, [validateField, validateOnChange])\n\n  const updateFields = useCallback((fields: Partial<T>) => {\n    setFormData(prev => ({ ...prev, ...fields }))\n    setIsDirty(true)\n    \n    if (validateOnChange) {\n      setTimeout(() => validateForm(), 100)\n    }\n  }, [validateForm, validateOnChange])\n\n  const resetForm = useCallback((newData?: Partial<T>) => {\n    const resetData = newData ? { ...initialData, ...newData } : initialData\n    setFormData(resetData)\n    setErrors({})\n    setIsDirty(false)\n    setIsSubmitting(false)\n  }, [initialData])\n\n  const hasUnsavedChanges = useCallback((): boolean => {\n    return JSON.stringify(formData) !== JSON.stringify(originalData)\n  }, [formData, originalData])\n\n  const isValid = useMemo(() => {\n    return Object.keys(errors).length === 0 && isDirty\n  }, [errors, isDirty])\n\n  const formState: FormState<T> = {\n    data: formData,\n    errors,\n    isValid,\n    isDirty,\n    isSubmitting\n  }\n\n  const formActions: FormActions<T> = {\n    updateField,\n    updateFields,\n    validateField,\n    validateForm,\n    resetForm,\n    setSubmitting: setIsSubmitting,\n    hasUnsavedChanges\n  }\n\n  return [formState, formActions]\n}\n\n// Modal state management hook\nexport interface ModalState {\n  isOpen: boolean\n  isClosing: boolean\n}\n\nexport interface ModalActions {\n  openModal: () => void\n  closeModal: () => void\n  confirmClose: (hasUnsavedChanges: boolean, message?: string) => Promise<boolean>\n}\n\nexport function useModalState(): [ModalState, ModalActions] {\n  const [isOpen, setIsOpen] = useState(false)\n  const [isClosing, setIsClosing] = useState(false)\n\n  const openModal = useCallback(() => {\n    setIsOpen(true)\n    setIsClosing(false)\n  }, [])\n\n  const closeModal = useCallback(() => {\n    setIsClosing(true)\n    setTimeout(() => {\n      setIsOpen(false)\n      setIsClosing(false)\n    }, 150) // Animation delay\n  }, [])\n\n  const confirmClose = useCallback(async (\n    hasUnsavedChanges: boolean, \n    message = \"You have unsaved changes. Are you sure you want to close this form? All data will be lost.\"\n  ): Promise<boolean> => {\n    if (hasUnsavedChanges) {\n      const confirmed = window.confirm(message)\n      if (confirmed) {\n        closeModal()\n        return true\n      }\n      return false\n    }\n    closeModal()\n    return true\n  }, [closeModal])\n\n  return [\n    { isOpen, isClosing },\n    { openModal, closeModal, confirmClose }\n  ]\n}\n\n// Form submission helper\nexport interface SubmissionOptions<T> {\n  onSuccess?: (data: T) => void\n  onError?: (error: Error) => void\n  resetOnSuccess?: boolean\n  showSuccessMessage?: boolean\n  showErrorMessage?: boolean\n}\n\nexport function createSubmissionHandler<T>(\n  formActions: FormActions<T>,\n  submitFn: (data: T) => Promise<unknown>,\n  options: SubmissionOptions<T> = {}\n) {\n  return async (data: T) => {\n    const { \n      onSuccess, \n      onError, \n      resetOnSuccess = false,\n      showSuccessMessage = true,\n      showErrorMessage = true \n    } = options\n\n    if (!formActions.validateForm()) {\n      return\n    }\n\n    formActions.setSubmitting(true)\n\n    try {\n      const result = await submitFn(data)\n      \n      if (showSuccessMessage) {\n        // You can integrate with your toast system here\n        console.log('Form submitted successfully')\n      }\n      \n      if (resetOnSuccess) {\n        formActions.resetForm()\n      }\n      \n      onSuccess?.(data)\n      return result\n    } catch (error) {\n      if (showErrorMessage) {\n        console.error('Form submission failed:', error)\n      }\n      \n      onError?.(error as Error)\n      throw error\n    } finally {\n      formActions.setSubmitting(false)\n    }\n  }\n}\n\n// Utility for checking if form data has changed\nexport function hasFormDataChanged<T extends Record<string, unknown>>(\n  current: T, \n  original: T\n): boolean {\n  return JSON.stringify(current) !== JSON.stringify(original)\n}\n\n// Utility for extracting form errors for display\nexport function getFieldError(\n  errors: Record<string, string>, \n  fieldName: string\n): string | undefined {\n  return errors[fieldName]\n}\n\n// Utility for checking if a field has an error\nexport function hasFieldError(\n  errors: Record<string, string>, \n  fieldName: string\n): boolean {\n  return Boolean(errors[fieldName])\n}"],
      names: ["commonSchemas", "createClientFormSchema", "createProjectFormSchema", "createSubmissionHandler", "getFieldError", "hasFieldError", "hasFormDataChanged", "useFormValidation", "useModalState", "email", "z", "string", "phone", "regex", "required", "fieldName", "min", "minLength", "positiveNumber", "number", "currency", "date", "refine", "isNaN", "Date", "parse", "object", "clientName", "clientEmail", "clientPhone", "optional", "businessName", "industry", "projectTitle", "description", "timeline", "budget", "requirements", "initialData", "schema", "options", "validateOnChange", "resetOnSubmit", "formData", "setFormData", "useState", "errors", "setErrors", "isDirty", "setIsDirty", "isSubmitting", "setIsSubmitting", "originalData", "validateField", "useCallback", "field", "fieldSchema", "shape", "prev", "newErrors", "error", "ZodError", "message", "validateForm", "forEach", "err", "path", "length", "updateField", "value", "setTimeout", "updateFields", "fields", "resetForm", "newData", "resetData", "hasUnsavedChanges", "JSON", "stringify", "isValid", "useMemo", "Object", "keys", "formState", "data", "formActions", "setSubmitting", "isOpen", "setIsOpen", "isClosing", "setIsClosing", "openModal", "closeModal", "confirmClose", "confirmed", "window", "confirm", "submitFn", "onSuccess", "onError", "resetOnSuccess", "showSuccessMessage", "showErrorMessage", "result", "console", "log", "current", "original", "Boolean"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "45a7d1ae9087d6ec6c77342cfdd5a602620ede85"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rk82y87nx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rk82y87nx();
cov_2rk82y87nx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[0]++;
  cov_2rk82y87nx().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2rk82y87nx().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2rk82y87nx().s[3]++;
_export(exports, {
  get commonSchemas() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[1]++;
    cov_2rk82y87nx().s[4]++;
    return commonSchemas;
  },
  get createClientFormSchema() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[2]++;
    cov_2rk82y87nx().s[5]++;
    return createClientFormSchema;
  },
  get createProjectFormSchema() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[3]++;
    cov_2rk82y87nx().s[6]++;
    return createProjectFormSchema;
  },
  get createSubmissionHandler() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[4]++;
    cov_2rk82y87nx().s[7]++;
    return createSubmissionHandler;
  },
  get getFieldError() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[5]++;
    cov_2rk82y87nx().s[8]++;
    return getFieldError;
  },
  get hasFieldError() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[6]++;
    cov_2rk82y87nx().s[9]++;
    return hasFieldError;
  },
  get hasFormDataChanged() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[7]++;
    cov_2rk82y87nx().s[10]++;
    return hasFormDataChanged;
  },
  get useFormValidation() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[8]++;
    cov_2rk82y87nx().s[11]++;
    return useFormValidation;
  },
  get useModalState() {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[9]++;
    cov_2rk82y87nx().s[12]++;
    return useModalState;
  }
});
const _zod =
/* istanbul ignore next */
(cov_2rk82y87nx().s[13]++, require("zod"));
const _react =
/* istanbul ignore next */
(cov_2rk82y87nx().s[14]++, require("react"));
const commonSchemas =
/* istanbul ignore next */
(cov_2rk82y87nx().s[15]++, {
  email: _zod.z.string().email("Please enter a valid email address"),
  phone: _zod.z.string().regex(/^[\+]?[1-9][\d]{0,15}$/, "Please enter a valid phone number"),
  required: fieldName => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[10]++;
    cov_2rk82y87nx().s[16]++;
    return _zod.z.string().min(1, `${fieldName} is required`);
  },
  minLength: (fieldName, min) => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[11]++;
    cov_2rk82y87nx().s[17]++;
    return _zod.z.string().min(min, `${fieldName} must be at least ${min} characters`);
  },
  positiveNumber: fieldName => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[12]++;
    cov_2rk82y87nx().s[18]++;
    return _zod.z.number().min(0, `${fieldName} must be a positive number`);
  },
  currency: _zod.z.number().min(0, "Amount must be positive"),
  date: _zod.z.string().refine(date => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[13]++;
    cov_2rk82y87nx().s[19]++;
    return !isNaN(Date.parse(date));
  }, "Please enter a valid date")
});
/* istanbul ignore next */
cov_2rk82y87nx().s[20]++;
const createClientFormSchema = () => {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[14]++;
  cov_2rk82y87nx().s[21]++;
  return _zod.z.object({
    clientName: commonSchemas.required("Client name"),
    clientEmail: commonSchemas.email,
    clientPhone: commonSchemas.phone.optional(),
    businessName: commonSchemas.required("Business name"),
    industry: commonSchemas.required("Industry")
  });
};
/* istanbul ignore next */
cov_2rk82y87nx().s[22]++;
const createProjectFormSchema = () => {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[15]++;
  cov_2rk82y87nx().s[23]++;
  return _zod.z.object({
    projectTitle: commonSchemas.minLength("Project title", 5),
    description: commonSchemas.minLength("Description", 10),
    timeline: commonSchemas.required("Timeline"),
    budget: commonSchemas.required("Budget"),
    requirements: commonSchemas.minLength("Requirements", 10)
  });
};
function useFormValidation(initialData, schema, options =
/* istanbul ignore next */
(cov_2rk82y87nx().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[16]++;
  const {
    validateOnChange =
    /* istanbul ignore next */
    (cov_2rk82y87nx().b[1][0]++, true),
    resetOnSubmit =
    /* istanbul ignore next */
    (cov_2rk82y87nx().b[2][0]++, false)
  } =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[24]++, options);
  const [formData, setFormData] =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[25]++, (0, _react.useState)(initialData));
  const [errors, setErrors] =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[26]++, (0, _react.useState)({}));
  const [isDirty, setIsDirty] =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[27]++, (0, _react.useState)(false));
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[28]++, (0, _react.useState)(false));
  const [originalData] =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[29]++, (0, _react.useState)(initialData));
  const validateField =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[30]++, (0, _react.useCallback)(field => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[17]++;
    cov_2rk82y87nx().s[31]++;
    try {
      const fieldSchema =
      /* istanbul ignore next */
      (cov_2rk82y87nx().s[32]++, schema.shape?.[field]);
      /* istanbul ignore next */
      cov_2rk82y87nx().s[33]++;
      if (fieldSchema) {
        /* istanbul ignore next */
        cov_2rk82y87nx().b[3][0]++;
        cov_2rk82y87nx().s[34]++;
        fieldSchema.parse(formData[field]);
        /* istanbul ignore next */
        cov_2rk82y87nx().s[35]++;
        setErrors(prev => {
          /* istanbul ignore next */
          cov_2rk82y87nx().f[18]++;
          const newErrors =
          /* istanbul ignore next */
          (cov_2rk82y87nx().s[36]++, {
            ...prev
          });
          /* istanbul ignore next */
          cov_2rk82y87nx().s[37]++;
          delete newErrors[field];
          /* istanbul ignore next */
          cov_2rk82y87nx().s[38]++;
          return newErrors;
        });
        /* istanbul ignore next */
        cov_2rk82y87nx().s[39]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2rk82y87nx().b[3][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_2rk82y87nx().s[40]++;
      if (error instanceof _zod.z.ZodError) {
        /* istanbul ignore next */
        cov_2rk82y87nx().b[4][0]++;
        cov_2rk82y87nx().s[41]++;
        setErrors(prev => {
          /* istanbul ignore next */
          cov_2rk82y87nx().f[19]++;
          cov_2rk82y87nx().s[42]++;
          return {
            ...prev,
            [field]:
            /* istanbul ignore next */
            (cov_2rk82y87nx().b[5][0]++, error.errors[0]?.message) ||
            /* istanbul ignore next */
            (cov_2rk82y87nx().b[5][1]++, "Invalid value")
          };
        });
      } else
      /* istanbul ignore next */
      {
        cov_2rk82y87nx().b[4][1]++;
      }
    }
    /* istanbul ignore next */
    cov_2rk82y87nx().s[43]++;
    return false;
  }, [formData, schema]));
  const validateForm =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[44]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[20]++;
    cov_2rk82y87nx().s[45]++;
    try {
      /* istanbul ignore next */
      cov_2rk82y87nx().s[46]++;
      schema.parse(formData);
      /* istanbul ignore next */
      cov_2rk82y87nx().s[47]++;
      setErrors({});
      /* istanbul ignore next */
      cov_2rk82y87nx().s[48]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_2rk82y87nx().s[49]++;
      if (error instanceof _zod.z.ZodError) {
        /* istanbul ignore next */
        cov_2rk82y87nx().b[6][0]++;
        const newErrors =
        /* istanbul ignore next */
        (cov_2rk82y87nx().s[50]++, {});
        /* istanbul ignore next */
        cov_2rk82y87nx().s[51]++;
        error.errors.forEach(err => {
          /* istanbul ignore next */
          cov_2rk82y87nx().f[21]++;
          cov_2rk82y87nx().s[52]++;
          if (err.path.length > 0) {
            /* istanbul ignore next */
            cov_2rk82y87nx().b[7][0]++;
            cov_2rk82y87nx().s[53]++;
            newErrors[err.path[0]] = err.message;
          } else
          /* istanbul ignore next */
          {
            cov_2rk82y87nx().b[7][1]++;
          }
        });
        /* istanbul ignore next */
        cov_2rk82y87nx().s[54]++;
        setErrors(newErrors);
      } else
      /* istanbul ignore next */
      {
        cov_2rk82y87nx().b[6][1]++;
      }
      cov_2rk82y87nx().s[55]++;
      return false;
    }
  }, [formData, schema]));
  const updateField =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[56]++, (0, _react.useCallback)((field, value) => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[22]++;
    cov_2rk82y87nx().s[57]++;
    setFormData(prev => {
      /* istanbul ignore next */
      cov_2rk82y87nx().f[23]++;
      cov_2rk82y87nx().s[58]++;
      return {
        ...prev,
        [field]: value
      };
    });
    /* istanbul ignore next */
    cov_2rk82y87nx().s[59]++;
    setIsDirty(true);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[60]++;
    if (validateOnChange) {
      /* istanbul ignore next */
      cov_2rk82y87nx().b[8][0]++;
      cov_2rk82y87nx().s[61]++;
      // Validate after a short delay to avoid excessive validation
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2rk82y87nx().f[24]++;
        cov_2rk82y87nx().s[62]++;
        return validateField(field);
      }, 100);
    } else
    /* istanbul ignore next */
    {
      cov_2rk82y87nx().b[8][1]++;
    }
  }, [validateField, validateOnChange]));
  const updateFields =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[63]++, (0, _react.useCallback)(fields => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[25]++;
    cov_2rk82y87nx().s[64]++;
    setFormData(prev => {
      /* istanbul ignore next */
      cov_2rk82y87nx().f[26]++;
      cov_2rk82y87nx().s[65]++;
      return {
        ...prev,
        ...fields
      };
    });
    /* istanbul ignore next */
    cov_2rk82y87nx().s[66]++;
    setIsDirty(true);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[67]++;
    if (validateOnChange) {
      /* istanbul ignore next */
      cov_2rk82y87nx().b[9][0]++;
      cov_2rk82y87nx().s[68]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2rk82y87nx().f[27]++;
        cov_2rk82y87nx().s[69]++;
        return validateForm();
      }, 100);
    } else
    /* istanbul ignore next */
    {
      cov_2rk82y87nx().b[9][1]++;
    }
  }, [validateForm, validateOnChange]));
  const resetForm =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[70]++, (0, _react.useCallback)(newData => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[28]++;
    const resetData =
    /* istanbul ignore next */
    (cov_2rk82y87nx().s[71]++, newData ?
    /* istanbul ignore next */
    (cov_2rk82y87nx().b[10][0]++, {
      ...initialData,
      ...newData
    }) :
    /* istanbul ignore next */
    (cov_2rk82y87nx().b[10][1]++, initialData));
    /* istanbul ignore next */
    cov_2rk82y87nx().s[72]++;
    setFormData(resetData);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[73]++;
    setErrors({});
    /* istanbul ignore next */
    cov_2rk82y87nx().s[74]++;
    setIsDirty(false);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[75]++;
    setIsSubmitting(false);
  }, [initialData]));
  const hasUnsavedChanges =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[76]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[29]++;
    cov_2rk82y87nx().s[77]++;
    return JSON.stringify(formData) !== JSON.stringify(originalData);
  }, [formData, originalData]));
  const isValid =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[78]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[30]++;
    cov_2rk82y87nx().s[79]++;
    return /* istanbul ignore next */(cov_2rk82y87nx().b[11][0]++, Object.keys(errors).length === 0) &&
    /* istanbul ignore next */
    (cov_2rk82y87nx().b[11][1]++, isDirty);
  }, [errors, isDirty]));
  const formState =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[80]++, {
    data: formData,
    errors,
    isValid,
    isDirty,
    isSubmitting
  });
  const formActions =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[81]++, {
    updateField,
    updateFields,
    validateField,
    validateForm,
    resetForm,
    setSubmitting: setIsSubmitting,
    hasUnsavedChanges
  });
  /* istanbul ignore next */
  cov_2rk82y87nx().s[82]++;
  return [formState, formActions];
}
function useModalState() {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[31]++;
  const [isOpen, setIsOpen] =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[83]++, (0, _react.useState)(false));
  const [isClosing, setIsClosing] =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[84]++, (0, _react.useState)(false));
  const openModal =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[85]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[32]++;
    cov_2rk82y87nx().s[86]++;
    setIsOpen(true);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[87]++;
    setIsClosing(false);
  }, []));
  const closeModal =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[88]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[33]++;
    cov_2rk82y87nx().s[89]++;
    setIsClosing(true);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[90]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_2rk82y87nx().f[34]++;
      cov_2rk82y87nx().s[91]++;
      setIsOpen(false);
      /* istanbul ignore next */
      cov_2rk82y87nx().s[92]++;
      setIsClosing(false);
    }, 150); // Animation delay
  }, []));
  const confirmClose =
  /* istanbul ignore next */
  (cov_2rk82y87nx().s[93]++, (0, _react.useCallback)(async (hasUnsavedChanges, message =
  /* istanbul ignore next */
  (cov_2rk82y87nx().b[12][0]++, "You have unsaved changes. Are you sure you want to close this form? All data will be lost.")) => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[35]++;
    cov_2rk82y87nx().s[94]++;
    if (hasUnsavedChanges) {
      /* istanbul ignore next */
      cov_2rk82y87nx().b[13][0]++;
      const confirmed =
      /* istanbul ignore next */
      (cov_2rk82y87nx().s[95]++, window.confirm(message));
      /* istanbul ignore next */
      cov_2rk82y87nx().s[96]++;
      if (confirmed) {
        /* istanbul ignore next */
        cov_2rk82y87nx().b[14][0]++;
        cov_2rk82y87nx().s[97]++;
        closeModal();
        /* istanbul ignore next */
        cov_2rk82y87nx().s[98]++;
        return true;
      } else
      /* istanbul ignore next */
      {
        cov_2rk82y87nx().b[14][1]++;
      }
      cov_2rk82y87nx().s[99]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2rk82y87nx().b[13][1]++;
    }
    cov_2rk82y87nx().s[100]++;
    closeModal();
    /* istanbul ignore next */
    cov_2rk82y87nx().s[101]++;
    return true;
  }, [closeModal]));
  /* istanbul ignore next */
  cov_2rk82y87nx().s[102]++;
  return [{
    isOpen,
    isClosing
  }, {
    openModal,
    closeModal,
    confirmClose
  }];
}
function createSubmissionHandler(formActions, submitFn, options =
/* istanbul ignore next */
(cov_2rk82y87nx().b[15][0]++, {})) {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[36]++;
  cov_2rk82y87nx().s[103]++;
  return async data => {
    /* istanbul ignore next */
    cov_2rk82y87nx().f[37]++;
    const {
      onSuccess,
      onError,
      resetOnSuccess =
      /* istanbul ignore next */
      (cov_2rk82y87nx().b[16][0]++, false),
      showSuccessMessage =
      /* istanbul ignore next */
      (cov_2rk82y87nx().b[17][0]++, true),
      showErrorMessage =
      /* istanbul ignore next */
      (cov_2rk82y87nx().b[18][0]++, true)
    } =
    /* istanbul ignore next */
    (cov_2rk82y87nx().s[104]++, options);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[105]++;
    if (!formActions.validateForm()) {
      /* istanbul ignore next */
      cov_2rk82y87nx().b[19][0]++;
      cov_2rk82y87nx().s[106]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2rk82y87nx().b[19][1]++;
    }
    cov_2rk82y87nx().s[107]++;
    formActions.setSubmitting(true);
    /* istanbul ignore next */
    cov_2rk82y87nx().s[108]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_2rk82y87nx().s[109]++, await submitFn(data));
      /* istanbul ignore next */
      cov_2rk82y87nx().s[110]++;
      if (showSuccessMessage) {
        /* istanbul ignore next */
        cov_2rk82y87nx().b[20][0]++;
        cov_2rk82y87nx().s[111]++;
        // You can integrate with your toast system here
        console.log('Form submitted successfully');
      } else
      /* istanbul ignore next */
      {
        cov_2rk82y87nx().b[20][1]++;
      }
      cov_2rk82y87nx().s[112]++;
      if (resetOnSuccess) {
        /* istanbul ignore next */
        cov_2rk82y87nx().b[21][0]++;
        cov_2rk82y87nx().s[113]++;
        formActions.resetForm();
      } else
      /* istanbul ignore next */
      {
        cov_2rk82y87nx().b[21][1]++;
      }
      cov_2rk82y87nx().s[114]++;
      onSuccess?.(data);
      /* istanbul ignore next */
      cov_2rk82y87nx().s[115]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_2rk82y87nx().s[116]++;
      if (showErrorMessage) {
        /* istanbul ignore next */
        cov_2rk82y87nx().b[22][0]++;
        cov_2rk82y87nx().s[117]++;
        console.error('Form submission failed:', error);
      } else
      /* istanbul ignore next */
      {
        cov_2rk82y87nx().b[22][1]++;
      }
      cov_2rk82y87nx().s[118]++;
      onError?.(error);
      /* istanbul ignore next */
      cov_2rk82y87nx().s[119]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_2rk82y87nx().s[120]++;
      formActions.setSubmitting(false);
    }
  };
}
function hasFormDataChanged(current, original) {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[38]++;
  cov_2rk82y87nx().s[121]++;
  return JSON.stringify(current) !== JSON.stringify(original);
}
function getFieldError(errors, fieldName) {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[39]++;
  cov_2rk82y87nx().s[122]++;
  return errors[fieldName];
}
function hasFieldError(errors, fieldName) {
  /* istanbul ignore next */
  cov_2rk82y87nx().f[40]++;
  cov_2rk82y87nx().s[123]++;
  return Boolean(errors[fieldName]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,