d222b00cfc15f8b78eb1c18170123c19
"use client";
"use strict";

/* istanbul ignore next */
function cov_21r7hreruj() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\use-toast.ts";
  var hash = "99a545630a79ba59f21ee4bcd1623626b77f72bd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\use-toast.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 38
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 21
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 25,
          column: 32
        },
        end: {
          line: 25,
          column: 56
        }
      },
      "9": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "10": {
        start: {
          line: 27,
          column: 19
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "11": {
        start: {
          line: 28,
          column: 25
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "12": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "13": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 39,
          column: 13
        }
      },
      "14": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 17
        }
      },
      "15": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 61
        }
      },
      "16": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 42,
          column: 59
        }
      },
      "17": {
        start: {
          line: 42,
          column: 47
        },
        end: {
          line: 42,
          column: 58
        }
      },
      "18": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 18
        }
      },
      "19": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 54,
          column: 6
        }
      },
      "20": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "21": {
        start: {
          line: 55,
          column: 22
        },
        end: {
          line: 64,
          column: 6
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 61,
          column: 11
        }
      },
      "23": {
        start: {
          line: 65,
          column: 24
        },
        end: {
          line: 73,
          column: 6
        }
      },
      "24": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 70,
          column: 11
        }
      },
      "25": {
        start: {
          line: 74,
          column: 21
        },
        end: {
          line: 82,
          column: 6
        }
      },
      "26": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "27": {
        start: {
          line: 83,
          column: 24
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "28": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 57
        }
      },
      "29": {
        start: {
          line: 84,
          column: 26
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "30": {
        start: {
          line: 84,
          column: 43
        },
        end: {
          line: 84,
          column: 54
        }
      },
      "31": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 94,
          column: 6
        }
      },
      "32": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 97,
          column: 30
        }
      },
      "33": {
        start: {
          line: 98,
          column: 31
        },
        end: {
          line: 100,
          column: 1
        }
      },
      "34": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 99,
          column: 35
        }
      },
      "35": {
        start: {
          line: 101,
          column: 14
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "36": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "37": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 50
        }
      },
      "38": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 87
        }
      },
      "39": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 106,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 17
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 20
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "useToast",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 17
          }
        },
        loc: {
          start: {
            line: 24,
            column: 20
          },
          end: {
            line: 95,
            column: 1
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 42
          },
          end: {
            line: 26,
            column: 43
          }
        },
        loc: {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 18
          },
          end: {
            line: 36,
            column: 19
          }
        },
        loc: {
          start: {
            line: 36,
            column: 26
          },
          end: {
            line: 39,
            column: 13
          }
        },
        line: 36
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 41,
            column: 19
          },
          end: {
            line: 41,
            column: 20
          }
        },
        loc: {
          start: {
            line: 41,
            column: 23
          },
          end: {
            line: 43,
            column: 9
          }
        },
        line: 41
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 22
          },
          end: {
            line: 42,
            column: 23
          }
        },
        loc: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 59
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 42,
            column: 42
          },
          end: {
            line: 42,
            column: 43
          }
        },
        loc: {
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 58
          }
        },
        line: 42
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 46,
            column: 48
          },
          end: {
            line: 46,
            column: 49
          }
        },
        loc: {
          start: {
            line: 46,
            column: 70
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 46
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 55,
            column: 46
          },
          end: {
            line: 55,
            column: 47
          }
        },
        loc: {
          start: {
            line: 55,
            column: 68
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 55
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 65,
            column: 48
          },
          end: {
            line: 65,
            column: 49
          }
        },
        loc: {
          start: {
            line: 65,
            column: 70
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 65
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 74,
            column: 46
          }
        },
        loc: {
          start: {
            line: 74,
            column: 67
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 74
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 83,
            column: 48
          },
          end: {
            line: 83,
            column: 49
          }
        },
        loc: {
          start: {
            line: 83,
            column: 54
          },
          end: {
            line: 85,
            column: 5
          }
        },
        line: 83
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 84,
            column: 19
          }
        },
        loc: {
          start: {
            line: 84,
            column: 26
          },
          end: {
            line: 84,
            column: 55
          }
        },
        line: 84
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 84,
            column: 39
          }
        },
        loc: {
          start: {
            line: 84,
            column: 43
          },
          end: {
            line: 84,
            column: 54
          }
        },
        line: 84
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 98,
            column: 31
          },
          end: {
            line: 98,
            column: 32
          }
        },
        loc: {
          start: {
            line: 98,
            column: 43
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 98
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 101,
            column: 14
          },
          end: {
            line: 101,
            column: 15
          }
        },
        loc: {
          start: {
            line: 101,
            column: 25
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 101
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 30
          }
        }, {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 30,
            column: 40
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 104,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\use-toast.ts"],
      sourcesContent: ["\"use client\"\n\nimport * as React from \"react\"\n\nimport { useState, useCallback } from \"react\"\n\ninterface Toast {\n  id: string\n  type: \"success\" | \"error\" | \"warning\" | \"info\"\n  title: string\n  description: string\n  variant?: \"default\" | \"destructive\"\n  action?: React.ReactElement\n}\n\n// Allow callers to omit `type` (defaults to \"info\")\ninterface ToastOptions {\n  type?: Toast[\"type\"]\n  title: Toast[\"title\"]\n  description: Toast[\"description\"]\n  variant?: Toast[\"variant\"]\n  action?: Toast[\"action\"]\n}\n\nexport function useToast() {\n  const [toasts, setToasts] = useState<Toast[]>([])\n\n  const toast = useCallback((options: ToastOptions) => {\n    const id = Math.random().toString(36).substring(2, 11)\n    const newToast: Toast = { id, type: options.type ?? \"info\", title: options.title, description: options.description, variant: options.variant, action: options.action }\n\n    setToasts((prev) => [...prev, newToast])\n\n    // Auto remove after 5 seconds\n    setTimeout(() => {\n      setToasts((prev) => prev.filter((t) => t.id !== id))\n    }, 5000)\n\n    return id\n  }, [])\n\n  const showSuccess = useCallback(\n    (title: string, description: string) => {\n      return toast({ type: \"success\", title, description })\n    },\n    [toast],\n  )\n\n  const showError = useCallback(\n    (title: string, description: string) => {\n      return toast({ type: \"error\", title, description, variant: \"destructive\" })\n    },\n    [toast],\n  )\n\n  const showWarning = useCallback(\n    (title: string, description: string) => {\n      return toast({ type: \"warning\", title, description })\n    },\n    [toast],\n  )\n\n  const showInfo = useCallback(\n    (title: string, description: string) => {\n      return toast({ type: \"info\", title, description })\n    },\n    [toast],\n  )\n\n  const removeToast = useCallback((id: string) => {\n    setToasts((prev) => prev.filter((t) => t.id !== id))\n  }, [])\n\n  return {\n    toast,\n    showSuccess,\n    showError,\n    showWarning,\n    showInfo,\n    removeToast,\n    toasts,\n  }\n}\n\n// Create a global toast instance for use outside React components\nlet globalToastInstance: ReturnType<typeof useToast> | null = null\n\nexport const setGlobalToastInstance = (instance: ReturnType<typeof useToast>) => {\n  globalToastInstance = instance\n}\n\nexport const toast = (options: ToastOptions) => {\n  if (globalToastInstance) {\n    return globalToastInstance.toast(options)\n  }\n  console.warn('Toast instance not initialized. Call setGlobalToastInstance first.')\n  return ''\n}\n"],
      names: ["setGlobalToastInstance", "toast", "useToast", "toasts", "setToasts", "useState", "useCallback", "options", "id", "Math", "random", "toString", "substring", "newToast", "type", "title", "description", "variant", "action", "prev", "setTimeout", "filter", "t", "showSuccess", "showError", "showWarning", "showInfo", "removeToast", "globalToastInstance", "instance", "console", "warn"],
      mappings: "AAAA;;;;;;;;;;;;QAuFaA;eAAAA;;QAIAC;eAAAA;;QAnEGC;eAAAA;;;uBApBsB;AAoB/B,SAASA;IACd,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAU,EAAE;IAEhD,MAAMJ,QAAQK,IAAAA,kBAAW,EAAC,CAACC;QACzB,MAAMC,KAAKC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAG;QACnD,MAAMC,WAAkB;YAAEL;YAAIM,MAAMP,QAAQO,IAAI,IAAI;YAAQC,OAAOR,QAAQQ,KAAK;YAAEC,aAAaT,QAAQS,WAAW;YAAEC,SAASV,QAAQU,OAAO;YAAEC,QAAQX,QAAQW,MAAM;QAAC;QAErKd,UAAU,CAACe,OAAS;mBAAIA;gBAAMN;aAAS;QAEvC,8BAA8B;QAC9BO,WAAW;YACThB,UAAU,CAACe,OAASA,KAAKE,MAAM,CAAC,CAACC,IAAMA,EAAEd,EAAE,KAAKA;QAClD,GAAG;QAEH,OAAOA;IACT,GAAG,EAAE;IAEL,MAAMe,cAAcjB,IAAAA,kBAAW,EAC7B,CAACS,OAAeC;QACd,OAAOf,MAAM;YAAEa,MAAM;YAAWC;YAAOC;QAAY;IACrD,GACA;QAACf;KAAM;IAGT,MAAMuB,YAAYlB,IAAAA,kBAAW,EAC3B,CAACS,OAAeC;QACd,OAAOf,MAAM;YAAEa,MAAM;YAASC;YAAOC;YAAaC,SAAS;QAAc;IAC3E,GACA;QAAChB;KAAM;IAGT,MAAMwB,cAAcnB,IAAAA,kBAAW,EAC7B,CAACS,OAAeC;QACd,OAAOf,MAAM;YAAEa,MAAM;YAAWC;YAAOC;QAAY;IACrD,GACA;QAACf;KAAM;IAGT,MAAMyB,WAAWpB,IAAAA,kBAAW,EAC1B,CAACS,OAAeC;QACd,OAAOf,MAAM;YAAEa,MAAM;YAAQC;YAAOC;QAAY;IAClD,GACA;QAACf;KAAM;IAGT,MAAM0B,cAAcrB,IAAAA,kBAAW,EAAC,CAACE;QAC/BJ,UAAU,CAACe,OAASA,KAAKE,MAAM,CAAC,CAACC,IAAMA,EAAEd,EAAE,KAAKA;IAClD,GAAG,EAAE;IAEL,OAAO;QACLP;QACAsB;QACAC;QACAC;QACAC;QACAC;QACAxB;IACF;AACF;AAEA,kEAAkE;AAClE,IAAIyB,sBAA0D;AAEvD,MAAM5B,yBAAyB,CAAC6B;IACrCD,sBAAsBC;AACxB;AAEO,MAAM5B,QAAQ,CAACM;IACpB,IAAIqB,qBAAqB;QACvB,OAAOA,oBAAoB3B,KAAK,CAACM;IACnC;IACAuB,QAAQC,IAAI,CAAC;IACb,OAAO;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99a545630a79ba59f21ee4bcd1623626b77f72bd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_21r7hreruj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_21r7hreruj();
cov_21r7hreruj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_21r7hreruj().f[0]++;
  cov_21r7hreruj().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_21r7hreruj().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_21r7hreruj().s[3]++;
_export(exports, {
  get setGlobalToastInstance() {
    /* istanbul ignore next */
    cov_21r7hreruj().f[1]++;
    cov_21r7hreruj().s[4]++;
    return setGlobalToastInstance;
  },
  get toast() {
    /* istanbul ignore next */
    cov_21r7hreruj().f[2]++;
    cov_21r7hreruj().s[5]++;
    return toast;
  },
  get useToast() {
    /* istanbul ignore next */
    cov_21r7hreruj().f[3]++;
    cov_21r7hreruj().s[6]++;
    return useToast;
  }
});
const _react =
/* istanbul ignore next */
(cov_21r7hreruj().s[7]++, require("react"));
function useToast() {
  /* istanbul ignore next */
  cov_21r7hreruj().f[4]++;
  const [toasts, setToasts] =
  /* istanbul ignore next */
  (cov_21r7hreruj().s[8]++, (0, _react.useState)([]));
  const toast =
  /* istanbul ignore next */
  (cov_21r7hreruj().s[9]++, (0, _react.useCallback)(options => {
    /* istanbul ignore next */
    cov_21r7hreruj().f[5]++;
    const id =
    /* istanbul ignore next */
    (cov_21r7hreruj().s[10]++, Math.random().toString(36).substring(2, 11));
    const newToast =
    /* istanbul ignore next */
    (cov_21r7hreruj().s[11]++, {
      id,
      type:
      /* istanbul ignore next */
      (cov_21r7hreruj().b[0][0]++, options.type) ??
      /* istanbul ignore next */
      (cov_21r7hreruj().b[0][1]++, "info"),
      title: options.title,
      description: options.description,
      variant: options.variant,
      action: options.action
    });
    /* istanbul ignore next */
    cov_21r7hreruj().s[12]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_21r7hreruj().f[6]++;
      cov_21r7hreruj().s[13]++;
      return [...prev, newToast];
    });
    // Auto remove after 5 seconds
    /* istanbul ignore next */
    cov_21r7hreruj().s[14]++;
    setTimeout(() => {
      /* istanbul ignore next */
      cov_21r7hreruj().f[7]++;
      cov_21r7hreruj().s[15]++;
      setToasts(prev => {
        /* istanbul ignore next */
        cov_21r7hreruj().f[8]++;
        cov_21r7hreruj().s[16]++;
        return prev.filter(t => {
          /* istanbul ignore next */
          cov_21r7hreruj().f[9]++;
          cov_21r7hreruj().s[17]++;
          return t.id !== id;
        });
      });
    }, 5000);
    /* istanbul ignore next */
    cov_21r7hreruj().s[18]++;
    return id;
  }, []));
  const showSuccess =
  /* istanbul ignore next */
  (cov_21r7hreruj().s[19]++, (0, _react.useCallback)((title, description) => {
    /* istanbul ignore next */
    cov_21r7hreruj().f[10]++;
    cov_21r7hreruj().s[20]++;
    return toast({
      type: "success",
      title,
      description
    });
  }, [toast]));
  const showError =
  /* istanbul ignore next */
  (cov_21r7hreruj().s[21]++, (0, _react.useCallback)((title, description) => {
    /* istanbul ignore next */
    cov_21r7hreruj().f[11]++;
    cov_21r7hreruj().s[22]++;
    return toast({
      type: "error",
      title,
      description,
      variant: "destructive"
    });
  }, [toast]));
  const showWarning =
  /* istanbul ignore next */
  (cov_21r7hreruj().s[23]++, (0, _react.useCallback)((title, description) => {
    /* istanbul ignore next */
    cov_21r7hreruj().f[12]++;
    cov_21r7hreruj().s[24]++;
    return toast({
      type: "warning",
      title,
      description
    });
  }, [toast]));
  const showInfo =
  /* istanbul ignore next */
  (cov_21r7hreruj().s[25]++, (0, _react.useCallback)((title, description) => {
    /* istanbul ignore next */
    cov_21r7hreruj().f[13]++;
    cov_21r7hreruj().s[26]++;
    return toast({
      type: "info",
      title,
      description
    });
  }, [toast]));
  const removeToast =
  /* istanbul ignore next */
  (cov_21r7hreruj().s[27]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_21r7hreruj().f[14]++;
    cov_21r7hreruj().s[28]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_21r7hreruj().f[15]++;
      cov_21r7hreruj().s[29]++;
      return prev.filter(t => {
        /* istanbul ignore next */
        cov_21r7hreruj().f[16]++;
        cov_21r7hreruj().s[30]++;
        return t.id !== id;
      });
    });
  }, []));
  /* istanbul ignore next */
  cov_21r7hreruj().s[31]++;
  return {
    toast,
    showSuccess,
    showError,
    showWarning,
    showInfo,
    removeToast,
    toasts
  };
}
// Create a global toast instance for use outside React components
let globalToastInstance =
/* istanbul ignore next */
(cov_21r7hreruj().s[32]++, null);
/* istanbul ignore next */
cov_21r7hreruj().s[33]++;
const setGlobalToastInstance = instance => {
  /* istanbul ignore next */
  cov_21r7hreruj().f[17]++;
  cov_21r7hreruj().s[34]++;
  globalToastInstance = instance;
};
/* istanbul ignore next */
cov_21r7hreruj().s[35]++;
const toast = options => {
  /* istanbul ignore next */
  cov_21r7hreruj().f[18]++;
  cov_21r7hreruj().s[36]++;
  if (globalToastInstance) {
    /* istanbul ignore next */
    cov_21r7hreruj().b[1][0]++;
    cov_21r7hreruj().s[37]++;
    return globalToastInstance.toast(options);
  } else
  /* istanbul ignore next */
  {
    cov_21r7hreruj().b[1][1]++;
  }
  cov_21r7hreruj().s[38]++;
  console.warn('Toast instance not initialized. Call setGlobalToastInstance first.');
  /* istanbul ignore next */
  cov_21r7hreruj().s[39]++;
  return '';
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,