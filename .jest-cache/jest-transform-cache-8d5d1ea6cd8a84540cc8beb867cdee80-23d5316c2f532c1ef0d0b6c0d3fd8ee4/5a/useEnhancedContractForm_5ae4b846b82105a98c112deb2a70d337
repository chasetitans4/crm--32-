ca486f7ce7c641cd73de7b921d77d786
"use client";
"use strict";

/* istanbul ignore next */
function cov_sr24h3cd5() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useEnhancedContractForm.ts";
  var hash = "3b2d15ea4611002da76b13b266485b8af7d330e2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useEnhancedContractForm.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 39
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 13,
          column: 32
        },
        end: {
          line: 13,
          column: 84
        }
      },
      "5": {
        start: {
          line: 14,
          column: 28
        },
        end: {
          line: 14,
          column: 66
        }
      },
      "6": {
        start: {
          line: 15,
          column: 18
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "7": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 20,
          column: 6
        }
      },
      "9": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 45,
          column: 1
        }
      },
      "10": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "11": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 53,
          column: 14
        }
      },
      "12": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 58,
          column: 14
        }
      },
      "13": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 68,
          column: 14
        }
      },
      "14": {
        start: {
          line: 71,
          column: 40
        },
        end: {
          line: 71,
          column: 54
        }
      },
      "15": {
        start: {
          line: 72,
          column: 34
        },
        end: {
          line: 72,
          column: 49
        }
      },
      "16": {
        start: {
          line: 73,
          column: 40
        },
        end: {
          line: 75,
          column: 17
        }
      },
      "17": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 76,
          column: 45
        }
      },
      "18": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 82,
          column: 17
        }
      },
      "19": {
        start: {
          line: 77,
          column: 28
        },
        end: {
          line: 77,
          column: 29
        }
      },
      "20": {
        start: {
          line: 78,
          column: 20
        },
        end: {
          line: 80,
          column: 21
        }
      },
      "21": {
        start: {
          line: 79,
          column: 24
        },
        end: {
          line: 79,
          column: 51
        }
      },
      "22": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 52
        }
      },
      "23": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 65
        }
      },
      "24": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 89,
          column: 18
        }
      },
      "25": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "26": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 100,
          column: 14
        }
      },
      "27": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 105,
          column: 14
        }
      },
      "28": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 110,
          column: 14
        }
      },
      "29": {
        start: {
          line: 113,
          column: 32
        },
        end: {
          line: 113,
          column: 46
        }
      },
      "30": {
        start: {
          line: 114,
          column: 35
        },
        end: {
          line: 114,
          column: 75
        }
      },
      "31": {
        start: {
          line: 115,
          column: 41
        },
        end: {
          line: 118,
          column: 17
        }
      },
      "32": {
        start: {
          line: 115,
          column: 89
        },
        end: {
          line: 115,
          column: 102
        }
      },
      "33": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 122,
          column: 18
        }
      },
      "34": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 128,
          column: 14
        }
      },
      "35": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 142,
          column: 14
        }
      },
      "36": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 32
        }
      },
      "37": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 149,
          column: 14
        }
      },
      "38": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 154,
          column: 14
        }
      },
      "39": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 162,
          column: 14
        }
      },
      "40": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 167,
          column: 14
        }
      },
      "41": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 172,
          column: 14
        }
      },
      "42": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 180,
          column: 14
        }
      },
      "43": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 25
        }
      },
      "44": {
        start: {
          line: 185,
          column: 24
        },
        end: {
          line: 208,
          column: 1
        }
      },
      "45": {
        start: {
          line: 209,
          column: 32
        },
        end: {
          line: 513,
          column: 1
        }
      },
      "46": {
        start: {
          line: 210,
          column: 22
        },
        end: {
          line: 210,
          column: 47
        }
      },
      "47": {
        start: {
          line: 211,
          column: 30
        },
        end: {
          line: 220,
          column: 6
        }
      },
      "48": {
        start: {
          line: 222,
          column: 32
        },
        end: {
          line: 238,
          column: 20
        }
      },
      "49": {
        start: {
          line: 222,
          column: 56
        },
        end: {
          line: 238,
          column: 15
        }
      },
      "50": {
        start: {
          line: 223,
          column: 27
        },
        end: {
          line: 223,
          column: 87
        }
      },
      "51": {
        start: {
          line: 224,
          column: 27
        },
        end: {
          line: 224,
          column: 29
        }
      },
      "52": {
        start: {
          line: 225,
          column: 29
        },
        end: {
          line: 225,
          column: 31
        }
      },
      "53": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 228,
          column: 15
        }
      },
      "54": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 227,
          column: 52
        }
      },
      "55": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 231,
          column: 15
        }
      },
      "56": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 58
        }
      },
      "57": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 237,
          column: 20
        }
      },
      "58": {
        start: {
          line: 232,
          column: 30
        },
        end: {
          line: 237,
          column: 17
        }
      },
      "59": {
        start: {
          line: 240,
          column: 30
        },
        end: {
          line: 265,
          column: 6
        }
      },
      "60": {
        start: {
          line: 240,
          column: 54
        },
        end: {
          line: 260,
          column: 16
        }
      },
      "61": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 259,
          column: 13
        }
      },
      "62": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 258,
          column: 17
        }
      },
      "63": {
        start: {
          line: 243,
          column: 36
        },
        end: {
          line: 243,
          column: 58
        }
      },
      "64": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 255,
          column: 21
        }
      },
      "65": {
        start: {
          line: 245,
          column: 24
        },
        end: {
          line: 249,
          column: 32
        }
      },
      "66": {
        start: {
          line: 245,
          column: 42
        },
        end: {
          line: 249,
          column: 29
        }
      },
      "67": {
        start: {
          line: 250,
          column: 24
        },
        end: {
          line: 254,
          column: 27
        }
      },
      "68": {
        start: {
          line: 257,
          column: 20
        },
        end: {
          line: 257,
          column: 62
        }
      },
      "69": {
        start: {
          line: 267,
          column: 30
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "70": {
        start: {
          line: 268,
          column: 21
        },
        end: {
          line: 268,
          column: 36
        }
      },
      "71": {
        start: {
          line: 269,
          column: 23
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "72": {
        start: {
          line: 272,
          column: 22
        },
        end: {
          line: 272,
          column: 28
        }
      },
      "73": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "74": {
        start: {
          line: 273,
          column: 20
        },
        end: {
          line: 273,
          column: 21
        }
      },
      "75": {
        start: {
          line: 274,
          column: 24
        },
        end: {
          line: 274,
          column: 31
        }
      },
      "76": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 281,
          column: 13
        }
      },
      "77": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 34
        }
      },
      "78": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 280,
          column: 18
        }
      },
      "79": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 35
        }
      },
      "80": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 47
        }
      },
      "81": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 22
        }
      },
      "82": {
        start: {
          line: 288,
          column: 38
        },
        end: {
          line: 293,
          column: 10
        }
      },
      "83": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 292,
          column: 16
        }
      },
      "84": {
        start: {
          line: 289,
          column: 44
        },
        end: {
          line: 292,
          column: 13
        }
      },
      "85": {
        start: {
          line: 295,
          column: 20
        },
        end: {
          line: 491,
          column: 5
        }
      },
      "86": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 317,
          column: 15
        }
      },
      "87": {
        start: {
          line: 298,
          column: 30
        },
        end: {
          line: 298,
          column: 71
        }
      },
      "88": {
        start: {
          line: 300,
          column: 35
        },
        end: {
          line: 305,
          column: 17
        }
      },
      "89": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 83
        }
      },
      "90": {
        start: {
          line: 308,
          column: 33
        },
        end: {
          line: 312,
          column: 17
        }
      },
      "91": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 45
        }
      },
      "92": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 315,
          column: 43
        }
      },
      "93": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 32
        }
      },
      "94": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 62
        }
      },
      "95": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 66
        }
      },
      "96": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 331,
          column: 46
        }
      },
      "97": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 336,
          column: 80
        }
      },
      "98": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 83
        }
      },
      "99": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 83
        }
      },
      "100": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 86
        }
      },
      "101": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 44
        }
      },
      "102": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 360,
          column: 40
        }
      },
      "103": {
        start: {
          line: 360,
          column: 27
        },
        end: {
          line: 360,
          column: 40
        }
      },
      "104": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 364,
          column: 20
        }
      },
      "105": {
        start: {
          line: 361,
          column: 30
        },
        end: {
          line: 364,
          column: 17
        }
      },
      "106": {
        start: {
          line: 365,
          column: 12
        },
        end: {
          line: 404,
          column: 13
        }
      },
      "107": {
        start: {
          line: 366,
          column: 35
        },
        end: {
          line: 366,
          column: 101
        }
      },
      "108": {
        start: {
          line: 367,
          column: 16
        },
        end: {
          line: 375,
          column: 17
        }
      },
      "109": {
        start: {
          line: 368,
          column: 20
        },
        end: {
          line: 373,
          column: 23
        }
      },
      "110": {
        start: {
          line: 374,
          column: 20
        },
        end: {
          line: 374,
          column: 33
        }
      },
      "111": {
        start: {
          line: 376,
          column: 32
        },
        end: {
          line: 376,
          column: 58
        }
      },
      "112": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 388,
          column: 17
        }
      },
      "113": {
        start: {
          line: 378,
          column: 20
        },
        end: {
          line: 382,
          column: 28
        }
      },
      "114": {
        start: {
          line: 378,
          column: 38
        },
        end: {
          line: 382,
          column: 25
        }
      },
      "115": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 387,
          column: 23
        }
      },
      "116": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 389,
          column: 31
        }
      },
      "117": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 64
        }
      },
      "118": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 397,
          column: 19
        }
      },
      "119": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 29
        }
      },
      "120": {
        start: {
          line: 400,
          column: 16
        },
        end: {
          line: 403,
          column: 24
        }
      },
      "121": {
        start: {
          line: 400,
          column: 34
        },
        end: {
          line: 403,
          column: 21
        }
      },
      "122": {
        start: {
          line: 411,
          column: 12
        },
        end: {
          line: 411,
          column: 42
        }
      },
      "123": {
        start: {
          line: 411,
          column: 29
        },
        end: {
          line: 411,
          column: 42
        }
      },
      "124": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 436,
          column: 13
        }
      },
      "125": {
        start: {
          line: 413,
          column: 32
        },
        end: {
          line: 413,
          column: 60
        }
      },
      "126": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 425,
          column: 17
        }
      },
      "127": {
        start: {
          line: 415,
          column: 20
        },
        end: {
          line: 419,
          column: 28
        }
      },
      "128": {
        start: {
          line: 415,
          column: 38
        },
        end: {
          line: 419,
          column: 25
        }
      },
      "129": {
        start: {
          line: 420,
          column: 20
        },
        end: {
          line: 424,
          column: 23
        }
      },
      "130": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 426,
          column: 31
        }
      },
      "131": {
        start: {
          line: 428,
          column: 16
        },
        end: {
          line: 428,
          column: 59
        }
      },
      "132": {
        start: {
          line: 429,
          column: 16
        },
        end: {
          line: 434,
          column: 19
        }
      },
      "133": {
        start: {
          line: 435,
          column: 16
        },
        end: {
          line: 435,
          column: 29
        }
      },
      "134": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 452,
          column: 15
        }
      },
      "135": {
        start: {
          line: 458,
          column: 31
        },
        end: {
          line: 463,
          column: 13
        }
      },
      "136": {
        start: {
          line: 464,
          column: 39
        },
        end: {
          line: 464,
          column: 96
        }
      },
      "137": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 470,
          column: 20
        }
      },
      "138": {
        start: {
          line: 465,
          column: 30
        },
        end: {
          line: 470,
          column: 17
        }
      },
      "139": {
        start: {
          line: 471,
          column: 12
        },
        end: {
          line: 471,
          column: 52
        }
      },
      "140": {
        start: {
          line: 476,
          column: 12
        },
        end: {
          line: 479,
          column: 20
        }
      },
      "141": {
        start: {
          line: 476,
          column: 30
        },
        end: {
          line: 479,
          column: 17
        }
      },
      "142": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 489,
          column: 15
        }
      },
      "143": {
        start: {
          line: 485,
          column: 16
        },
        end: {
          line: 488,
          column: 18
        }
      },
      "144": {
        start: {
          line: 493,
          column: 4
        },
        end: {
          line: 498,
          column: 7
        }
      },
      "145": {
        start: {
          line: 494,
          column: 8
        },
        end: {
          line: 494,
          column: 40
        }
      },
      "146": {
        start: {
          line: 500,
          column: 4
        },
        end: {
          line: 508,
          column: 7
        }
      },
      "147": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 504,
          column: 10
        }
      },
      "148": {
        start: {
          line: 502,
          column: 12
        },
        end: {
          line: 502,
          column: 41
        }
      },
      "149": {
        start: {
          line: 503,
          column: 12
        },
        end: {
          line: 503,
          column: 39
        }
      },
      "150": {
        start: {
          line: 509,
          column: 4
        },
        end: {
          line: 512,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 21,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "contractFormReducer",
        decl: {
          start: {
            line: 47,
            column: 9
          },
          end: {
            line: 47,
            column: 28
          }
        },
        loc: {
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 47
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 115,
            column: 84
          },
          end: {
            line: 115,
            column: 85
          }
        },
        loc: {
          start: {
            line: 115,
            column: 89
          },
          end: {
            line: 115,
            column: 102
          }
        },
        line: 115
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 209,
            column: 32
          },
          end: {
            line: 209,
            column: 33
          }
        },
        loc: {
          start: {
            line: 209,
            column: 69
          },
          end: {
            line: 513,
            column: 1
          }
        },
        line: 209
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 222,
            column: 52
          },
          end: {
            line: 222,
            column: 53
          }
        },
        loc: {
          start: {
            line: 222,
            column: 56
          },
          end: {
            line: 238,
            column: 15
          }
        },
        line: 222
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 222,
            column: 79
          },
          end: {
            line: 222,
            column: 80
          }
        },
        loc: {
          start: {
            line: 222,
            column: 87
          },
          end: {
            line: 238,
            column: 9
          }
        },
        line: 222
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 226,
            column: 34
          },
          end: {
            line: 226,
            column: 35
          }
        },
        loc: {
          start: {
            line: 226,
            column: 43
          },
          end: {
            line: 228,
            column: 13
          }
        },
        line: 226
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 229,
            column: 36
          },
          end: {
            line: 229,
            column: 37
          }
        },
        loc: {
          start: {
            line: 229,
            column: 47
          },
          end: {
            line: 231,
            column: 13
          }
        },
        line: 229
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 232,
            column: 21
          },
          end: {
            line: 232,
            column: 22
          }
        },
        loc: {
          start: {
            line: 232,
            column: 30
          },
          end: {
            line: 237,
            column: 17
          }
        },
        line: 232
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 240,
            column: 50
          },
          end: {
            line: 240,
            column: 51
          }
        },
        loc: {
          start: {
            line: 240,
            column: 54
          },
          end: {
            line: 260,
            column: 16
          }
        },
        line: 240
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 240,
            column: 77
          },
          end: {
            line: 240,
            column: 78
          }
        },
        loc: {
          start: {
            line: 240,
            column: 91
          },
          end: {
            line: 260,
            column: 9
          }
        },
        line: 240
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 245,
            column: 33
          },
          end: {
            line: 245,
            column: 34
          }
        },
        loc: {
          start: {
            line: 245,
            column: 42
          },
          end: {
            line: 249,
            column: 29
          }
        },
        line: 245
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 267,
            column: 54
          },
          end: {
            line: 267,
            column: 55
          }
        },
        loc: {
          start: {
            line: 267,
            column: 74
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 267
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 288,
            column: 62
          },
          end: {
            line: 288,
            column: 63
          }
        },
        loc: {
          start: {
            line: 288,
            column: 89
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 288
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 289,
            column: 30
          },
          end: {
            line: 289,
            column: 31
          }
        },
        loc: {
          start: {
            line: 289,
            column: 44
          },
          end: {
            line: 292,
            column: 13
          }
        },
        line: 289
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 296,
            column: 45
          },
          end: {
            line: 296,
            column: 46
          }
        },
        loc: {
          start: {
            line: 296,
            column: 60
          },
          end: {
            line: 318,
            column: 9
          }
        },
        line: 296
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 297,
            column: 21
          },
          end: {
            line: 297,
            column: 22
          }
        },
        loc: {
          start: {
            line: 297,
            column: 29
          },
          end: {
            line: 317,
            column: 13
          }
        },
        line: 297
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 324,
            column: 50
          },
          end: {
            line: 324,
            column: 51
          }
        },
        loc: {
          start: {
            line: 324,
            column: 66
          },
          end: {
            line: 326,
            column: 9
          }
        },
        line: 324
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 327,
            column: 54
          },
          end: {
            line: 327,
            column: 55
          }
        },
        loc: {
          start: {
            line: 327,
            column: 70
          },
          end: {
            line: 329,
            column: 9
          }
        },
        line: 327
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 330,
            column: 53
          },
          end: {
            line: 330,
            column: 54
          }
        },
        loc: {
          start: {
            line: 330,
            column: 69
          },
          end: {
            line: 332,
            column: 9
          }
        },
        line: 330
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 333,
            column: 46
          },
          end: {
            line: 333,
            column: 47
          }
        },
        loc: {
          start: {
            line: 333,
            column: 50
          },
          end: {
            line: 337,
            column: 9
          }
        },
        line: 333
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 338,
            column: 49
          },
          end: {
            line: 338,
            column: 50
          }
        },
        loc: {
          start: {
            line: 338,
            column: 55
          },
          end: {
            line: 341,
            column: 9
          }
        },
        line: 338
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 342,
            column: 49
          },
          end: {
            line: 342,
            column: 50
          }
        },
        loc: {
          start: {
            line: 342,
            column: 69
          },
          end: {
            line: 345,
            column: 9
          }
        },
        line: 342
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 346,
            column: 46
          },
          end: {
            line: 346,
            column: 47
          }
        },
        loc: {
          start: {
            line: 346,
            column: 50
          },
          end: {
            line: 348,
            column: 9
          }
        },
        line: 346
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 351,
            column: 47
          },
          end: {
            line: 351,
            column: 48
          }
        },
        loc: {
          start: {
            line: 351,
            column: 55
          },
          end: {
            line: 355,
            column: 9
          }
        },
        line: 351
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 359,
            column: 44
          },
          end: {
            line: 359,
            column: 45
          }
        },
        loc: {
          start: {
            line: 359,
            column: 54
          },
          end: {
            line: 405,
            column: 9
          }
        },
        line: 359
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 361,
            column: 21
          },
          end: {
            line: 361,
            column: 22
          }
        },
        loc: {
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 364,
            column: 17
          }
        },
        line: 361
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 378,
            column: 29
          },
          end: {
            line: 378,
            column: 30
          }
        },
        loc: {
          start: {
            line: 378,
            column: 38
          },
          end: {
            line: 382,
            column: 25
          }
        },
        line: 378
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 400,
            column: 25
          },
          end: {
            line: 400,
            column: 26
          }
        },
        loc: {
          start: {
            line: 400,
            column: 34
          },
          end: {
            line: 403,
            column: 21
          }
        },
        line: 400
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 410,
            column: 45
          },
          end: {
            line: 410,
            column: 46
          }
        },
        loc: {
          start: {
            line: 410,
            column: 55
          },
          end: {
            line: 437,
            column: 9
          }
        },
        line: 410
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 415,
            column: 29
          },
          end: {
            line: 415,
            column: 30
          }
        },
        loc: {
          start: {
            line: 415,
            column: 38
          },
          end: {
            line: 419,
            column: 25
          }
        },
        line: 415
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 442,
            column: 43
          },
          end: {
            line: 442,
            column: 44
          }
        },
        loc: {
          start: {
            line: 442,
            column: 47
          },
          end: {
            line: 453,
            column: 9
          }
        },
        line: 442
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 456,
            column: 46
          },
          end: {
            line: 456,
            column: 47
          }
        },
        loc: {
          start: {
            line: 456,
            column: 58
          },
          end: {
            line: 472,
            column: 9
          }
        },
        line: 456
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 465,
            column: 21
          },
          end: {
            line: 465,
            column: 22
          }
        },
        loc: {
          start: {
            line: 465,
            column: 30
          },
          end: {
            line: 470,
            column: 17
          }
        },
        line: 465
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 475,
            column: 48
          },
          end: {
            line: 475,
            column: 49
          }
        },
        loc: {
          start: {
            line: 475,
            column: 52
          },
          end: {
            line: 480,
            column: 9
          }
        },
        line: 475
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 476,
            column: 21
          },
          end: {
            line: 476,
            column: 22
          }
        },
        loc: {
          start: {
            line: 476,
            column: 30
          },
          end: {
            line: 479,
            column: 17
          }
        },
        line: 476
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 481,
            column: 49
          },
          end: {
            line: 481,
            column: 50
          }
        },
        loc: {
          start: {
            line: 481,
            column: 53
          },
          end: {
            line: 490,
            column: 9
          }
        },
        line: 481
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 484,
            column: 21
          },
          end: {
            line: 484,
            column: 22
          }
        },
        loc: {
          start: {
            line: 484,
            column: 29
          },
          end: {
            line: 489,
            column: 13
          }
        },
        line: 484
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 493,
            column: 26
          },
          end: {
            line: 493,
            column: 27
          }
        },
        loc: {
          start: {
            line: 493,
            column: 30
          },
          end: {
            line: 495,
            column: 5
          }
        },
        line: 493
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 500,
            column: 26
          },
          end: {
            line: 500,
            column: 27
          }
        },
        loc: {
          start: {
            line: 500,
            column: 30
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 500
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 501,
            column: 15
          },
          end: {
            line: 501,
            column: 16
          }
        },
        loc: {
          start: {
            line: 501,
            column: 19
          },
          end: {
            line: 504,
            column: 9
          }
        },
        line: 501
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 18,
            column: 38
          }
        }, {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 11
          },
          end: {
            line: 18,
            column: 14
          }
        }, {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 32
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 53,
            column: 14
          }
        }, {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 58,
            column: 14
          }
        }, {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 68,
            column: 14
          }
        }, {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 95,
            column: 14
          }
        }, {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 100,
            column: 14
          }
        }, {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 105,
            column: 14
          }
        }, {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 110,
            column: 14
          }
        }, {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 128,
            column: 14
          }
        }, {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 142,
            column: 14
          }
        }, {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 144,
            column: 32
          }
        }, {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 149,
            column: 14
          }
        }, {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 154,
            column: 14
          }
        }, {
          start: {
            line: 155,
            column: 8
          },
          end: {
            line: 162,
            column: 14
          }
        }, {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 167,
            column: 14
          }
        }, {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 172,
            column: 14
          }
        }, {
          start: {
            line: 173,
            column: 8
          },
          end: {
            line: 180,
            column: 14
          }
        }, {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 182,
            column: 25
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 78,
            column: 20
          },
          end: {
            line: 80,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 20
          },
          end: {
            line: 80,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "4": {
        loc: {
          start: {
            line: 115,
            column: 41
          },
          end: {
            line: 118,
            column: 17
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 54
          },
          end: {
            line: 115,
            column: 103
          }
        }, {
          start: {
            line: 115,
            column: 106
          },
          end: {
            line: 118,
            column: 17
          }
        }],
        line: 115
      },
      "5": {
        loc: {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 127
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 134,
            column: 107
          },
          end: {
            line: 134,
            column: 117
          }
        }, {
          start: {
            line: 134,
            column: 120
          },
          end: {
            line: 134,
            column: 127
          }
        }],
        line: 134
      },
      "6": {
        loc: {
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 32
          },
          end: {
            line: 134,
            column: 66
          }
        }, {
          start: {
            line: 134,
            column: 70
          },
          end: {
            line: 134,
            column: 104
          }
        }],
        line: 134
      },
      "7": {
        loc: {
          start: {
            line: 212,
            column: 14
          },
          end: {
            line: 212,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 14
          },
          end: {
            line: 212,
            column: 25
          }
        }, {
          start: {
            line: 212,
            column: 29
          },
          end: {
            line: 212,
            column: 44
          }
        }],
        line: 212
      },
      "8": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 259,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "9": {
        loc: {
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 241,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 16
          },
          end: {
            line: 241,
            column: 26
          }
        }, {
          start: {
            line: 241,
            column: 30
          },
          end: {
            line: 241,
            column: 51
          }
        }, {
          start: {
            line: 241,
            column: 55
          },
          end: {
            line: 241,
            column: 68
          }
        }],
        line: 241
      },
      "10": {
        loc: {
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 255,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 20
          },
          end: {
            line: 255,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "11": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 281,
            column: 13
          }
        }, {
          start: {
            line: 277,
            column: 19
          },
          end: {
            line: 281,
            column: 13
          }
        }],
        line: 275
      },
      "12": {
        loc: {
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 16
          },
          end: {
            line: 275,
            column: 33
          }
        }, {
          start: {
            line: 275,
            column: 37
          },
          end: {
            line: 275,
            column: 69
          }
        }],
        line: 275
      },
      "13": {
        loc: {
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 360,
            column: 12
          },
          end: {
            line: 360,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 360
      },
      "14": {
        loc: {
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 375,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 367,
            column: 16
          },
          end: {
            line: 375,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 367
      },
      "15": {
        loc: {
          start: {
            line: 377,
            column: 16
          },
          end: {
            line: 388,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 377,
            column: 16
          },
          end: {
            line: 388,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 377
      },
      "16": {
        loc: {
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 411,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 411,
            column: 12
          },
          end: {
            line: 411,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 411
      },
      "17": {
        loc: {
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 425,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 414,
            column: 16
          },
          end: {
            line: 425,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 414
      },
      "18": {
        loc: {
          start: {
            line: 444,
            column: 22
          },
          end: {
            line: 444,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 444,
            column: 22
          },
          end: {
            line: 444,
            column: 33
          }
        }, {
          start: {
            line: 444,
            column: 37
          },
          end: {
            line: 444,
            column: 52
          }
        }],
        line: 444
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useEnhancedContractForm.ts"],
      sourcesContent: ["\"use client\"\n\nimport { useState, useCallback, useReducer, useMemo, useEffect } from 'react'\nimport type { EnhancedContract, PaymentMilestone } from '../services/EnhancedContractTemplateService'\nimport type { Contract } from '../schemas/contractInvoiceSchemas'\nimport { debounce } from 'lodash'\nimport { EnhancedValidator, ValidationResult } from '../utils/enhancedValidation'\nimport { useToast } from '../components/ui/use-toast'\nimport { getCurrentDateISO, addDaysToDate, normalizeDateFields } from '../utils/dateUtils'\n\n// Contract revision interface\nexport interface ContractRevision {\n  id: string\n  contractId: string\n  version: number\n  changes: Record<string, unknown>\n  comments?: string\n  createdBy: string\n  createdAt: string\n  previousVersion?: number\n}\n\n// Contract form state interface\nexport interface ContractFormState {\n  // Form data\n  contract: Partial<EnhancedContract>\n  \n  // Form status\n  isLoading: boolean\n  isSaving: boolean\n  isValid: boolean\n  isDirty: boolean\n  \n  // Validation\n  errors: Record<string, string>\n  warnings: Record<string, string>\n  \n  // UI state\n  activeSection: string\n  expandedSections: string[]\n  \n  // History and revisions\n  revisionHistory: ContractRevision[]\n  hasUnsavedChanges: boolean\n  \n  // Preview and export\n  previewMode: boolean\n  exportFormat: 'pdf' | 'docx' | 'html'\n  \n  // Approval workflow\n  approvalStatus: 'draft' | 'pending' | 'approved' | 'rejected'\n  currentApprover?: string\n  \n  // Digital signature\n  signatureStatus: {\n    clientSigned: boolean\n    vendorSigned: boolean\n    pendingSignatures: string[]\n  }\n}\n\n// Contract form actions interface\nexport interface ContractFormActions {\n  // Basic form actions\n  updateField: (field: string, value: unknown) => void\n  updateNestedField: (path: string, value: unknown) => void\n  resetForm: () => void\n  loadContract: (contract: EnhancedContract) => void\n  \n  // Validation\n  validateForm: () => boolean\n  validateField: (field: string) => boolean\n  clearErrors: () => void\n  \n  // Section management\n  setActiveSection: (section: string) => void\n  toggleSection: (section: string) => void\n  expandAllSections: () => void\n  collapseAllSections: () => void\n  \n  // Payment milestones\n  addPaymentMilestone: () => void\n  updatePaymentMilestone: (index: number, milestone: Partial<PaymentMilestone>) => void\n  removePaymentMilestone: (index: number) => void\n  reorderPaymentMilestones: (fromIndex: number, toIndex: number) => void\n  \n  // Contract operations\n  saveContract: () => Promise<boolean>\n  saveAsDraft: () => Promise<boolean>\n  submitForApproval: () => Promise<boolean>\n  approveContract: (comments?: string) => Promise<boolean>\n  rejectContract: (reason: string) => Promise<boolean>\n  \n  // Revisions\n  createRevision: (changes: Record<string, unknown>, comments?: string) => void\n  revertToRevision: (revisionId: string) => void\n  compareRevisions: (revisionId1: string, revisionId2: string) => Record<string, unknown>\n  \n  // Export and preview\n  togglePreviewMode: () => void\n  exportContract: (format: 'pdf' | 'docx' | 'html') => Promise<void>\n  generatePreview: () => string\n  \n  // Digital signature\n  requestSignature: (signerEmail: string, signerType: 'client' | 'vendor') => Promise<boolean>\n  checkSignatureStatus: () => Promise<void>\n  \n  // Templates\n  applyTemplate: (templateId: string) => void\n  saveAsTemplate: (templateName: string) => Promise<boolean>\n}\n\n// Form reducer action types\ntype ContractFormAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_SAVING'; payload: boolean }\n  | { type: 'UPDATE_FIELD'; payload: { field: string; value: unknown } }\n  | { type: 'UPDATE_NESTED_FIELD'; payload: { path: string; value: unknown } }\n  | { type: 'SET_ERRORS'; payload: Record<string, string> }\n  | { type: 'CLEAR_ERRORS' }\n  | { type: 'SET_WARNINGS'; payload: Record<string, string> }\n  | { type: 'SET_ACTIVE_SECTION'; payload: string }\n  | { type: 'TOGGLE_SECTION'; payload: string }\n  | { type: 'SET_EXPANDED_SECTIONS'; payload: string[] }\n  | { type: 'LOAD_CONTRACT'; payload: EnhancedContract }\n  | { type: 'RESET_FORM' }\n  | { type: 'SET_DIRTY'; payload: boolean }\n  | { type: 'SET_VALID'; payload: boolean }\n  | { type: 'ADD_REVISION'; payload: ContractRevision }\n  | { type: 'SET_PREVIEW_MODE'; payload: boolean }\n  | { type: 'SET_APPROVAL_STATUS'; payload: ContractFormState['approvalStatus'] }\n  | { type: 'UPDATE_SIGNATURE_STATUS'; payload: Partial<ContractFormState['signatureStatus']> }\n\n// Initial form state\nconst initialState: ContractFormState = {\n  contract: {},\n  isLoading: false,\n  isSaving: false,\n  isValid: false,\n  isDirty: false,\n  errors: {},\n  warnings: {},\n  activeSection: 'basic-info',\n  expandedSections: ['basic-info'],\n  revisionHistory: [],\n  hasUnsavedChanges: false,\n  previewMode: false,\n  exportFormat: 'pdf',\n  approvalStatus: 'draft',\n  signatureStatus: {\n    clientSigned: false,\n    vendorSigned: false,\n    pendingSignatures: []\n  }\n}\n\n// Form reducer\nfunction contractFormReducer(state: ContractFormState, action: ContractFormAction): ContractFormState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload }\n    \n    case 'SET_SAVING':\n      return { ...state, isSaving: action.payload }\n    \n    case 'UPDATE_FIELD':\n      return {\n        ...state,\n        contract: {\n          ...state.contract,\n          [action.payload.field]: action.payload.value\n        },\n        isDirty: true,\n        hasUnsavedChanges: true\n      }\n    \n    case 'UPDATE_NESTED_FIELD': {\n      const { path, value } = action.payload\n      const pathParts = path.split('.')\n      const updatedContract = { ...state.contract }\n      \n      let current: Record<string, unknown> = updatedContract as Record<string, unknown>\n      for (let i = 0; i < pathParts.length - 1; i++) {\n        if (!current[pathParts[i]]) {\n          current[pathParts[i]] = {}\n        }\n        current = current[pathParts[i]] as Record<string, unknown>\n      }\n      current[pathParts[pathParts.length - 1]] = value\n      \n      return {\n        ...state,\n        contract: updatedContract,\n        isDirty: true,\n        hasUnsavedChanges: true\n      }\n    }\n    \n    case 'SET_ERRORS':\n      return { ...state, errors: action.payload }\n    \n    case 'CLEAR_ERRORS':\n      return { ...state, errors: {} }\n    \n    case 'SET_WARNINGS':\n      return { ...state, warnings: action.payload }\n    \n    case 'SET_ACTIVE_SECTION':\n      return { ...state, activeSection: action.payload }\n    \n    case 'TOGGLE_SECTION': {\n      const section = action.payload\n      const isExpanded = state.expandedSections.includes(section)\n      const expandedSections = isExpanded\n        ? state.expandedSections.filter(s => s !== section)\n        : [...state.expandedSections, section]\n      \n      return { ...state, expandedSections }\n    }\n    \n    case 'SET_EXPANDED_SECTIONS':\n      return { ...state, expandedSections: action.payload }\n    \n    case 'LOAD_CONTRACT':\n      return {\n        ...state,\n        contract: action.payload,\n        revisionHistory: [],\n        approvalStatus: action.payload.status === 'signed' || action.payload.status === 'active' ? 'approved' : 'draft',\n        signatureStatus: {\n          clientSigned: false,\n          vendorSigned: false,\n          pendingSignatures: []\n        },\n        isDirty: false,\n        hasUnsavedChanges: false\n      }\n    \n    case 'RESET_FORM':\n      return initialState\n    \n    case 'SET_DIRTY':\n      return { ...state, isDirty: action.payload }\n    \n    case 'SET_VALID':\n      return { ...state, isValid: action.payload }\n    \n    case 'ADD_REVISION':\n      return {\n        ...state,\n        revisionHistory: [...state.revisionHistory, action.payload]\n      }\n    \n    case 'SET_PREVIEW_MODE':\n      return { ...state, previewMode: action.payload }\n    \n    case 'SET_APPROVAL_STATUS':\n      return { ...state, approvalStatus: action.payload }\n    \n    case 'UPDATE_SIGNATURE_STATUS':\n      return {\n        ...state,\n        signatureStatus: {\n          ...state.signatureStatus,\n          ...action.payload\n        }\n      }\n    \n    default:\n      return state\n  }\n}\n\nexport interface EnhancedContractFormState {\n  data: Partial<Contract>\n  errors: Record<string, string>\n  warnings: Record<string, string>\n  isValid: boolean\n  isSubmitting: boolean\n  isDirty: boolean\n  lastSaved: Date | null\n  autoSaveEnabled: boolean\n}\n\nexport interface EnhancedContractFormActions {\n  updateField: (path: string, value: any) => void\n  updateClientInfo: (field: string, value: any) => void\n  updateProjectDetails: (field: string, value: any) => void\n  updateContractTerms: (field: string, value: any) => void\n  addMilestone: () => void\n  removeMilestone: (id: string) => void\n  updateMilestone: (id: string, field: string, value: any) => void\n  validateForm: () => ValidationResult\n  validateField: (path: string) => void\n  submitForm: () => Promise<boolean>\n  saveAsDraft: () => Promise<boolean>\n  resetForm: () => void\n  loadContract: (contract: Partial<Contract>) => void\n  toggleAutoSave: () => void\n  calculateTotals: () => void\n}\n\nconst initialFormData: Partial<Contract> = {\n  clientInfo: {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    company: \"\",\n    address: \"\", // Contract schema expects string, not object\n  },\n  projectDetails: {\n    title: \"\",\n    description: \"\",\n    // Removed scope, deliverables, timeline as they don't exist in Contract schema\n  },\n  contractTitle: \"\",\n  clientName: \"\",\n  clientEmail: \"\",\n  startDate: getCurrentDateISO(),\n  endDate: addDaysToDate(getCurrentDateISO(), 30),\n  terms: \"\",\n  totalAmount: 0,\n  paymentSchedule: \"\",\n  scopeOfWork: \"\",\n  status: \"draft\",\n  priority: \"medium\",\n}\n\nexport const useEnhancedContractForm = (\n  initialData?: Partial<Contract>,\n  onSubmit?: (data: Contract) => Promise<boolean>,\n  onAutoSave?: (data: Partial<Contract>) => Promise<boolean>,\n): [EnhancedContractFormState, EnhancedContractFormActions] => {\n  const { toast } = useToast()\n\n  const [state, setState] = useState<EnhancedContractFormState>({\n    data: initialData || initialFormData,\n    errors: {},\n    warnings: {},\n    isValid: false,\n    isSubmitting: false,\n    isDirty: false,\n    lastSaved: null,\n    autoSaveEnabled: true,\n  })\n\n  // Debounced validation\n  const debouncedValidation = useMemo(\n    () =>\n      debounce((data: Partial<Contract>) => {\n        const result = EnhancedValidator.validateContract(data)\n\n        const errors: Record<string, string> = {}\n        const warnings: Record<string, string> = {}\n\n        result.errors.forEach((error: any) => {\n          errors[error.field] = error.message\n        })\n\n        result.warnings.forEach((warning: any) => {\n          warnings[warning.field] = warning.message\n        })\n\n        setState((prev) => ({\n          ...prev,\n          errors,\n          warnings,\n          isValid: result.isValid,\n        }))\n      }, 300),\n    [],\n  )\n\n  // Debounced auto-save\n  const debouncedAutoSave = useMemo(\n    () =>\n      debounce(async (data: Partial<Contract>) => {\n        if (onAutoSave && state.autoSaveEnabled && state.isDirty) {\n          try {\n            const success = await onAutoSave(data)\n            if (success) {\n              setState((prev) => ({\n                ...prev,\n                lastSaved: new Date(),\n                isDirty: false,\n              }))\n              toast({ type: \"success\", title: \"Auto-save\", description: \"Draft saved automatically\" })\n            }\n          } catch (error) {\n            console.error(\"Auto-save failed:\", error)\n          }\n        }\n      }, 2000),\n    [onAutoSave, state.autoSaveEnabled, state.isDirty, toast],\n  )\n\n  // Update field helper\n  const updateNestedField = useCallback((obj: any, path: string, value: any) => {\n    const keys = path.split(\".\")\n    const result = { ...obj }\n    let current = result\n\n    for (let i = 0; i < keys.length - 1; i++) {\n      const key = keys[i]\n      if (!(key in current) || typeof current[key] !== \"object\") {\n        current[key] = {}\n      } else {\n        current[key] = { ...current[key] }\n      }\n      current = current[key]\n    }\n\n    current[keys[keys.length - 1]] = value\n    return result\n  }, [])\n\n  // Calculate milestone amounts based on percentages\n  const calculateMilestoneAmounts = useCallback((milestones: PaymentMilestone[], totalAmount: number) => {\n    return milestones.map((milestone) => ({\n      ...milestone,\n      amount: Math.round((milestone.percentage / 100) * totalAmount * 100) / 100,\n    }))\n  }, [])\n\n  // Actions\n  const actions: EnhancedContractFormActions = {\n    updateField: useCallback(\n      (path: string, value: any) => {\n        setState((prev) => {\n          let newData = updateNestedField(prev.data, path, value)\n\n          // Normalize date fields for consistent storage\n          const dateFields = ['startDate', 'endDate', 'createdAt', 'updatedAt']\n          newData = normalizeDateFields(newData, dateFields)\n\n          // For basic Contract schema, no complex milestone calculations needed\n\n          const newState = {\n            ...prev,\n            data: newData,\n            isDirty: true,\n          }\n\n          // Trigger validation and auto-save\n          debouncedValidation(newData)\n          debouncedAutoSave(newData)\n\n          return newState\n        })\n      },\n      [updateNestedField, calculateMilestoneAmounts, debouncedValidation, debouncedAutoSave],\n    ),\n\n    updateClientInfo: useCallback((field: string, value: any) => {\n      actions.updateField(`clientInfo.${field}`, value)\n    }, []),\n\n    updateProjectDetails: useCallback((field: string, value: any) => {\n      actions.updateField(`projectDetails.${field}`, value)\n    }, []),\n\n    updateContractTerms: useCallback((field: string, value: any) => {\n      actions.updateField(field, value)\n    }, []),\n\n    addMilestone: useCallback(() => {\n      // Basic Contract schema doesn't support complex milestones\n      // This is a placeholder for compatibility\n      console.warn('addMilestone not supported in basic Contract schema')\n    }, []),\n\n    removeMilestone: useCallback(\n      (id: string) => {\n        // Basic Contract schema doesn't support complex milestones\n        console.warn('removeMilestone not supported in basic Contract schema')\n      },\n      [],\n    ),\n\n    updateMilestone: useCallback(\n      (id: string, field: string, value: any) => {\n        // Basic Contract schema doesn't support complex milestones\n        console.warn('updateMilestone not supported in basic Contract schema')\n      },\n      [],\n    ),\n\n    validateForm: useCallback(() => {\n      return EnhancedValidator.validateContract(state.data)\n    }, [state.data]),\n\n    validateField: useCallback(\n      (path: string) => {\n        // Simplified field validation for basic Contract schema\n        // Field-specific validation would go here\n        debouncedValidation(state.data)\n      },\n      [state.data, debouncedValidation],\n    ),\n\n    submitForm: useCallback(async () => {\n      if (!onSubmit) return false\n\n      setState((prev) => ({ ...prev, isSubmitting: true }))\n\n      try {\n        const validation = EnhancedValidator.validateContract(state.data)\n\n        if (!validation.isValid) {\n          toast({ type: \"error\", title: \"Validation Error\", description: \"Please fix validation errors before submitting\", variant: \"destructive\" })\n          return false\n        }\n\n        const success = await onSubmit(state.data as Contract)\n\n        if (success) {\n          setState((prev) => ({\n            ...prev,\n            isDirty: false,\n            lastSaved: new Date(),\n          }))\n          toast({ type: \"success\", title: \"Success\", description: \"Contract submitted successfully\" })\n        }\n\n        return success\n      } catch (error) {\n        console.error(\"Form submission failed:\", error)\n        toast({ type: \"error\", title: \"Error\", description: \"Failed to submit contract\", variant: \"destructive\" })\n        return false\n      } finally {\n        setState((prev) => ({ ...prev, isSubmitting: false }))\n      }\n    }, [onSubmit, state.data, toast]),\n\n    saveAsDraft: useCallback(async () => {\n      if (!onAutoSave) return false\n\n      try {\n        const success = await onAutoSave(state.data)\n\n        if (success) {\n          setState((prev) => ({\n            ...prev,\n            isDirty: false,\n            lastSaved: new Date(),\n          }))\n          toast({ type: \"success\", title: \"Success\", description: \"Draft saved successfully\" })\n        }\n\n        return success\n      } catch (error) {\n        console.error(\"Save draft failed:\", error)\n        toast({ type: \"error\", title: \"Error\", description: \"Failed to save draft\", variant: \"destructive\" })\n        return false\n      }\n    }, [onAutoSave, state.data, toast]),\n\n    resetForm: useCallback(() => {\n      setState({\n        data: initialData || initialFormData,\n        errors: {},\n        warnings: {},\n        isValid: false,\n        isSubmitting: false,\n        isDirty: false,\n        lastSaved: null,\n        autoSaveEnabled: true,\n      })\n    }, [initialData]),\n\n    loadContract: useCallback(\n      (contract: Partial<Contract>) => {\n        // Normalize date fields when loading contract data\n        const dateFields = ['startDate', 'endDate', 'createdAt', 'updatedAt']\n        const normalizedContract = normalizeDateFields(contract, dateFields)\n        \n        setState((prev) => ({\n          ...prev,\n          data: normalizedContract,\n          isDirty: false,\n          lastSaved: new Date(),\n        }))\n\n        debouncedValidation(normalizedContract)\n      },\n      [debouncedValidation],\n    ),\n\n    toggleAutoSave: useCallback(() => {\n      setState((prev) => ({\n        ...prev,\n        autoSaveEnabled: !prev.autoSaveEnabled,\n      }))\n    }, []),\n\n    calculateTotals: useCallback(() => {\n      // For the basic Contract schema, we don't have complex milestone structures\n      // This is a simplified version that just updates the total amount\n      setState((prev) => {\n        return {\n          ...prev,\n          isDirty: true,\n        }\n      })\n    }, []),\n  }\n\n  // Initial validation\n  useEffect(() => {\n    debouncedValidation(state.data)\n  }, [debouncedValidation, state.data])\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      debouncedValidation.cancel()\n      debouncedAutoSave.cancel()\n    }\n  }, [debouncedValidation, debouncedAutoSave])\n\n  return [state, actions]\n}\n"],
      names: ["useEnhancedContractForm", "initialState", "contract", "isLoading", "isSaving", "isValid", "isDirty", "errors", "warnings", "activeSection", "expandedSections", "revisionHistory", "hasUnsavedChanges", "previewMode", "exportFormat", "approvalStatus", "signatureStatus", "clientSigned", "vendorSigned", "pendingSignatures", "contractFormReducer", "state", "action", "type", "payload", "field", "value", "path", "pathParts", "split", "updatedContract", "current", "i", "length", "section", "isExpanded", "includes", "filter", "s", "status", "initialFormData", "clientInfo", "name", "email", "phone", "company", "address", "projectDetails", "title", "description", "contractTitle", "clientName", "clientEmail", "startDate", "getCurrentDateISO", "endDate", "addDaysToDate", "terms", "totalAmount", "paymentSchedule", "scopeOfWork", "priority", "initialData", "onSubmit", "onAutoSave", "toast", "useToast", "setState", "useState", "data", "isSubmitting", "lastSaved", "autoSaveEnabled", "debouncedValidation", "useMemo", "debounce", "result", "EnhancedValidator", "validateContract", "forEach", "error", "message", "warning", "prev", "debouncedAutoSave", "success", "Date", "console", "updateNestedField", "useCallback", "obj", "keys", "key", "calculateMilestoneAmounts", "milestones", "map", "milestone", "amount", "Math", "round", "percentage", "actions", "updateField", "newData", "dateFields", "normalizeDateFields", "newState", "updateClientInfo", "updateProjectDetails", "updateContractTerms", "addMilestone", "warn", "removeMilestone", "id", "updateMilestone", "validateForm", "validateField", "submitForm", "validation", "variant", "saveAsDraft", "resetForm", "loadContract", "normalizedContract", "toggleAutoSave", "calculateTotals", "useEffect", "cancel"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3b2d15ea4611002da76b13b266485b8af7d330e2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_sr24h3cd5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_sr24h3cd5();
cov_sr24h3cd5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_sr24h3cd5().s[1]++;
Object.defineProperty(exports, "useEnhancedContractForm", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_sr24h3cd5().f[0]++;
    cov_sr24h3cd5().s[2]++;
    return useEnhancedContractForm;
  }
});
const _react =
/* istanbul ignore next */
(cov_sr24h3cd5().s[3]++, require("react"));
const _debounce =
/* istanbul ignore next */
(/*#__PURE__*/cov_sr24h3cd5().s[4]++, _interop_require_default(require("lodash/debounce")));
const _enhancedValidation =
/* istanbul ignore next */
(cov_sr24h3cd5().s[5]++, require("../utils/enhancedValidation"));
const _usetoast =
/* istanbul ignore next */
(cov_sr24h3cd5().s[6]++, require("../components/ui/use-toast"));
const _dateUtils =
/* istanbul ignore next */
(cov_sr24h3cd5().s[7]++, require("../utils/dateUtils"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_sr24h3cd5().f[1]++;
  cov_sr24h3cd5().s[8]++;
  return /* istanbul ignore next */(cov_sr24h3cd5().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_sr24h3cd5().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_sr24h3cd5().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_sr24h3cd5().b[0][1]++, {
    default: obj
  });
}
// Initial form state
const initialState =
/* istanbul ignore next */
(cov_sr24h3cd5().s[9]++, {
  contract: {},
  isLoading: false,
  isSaving: false,
  isValid: false,
  isDirty: false,
  errors: {},
  warnings: {},
  activeSection: 'basic-info',
  expandedSections: ['basic-info'],
  revisionHistory: [],
  hasUnsavedChanges: false,
  previewMode: false,
  exportFormat: 'pdf',
  approvalStatus: 'draft',
  signatureStatus: {
    clientSigned: false,
    vendorSigned: false,
    pendingSignatures: []
  }
});
// Form reducer
function contractFormReducer(state, action) {
  /* istanbul ignore next */
  cov_sr24h3cd5().f[2]++;
  cov_sr24h3cd5().s[10]++;
  switch (action.type) {
    case 'SET_LOADING':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][0]++;
      cov_sr24h3cd5().s[11]++;
      return {
        ...state,
        isLoading: action.payload
      };
    case 'SET_SAVING':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][1]++;
      cov_sr24h3cd5().s[12]++;
      return {
        ...state,
        isSaving: action.payload
      };
    case 'UPDATE_FIELD':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][2]++;
      cov_sr24h3cd5().s[13]++;
      return {
        ...state,
        contract: {
          ...state.contract,
          [action.payload.field]: action.payload.value
        },
        isDirty: true,
        hasUnsavedChanges: true
      };
    case 'UPDATE_NESTED_FIELD':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][3]++;
      {
        const {
          path,
          value
        } =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[14]++, action.payload);
        const pathParts =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[15]++, path.split('.'));
        const updatedContract =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[16]++, {
          ...state.contract
        });
        let current =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[17]++, updatedContract);
        /* istanbul ignore next */
        cov_sr24h3cd5().s[18]++;
        for (let i =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[19]++, 0); i < pathParts.length - 1; i++) {
          /* istanbul ignore next */
          cov_sr24h3cd5().s[20]++;
          if (!current[pathParts[i]]) {
            /* istanbul ignore next */
            cov_sr24h3cd5().b[3][0]++;
            cov_sr24h3cd5().s[21]++;
            current[pathParts[i]] = {};
          } else
          /* istanbul ignore next */
          {
            cov_sr24h3cd5().b[3][1]++;
          }
          cov_sr24h3cd5().s[22]++;
          current = current[pathParts[i]];
        }
        /* istanbul ignore next */
        cov_sr24h3cd5().s[23]++;
        current[pathParts[pathParts.length - 1]] = value;
        /* istanbul ignore next */
        cov_sr24h3cd5().s[24]++;
        return {
          ...state,
          contract: updatedContract,
          isDirty: true,
          hasUnsavedChanges: true
        };
      }
    case 'SET_ERRORS':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][4]++;
      cov_sr24h3cd5().s[25]++;
      return {
        ...state,
        errors: action.payload
      };
    case 'CLEAR_ERRORS':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][5]++;
      cov_sr24h3cd5().s[26]++;
      return {
        ...state,
        errors: {}
      };
    case 'SET_WARNINGS':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][6]++;
      cov_sr24h3cd5().s[27]++;
      return {
        ...state,
        warnings: action.payload
      };
    case 'SET_ACTIVE_SECTION':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][7]++;
      cov_sr24h3cd5().s[28]++;
      return {
        ...state,
        activeSection: action.payload
      };
    case 'TOGGLE_SECTION':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][8]++;
      {
        const section =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[29]++, action.payload);
        const isExpanded =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[30]++, state.expandedSections.includes(section));
        const expandedSections =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[31]++, isExpanded ?
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[4][0]++, state.expandedSections.filter(s => {
          /* istanbul ignore next */
          cov_sr24h3cd5().f[3]++;
          cov_sr24h3cd5().s[32]++;
          return s !== section;
        })) :
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[4][1]++, [...state.expandedSections, section]));
        /* istanbul ignore next */
        cov_sr24h3cd5().s[33]++;
        return {
          ...state,
          expandedSections
        };
      }
    case 'SET_EXPANDED_SECTIONS':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][9]++;
      cov_sr24h3cd5().s[34]++;
      return {
        ...state,
        expandedSections: action.payload
      };
    case 'LOAD_CONTRACT':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][10]++;
      cov_sr24h3cd5().s[35]++;
      return {
        ...state,
        contract: action.payload,
        revisionHistory: [],
        approvalStatus:
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[6][0]++, action.payload.status === 'signed') ||
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[6][1]++, action.payload.status === 'active') ?
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[5][0]++, 'approved') :
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[5][1]++, 'draft'),
        signatureStatus: {
          clientSigned: false,
          vendorSigned: false,
          pendingSignatures: []
        },
        isDirty: false,
        hasUnsavedChanges: false
      };
    case 'RESET_FORM':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][11]++;
      cov_sr24h3cd5().s[36]++;
      return initialState;
    case 'SET_DIRTY':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][12]++;
      cov_sr24h3cd5().s[37]++;
      return {
        ...state,
        isDirty: action.payload
      };
    case 'SET_VALID':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][13]++;
      cov_sr24h3cd5().s[38]++;
      return {
        ...state,
        isValid: action.payload
      };
    case 'ADD_REVISION':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][14]++;
      cov_sr24h3cd5().s[39]++;
      return {
        ...state,
        revisionHistory: [...state.revisionHistory, action.payload]
      };
    case 'SET_PREVIEW_MODE':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][15]++;
      cov_sr24h3cd5().s[40]++;
      return {
        ...state,
        previewMode: action.payload
      };
    case 'SET_APPROVAL_STATUS':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][16]++;
      cov_sr24h3cd5().s[41]++;
      return {
        ...state,
        approvalStatus: action.payload
      };
    case 'UPDATE_SIGNATURE_STATUS':
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][17]++;
      cov_sr24h3cd5().s[42]++;
      return {
        ...state,
        signatureStatus: {
          ...state.signatureStatus,
          ...action.payload
        }
      };
    default:
      /* istanbul ignore next */
      cov_sr24h3cd5().b[2][18]++;
      cov_sr24h3cd5().s[43]++;
      return state;
  }
}
const initialFormData =
/* istanbul ignore next */
(cov_sr24h3cd5().s[44]++, {
  clientInfo: {
    name: "",
    email: "",
    phone: "",
    company: "",
    address: ""
  },
  projectDetails: {
    title: "",
    description: ""
  },
  contractTitle: "",
  clientName: "",
  clientEmail: "",
  startDate: (0, _dateUtils.getCurrentDateISO)(),
  endDate: (0, _dateUtils.addDaysToDate)((0, _dateUtils.getCurrentDateISO)(), 30),
  terms: "",
  totalAmount: 0,
  paymentSchedule: "",
  scopeOfWork: "",
  status: "draft",
  priority: "medium"
});
/* istanbul ignore next */
cov_sr24h3cd5().s[45]++;
const useEnhancedContractForm = (initialData, onSubmit, onAutoSave) => {
  /* istanbul ignore next */
  cov_sr24h3cd5().f[4]++;
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_sr24h3cd5().s[46]++, (0, _usetoast.useToast)());
  const [state, setState] =
  /* istanbul ignore next */
  (cov_sr24h3cd5().s[47]++, (0, _react.useState)({
    data:
    /* istanbul ignore next */
    (cov_sr24h3cd5().b[7][0]++, initialData) ||
    /* istanbul ignore next */
    (cov_sr24h3cd5().b[7][1]++, initialFormData),
    errors: {},
    warnings: {},
    isValid: false,
    isSubmitting: false,
    isDirty: false,
    lastSaved: null,
    autoSaveEnabled: true
  }));
  // Debounced validation
  const debouncedValidation =
  /* istanbul ignore next */
  (cov_sr24h3cd5().s[48]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_sr24h3cd5().f[5]++;
    cov_sr24h3cd5().s[49]++;
    return (0, _debounce.default)(data => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[6]++;
      const result =
      /* istanbul ignore next */
      (cov_sr24h3cd5().s[50]++, _enhancedValidation.EnhancedValidator.validateContract(data));
      const errors =
      /* istanbul ignore next */
      (cov_sr24h3cd5().s[51]++, {});
      const warnings =
      /* istanbul ignore next */
      (cov_sr24h3cd5().s[52]++, {});
      /* istanbul ignore next */
      cov_sr24h3cd5().s[53]++;
      result.errors.forEach(error => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[7]++;
        cov_sr24h3cd5().s[54]++;
        errors[error.field] = error.message;
      });
      /* istanbul ignore next */
      cov_sr24h3cd5().s[55]++;
      result.warnings.forEach(warning => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[8]++;
        cov_sr24h3cd5().s[56]++;
        warnings[warning.field] = warning.message;
      });
      /* istanbul ignore next */
      cov_sr24h3cd5().s[57]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[9]++;
        cov_sr24h3cd5().s[58]++;
        return {
          ...prev,
          errors,
          warnings,
          isValid: result.isValid
        };
      });
    }, 300);
  }, []));
  // Debounced auto-save
  const debouncedAutoSave =
  /* istanbul ignore next */
  (cov_sr24h3cd5().s[59]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_sr24h3cd5().f[10]++;
    cov_sr24h3cd5().s[60]++;
    return (0, _debounce.default)(async data => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[11]++;
      cov_sr24h3cd5().s[61]++;
      if (
      /* istanbul ignore next */
      (cov_sr24h3cd5().b[9][0]++, onAutoSave) &&
      /* istanbul ignore next */
      (cov_sr24h3cd5().b[9][1]++, state.autoSaveEnabled) &&
      /* istanbul ignore next */
      (cov_sr24h3cd5().b[9][2]++, state.isDirty)) {
        /* istanbul ignore next */
        cov_sr24h3cd5().b[8][0]++;
        cov_sr24h3cd5().s[62]++;
        try {
          const success =
          /* istanbul ignore next */
          (cov_sr24h3cd5().s[63]++, await onAutoSave(data));
          /* istanbul ignore next */
          cov_sr24h3cd5().s[64]++;
          if (success) {
            /* istanbul ignore next */
            cov_sr24h3cd5().b[10][0]++;
            cov_sr24h3cd5().s[65]++;
            setState(prev => {
              /* istanbul ignore next */
              cov_sr24h3cd5().f[12]++;
              cov_sr24h3cd5().s[66]++;
              return {
                ...prev,
                lastSaved: new Date(),
                isDirty: false
              };
            });
            /* istanbul ignore next */
            cov_sr24h3cd5().s[67]++;
            toast({
              type: "success",
              title: "Auto-save",
              description: "Draft saved automatically"
            });
          } else
          /* istanbul ignore next */
          {
            cov_sr24h3cd5().b[10][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_sr24h3cd5().s[68]++;
          console.error("Auto-save failed:", error);
        }
      } else
      /* istanbul ignore next */
      {
        cov_sr24h3cd5().b[8][1]++;
      }
    }, 2000);
  }, [onAutoSave, state.autoSaveEnabled, state.isDirty, toast]));
  // Update field helper
  const updateNestedField =
  /* istanbul ignore next */
  (cov_sr24h3cd5().s[69]++, (0, _react.useCallback)((obj, path, value) => {
    /* istanbul ignore next */
    cov_sr24h3cd5().f[13]++;
    const keys =
    /* istanbul ignore next */
    (cov_sr24h3cd5().s[70]++, path.split("."));
    const result =
    /* istanbul ignore next */
    (cov_sr24h3cd5().s[71]++, {
      ...obj
    });
    let current =
    /* istanbul ignore next */
    (cov_sr24h3cd5().s[72]++, result);
    /* istanbul ignore next */
    cov_sr24h3cd5().s[73]++;
    for (let i =
    /* istanbul ignore next */
    (cov_sr24h3cd5().s[74]++, 0); i < keys.length - 1; i++) {
      const key =
      /* istanbul ignore next */
      (cov_sr24h3cd5().s[75]++, keys[i]);
      /* istanbul ignore next */
      cov_sr24h3cd5().s[76]++;
      if (
      /* istanbul ignore next */
      (cov_sr24h3cd5().b[12][0]++, !(key in current)) ||
      /* istanbul ignore next */
      (cov_sr24h3cd5().b[12][1]++, typeof current[key] !== "object")) {
        /* istanbul ignore next */
        cov_sr24h3cd5().b[11][0]++;
        cov_sr24h3cd5().s[77]++;
        current[key] = {};
      } else {
        /* istanbul ignore next */
        cov_sr24h3cd5().b[11][1]++;
        cov_sr24h3cd5().s[78]++;
        current[key] = {
          ...current[key]
        };
      }
      /* istanbul ignore next */
      cov_sr24h3cd5().s[79]++;
      current = current[key];
    }
    /* istanbul ignore next */
    cov_sr24h3cd5().s[80]++;
    current[keys[keys.length - 1]] = value;
    /* istanbul ignore next */
    cov_sr24h3cd5().s[81]++;
    return result;
  }, []));
  // Calculate milestone amounts based on percentages
  const calculateMilestoneAmounts =
  /* istanbul ignore next */
  (cov_sr24h3cd5().s[82]++, (0, _react.useCallback)((milestones, totalAmount) => {
    /* istanbul ignore next */
    cov_sr24h3cd5().f[14]++;
    cov_sr24h3cd5().s[83]++;
    return milestones.map(milestone => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[15]++;
      cov_sr24h3cd5().s[84]++;
      return {
        ...milestone,
        amount: Math.round(milestone.percentage / 100 * totalAmount * 100) / 100
      };
    });
  }, []));
  // Actions
  const actions =
  /* istanbul ignore next */
  (cov_sr24h3cd5().s[85]++, {
    updateField: (0, _react.useCallback)((path, value) => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[16]++;
      cov_sr24h3cd5().s[86]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[17]++;
        let newData =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[87]++, updateNestedField(prev.data, path, value));
        // Normalize date fields for consistent storage
        const dateFields =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[88]++, ['startDate', 'endDate', 'createdAt', 'updatedAt']);
        /* istanbul ignore next */
        cov_sr24h3cd5().s[89]++;
        newData = (0, _dateUtils.normalizeDateFields)(newData, dateFields);
        // For basic Contract schema, no complex milestone calculations needed
        const newState =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[90]++, {
          ...prev,
          data: newData,
          isDirty: true
        });
        // Trigger validation and auto-save
        /* istanbul ignore next */
        cov_sr24h3cd5().s[91]++;
        debouncedValidation(newData);
        /* istanbul ignore next */
        cov_sr24h3cd5().s[92]++;
        debouncedAutoSave(newData);
        /* istanbul ignore next */
        cov_sr24h3cd5().s[93]++;
        return newState;
      });
    }, [updateNestedField, calculateMilestoneAmounts, debouncedValidation, debouncedAutoSave]),
    updateClientInfo: (0, _react.useCallback)((field, value) => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[18]++;
      cov_sr24h3cd5().s[94]++;
      actions.updateField(`clientInfo.${field}`, value);
    }, []),
    updateProjectDetails: (0, _react.useCallback)((field, value) => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[19]++;
      cov_sr24h3cd5().s[95]++;
      actions.updateField(`projectDetails.${field}`, value);
    }, []),
    updateContractTerms: (0, _react.useCallback)((field, value) => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[20]++;
      cov_sr24h3cd5().s[96]++;
      actions.updateField(field, value);
    }, []),
    addMilestone: (0, _react.useCallback)(() => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[21]++;
      cov_sr24h3cd5().s[97]++;
      // Basic Contract schema doesn't support complex milestones
      // This is a placeholder for compatibility
      console.warn('addMilestone not supported in basic Contract schema');
    }, []),
    removeMilestone: (0, _react.useCallback)(id => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[22]++;
      cov_sr24h3cd5().s[98]++;
      // Basic Contract schema doesn't support complex milestones
      console.warn('removeMilestone not supported in basic Contract schema');
    }, []),
    updateMilestone: (0, _react.useCallback)((id, field, value) => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[23]++;
      cov_sr24h3cd5().s[99]++;
      // Basic Contract schema doesn't support complex milestones
      console.warn('updateMilestone not supported in basic Contract schema');
    }, []),
    validateForm: (0, _react.useCallback)(() => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[24]++;
      cov_sr24h3cd5().s[100]++;
      return _enhancedValidation.EnhancedValidator.validateContract(state.data);
    }, [state.data]),
    validateField: (0, _react.useCallback)(path => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[25]++;
      cov_sr24h3cd5().s[101]++;
      // Simplified field validation for basic Contract schema
      // Field-specific validation would go here
      debouncedValidation(state.data);
    }, [state.data, debouncedValidation]),
    submitForm: (0, _react.useCallback)(async () => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[26]++;
      cov_sr24h3cd5().s[102]++;
      if (!onSubmit) {
        /* istanbul ignore next */
        cov_sr24h3cd5().b[13][0]++;
        cov_sr24h3cd5().s[103]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_sr24h3cd5().b[13][1]++;
      }
      cov_sr24h3cd5().s[104]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[27]++;
        cov_sr24h3cd5().s[105]++;
        return {
          ...prev,
          isSubmitting: true
        };
      });
      /* istanbul ignore next */
      cov_sr24h3cd5().s[106]++;
      try {
        const validation =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[107]++, _enhancedValidation.EnhancedValidator.validateContract(state.data));
        /* istanbul ignore next */
        cov_sr24h3cd5().s[108]++;
        if (!validation.isValid) {
          /* istanbul ignore next */
          cov_sr24h3cd5().b[14][0]++;
          cov_sr24h3cd5().s[109]++;
          toast({
            type: "error",
            title: "Validation Error",
            description: "Please fix validation errors before submitting",
            variant: "destructive"
          });
          /* istanbul ignore next */
          cov_sr24h3cd5().s[110]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_sr24h3cd5().b[14][1]++;
        }
        const success =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[111]++, await onSubmit(state.data));
        /* istanbul ignore next */
        cov_sr24h3cd5().s[112]++;
        if (success) {
          /* istanbul ignore next */
          cov_sr24h3cd5().b[15][0]++;
          cov_sr24h3cd5().s[113]++;
          setState(prev => {
            /* istanbul ignore next */
            cov_sr24h3cd5().f[28]++;
            cov_sr24h3cd5().s[114]++;
            return {
              ...prev,
              isDirty: false,
              lastSaved: new Date()
            };
          });
          /* istanbul ignore next */
          cov_sr24h3cd5().s[115]++;
          toast({
            type: "success",
            title: "Success",
            description: "Contract submitted successfully"
          });
        } else
        /* istanbul ignore next */
        {
          cov_sr24h3cd5().b[15][1]++;
        }
        cov_sr24h3cd5().s[116]++;
        return success;
      } catch (error) {
        /* istanbul ignore next */
        cov_sr24h3cd5().s[117]++;
        console.error("Form submission failed:", error);
        /* istanbul ignore next */
        cov_sr24h3cd5().s[118]++;
        toast({
          type: "error",
          title: "Error",
          description: "Failed to submit contract",
          variant: "destructive"
        });
        /* istanbul ignore next */
        cov_sr24h3cd5().s[119]++;
        return false;
      } finally {
        /* istanbul ignore next */
        cov_sr24h3cd5().s[120]++;
        setState(prev => {
          /* istanbul ignore next */
          cov_sr24h3cd5().f[29]++;
          cov_sr24h3cd5().s[121]++;
          return {
            ...prev,
            isSubmitting: false
          };
        });
      }
    }, [onSubmit, state.data, toast]),
    saveAsDraft: (0, _react.useCallback)(async () => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[30]++;
      cov_sr24h3cd5().s[122]++;
      if (!onAutoSave) {
        /* istanbul ignore next */
        cov_sr24h3cd5().b[16][0]++;
        cov_sr24h3cd5().s[123]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_sr24h3cd5().b[16][1]++;
      }
      cov_sr24h3cd5().s[124]++;
      try {
        const success =
        /* istanbul ignore next */
        (cov_sr24h3cd5().s[125]++, await onAutoSave(state.data));
        /* istanbul ignore next */
        cov_sr24h3cd5().s[126]++;
        if (success) {
          /* istanbul ignore next */
          cov_sr24h3cd5().b[17][0]++;
          cov_sr24h3cd5().s[127]++;
          setState(prev => {
            /* istanbul ignore next */
            cov_sr24h3cd5().f[31]++;
            cov_sr24h3cd5().s[128]++;
            return {
              ...prev,
              isDirty: false,
              lastSaved: new Date()
            };
          });
          /* istanbul ignore next */
          cov_sr24h3cd5().s[129]++;
          toast({
            type: "success",
            title: "Success",
            description: "Draft saved successfully"
          });
        } else
        /* istanbul ignore next */
        {
          cov_sr24h3cd5().b[17][1]++;
        }
        cov_sr24h3cd5().s[130]++;
        return success;
      } catch (error) {
        /* istanbul ignore next */
        cov_sr24h3cd5().s[131]++;
        console.error("Save draft failed:", error);
        /* istanbul ignore next */
        cov_sr24h3cd5().s[132]++;
        toast({
          type: "error",
          title: "Error",
          description: "Failed to save draft",
          variant: "destructive"
        });
        /* istanbul ignore next */
        cov_sr24h3cd5().s[133]++;
        return false;
      }
    }, [onAutoSave, state.data, toast]),
    resetForm: (0, _react.useCallback)(() => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[32]++;
      cov_sr24h3cd5().s[134]++;
      setState({
        data:
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[18][0]++, initialData) ||
        /* istanbul ignore next */
        (cov_sr24h3cd5().b[18][1]++, initialFormData),
        errors: {},
        warnings: {},
        isValid: false,
        isSubmitting: false,
        isDirty: false,
        lastSaved: null,
        autoSaveEnabled: true
      });
    }, [initialData]),
    loadContract: (0, _react.useCallback)(contract => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[33]++;
      // Normalize date fields when loading contract data
      const dateFields =
      /* istanbul ignore next */
      (cov_sr24h3cd5().s[135]++, ['startDate', 'endDate', 'createdAt', 'updatedAt']);
      const normalizedContract =
      /* istanbul ignore next */
      (cov_sr24h3cd5().s[136]++, (0, _dateUtils.normalizeDateFields)(contract, dateFields));
      /* istanbul ignore next */
      cov_sr24h3cd5().s[137]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[34]++;
        cov_sr24h3cd5().s[138]++;
        return {
          ...prev,
          data: normalizedContract,
          isDirty: false,
          lastSaved: new Date()
        };
      });
      /* istanbul ignore next */
      cov_sr24h3cd5().s[139]++;
      debouncedValidation(normalizedContract);
    }, [debouncedValidation]),
    toggleAutoSave: (0, _react.useCallback)(() => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[35]++;
      cov_sr24h3cd5().s[140]++;
      setState(prev => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[36]++;
        cov_sr24h3cd5().s[141]++;
        return {
          ...prev,
          autoSaveEnabled: !prev.autoSaveEnabled
        };
      });
    }, []),
    calculateTotals: (0, _react.useCallback)(() => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[37]++;
      cov_sr24h3cd5().s[142]++;
      // For the basic Contract schema, we don't have complex milestone structures
      // This is a simplified version that just updates the total amount
      setState(prev => {
        /* istanbul ignore next */
        cov_sr24h3cd5().f[38]++;
        cov_sr24h3cd5().s[143]++;
        return {
          ...prev,
          isDirty: true
        };
      });
    }, [])
  });
  // Initial validation
  /* istanbul ignore next */
  cov_sr24h3cd5().s[144]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_sr24h3cd5().f[39]++;
    cov_sr24h3cd5().s[145]++;
    debouncedValidation(state.data);
  }, [debouncedValidation, state.data]);
  // Cleanup
  /* istanbul ignore next */
  cov_sr24h3cd5().s[146]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_sr24h3cd5().f[40]++;
    cov_sr24h3cd5().s[147]++;
    return () => {
      /* istanbul ignore next */
      cov_sr24h3cd5().f[41]++;
      cov_sr24h3cd5().s[148]++;
      debouncedValidation.cancel();
      /* istanbul ignore next */
      cov_sr24h3cd5().s[149]++;
      debouncedAutoSave.cancel();
    };
  }, [debouncedValidation, debouncedAutoSave]);
  /* istanbul ignore next */
  cov_sr24h3cd5().s[150]++;
  return [state, actions];
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,