e233c5b7d46cf55bc12cae0a9cb3d68a
"use strict";

/* istanbul ignore next */
function cov_1492w1pvej() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\exportData.ts";
  var hash = "cf99bc41750f57cbcf76b4899cbac67b1560bf51";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\exportData.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 32
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "8": {
        start: {
          line: 25,
          column: 20
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "9": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "10": {
        start: {
          line: 28,
          column: 20
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "11": {
        start: {
          line: 30,
          column: 27
        },
        end: {
          line: 35,
          column: 24
        }
      },
      "12": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "13": {
        start: {
          line: 33,
          column: 30
        },
        end: {
          line: 33,
          column: 121
        }
      },
      "14": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 36
        }
      },
      "15": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 37,
          column: 40
        }
      },
      "16": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 42,
          column: 6
        }
      },
      "17": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 44,
          column: 44
        }
      },
      "18": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "19": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 35
        }
      },
      "20": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "21": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 37
        }
      },
      "22": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 49,
          column: 36
        }
      },
      "23": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "24": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 36
        }
      },
      "25": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 71,
          column: 1
        }
      },
      "26": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "27": {
        start: {
          line: 55,
          column: 49
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "28": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 49
        }
      },
      "29": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 85,
          column: 1
        }
      },
      "30": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 83,
          column: 11
        }
      },
      "31": {
        start: {
          line: 74,
          column: 45
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "32": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 47
        }
      },
      "33": {
        start: {
          line: 86,
          column: 26
        },
        end: {
          line: 98,
          column: 1
        }
      },
      "34": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 96,
          column: 11
        }
      },
      "35": {
        start: {
          line: 88,
          column: 47
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "36": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 20
          },
          end: {
            line: 25,
            column: 21
          }
        },
        loc: {
          start: {
            line: 25,
            column: 38
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 30,
            column: 21
          }
        },
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 35,
            column: 24
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 49
          },
          end: {
            line: 35,
            column: 13
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 53,
            column: 27
          },
          end: {
            line: 53,
            column: 28
          }
        },
        loc: {
          start: {
            line: 53,
            column: 38
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 53
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 55,
            column: 38
          },
          end: {
            line: 55,
            column: 39
          }
        },
        loc: {
          start: {
            line: 55,
            column: 49
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 55
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 72,
            column: 26
          }
        },
        loc: {
          start: {
            line: 72,
            column: 34
          },
          end: {
            line: 85,
            column: 1
          }
        },
        line: 72
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 74,
            column: 36
          },
          end: {
            line: 74,
            column: 37
          }
        },
        loc: {
          start: {
            line: 74,
            column: 45
          },
          end: {
            line: 83,
            column: 9
          }
        },
        line: 74
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 86,
            column: 26
          },
          end: {
            line: 86,
            column: 27
          }
        },
        loc: {
          start: {
            line: 86,
            column: 36
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 86
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 88,
            column: 37
          },
          end: {
            line: 88,
            column: 38
          }
        },
        loc: {
          start: {
            line: 88,
            column: 47
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 74
          },
          end: {
            line: 33,
            column: 114
          }
        }, {
          start: {
            line: 33,
            column: 117
          },
          end: {
            line: 33,
            column: 121
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 33,
            column: 54
          }
        }, {
          start: {
            line: 33,
            column: 58
          },
          end: {
            line: 33,
            column: 71
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 38
          }
        }, {
          start: {
            line: 77,
            column: 42
          },
          end: {
            line: 77,
            column: 54
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 78,
            column: 21
          },
          end: {
            line: 78,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 21
          },
          end: {
            line: 78,
            column: 34
          }
        }, {
          start: {
            line: 78,
            column: 38
          },
          end: {
            line: 78,
            column: 51
          }
        }],
        line: 78
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 27
          },
          end: {
            line: 81,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 27
          },
          end: {
            line: 81,
            column: 47
          }
        }, {
          start: {
            line: 81,
            column: 51
          },
          end: {
            line: 81,
            column: 57
          }
        }],
        line: 81
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 25
          },
          end: {
            line: 82,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 25
          },
          end: {
            line: 82,
            column: 43
          }
        }, {
          start: {
            line: 82,
            column: 47
          },
          end: {
            line: 82,
            column: 49
          }
        }],
        line: 82
      },
      "6": {
        loc: {
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 94,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 94,
            column: 48
          }
        }, {
          start: {
            line: 94,
            column: 52
          },
          end: {
            line: 94,
            column: 58
          }
        }],
        line: 94
      },
      "7": {
        loc: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 44
          }
        }, {
          start: {
            line: 95,
            column: 48
          },
          end: {
            line: 95,
            column: 50
          }
        }],
        line: 95
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\exportData.ts"],
      sourcesContent: ["import type { Client, Task, Event } from \"../types\"\n\nexport const exportToCSV = (data: Record<string, unknown>[], filename: string) => {\n  // Convert data to CSV format\n  const headers = Object.keys(data[0])\n  const csvRows = [\n    headers.join(\",\"),\n    ...data.map((row) =>\n      headers\n        .map((header) => {\n          const cell = row[header]\n          // Handle special cases like objects, arrays, etc.\n          const value = typeof cell === \"object\" && cell !== null ? JSON.stringify(cell).replace(/\"/g, '\"\"') : cell\n          return `\"${value}\"`\n        })\n        .join(\",\"),\n    ),\n  ]\n\n  const csvString = csvRows.join(\"\\n\")\n  const blob = new Blob([csvString], { type: \"text/csv;charset=utf-8;\" })\n\n  // Create download link\n  const link = document.createElement(\"a\")\n  const url = URL.createObjectURL(blob)\n  link.setAttribute(\"href\", url)\n  link.setAttribute(\"download\", `${filename}.csv`)\n  link.style.visibility = \"hidden\"\n  document.body.appendChild(link)\n  link.click()\n  document.body.removeChild(link)\n}\n\nexport const exportClientsToCSV = (clients: Client[]) => {\n  // Flatten client data for CSV export\n  const flattenedData = clients.map((client) => ({\n    id: client.id,\n    name: client.name,\n    contact: 'No contact info',\n    email: client.email,\n    phone: client.phone,\n    stage: client.stage,\n    value: client.value,\n    lastContact: 'Never',\n    nextFollowup: 'Not scheduled',\n    status: client.status,\n    source: client.source,\n    projectCount: client.projects.length,\n    noteCount: client.notes.length,\n  }))\n\n  exportToCSV(flattenedData, \"clients-export\")\n}\n\nexport const exportTasksToCSV = (tasks: Task[]) => {\n  // Flatten task data for CSV export\n  const flattenedData = tasks.map((task) => ({\n    id: task.id,\n    title: task.title,\n    assignee: task.assigned_to || 'Unassigned',\n    dueDate: task.due_date || 'No due date',\n    status: task.status,\n    priority: task.priority,\n    relatedToType: (task as any).relatedTo?.type || \"none\",\n    relatedToId: (task as any).relatedTo?.id || \"\",\n  }))\n\n  exportToCSV(flattenedData, \"tasks-export\")\n}\n\nexport const exportEventsToCSV = (events: Event[]) => {\n  // Flatten event data for CSV export\n  const flattenedData = events.map((event) => ({\n    id: event.id,\n    title: event.title,\n    date: event.date,\n    time: event.time,\n    type: event.type,\n    relatedToType: event.relatedTo?.type || \"none\",\n    relatedToId: event.relatedTo?.id || \"\",\n  }))\n\n  exportToCSV(flattenedData, \"events-export\")\n}\n"],
      names: ["exportClientsToCSV", "exportEventsToCSV", "exportTasksToCSV", "exportToCSV", "data", "filename", "headers", "Object", "keys", "csvRows", "join", "map", "row", "header", "cell", "value", "JSON", "stringify", "replace", "csvString", "blob", "Blob", "type", "link", "document", "createElement", "url", "URL", "createObjectURL", "setAttribute", "style", "visibility", "body", "appendChild", "click", "removeChild", "clients", "flattenedData", "client", "id", "name", "contact", "email", "phone", "stage", "lastContact", "nextFollowup", "status", "source", "projectCount", "projects", "length", "noteCount", "notes", "tasks", "task", "title", "assignee", "assigned_to", "dueDate", "due_date", "priority", "relatedToType", "relatedTo", "relatedToId", "events", "event", "date", "time"],
      mappings: ";;;;;;;;;;;QAiCaA;eAAAA;;QAqCAC;eAAAA;;QAhBAC;eAAAA;;QApDAC;eAAAA;;;AAAN,MAAMA,cAAc,CAACC,MAAiCC;IAC3D,6BAA6B;IAC7B,MAAMC,UAAUC,OAAOC,IAAI,CAACJ,IAAI,CAAC,EAAE;IACnC,MAAMK,UAAU;QACdH,QAAQI,IAAI,CAAC;WACVN,KAAKO,GAAG,CAAC,CAACC,MACXN,QACGK,GAAG,CAAC,CAACE;gBACJ,MAAMC,OAAOF,GAAG,CAACC,OAAO;gBACxB,kDAAkD;gBAClD,MAAME,QAAQ,OAAOD,SAAS,YAAYA,SAAS,OAAOE,KAAKC,SAAS,CAACH,MAAMI,OAAO,CAAC,MAAM,QAAQJ;gBACrG,OAAO,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC;YACrB,GACCL,IAAI,CAAC;KAEX;IAED,MAAMS,YAAYV,QAAQC,IAAI,CAAC;IAC/B,MAAMU,OAAO,IAAIC,KAAK;QAACF;KAAU,EAAE;QAAEG,MAAM;IAA0B;IAErE,uBAAuB;IACvB,MAAMC,OAAOC,SAASC,aAAa,CAAC;IACpC,MAAMC,MAAMC,IAAIC,eAAe,CAACR;IAChCG,KAAKM,YAAY,CAAC,QAAQH;IAC1BH,KAAKM,YAAY,CAAC,YAAY,GAAGxB,SAAS,IAAI,CAAC;IAC/CkB,KAAKO,KAAK,CAACC,UAAU,GAAG;IACxBP,SAASQ,IAAI,CAACC,WAAW,CAACV;IAC1BA,KAAKW,KAAK;IACVV,SAASQ,IAAI,CAACG,WAAW,CAACZ;AAC5B;AAEO,MAAMvB,qBAAqB,CAACoC;IACjC,qCAAqC;IACrC,MAAMC,gBAAgBD,QAAQzB,GAAG,CAAC,CAAC2B,SAAY,CAAA;YAC7CC,IAAID,OAAOC,EAAE;YACbC,MAAMF,OAAOE,IAAI;YACjBC,SAAS;YACTC,OAAOJ,OAAOI,KAAK;YACnBC,OAAOL,OAAOK,KAAK;YACnBC,OAAON,OAAOM,KAAK;YACnB7B,OAAOuB,OAAOvB,KAAK;YACnB8B,aAAa;YACbC,cAAc;YACdC,QAAQT,OAAOS,MAAM;YACrBC,QAAQV,OAAOU,MAAM;YACrBC,cAAcX,OAAOY,QAAQ,CAACC,MAAM;YACpCC,WAAWd,OAAOe,KAAK,CAACF,MAAM;QAChC,CAAA;IAEAhD,YAAYkC,eAAe;AAC7B;AAEO,MAAMnC,mBAAmB,CAACoD;IAC/B,mCAAmC;IACnC,MAAMjB,gBAAgBiB,MAAM3C,GAAG,CAAC,CAAC4C,OAAU,CAAA;YACzChB,IAAIgB,KAAKhB,EAAE;YACXiB,OAAOD,KAAKC,KAAK;YACjBC,UAAUF,KAAKG,WAAW,IAAI;YAC9BC,SAASJ,KAAKK,QAAQ,IAAI;YAC1Bb,QAAQQ,KAAKR,MAAM;YACnBc,UAAUN,KAAKM,QAAQ;YACvBC,eAAe,AAACP,KAAaQ,SAAS,EAAEzC,QAAQ;YAChD0C,aAAa,AAACT,KAAaQ,SAAS,EAAExB,MAAM;QAC9C,CAAA;IAEApC,YAAYkC,eAAe;AAC7B;AAEO,MAAMpC,oBAAoB,CAACgE;IAChC,oCAAoC;IACpC,MAAM5B,gBAAgB4B,OAAOtD,GAAG,CAAC,CAACuD,QAAW,CAAA;YAC3C3B,IAAI2B,MAAM3B,EAAE;YACZiB,OAAOU,MAAMV,KAAK;YAClBW,MAAMD,MAAMC,IAAI;YAChBC,MAAMF,MAAME,IAAI;YAChB9C,MAAM4C,MAAM5C,IAAI;YAChBwC,eAAeI,MAAMH,SAAS,EAAEzC,QAAQ;YACxC0C,aAAaE,MAAMH,SAAS,EAAExB,MAAM;QACtC,CAAA;IAEApC,YAAYkC,eAAe;AAC7B"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cf99bc41750f57cbcf76b4899cbac67b1560bf51"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1492w1pvej = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1492w1pvej();
cov_1492w1pvej().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1492w1pvej().f[0]++;
  cov_1492w1pvej().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1492w1pvej().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1492w1pvej().s[3]++;
_export(exports, {
  get exportClientsToCSV() {
    /* istanbul ignore next */
    cov_1492w1pvej().f[1]++;
    cov_1492w1pvej().s[4]++;
    return exportClientsToCSV;
  },
  get exportEventsToCSV() {
    /* istanbul ignore next */
    cov_1492w1pvej().f[2]++;
    cov_1492w1pvej().s[5]++;
    return exportEventsToCSV;
  },
  get exportTasksToCSV() {
    /* istanbul ignore next */
    cov_1492w1pvej().f[3]++;
    cov_1492w1pvej().s[6]++;
    return exportTasksToCSV;
  },
  get exportToCSV() {
    /* istanbul ignore next */
    cov_1492w1pvej().f[4]++;
    cov_1492w1pvej().s[7]++;
    return exportToCSV;
  }
});
/* istanbul ignore next */
cov_1492w1pvej().s[8]++;
const exportToCSV = (data, filename) => {
  /* istanbul ignore next */
  cov_1492w1pvej().f[5]++;
  // Convert data to CSV format
  const headers =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[9]++, Object.keys(data[0]));
  const csvRows =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[10]++, [headers.join(","), ...data.map(row => {
    /* istanbul ignore next */
    cov_1492w1pvej().f[6]++;
    cov_1492w1pvej().s[11]++;
    return headers.map(header => {
      /* istanbul ignore next */
      cov_1492w1pvej().f[7]++;
      const cell =
      /* istanbul ignore next */
      (cov_1492w1pvej().s[12]++, row[header]);
      // Handle special cases like objects, arrays, etc.
      const value =
      /* istanbul ignore next */
      (cov_1492w1pvej().s[13]++,
      /* istanbul ignore next */
      (cov_1492w1pvej().b[1][0]++, typeof cell === "object") &&
      /* istanbul ignore next */
      (cov_1492w1pvej().b[1][1]++, cell !== null) ?
      /* istanbul ignore next */
      (cov_1492w1pvej().b[0][0]++, JSON.stringify(cell).replace(/"/g, '""')) :
      /* istanbul ignore next */
      (cov_1492w1pvej().b[0][1]++, cell));
      /* istanbul ignore next */
      cov_1492w1pvej().s[14]++;
      return `"${value}"`;
    }).join(",");
  })]);
  const csvString =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[15]++, csvRows.join("\n"));
  const blob =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[16]++, new Blob([csvString], {
    type: "text/csv;charset=utf-8;"
  }));
  // Create download link
  const link =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[17]++, document.createElement("a"));
  const url =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[18]++, URL.createObjectURL(blob));
  /* istanbul ignore next */
  cov_1492w1pvej().s[19]++;
  link.setAttribute("href", url);
  /* istanbul ignore next */
  cov_1492w1pvej().s[20]++;
  link.setAttribute("download", `${filename}.csv`);
  /* istanbul ignore next */
  cov_1492w1pvej().s[21]++;
  link.style.visibility = "hidden";
  /* istanbul ignore next */
  cov_1492w1pvej().s[22]++;
  document.body.appendChild(link);
  /* istanbul ignore next */
  cov_1492w1pvej().s[23]++;
  link.click();
  /* istanbul ignore next */
  cov_1492w1pvej().s[24]++;
  document.body.removeChild(link);
};
/* istanbul ignore next */
cov_1492w1pvej().s[25]++;
const exportClientsToCSV = clients => {
  /* istanbul ignore next */
  cov_1492w1pvej().f[8]++;
  // Flatten client data for CSV export
  const flattenedData =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[26]++, clients.map(client => {
    /* istanbul ignore next */
    cov_1492w1pvej().f[9]++;
    cov_1492w1pvej().s[27]++;
    return {
      id: client.id,
      name: client.name,
      contact: 'No contact info',
      email: client.email,
      phone: client.phone,
      stage: client.stage,
      value: client.value,
      lastContact: 'Never',
      nextFollowup: 'Not scheduled',
      status: client.status,
      source: client.source,
      projectCount: client.projects.length,
      noteCount: client.notes.length
    };
  }));
  /* istanbul ignore next */
  cov_1492w1pvej().s[28]++;
  exportToCSV(flattenedData, "clients-export");
};
/* istanbul ignore next */
cov_1492w1pvej().s[29]++;
const exportTasksToCSV = tasks => {
  /* istanbul ignore next */
  cov_1492w1pvej().f[10]++;
  // Flatten task data for CSV export
  const flattenedData =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[30]++, tasks.map(task => {
    /* istanbul ignore next */
    cov_1492w1pvej().f[11]++;
    cov_1492w1pvej().s[31]++;
    return {
      id: task.id,
      title: task.title,
      assignee:
      /* istanbul ignore next */
      (cov_1492w1pvej().b[2][0]++, task.assigned_to) ||
      /* istanbul ignore next */
      (cov_1492w1pvej().b[2][1]++, 'Unassigned'),
      dueDate:
      /* istanbul ignore next */
      (cov_1492w1pvej().b[3][0]++, task.due_date) ||
      /* istanbul ignore next */
      (cov_1492w1pvej().b[3][1]++, 'No due date'),
      status: task.status,
      priority: task.priority,
      relatedToType:
      /* istanbul ignore next */
      (cov_1492w1pvej().b[4][0]++, task.relatedTo?.type) ||
      /* istanbul ignore next */
      (cov_1492w1pvej().b[4][1]++, "none"),
      relatedToId:
      /* istanbul ignore next */
      (cov_1492w1pvej().b[5][0]++, task.relatedTo?.id) ||
      /* istanbul ignore next */
      (cov_1492w1pvej().b[5][1]++, "")
    };
  }));
  /* istanbul ignore next */
  cov_1492w1pvej().s[32]++;
  exportToCSV(flattenedData, "tasks-export");
};
/* istanbul ignore next */
cov_1492w1pvej().s[33]++;
const exportEventsToCSV = events => {
  /* istanbul ignore next */
  cov_1492w1pvej().f[12]++;
  // Flatten event data for CSV export
  const flattenedData =
  /* istanbul ignore next */
  (cov_1492w1pvej().s[34]++, events.map(event => {
    /* istanbul ignore next */
    cov_1492w1pvej().f[13]++;
    cov_1492w1pvej().s[35]++;
    return {
      id: event.id,
      title: event.title,
      date: event.date,
      time: event.time,
      type: event.type,
      relatedToType:
      /* istanbul ignore next */
      (cov_1492w1pvej().b[6][0]++, event.relatedTo?.type) ||
      /* istanbul ignore next */
      (cov_1492w1pvej().b[6][1]++, "none"),
      relatedToId:
      /* istanbul ignore next */
      (cov_1492w1pvej().b[7][0]++, event.relatedTo?.id) ||
      /* istanbul ignore next */
      (cov_1492w1pvej().b[7][1]++, "")
    };
  }));
  /* istanbul ignore next */
  cov_1492w1pvej().s[36]++;
  exportToCSV(flattenedData, "events-export");
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,