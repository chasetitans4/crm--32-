{"version":3,"names":["QuestionRenderer","questions","cov_2bx9xfdkhu","s","id","title","description","type","options","_data","businessGoals","placeholder","Object","keys","industries","websiteFeatures","currentStep","answers","onAnswer","estimatedCost","f","question","b","_jsxruntime","jsxs","_card","Card","jsx","CardHeader","CardTitle","CardContent","className","_utils","formatCurrency","entries","map","key","value","questionData","find","q","replace","Array","isArray","join","renderInput","option","_checkbox","Checkbox","checked","includes","onCheckedChange","currentValues","newValues","filter","v","_label","Label","htmlFor","_radiogroup","RadioGroup","onValueChange","RadioGroupItem","_textarea","Textarea","onChange","e","target","rows","_input","Input","_badge","Badge","variant","length"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\WebDesignQuote\\QuestionRenderer.tsx"],"sourcesContent":["// Question renderer component for WebDesignQuote\nimport React from 'react'\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Checkbox } from \"@/components/ui/checkbox\"\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Label } from \"@/components/ui/label\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { industries, businessGoals, websiteFeatures } from './data'\nimport { formatCurrency } from './utils'\n\ninterface QuestionRendererProps {\n  currentStep: number\n  answers: Record<string, any>\n  onAnswer: (id: string, value: any) => void\n  estimatedCost?: number\n}\n\nconst questions = [\n  {\n    id: 'businessGoals',\n    title: 'What are your primary business goals?',\n    description: 'Select all that apply to help us understand your objectives.',\n    type: 'checkbox',\n    options: businessGoals,\n  },\n  {\n    id: 'targetAudience',\n    title: 'Who is your target audience?',\n    description: 'Describe your ideal customers or users.',\n    type: 'textarea',\n    placeholder: 'e.g., Small business owners, young professionals, families with children...',\n  },\n  {\n    id: 'industry',\n    title: 'What industry are you in?',\n    description: 'This helps us understand your specific needs and compliance requirements.',\n    type: 'radio',\n    options: Object.keys(industries),\n  },\n  {\n    id: 'websiteType',\n    title: 'What type of website do you need?',\n    description: 'Choose the option that best describes your website.',\n    type: 'radio',\n    options: [\n      'Business/Corporate Website',\n      'E-commerce Store',\n      'Portfolio/Personal Website',\n      'Blog/Content Site',\n      'Landing Page',\n      'Web Application',\n      'Other',\n    ],\n  },\n  {\n    id: 'features',\n    title: 'What features do you need?',\n    description: 'Select all features that are important for your website.',\n    type: 'checkbox',\n    options: websiteFeatures,\n  },\n  {\n    id: 'budget',\n    title: 'What is your budget range?',\n    description: 'This helps us recommend the best solution for your needs.',\n    type: 'radio',\n    options: [\n      '$2,500 - $5,000',\n      '$5,000 - $10,000',\n      '$10,000 - $25,000',\n      '$25,000 - $50,000',\n      '$50,000+',\n      'Not sure yet',\n    ],\n  },\n  {\n    id: 'timeline',\n    title: 'When do you need this completed?',\n    description: 'Choose your preferred timeline for project completion.',\n    type: 'radio',\n    options: [\n      'Rush (2-4 weeks)',\n      'Standard (4-8 weeks)',\n      'Extended (8-12 weeks)',\n      'Flexible (12+ weeks)',\n    ],\n  },\n  {\n    id: 'additionalRequirements',\n    title: 'Any additional requirements?',\n    description: 'Tell us about any specific needs, integrations, or special requirements.',\n    type: 'textarea',\n    placeholder: 'e.g., Integration with existing systems, specific design preferences, accessibility requirements...',\n  },\n]\n\nexport const QuestionRenderer: React.FC<QuestionRendererProps> = ({\n  currentStep,\n  answers,\n  onAnswer,\n  estimatedCost,\n}) => {\n  const question = questions[currentStep]\n  \n  if (!question) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Quote Summary</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"text-center\">\n              <h3 className=\"text-2xl font-bold text-green-600\">\n                Estimated Cost: {estimatedCost ? formatCurrency(estimatedCost) : 'Calculating...'}\n              </h3>\n              <p className=\"text-gray-600 mt-2\">\n                This is a preliminary estimate based on your requirements.\n              </p>\n            </div>\n            \n            <div className=\"grid gap-4\">\n              <div>\n                <h4 className=\"font-semibold mb-2\">Your Requirements:</h4>\n                <div className=\"space-y-2\">\n                  {Object.entries(answers).map(([key, value]) => {\n                    const questionData = questions.find(q => q.id === key)\n                    if (!questionData || !value) return null\n                    \n                    return (\n                      <div key={key} className=\"flex justify-between\">\n                        <span className=\"font-medium\">{questionData.title.replace('?', '')}:</span>\n                        <span className=\"text-gray-600\">\n                          {Array.isArray(value) ? value.join(', ') : value}\n                        </span>\n                      </div>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n  \n  const renderInput = () => {\n    switch (question.type) {\n      case 'checkbox':\n        return (\n          <div className=\"space-y-3\">\n            {question.options?.map((option) => (\n              <div key={option} className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id={option}\n                  checked={answers[question.id]?.includes(option) || false}\n                  onCheckedChange={(checked) => {\n                    const currentValues = answers[question.id] || []\n                    const newValues = checked\n                      ? [...currentValues, option]\n                      : currentValues.filter((v: string) => v !== option)\n                    onAnswer(question.id, newValues)\n                  }}\n                />\n                <Label htmlFor={option} className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                  {option}\n                </Label>\n              </div>\n            ))}\n          </div>\n        )\n      \n      case 'radio':\n        return (\n          <RadioGroup\n            value={answers[question.id] || ''}\n            onValueChange={(value) => onAnswer(question.id, value)}\n          >\n            {question.options?.map((option) => (\n              <div key={option} className=\"flex items-center space-x-2\">\n                <RadioGroupItem value={option} id={option} />\n                <Label htmlFor={option} className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\">\n                  {option}\n                </Label>\n              </div>\n            ))}\n          </RadioGroup>\n        )\n      \n      case 'textarea':\n        return (\n          <Textarea\n            value={answers[question.id] || ''}\n            onChange={(e) => onAnswer(question.id, e.target.value)}\n            placeholder={question.placeholder}\n            rows={4}\n          />\n        )\n      \n      case 'input':\n      default:\n        return (\n          <Input\n            value={answers[question.id] || ''}\n            onChange={(e) => onAnswer(question.id, e.target.value)}\n            placeholder={question.placeholder}\n          />\n        )\n    }\n  }\n  \n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex justify-between items-start\">\n          <div>\n            <CardTitle className=\"text-xl\">{question.title}</CardTitle>\n            <p className=\"text-gray-600 mt-2\">{question.description}</p>\n          </div>\n          <Badge variant=\"outline\">\n            {currentStep + 1} of {questions.length}\n          </Badge>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-4\">\n          {renderInput()}\n          \n          {estimatedCost && currentStep > 3 && (\n            <div className=\"mt-6 p-4 bg-blue-50 rounded-lg\">\n              <div className=\"flex justify-between items-center\">\n                <span className=\"font-medium\">Current Estimate:</span>\n                <span className=\"text-lg font-bold text-blue-600\">\n                  {formatCurrency(estimatedCost)}\n                </span>\n              </div>\n              <p className=\"text-sm text-gray-600 mt-1\">\n                This estimate updates as you provide more details.\n              </p>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}"],"mappingsmGa;;;;;;WAAAA,gBAAA;;;;;;;;wEAlGK;;;kCACuC;;;kCAEnC;;;kCACG;;;kCACA;;;kCACkB;;;mCACrB;;;mCACA;;;mCACqC;;;mCAC5B;;;;;;;;;;;;;;;AAS/B,MAAMC,SAAA;AAAA;AAAA,CAAAC,cAAA,GAAAC,CAAA,QAAY,CAChB;EACEC,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNC,OAAA,EAASC,KAAA,CAAAC;AACX,GACA;EACEN,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNI,WAAA,EAAa;AACf,GACA;EACEP,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNC,OAAA,EAASI,MAAA,CAAOC,IAAI,CAACJ,KAAA,CAAAK,UAAU;AACjC,GACA;EACEV,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNC,OAAA,EAAS,CACP,8BACA,oBACA,8BACA,qBACA,gBACA,mBACA;AAEJ,GACA;EACEJ,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNC,OAAA,EAASC,KAAA,CAAAM;AACX,GACA;EACEX,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNC,OAAA,EAAS,CACP,mBACA,oBACA,qBACA,qBACA,YACA;AAEJ,GACA;EACEJ,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNC,OAAA,EAAS,CACP,oBACA,wBACA,yBACA;AAEJ,GACA;EACEJ,EAAA,EAAI;EACJC,KAAA,EAAO;EACPC,WAAA,EAAa;EACbC,IAAA,EAAM;EACNI,WAAA,EAAa;AACf,EACD;AAAA;AAAAT,cAAA,GAAAC,CAAA;AAEM,MAAMH,gBAAA,GAAoDA,CAAC;EAChEgB,WAAW;EACXC,OAAO;EACPC,QAAQ;EACRC;AAAa,CACd;EAAA;EAAAjB,cAAA,GAAAkB,CAAA;EACC,MAAMC,QAAA;EAAA;EAAA,CAAAnB,cAAA,GAAAC,CAAA,QAAWF,SAAS,CAACe,WAAA,CAAY;EAAA;EAAAd,cAAA,GAAAC,CAAA;EAEvC,IAAI,CAACkB,QAAA,EAAU;IAAA;IAAAnB,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAC,CAAA;IACb,oBACE,IAAAoB,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAC,IAAI;8BACH,IAAAH,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAG,UAAU;kBACT,iBAAAL,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAI,SAAS;oBAAC;;uBAEb,IAAAN,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAK,WAAW;kBACV,iBAAAP,WAAA,CAAAC,IAAA,EAAC;UAAIO,SAAA,EAAU;kCACb,IAAAR,WAAA,CAAAC,IAAA,EAAC;YAAIO,SAAA,EAAU;oCACb,IAAAR,WAAA,CAAAC,IAAA,EAAC;cAAGO,SAAA,EAAU;yBAAoC,oBAC/BZ,aAAA;cAAA;cAAA,CAAAjB,cAAA,GAAAoB,CAAA,UAAgB,IAAAU,MAAA,CAAAC,cAAc,EAACd,aAAA;cAAA;cAAA,CAAAjB,cAAA,GAAAoB,CAAA,UAAiB;6BAEnE,IAAAC,WAAA,CAAAI,GAAA,EAAC;cAAEI,SAAA,EAAU;wBAAqB;;2BAKpC,IAAAR,WAAA,CAAAI,GAAA,EAAC;YAAII,SAAA,EAAU;sBACb,iBAAAR,WAAA,CAAAC,IAAA,EAAC;sCACC,IAAAD,WAAA,CAAAI,GAAA,EAAC;gBAAGI,SAAA,EAAU;0BAAqB;+BACnC,IAAAR,WAAA,CAAAI,GAAA,EAAC;gBAAII,SAAA,EAAU;0BACZnB,MAAA,CAAOsB,OAAO,CAACjB,OAAA,EAASkB,GAAG,CAAC,CAAC,CAACC,GAAA,EAAKC,KAAA,CAAM;kBAAA;kBAAAnC,cAAA,GAAAkB,CAAA;kBACxC,MAAMkB,YAAA;kBAAA;kBAAA,CAAApC,cAAA,GAAAC,CAAA,QAAeF,SAAA,CAAUsC,IAAI,CAACC,CAAA,IAAK;oBAAA;oBAAAtC,cAAA,GAAAkB,CAAA;oBAAAlB,cAAA,GAAAC,CAAA;oBAAA,OAAAqC,CAAA,CAAEpC,EAAE,KAAKgC,GAAA;kBAAA;kBAAA;kBAAAlC,cAAA,GAAAC,CAAA;kBAClD;kBAAI;kBAAA,CAAAD,cAAA,GAAAoB,CAAA,WAACgB,YAAA;kBAAA;kBAAA,CAAApC,cAAA,GAAAoB,CAAA,UAAgB,CAACe,KAAA,GAAO;oBAAA;oBAAAnC,cAAA,GAAAoB,CAAA;oBAAApB,cAAA,GAAAC,CAAA;oBAAA,OAAO;kBAAA;kBAAA;kBAAA;oBAAAD,cAAA,GAAAoB,CAAA;kBAAA;kBAAApB,cAAA,GAAAC,CAAA;kBAEpC,oBACE,IAAAoB,WAAA,CAAAC,IAAA,EAAC;oBAAcO,SAAA,EAAU;4CACvB,IAAAR,WAAA,CAAAC,IAAA,EAAC;sBAAKO,SAAA,EAAU;iCAAeO,YAAA,CAAajC,KAAK,CAACoC,OAAO,CAAC,KAAK,KAAI;qCACnE,IAAAlB,WAAA,CAAAI,GAAA,EAAC;sBAAKI,SAAA,EAAU;gCACbW,KAAA,CAAMC,OAAO,CAACN,KAAA;sBAAA;sBAAA,CAAAnC,cAAA,GAAAoB,CAAA,UAASe,KAAA,CAAMO,IAAI,CAAC;sBAAA;sBAAA,CAAA1C,cAAA,GAAAoB,CAAA,UAAQe,KAAA;;qBAHrCD,GAAA;gBAOd;;;;;;;EAQhB;EAAA;EAAA;IAAAlC,cAAA,GAAAoB,CAAA;EAAA;EAAApB,cAAA,GAAAC,CAAA;EAEA,MAAM0C,WAAA,GAAcA,CAAA;IAAA;IAAA3C,cAAA,GAAAkB,CAAA;IAAAlB,cAAA,GAAAC,CAAA;IAClB,QAAQkB,QAAA,CAASd,IAAI;MACnB,KAAK;QAAA;QAAAL,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAC,CAAA;QACH,oBACE,IAAAoB,WAAA,CAAAI,GAAA,EAAC;UAAII,SAAA,EAAU;oBACZV,QAAA,CAASb,OAAO,EAAE2B,GAAA,CAAKW,MAAA,IACtB;YAAA;YAAA5C,cAAA,GAAAkB,CAAA;YAAAlB,cAAA,GAAAC,CAAA;YAAA,OADsB,aACtB,IAAAoB,WAAA,CAAAC,IAAA,EAAC;cAAiBO,SAAA,EAAU;sCAC1B,IAAAR,WAAA,CAAAI,GAAA,EAACoB,SAAA,CAAAC,QAAQ;gBACP5C,EAAA,EAAI0C,MAAA;gBACJG,OAAA;gBAAS;gBAAA,CAAA/C,cAAA,GAAAoB,CAAA,UAAAL,OAAO,CAACI,QAAA,CAASjB,EAAE,CAAC,EAAE8C,QAAA,CAASJ,MAAA;gBAAA;gBAAA,CAAA5C,cAAA,GAAAoB,CAAA,UAAW;gBACnD6B,eAAA,EAAkBF,OAAA;kBAAA;kBAAA/C,cAAA,GAAAkB,CAAA;kBAChB,MAAMgC,aAAA;kBAAA;kBAAA,CAAAlD,cAAA,GAAAC,CAAA;kBAAgB;kBAAA,CAAAD,cAAA,GAAAoB,CAAA,UAAAL,OAAO,CAACI,QAAA,CAASjB,EAAE,CAAC;kBAAA;kBAAA,CAAAF,cAAA,GAAAoB,CAAA,UAAI,EAAE;kBAChD,MAAM+B,SAAA;kBAAA;kBAAA,CAAAnD,cAAA,GAAAC,CAAA,QAAY8C,OAAA;kBAAA;kBAAA,CAAA/C,cAAA,GAAAoB,CAAA,WACd,C,GAAI8B,aAAA,EAAeN,MAAA,CAAO;kBAAA;kBAAA,CAAA5C,cAAA,GAAAoB,CAAA,WAC1B8B,aAAA,CAAcE,MAAM,CAAEC,CAAA,IAAc;oBAAA;oBAAArD,cAAA,GAAAkB,CAAA;oBAAAlB,cAAA,GAAAC,CAAA;oBAAA,OAAAoD,CAAA,KAAMT,MAAA;kBAAA;kBAAA;kBAAA5C,cAAA,GAAAC,CAAA;kBAC9Ce,QAAA,CAASG,QAAA,CAASjB,EAAE,EAAEiD,SAAA;gBACxB;+BAEF,IAAA9B,WAAA,CAAAI,GAAA,EAAC6B,MAAA,CAAAC,KAAK;gBAACC,OAAA,EAASZ,MAAA;gBAAQf,SAAA,EAAU;0BAC/Be;;eAbKA,MAAA;UAAA;;MAoBlB,KAAK;QAAA;QAAA5C,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAC,CAAA;QACH,oBACE,IAAAoB,WAAA,CAAAI,GAAA,EAACgC,WAAA,CAAAC,UAAU;UACTvB,KAAA;UAAO;UAAA,CAAAnC,cAAA,GAAAoB,CAAA,WAAAL,OAAO,CAACI,QAAA,CAASjB,EAAE,CAAC;UAAA;UAAA,CAAAF,cAAA,GAAAoB,CAAA,WAAI;UAC/BuC,aAAA,EAAgBxB,KAAA,IAAU;YAAA;YAAAnC,cAAA,GAAAkB,CAAA;YAAAlB,cAAA,GAAAC,CAAA;YAAA,OAAAe,QAAA,CAASG,QAAA,CAASjB,EAAE,EAAEiC,KAAA;UAAA;oBAE/ChB,QAAA,CAASb,OAAO,EAAE2B,GAAA,CAAKW,MAAA,IACtB;YAAA;YAAA5C,cAAA,GAAAkB,CAAA;YAAAlB,cAAA,GAAAC,CAAA;YAAA,OADsB,aACtB,IAAAoB,WAAA,CAAAC,IAAA,EAAC;cAAiBO,SAAA,EAAU;sCAC1B,IAAAR,WAAA,CAAAI,GAAA,EAACgC,WAAA,CAAAG,cAAc;gBAACzB,KAAA,EAAOS,MAAA;gBAAQ1C,EAAA,EAAI0C;+BACnC,IAAAvB,WAAA,CAAAI,GAAA,EAAC6B,MAAA,CAAAC,KAAK;gBAACC,OAAA,EAASZ,MAAA;gBAAQf,SAAA,EAAU;0BAC/Be;;eAHKA,MAAA;UAAA;;MAUlB,KAAK;QAAA;QAAA5C,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAC,CAAA;QACH,oBACE,IAAAoB,WAAA,CAAAI,GAAA,EAACoC,SAAA,CAAAC,QAAQ;UACP3B,KAAA;UAAO;UAAA,CAAAnC,cAAA,GAAAoB,CAAA,WAAAL,OAAO,CAACI,QAAA,CAASjB,EAAE,CAAC;UAAA;UAAA,CAAAF,cAAA,GAAAoB,CAAA,WAAI;UAC/B2C,QAAA,EAAWC,CAAA,IAAM;YAAA;YAAAhE,cAAA,GAAAkB,CAAA;YAAAlB,cAAA,GAAAC,CAAA;YAAA,OAAAe,QAAA,CAASG,QAAA,CAASjB,EAAE,EAAE8D,CAAA,CAAEC,MAAM,CAAC9B,KAAK;UAAA;UACrD1B,WAAA,EAAaU,QAAA,CAASV,WAAW;UACjCyD,IAAA,EAAM;;MAIZ,KAAK;QAAA;QAAAlE,cAAA,GAAAoB,CAAA;MACL;QAAA;QAAApB,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAC,CAAA;QACE,oBACE,IAAAoB,WAAA,CAAAI,GAAA,EAAC0C,MAAA,CAAAC,KAAK;UACJjC,KAAA;UAAO;UAAA,CAAAnC,cAAA,GAAAoB,CAAA,WAAAL,OAAO,CAACI,QAAA,CAASjB,EAAE,CAAC;UAAA;UAAA,CAAAF,cAAA,GAAAoB,CAAA,WAAI;UAC/B2C,QAAA,EAAWC,CAAA,IAAM;YAAA;YAAAhE,cAAA,GAAAkB,CAAA;YAAAlB,cAAA,GAAAC,CAAA;YAAA,OAAAe,QAAA,CAASG,QAAA,CAASjB,EAAE,EAAE8D,CAAA,CAAEC,MAAM,CAAC9B,KAAK;UAAA;UACrD1B,WAAA,EAAaU,QAAA,CAASV;;IAG9B;EACF;EAAA;EAAAT,cAAA,GAAAC,CAAA;EAEA,oBACE,IAAAoB,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAC,IAAI;4BACH,IAAAH,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAG,UAAU;gBACT,iBAAAL,WAAA,CAAAC,IAAA,EAAC;QAAIO,SAAA,EAAU;gCACb,IAAAR,WAAA,CAAAC,IAAA,EAAC;kCACC,IAAAD,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAI,SAAS;YAACE,SAAA,EAAU;sBAAWV,QAAA,CAAShB;2BACzC,IAAAkB,WAAA,CAAAI,GAAA,EAAC;YAAEI,SAAA,EAAU;sBAAsBV,QAAA,CAASf;;yBAE9C,IAAAiB,WAAA,CAAAC,IAAA,EAAC+C,MAAA,CAAAC,KAAK;UAACC,OAAA,EAAQ;qBACZzD,WAAA,GAAc,GAAE,QAAKf,SAAA,CAAUyE,MAAM;;;qBAI5C,IAAAnD,WAAA,CAAAI,GAAA,EAACF,KAAA,CAAAK,WAAW;gBACV,iBAAAP,WAAA,CAAAC,IAAA,EAAC;QAAIO,SAAA,EAAU;mBACZc,WAAA;QAEA;QAAA,CAAA3C,cAAA,GAAAoB,CAAA,WAAAH,aAAA;QAAA;QAAA,CAAAjB,cAAA,GAAAoB,CAAA,WAAiBN,WAAA,GAAc;QAAA;QAAA,CAAAd,cAAA,GAAAoB,CAAA,wBAC9B,IAAAC,WAAA,CAAAC,IAAA,EAAC;UAAIO,SAAA,EAAU;kCACb,IAAAR,WAAA,CAAAC,IAAA,EAAC;YAAIO,SAAA,EAAU;oCACb,IAAAR,WAAA,CAAAI,GAAA,EAAC;cAAKI,SAAA,EAAU;wBAAc;6BAC9B,IAAAR,WAAA,CAAAI,GAAA,EAAC;cAAKI,SAAA,EAAU;wBACb,IAAAC,MAAA,CAAAC,cAAc,EAACd,aAAA;;2BAGpB,IAAAI,WAAA,CAAAI,GAAA,EAAC;YAAEI,SAAA,EAAU;sBAA6B;;;;;;AASxD","ignoreList":[]}