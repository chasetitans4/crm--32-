{"version":3,"names":["_default","Documents","cov_z1kenm96g","f","state","dispatch","s","_AppContext","useAppContext","clients","fileInputRef","_react","useRef","viewMode","setViewMode","useState","documentFilter","setDocumentFilter","showUploadModal","setShowUploadModal","uploadFiles","setUploadFiles","selectedClient","setSelectedClient","selectedProject","setSelectedProject","uploadProgress","setUploadProgress","isUploading","setIsUploading","compressionEnabled","setCompressionEnabled","hasError","error","setError","clearError","_standardErrorHandling","useErrorState","DEFAULT_QUOTA","userId","storageUsed","storageLimit","maxFileSize","maxVersions","RETENTION_POLICY","maxVersionHistory","autoDeleteOldVersions","versionRetentionDays","previewCacheRetentionDays","deletedFileRetentionDays","documentQuota","setDocumentQuota","documents","b","length","flatMap","client","projects","project","map","doc","name","date","uploadDate","type","split","pop","size","getRandomFileSize","versions","Math","floor","random","currentStorageUsed","reduce","total","Number","parseFloat","replace","sizes","filteredDocuments","filter","toLowerCase","includes","validateFileUpload","files","errors","totalSize","file","fileSizeInMB","push","availableSpace","toFixed","allowedTypes","valid","compressFile","startsWith","compressedSize","compressedFile","File","lastModified","Object","defineProperty","value","writable","handleUploadClick","handleFileSelect","e","target","filesArray","Array","from","Promise","all","triggerFileInput","current","click","handleUpload","validation","createStandardError","join","code","result","handleAsyncOperation","progress","interval","setInterval","clearInterval","resolve","setTimeout","clientIndex","findIndex","c","Error","projectIndex","p","newDocuments","uploadedSize","data","prev","removeFile","index","_","i","cleanupOldVersions","freedSpace","max","availableClients","availableProjects","find","storagePercentage","_jsxruntime","jsxs","className","jsx","DefaultErrorFallback","retry","onClick","_lucidereact","Grid","Columns","UploadCloud","HardDrive","style","width","min","AlertTriangle","placeholder","Search","idx","FileText","Download","Link","Trash","disabled","X","onChange","checked","ref","multiple","accept","sizeInMB","isOversized","sum","Fragment"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Documents.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useRef } from \"react\"\nimport {\n  Grid,\n  Columns,\n  UploadCloud,\n  Download,\n  Search,\n  FileText,\n  Link,\n  Trash,\n  X,\n  AlertTriangle,\n  HardDrive,\n} from \"lucide-react\"\nimport { useAppContext } from \"../context/AppContext\"\nimport { useErrorState, handleAsyncOperation, DefaultErrorFallback, createStandardError } from \"../utils/standardErrorHandling\"\n\ninterface DocumentQuota {\n  userId: string\n  storageUsed: number // in MB\n  storageLimit: number // in MB\n  maxFileSize: number // in MB\n  maxVersions: number\n  compressionEnabled: boolean\n}\n\ninterface DocumentRetentionPolicy {\n  maxVersionHistory: number\n  autoDeleteOldVersions: boolean\n  versionRetentionDays: number\n  previewCacheRetentionDays: number\n  deletedFileRetentionDays: number\n}\n\nconst Documents: React.FC = () => {\n  const { state, dispatch } = useAppContext()\n  const { clients } = state\n  const fileInputRef = useRef<HTMLInputElement>(null)\n\n  const [viewMode, setViewMode] = useState<\"grid\" | \"list\">(\"grid\")\n  const [documentFilter, setDocumentFilter] = useState(\"all\")\n  const [showUploadModal, setShowUploadModal] = useState(false)\n  const [uploadFiles, setUploadFiles] = useState<File[]>([])\n  const [selectedClient, setSelectedClient] = useState<string>(\"\")\n  const [selectedProject, setSelectedProject] = useState<string>(\"\")\n  const [uploadProgress, setUploadProgress] = useState<number>(0)\n  const [isUploading, setIsUploading] = useState<boolean>(false)\n  const [compressionEnabled, setCompressionEnabled] = useState<boolean>(true)\n  const { hasError, error, setError, clearError } = useErrorState()\n\n  // Document quotas and limits\n  const DEFAULT_QUOTA: DocumentQuota = {\n    userId: \"current-user\",\n    storageUsed: 0,\n    storageLimit: 1000, // 1GB\n    maxFileSize: 50, // 50MB per file\n    maxVersions: 5,\n    compressionEnabled: true,\n  }\n\n  const RETENTION_POLICY: DocumentRetentionPolicy = {\n    maxVersionHistory: 5,\n    autoDeleteOldVersions: true,\n    versionRetentionDays: 90, // 3 months\n    previewCacheRetentionDays: 30,\n    deletedFileRetentionDays: 30,\n  }\n\n  const [documentQuota, setDocumentQuota] = useState<DocumentQuota>(DEFAULT_QUOTA)\n\n  // Safely extract all documents with null checks\n  const documents =\n    clients && clients.length > 0\n      ? clients.flatMap((client) =>\n          client.projects && client.projects.length > 0\n            ? client.projects.flatMap((project) =>\n                project.documents && project.documents.length > 0\n                  ? project.documents.map((doc: { id: string; name: string; url: string; uploadDate: string }) => ({\n                      name: doc.name,\n                      client: client.name,\n                      project: project.name,\n                      date: doc.uploadDate,\n                      type: doc.name.split(\".\").pop(),\n                      size: getRandomFileSize(),\n                      versions: Math.floor(Math.random() * 3) + 1,\n                    }))\n                  : [],\n              )\n            : [],\n        )\n      : []\n\n  // Calculate current storage usage\n  const currentStorageUsed = documents.reduce((total, doc) => {\n    return total + Number.parseFloat(doc.size.replace(\" MB\", \"\"))\n  }, 0)\n\n  function getRandomFileSize(): string {\n    const sizes = [\"0.5 MB\", \"1.2 MB\", \"2.8 MB\", \"5.1 MB\", \"0.8 MB\", \"3.4 MB\", \"1.9 MB\"]\n    return sizes[Math.floor(Math.random() * sizes.length)]\n  }\n\n  const filteredDocuments = documents.filter((doc) => {\n    if (documentFilter === \"all\") return true\n    if (documentFilter === \"contracts\") return doc.name.toLowerCase().includes(\"contract\")\n    if (documentFilter === \"proposals\") return doc.name.toLowerCase().includes(\"proposal\")\n    if (documentFilter === \"designs\") return [\"figma\", \"pdf\"].includes(doc.type || \"\")\n    return true\n  })\n\n  const validateFileUpload = (files: File[]): { valid: boolean; errors: string[] } => {\n    const errors: string[] = []\n    let totalSize = 0\n\n    for (const file of files) {\n      const fileSizeInMB = file.size / (1024 * 1024)\n\n      // Check individual file size\n      if (fileSizeInMB > documentQuota.maxFileSize) {\n        errors.push(`File \"${file.name}\" exceeds maximum size of ${documentQuota.maxFileSize}MB`)\n      }\n\n      totalSize += fileSizeInMB\n    }\n\n    // Check total storage limit\n    if (currentStorageUsed + totalSize > documentQuota.storageLimit) {\n      const availableSpace = documentQuota.storageLimit - currentStorageUsed\n      errors.push(\n        `Storage limit exceeded. Available: ${availableSpace.toFixed(1)}MB, Required: ${totalSize.toFixed(1)}MB`,\n      )\n    }\n\n    // Check file types (basic validation)\n    const allowedTypes = [\n      \"application/pdf\",\n      \"application/msword\",\n      \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      \"image/jpeg\",\n      \"image/png\",\n      \"image/gif\",\n      \"text/plain\",\n    ]\n\n    for (const file of files) {\n      if (!allowedTypes.includes(file.type)) {\n        errors.push(`File type \"${file.type}\" is not allowed for \"${file.name}\"`)\n      }\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors,\n    }\n  }\n\n  const compressFile = async (file: File): Promise<File> => {\n    // Simple compression simulation - in real implementation, use compression libraries\n    if (file.type.startsWith(\"image/\") && file.size > 1024 * 1024) {\n      // Simulate image compression\n      const compressedSize = Math.floor(file.size * 0.7) // 30% compression\n      const compressedFile = new File([file], file.name, {\n        type: file.type,\n        lastModified: file.lastModified,\n      })\n\n      // Override size property (in real implementation, actual compression would occur)\n      Object.defineProperty(compressedFile, \"size\", {\n        value: compressedSize,\n        writable: false,\n      })\n\n      return compressedFile\n    }\n    return file\n  }\n\n  const handleUploadClick = () => {\n    setShowUploadModal(true)\n  }\n\n  const handleFileSelect = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      let filesArray = Array.from(e.target.files)\n\n      // Compress files if enabled\n      if (compressionEnabled) {\n        filesArray = await Promise.all(filesArray.map((file) => compressFile(file)))\n      }\n\n      setUploadFiles(filesArray)\n    }\n  }\n\n  const triggerFileInput = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click()\n    }\n  }\n\n  const handleUpload = async () => {\n    // Validate files before upload\n    const validation = validateFileUpload(uploadFiles)\n\n    if (!validation.valid) {\n      setError(createStandardError(\n        validation.errors.join(\", \"),\n        {\n          type: 'validation',\n          code: 'FILE_UPLOAD_VALIDATION'\n        }\n      ))\n      return\n    }\n\n    // Validate required selections\n    if (uploadFiles.length === 0) {\n      setError(createStandardError('Please select files to upload', {\n        type: 'validation',\n        code: 'NO_FILES_SELECTED'\n      }))\n      return\n    }\n    if (!selectedClient) {\n      setError(createStandardError('Please select a client', {\n        type: 'validation',\n        code: 'NO_CLIENT_SELECTED'\n      }))\n      return\n    }\n    if (!selectedProject) {\n      setError(createStandardError('Please select a project', {\n        type: 'validation',\n        code: 'NO_PROJECT_SELECTED'\n      }))\n      return\n    }\n\n    setIsUploading(true)\n    clearError()\n\n    const result = await handleAsyncOperation(async () => {\n      // Simulate upload progress\n      let progress = 0\n      const interval = setInterval(() => {\n        progress += 10\n        setUploadProgress(progress)\n\n        if (progress >= 100) {\n          clearInterval(interval)\n        }\n      }, 300)\n\n      // Wait for upload to complete\n      await new Promise(resolve => setTimeout(resolve, 3000))\n\n      // Add documents to the selected client and project\n      const clientIndex = clients.findIndex((c) => c.name === selectedClient)\n      if (clientIndex === -1) {\n        throw new Error('Selected client not found')\n      }\n\n      const projectIndex = clients[clientIndex].projects.findIndex((p) => p.name === selectedProject)\n      if (projectIndex === -1) {\n        throw new Error('Selected project not found')\n      }\n\n      const newDocuments = uploadFiles.map((file) => file.name)\n\n      // Update storage quota\n      const uploadedSize = uploadFiles.reduce((total, file) => total + file.size / (1024 * 1024), 0)\n      \n      return { uploadedSize, newDocuments }\n    }, 'Document upload')\n\n    if (result.error) {\n      setError(result.error)\n    } else if (result.data) {\n      setDocumentQuota((prev) => ({\n        ...prev,\n        storageUsed: prev.storageUsed + result.data!.uploadedSize,\n      }))\n\n      // Show success message\n      setError(createStandardError('Documents uploaded successfully!', {\n        type: 'business',\n        code: 'UPLOAD_SUCCESS'\n      }))\n\n      // Reset and close modal\n      setTimeout(() => {\n        setUploadProgress(0)\n        setUploadFiles([])\n        setSelectedClient(\"\")\n        setSelectedProject(\"\")\n        setShowUploadModal(false)\n        clearError()\n      }, 2000)\n    }\n\n    setIsUploading(false)\n  }\n\n  const removeFile = (index: number) => {\n    setUploadFiles((prev) => prev.filter((_, i) => i !== index))\n  }\n\n  const cleanupOldVersions = async () => {\n    // Simulate cleanup of old document versions\n    // Clean up old document versions\n\n    // In real implementation, this would:\n    // 1. Find documents with more than maxVersionHistory versions\n    // 2. Delete oldest versions beyond the limit\n    // 3. Update storage quota\n\n    const freedSpace = Math.random() * 50 // Simulate freed space\n    setDocumentQuota((prev) => ({\n      ...prev,\n      storageUsed: Math.max(0, prev.storageUsed - freedSpace),\n    }))\n\n    setError(createStandardError(`Cleanup completed. Freed ${freedSpace.toFixed(1)}MB of storage.`, {\n      type: 'business',\n      code: 'CLEANUP_SUCCESS'\n    }))\n  }\n\n  const availableClients = clients || []\n  const availableProjects = selectedClient ? clients.find((c) => c.name === selectedClient)?.projects || [] : []\n\n  const storagePercentage = (currentStorageUsed / documentQuota.storageLimit) * 100\n\n  return (\n    <div className=\"p-8\">\n      {hasError && error && (\n        <div className=\"mb-6\">\n          <DefaultErrorFallback\n            error={error}\n            retry={clearError}\n          />\n        </div>\n      )}\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold\">Documents</h2>\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"flex border rounded overflow-hidden\">\n            <button\n              onClick={() => setViewMode(\"grid\")}\n              className={`px-3 py-1 ${viewMode === \"grid\" ? \"bg-blue-500 text-white\" : \"bg-white\"}`}\n            >\n              <Grid size={16} />\n            </button>\n            <button\n              onClick={() => setViewMode(\"list\")}\n              className={`px-3 py-1 ${viewMode === \"list\" ? \"bg-blue-500 text-white\" : \"bg-white\"}`}\n            >\n              <Columns size={16} />\n            </button>\n          </div>\n          <button\n            className=\"bg-blue-600 text-white px-3 py-1 rounded flex items-center gap-1 hover:bg-blue-700 transition-colors\"\n            onClick={handleUploadClick}\n          >\n            <UploadCloud size={16} />\n            Upload\n          </button>\n        </div>\n      </div>\n\n      {/* Storage Quota Display */}\n      <div className=\"bg-white rounded-lg shadow mb-6 p-4\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center gap-2\">\n            <HardDrive size={20} className=\"text-gray-600\" />\n            <span className=\"font-medium\">Storage Usage</span>\n          </div>\n          <button onClick={cleanupOldVersions} className=\"text-sm text-blue-600 hover:text-blue-800\">\n            Cleanup Old Versions\n          </button>\n        </div>\n        <div className=\"flex items-center gap-4\">\n          <div className=\"flex-1\">\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div\n                className={`h-2 rounded-full transition-all duration-300 ${\n                  storagePercentage > 90 ? \"bg-red-500\" : storagePercentage > 75 ? \"bg-yellow-500\" : \"bg-green-500\"\n                }`}\n                style={{ width: `${Math.min(storagePercentage, 100)}%` }}\n              ></div>\n            </div>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            {currentStorageUsed.toFixed(1)} MB / {documentQuota.storageLimit} MB\n          </div>\n        </div>\n        {storagePercentage > 90 && (\n          <div className=\"mt-2 flex items-center gap-2 text-red-600 text-sm\">\n            <AlertTriangle size={16} />\n            <span>Storage almost full. Consider cleaning up old files or upgrading your plan.</span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"bg-white rounded-lg shadow mb-6\">\n        <div className=\"border-b px-6 py-3 flex justify-between items-center\">\n          <div className=\"flex space-x-4\">\n            <button\n              onClick={() => setDocumentFilter(\"all\")}\n              className={`px-3 py-2 text-sm font-medium ${\n                documentFilter === \"all\"\n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              }`}\n            >\n              All Files ({filteredDocuments.length})\n            </button>\n            <button\n              onClick={() => setDocumentFilter(\"contracts\")}\n              className={`px-3 py-2 text-sm font-medium ${\n                documentFilter === \"contracts\"\n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              }`}\n            >\n              Contracts\n            </button>\n            <button\n              onClick={() => setDocumentFilter(\"proposals\")}\n              className={`px-3 py-2 text-sm font-medium ${\n                documentFilter === \"proposals\"\n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              }`}\n            >\n              Proposals\n            </button>\n            <button\n              onClick={() => setDocumentFilter(\"designs\")}\n              className={`px-3 py-2 text-sm font-medium ${\n                documentFilter === \"designs\"\n                  ? \"text-blue-600 border-b-2 border-blue-600\"\n                  : \"text-gray-500 hover:text-gray-700\"\n              }`}\n            >\n              Designs\n            </button>\n          </div>\n\n          <div className=\"relative\">\n            <input type=\"text\" placeholder=\"Search documents...\" className=\"border rounded pl-8 pr-3 py-1 w-64\" />\n            <Search className=\"absolute left-2 top-2 text-gray-400\" size={16} />\n          </div>\n        </div>\n\n        {viewMode === \"grid\" ? (\n          <div className=\"p-6 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n            {filteredDocuments.map((doc, idx) => (\n              <div\n                key={idx}\n                className=\"border rounded-lg p-4 hover:bg-blue-50 cursor-pointer transition-colors shadow-sm hover:shadow\"\n              >\n                <div className=\"flex items-center justify-center h-24 mb-2 bg-gray-100 rounded\">\n                  {doc.type === \"pdf\" && <FileText size={40} className=\"text-red-500\" />}\n                  {doc.type === \"figma\" && <FileText size={40} className=\"text-purple-500\" />}\n                  {(doc.type === \"doc\" || doc.type === \"docx\") && <FileText size={40} className=\"text-blue-500\" />}\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"font-medium truncate\">{doc.name}</div>\n                  <div className=\"text-xs text-gray-500\">{doc.client}</div>\n                  <div className=\"text-xs text-gray-400\">\n                    {doc.date} • {doc.size}\n                  </div>\n                  {doc.versions > 1 && <div className=\"text-xs text-blue-600 mt-1\">{doc.versions} versions</div>}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"p-6\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Name\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Client/Project\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Date\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Size\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Versions\n                  </th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Actions\n                  </th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredDocuments.map((doc, idx) => (\n                  <tr key={idx} className=\"hover:bg-blue-50 transition-colors\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"flex items-center\">\n                        {doc.type === \"pdf\" && <FileText size={16} className=\"text-red-500 mr-2\" />}\n                        {doc.type === \"figma\" && <FileText size={16} className=\"text-purple-500 mr-2\" />}\n                        {(doc.type === \"doc\" || doc.type === \"docx\") && (\n                          <FileText size={16} className=\"text-blue-500 mr-2\" />\n                        )}\n                        <div className=\"text-sm font-medium text-gray-900\">{doc.name}</div>\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-sm text-gray-900\">{doc.client}</div>\n                      <div className=\"text-sm text-gray-500\">{doc.project}</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{doc.date}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{doc.size}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className=\"text-sm text-blue-600\">{doc.versions}</span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\n                      <button className=\"text-blue-600 hover:text-blue-900 mr-3\">\n                        <Download size={16} />\n                      </button>\n                      <button className=\"text-blue-600 hover:text-blue-900 mr-3\">\n                        <Link size={16} />\n                      </button>\n                      <button className=\"text-red-600 hover:text-red-900\">\n                        <Trash size={16} />\n                      </button>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n\n      {/* Upload Modal */}\n      {showUploadModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto\">\n            <div className=\"p-6 border-b bg-gradient-to-r from-blue-500 to-blue-600\">\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-xl font-bold text-white\">Upload Documents</h3>\n                <button\n                  onClick={() => setShowUploadModal(false)}\n                  className=\"text-white hover:text-gray-200 transition-colors\"\n                  disabled={isUploading}\n                >\n                  <X size={20} />\n                </button>\n              </div>\n            </div>\n\n            <div className=\"p-6\">\n              {/* Storage Warning */}\n              {storagePercentage > 75 && (\n                <div className=\"mb-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\n                  <div className=\"flex items-center gap-2 text-yellow-800\">\n                    <AlertTriangle size={16} />\n                    <span className=\"text-sm font-medium\">\n                      Storage {storagePercentage > 90 ? \"Critical\" : \"Warning\"}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-yellow-700 mt-1\">\n                    {storagePercentage > 90\n                      ? \"Storage is almost full. Upload may fail.\"\n                      : \"Storage is getting full. Consider cleaning up old files.\"}\n                  </p>\n                </div>\n              )}\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Select Client</label>\n                <select\n                  className=\"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  value={selectedClient}\n                  onChange={(e) => {\n                    setSelectedClient(e.target.value)\n                    setSelectedProject(\"\")\n                  }}\n                  disabled={isUploading}\n                >\n                  <option value=\"\">Select a client</option>\n                  {availableClients.map((client, idx) => (\n                    <option key={idx} value={client.name}>\n                      {client.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Select Project</label>\n                <select\n                  className=\"w-full p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  value={selectedProject}\n                  onChange={(e) => setSelectedProject(e.target.value)}\n                  disabled={!selectedClient || isUploading}\n                >\n                  <option value=\"\">Select a project</option>\n                  {availableProjects.map((project, idx) => (\n                    <option key={idx} value={project.name}>\n                      {project.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <label className=\"block text-sm font-medium text-gray-700\">Upload Files</label>\n                  <label className=\"flex items-center gap-2 text-sm\">\n                    <input\n                      type=\"checkbox\"\n                      checked={compressionEnabled}\n                      onChange={(e) => setCompressionEnabled(e.target.checked)}\n                      disabled={isUploading}\n                    />\n                    <span className=\"text-gray-600\">Compress images</span>\n                  </label>\n                </div>\n                <div\n                  className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:bg-gray-50 transition-colors\"\n                  onClick={triggerFileInput}\n                >\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    className=\"hidden\"\n                    multiple\n                    onChange={handleFileSelect}\n                    disabled={isUploading}\n                    accept=\".pdf,.doc,.docx,.jpg,.jpeg,.png,.gif,.txt\"\n                  />\n                  <UploadCloud size={40} className=\"mx-auto text-gray-400 mb-2\" />\n                  <p className=\"text-sm text-gray-500\">Click to browse or drag and drop files here</p>\n                  <p className=\"text-xs text-gray-400 mt-1\">\n                    Max {documentQuota.maxFileSize}MB per file • PDF, DOC, DOCX, JPG, PNG, GIF, TXT\n                  </p>\n                </div>\n              </div>\n\n              {uploadFiles.length > 0 && (\n                <div className=\"mb-4\">\n                  <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Selected Files:</h4>\n                  <div className=\"space-y-2 max-h-40 overflow-y-auto\">\n                    {uploadFiles.map((file, idx) => {\n                      const sizeInMB = (file.size / (1024 * 1024)).toFixed(1)\n                      const isOversized = file.size / (1024 * 1024) > documentQuota.maxFileSize\n\n                      return (\n                        <div\n                          key={idx}\n                          className={`flex items-center justify-between p-2 rounded ${isOversized ? \"bg-red-50 border border-red-200\" : \"bg-gray-50\"}`}\n                        >\n                          <div className=\"flex items-center\">\n                            <FileText size={16} className={`mr-2 ${isOversized ? \"text-red-500\" : \"text-blue-500\"}`} />\n                            <div>\n                              <span className=\"text-sm truncate max-w-[200px] block\">{file.name}</span>\n                              <span className={`text-xs ${isOversized ? \"text-red-600\" : \"text-gray-500\"}`}>\n                                {sizeInMB} MB {isOversized && \"(Too large)\"}\n                              </span>\n                            </div>\n                          </div>\n                          <button\n                            onClick={() => removeFile(idx)}\n                            className=\"text-gray-400 hover:text-red-500 transition-colors\"\n                            disabled={isUploading}\n                          >\n                            <X size={16} />\n                          </button>\n                        </div>\n                      )\n                    })}\n                  </div>\n                  <div className=\"mt-2 text-xs text-gray-600\">\n                    Total: {(uploadFiles.reduce((sum, file) => sum + file.size, 0) / (1024 * 1024)).toFixed(1)} MB\n                  </div>\n                </div>\n              )}\n\n              {isUploading && (\n                <div className=\"mb-4\">\n                  <div className=\"flex justify-between text-sm mb-1\">\n                    <span>Uploading...</span>\n                    <span>{uploadProgress}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${uploadProgress}%` }}\n                    ></div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex justify-end gap-2 mt-6\">\n                <button\n                  className=\"px-4 py-2 border rounded text-gray-700 hover:bg-gray-50 transition-colors\"\n                  onClick={() => setShowUploadModal(false)}\n                  disabled={isUploading}\n                >\n                  Cancel\n                </button>\n                <button\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors flex items-center gap-1 disabled:opacity-50\"\n                  onClick={handleUpload}\n                  disabled={uploadFiles.length === 0 || !selectedClient || !selectedProject || isUploading}\n                >\n                  {isUploading ? (\n                    <>Uploading...</>\n                  ) : (\n                    <>\n                      <UploadCloud size={16} />\n                      Upload ({uploadFiles.length} files)\n                    </>\n                  )}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Documents\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAiuBA;;;;;;WAAAA,QAAA;;;;;;;;wEA/tBwC;;;iCAajC;;;iCACuB;;;iCACiE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmB/F,MAAMC,SAAA,GAAsBA,CAAA;EAAA;EAAAC,aAAA,GAAAC,CAAA;EAC1B,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAE;EAAA;EAAA,CAAAH,aAAA,GAAAI,CAAA,QAAG,IAAAC,WAAA,CAAAC,aAAa;EACzC,MAAM;IAAEC;EAAO,CAAE;EAAA;EAAA,CAAAP,aAAA,GAAAI,CAAA,QAAGF,KAAA;EACpB,MAAMM,YAAA;EAAA;EAAA,CAAAR,aAAA,GAAAI,CAAA,QAAe,IAAAK,MAAA,CAAAC,MAAM,EAAmB;EAE9C,MAAM,CAACC,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAAZ,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAkB;EAC1D,MAAM,CAACC,cAAA,EAAgBC,iBAAA,CAAkB;EAAA;EAAA,CAAAf,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAC;EACrD,MAAM,CAACG,eAAA,EAAiBC,kBAAA,CAAmB;EAAA;EAAA,CAAAjB,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAC;EACvD,MAAM,CAACK,WAAA,EAAaC,cAAA,CAAe;EAAA;EAAA,CAAAnB,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAS,EAAE;EACzD,MAAM,CAACO,cAAA,EAAgBC,iBAAA,CAAkB;EAAA;EAAA,CAAArB,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAS;EAC7D,MAAM,CAACS,eAAA,EAAiBC,kBAAA,CAAmB;EAAA;EAAA,CAAAvB,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAS;EAC/D,MAAM,CAACW,cAAA,EAAgBC,iBAAA,CAAkB;EAAA;EAAA,CAAAzB,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAS;EAC7D,MAAM,CAACa,WAAA,EAAaC,cAAA,CAAe;EAAA;EAAA,CAAA3B,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAU;EACxD,MAAM,CAACe,kBAAA,EAAoBC,qBAAA,CAAsB;EAAA;EAAA,CAAA7B,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAU;EACtE,MAAM;IAAEiB,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAU,CAAE;EAAA;EAAA,CAAAjC,aAAA,GAAAI,CAAA,QAAG,IAAA8B,sBAAA,CAAAC,aAAa;EAE/D;EACA,MAAMC,aAAA;EAAA;EAAA,CAAApC,aAAA,GAAAI,CAAA,QAA+B;IACnCiC,MAAA,EAAQ;IACRC,WAAA,EAAa;IACbC,YAAA,EAAc;IACdC,WAAA,EAAa;IACbC,WAAA,EAAa;IACbb,kBAAA,EAAoB;EACtB;EAEA,MAAMc,gBAAA;EAAA;EAAA,CAAA1C,aAAA,GAAAI,CAAA,QAA4C;IAChDuC,iBAAA,EAAmB;IACnBC,qBAAA,EAAuB;IACvBC,oBAAA,EAAsB;IACtBC,yBAAA,EAA2B;IAC3BC,wBAAA,EAA0B;EAC5B;EAEA,MAAM,CAACC,aAAA,EAAeC,gBAAA,CAAiB;EAAA;EAAA,CAAAjD,aAAA,GAAAI,CAAA,QAAG,IAAAK,MAAA,CAAAI,QAAQ,EAAgBuB,aAAA;EAElE;EACA,MAAMc,SAAA;EAAA;EAAA,CAAAlD,aAAA,GAAAI,CAAA;EACJ;EAAA,CAAAJ,aAAA,GAAAmD,CAAA,WAAA5C,OAAA;EAAA;EAAA,CAAAP,aAAA,GAAAmD,CAAA,WAAW5C,OAAA,CAAQ6C,MAAM,GAAG;EAAA;EAAA,CAAApD,aAAA,GAAAmD,CAAA,WACxB5C,OAAA,CAAQ8C,OAAO,CAAEC,MAAA,IACf;IAAA;IAAAtD,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAAA,kCAAAJ,aAAA,GAAAmD,CAAA,WAAAG,MAAA,CAAOC,QAAQ;IAAA;IAAA,CAAAvD,aAAA,GAAAmD,CAAA,WAAIG,MAAA,CAAOC,QAAQ,CAACH,MAAM,GAAG;IAAA;IAAA,CAAApD,aAAA,GAAAmD,CAAA,WACxCG,MAAA,CAAOC,QAAQ,CAACF,OAAO,CAAEG,OAAA,IACvB;MAAA;MAAAxD,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAI,CAAA;MAAA,kCAAAJ,aAAA,GAAAmD,CAAA,WAAAK,OAAA,CAAQN,SAAS;MAAA;MAAA,CAAAlD,aAAA,GAAAmD,CAAA,WAAIK,OAAA,CAAQN,SAAS,CAACE,MAAM,GAAG;MAAA;MAAA,CAAApD,aAAA,GAAAmD,CAAA,WAC5CK,OAAA,CAAQN,SAAS,CAACO,GAAG,CAAEC,GAAA,IAAwE;QAAA;QAAA1D,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA;UAC7FuD,IAAA,EAAMD,GAAA,CAAIC,IAAI;UACdL,MAAA,EAAQA,MAAA,CAAOK,IAAI;UACnBH,OAAA,EAASA,OAAA,CAAQG,IAAI;UACrBC,IAAA,EAAMF,GAAA,CAAIG,UAAU;UACpBC,IAAA,EAAMJ,GAAA,CAAIC,IAAI,CAACI,KAAK,CAAC,KAAKC,GAAG;UAC7BC,IAAA,EAAMC,iBAAA;UACNC,QAAA,EAAUC,IAAA,CAAKC,KAAK,CAACD,IAAA,CAAKE,MAAM,KAAK,KAAK;QAC5C;MAAA;MAAA;MAAA,CAAAtE,aAAA,GAAAmD,CAAA,WACA,EAAE;IAAF,CAAE;IAAA;IAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAER,EAAE;EAAF,CAAE;EAAA;EAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAER,EAAE;EAER;EACA,MAAMoB,kBAAA;EAAA;EAAA,CAAAvE,aAAA,GAAAI,CAAA,QAAqB8C,SAAA,CAAUsB,MAAM,CAAC,CAACC,KAAA,EAAOf,GAAA;IAAA;IAAA1D,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAClD,OAAOqE,KAAA,GAAQC,MAAA,CAAOC,UAAU,CAACjB,GAAA,CAAIO,IAAI,CAACW,OAAO,CAAC,OAAO;EAC3D,GAAG;EAEH,SAASV,kBAAA;IAAA;IAAAlE,aAAA,GAAAC,CAAA;IACP,MAAM4E,KAAA;IAAA;IAAA,CAAA7E,aAAA,GAAAI,CAAA,QAAQ,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,SAAS;IAAA;IAAAJ,aAAA,GAAAI,CAAA;IACpF,OAAOyE,KAAK,CAACT,IAAA,CAAKC,KAAK,CAACD,IAAA,CAAKE,MAAM,KAAKO,KAAA,CAAMzB,MAAM,EAAE;EACxD;EAEA,MAAM0B,iBAAA;EAAA;EAAA,CAAA9E,aAAA,GAAAI,CAAA,QAAoB8C,SAAA,CAAU6B,MAAM,CAAErB,GAAA;IAAA;IAAA1D,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAC1C,IAAIU,cAAA,KAAmB,OAAO;MAAA;MAAAd,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAJ,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IACrC,IAAIU,cAAA,KAAmB,aAAa;MAAA;MAAAd,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MAAA,OAAOsD,GAAA,CAAIC,IAAI,CAACqB,WAAW,GAAGC,QAAQ,CAAC;IAAA;IAAA;IAAA;MAAAjF,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IAC3E,IAAIU,cAAA,KAAmB,aAAa;MAAA;MAAAd,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MAAA,OAAOsD,GAAA,CAAIC,IAAI,CAACqB,WAAW,GAAGC,QAAQ,CAAC;IAAA;IAAA;IAAA;MAAAjF,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IAC3E,IAAIU,cAAA,KAAmB,WAAW;MAAA;MAAAd,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MAAA,OAAO,CAAC,SAAS,MAAM,CAAC6E,QAAQ;MAAC;MAAA,CAAAjF,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAII,IAAI;MAAA;MAAA,CAAA9D,aAAA,GAAAmD,CAAA,WAAI;IAAA;IAAA;IAAA;MAAAnD,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IAC/E,OAAO;EACT;EAAA;EAAAJ,aAAA,GAAAI,CAAA;EAEA,MAAM8E,kBAAA,GAAsBC,KAAA;IAAA;IAAAnF,aAAA,GAAAC,CAAA;IAC1B,MAAMmF,MAAA;IAAA;IAAA,CAAApF,aAAA,GAAAI,CAAA,QAAmB,EAAE;IAC3B,IAAIiF,SAAA;IAAA;IAAA,CAAArF,aAAA,GAAAI,CAAA,QAAY;IAAA;IAAAJ,aAAA,GAAAI,CAAA;IAEhB,KAAK,MAAMkF,IAAA,IAAQH,KAAA,EAAO;MACxB,MAAMI,YAAA;MAAA;MAAA,CAAAvF,aAAA,GAAAI,CAAA,QAAekF,IAAA,CAAKrB,IAAI,IAAI,OAAO,IAAG;MAE5C;MAAA;MAAAjE,aAAA,GAAAI,CAAA;MACA,IAAImF,YAAA,GAAevC,aAAA,CAAcR,WAAW,EAAE;QAAA;QAAAxC,aAAA,GAAAmD,CAAA;QAAAnD,aAAA,GAAAI,CAAA;QAC5CgF,MAAA,CAAOI,IAAI,CAAC,SAASF,IAAA,CAAK3B,IAAI,6BAA6BX,aAAA,CAAcR,WAAW,IAAI;MAC1F;MAAA;MAAA;QAAAxC,aAAA,GAAAmD,CAAA;MAAA;MAAAnD,aAAA,GAAAI,CAAA;MAEAiF,SAAA,IAAaE,YAAA;IACf;IAEA;IAAA;IAAAvF,aAAA,GAAAI,CAAA;IACA,IAAImE,kBAAA,GAAqBc,SAAA,GAAYrC,aAAA,CAAcT,YAAY,EAAE;MAAA;MAAAvC,aAAA,GAAAmD,CAAA;MAC/D,MAAMsC,cAAA;MAAA;MAAA,CAAAzF,aAAA,GAAAI,CAAA,QAAiB4C,aAAA,CAAcT,YAAY,GAAGgC,kBAAA;MAAA;MAAAvE,aAAA,GAAAI,CAAA;MACpDgF,MAAA,CAAOI,IAAI,CACT,sCAAsCC,cAAA,CAAeC,OAAO,CAAC,mBAAmBL,SAAA,CAAUK,OAAO,CAAC,MAAM;IAE5G;IAAA;IAAA;MAAA1F,aAAA,GAAAmD,CAAA;IAAA;IAEA;IACA,MAAMwC,YAAA;IAAA;IAAA,CAAA3F,aAAA,GAAAI,CAAA,QAAe,CACnB,mBACA,sBACA,2EACA,cACA,aACA,aACA,aACD;IAAA;IAAAJ,aAAA,GAAAI,CAAA;IAED,KAAK,MAAMkF,IAAA,IAAQH,KAAA,EAAO;MAAA;MAAAnF,aAAA,GAAAI,CAAA;MACxB,IAAI,CAACuF,YAAA,CAAaV,QAAQ,CAACK,IAAA,CAAKxB,IAAI,GAAG;QAAA;QAAA9D,aAAA,GAAAmD,CAAA;QAAAnD,aAAA,GAAAI,CAAA;QACrCgF,MAAA,CAAOI,IAAI,CAAC,cAAcF,IAAA,CAAKxB,IAAI,yBAAyBwB,IAAA,CAAK3B,IAAI,GAAG;MAC1E;MAAA;MAAA;QAAA3D,aAAA,GAAAmD,CAAA;MAAA;IACF;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IAEA,OAAO;MACLwF,KAAA,EAAOR,MAAA,CAAOhC,MAAM,KAAK;MACzBgC;IACF;EACF;EAAA;EAAApF,aAAA,GAAAI,CAAA;EAEA,MAAMyF,YAAA,GAAe,MAAOP,IAAA;IAAA;IAAAtF,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAC1B;IACA;IAAI;IAAA,CAAAJ,aAAA,GAAAmD,CAAA,WAAAmC,IAAA,CAAKxB,IAAI,CAACgC,UAAU,CAAC;IAAA;IAAA,CAAA9F,aAAA,GAAAmD,CAAA,WAAamC,IAAA,CAAKrB,IAAI,GAAG,OAAO,OAAM;MAAA;MAAAjE,aAAA,GAAAmD,CAAA;MAC7D;MACA,MAAM4C,cAAA;MAAA;MAAA,CAAA/F,aAAA,GAAAI,CAAA,QAAiBgE,IAAA,CAAKC,KAAK,CAACiB,IAAA,CAAKrB,IAAI,GAAG,MAAK;MAAA;MACnD,MAAM+B,cAAA;MAAA;MAAA,CAAAhG,aAAA,GAAAI,CAAA,QAAiB,IAAI6F,IAAA,CAAK,CAACX,IAAA,CAAK,EAAEA,IAAA,CAAK3B,IAAI,EAAE;QACjDG,IAAA,EAAMwB,IAAA,CAAKxB,IAAI;QACfoC,YAAA,EAAcZ,IAAA,CAAKY;MACrB;MAEA;MAAA;MAAAlG,aAAA,GAAAI,CAAA;MACA+F,MAAA,CAAOC,cAAc,CAACJ,cAAA,EAAgB,QAAQ;QAC5CK,KAAA,EAAON,cAAA;QACPO,QAAA,EAAU;MACZ;MAAA;MAAAtG,aAAA,GAAAI,CAAA;MAEA,OAAO4F,cAAA;IACT;IAAA;IAAA;MAAAhG,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IACA,OAAOkF,IAAA;EACT;EAAA;EAAAtF,aAAA,GAAAI,CAAA;EAEA,MAAMmG,iBAAA,GAAoBA,CAAA;IAAA;IAAAvG,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACxBa,kBAAA,CAAmB;EACrB;EAAA;EAAAjB,aAAA,GAAAI,CAAA;EAEA,MAAMoG,gBAAA,GAAmB,MAAOC,CAAA;IAAA;IAAAzG,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAC9B,IAAIqG,CAAA,CAAEC,MAAM,CAACvB,KAAK,EAAE;MAAA;MAAAnF,aAAA,GAAAmD,CAAA;MAClB,IAAIwD,UAAA;MAAA;MAAA,CAAA3G,aAAA,GAAAI,CAAA,QAAawG,KAAA,CAAMC,IAAI,CAACJ,CAAA,CAAEC,MAAM,CAACvB,KAAK;MAE1C;MAAA;MAAAnF,aAAA,GAAAI,CAAA;MACA,IAAIwB,kBAAA,EAAoB;QAAA;QAAA5B,aAAA,GAAAmD,CAAA;QAAAnD,aAAA,GAAAI,CAAA;QACtBuG,UAAA,GAAa,MAAMG,OAAA,CAAQC,GAAG,CAACJ,UAAA,CAAWlD,GAAG,CAAE6B,IAAA,IAAS;UAAA;UAAAtF,aAAA,GAAAC,CAAA;UAAAD,aAAA,GAAAI,CAAA;UAAA,OAAAyF,YAAA,CAAaP,IAAA;QAAA;MACvE;MAAA;MAAA;QAAAtF,aAAA,GAAAmD,CAAA;MAAA;MAAAnD,aAAA,GAAAI,CAAA;MAEAe,cAAA,CAAewF,UAAA;IACjB;IAAA;IAAA;MAAA3G,aAAA,GAAAmD,CAAA;IAAA;EACF;EAAA;EAAAnD,aAAA,GAAAI,CAAA;EAEA,MAAM4G,gBAAA,GAAmBA,CAAA;IAAA;IAAAhH,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IACvB,IAAII,YAAA,CAAayG,OAAO,EAAE;MAAA;MAAAjH,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MACxBI,YAAA,CAAayG,OAAO,CAACC,KAAK;IAC5B;IAAA;IAAA;MAAAlH,aAAA,GAAAmD,CAAA;IAAA;EACF;EAAA;EAAAnD,aAAA,GAAAI,CAAA;EAEA,MAAM+G,YAAA,GAAe,MAAAA,CAAA;IAAA;IAAAnH,aAAA,GAAAC,CAAA;IACnB;IACA,MAAMmH,UAAA;IAAA;IAAA,CAAApH,aAAA,GAAAI,CAAA,SAAa8E,kBAAA,CAAmBhE,WAAA;IAAA;IAAAlB,aAAA,GAAAI,CAAA;IAEtC,IAAI,CAACgH,UAAA,CAAWxB,KAAK,EAAE;MAAA;MAAA5F,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MACrB4B,QAAA,CAAS,IAAAE,sBAAA,CAAAmF,mBAAmB,EAC1BD,UAAA,CAAWhC,MAAM,CAACkC,IAAI,CAAC,OACvB;QACExD,IAAA,EAAM;QACNyD,IAAA,EAAM;MACR;MAAA;MAAAvH,aAAA,GAAAI,CAAA;MAEF;IACF;IAAA;IAAA;MAAAJ,aAAA,GAAAmD,CAAA;IAAA;IAEA;IAAAnD,aAAA,GAAAI,CAAA;IACA,IAAIc,WAAA,CAAYkC,MAAM,KAAK,GAAG;MAAA;MAAApD,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MAC5B4B,QAAA,CAAS,IAAAE,sBAAA,CAAAmF,mBAAmB,EAAC,iCAAiC;QAC5DvD,IAAA,EAAM;QACNyD,IAAA,EAAM;MACR;MAAA;MAAAvH,aAAA,GAAAI,CAAA;MACA;IACF;IAAA;IAAA;MAAAJ,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IACA,IAAI,CAACgB,cAAA,EAAgB;MAAA;MAAApB,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MACnB4B,QAAA,CAAS,IAAAE,sBAAA,CAAAmF,mBAAmB,EAAC,0BAA0B;QACrDvD,IAAA,EAAM;QACNyD,IAAA,EAAM;MACR;MAAA;MAAAvH,aAAA,GAAAI,CAAA;MACA;IACF;IAAA;IAAA;MAAAJ,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IACA,IAAI,CAACkB,eAAA,EAAiB;MAAA;MAAAtB,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MACpB4B,QAAA,CAAS,IAAAE,sBAAA,CAAAmF,mBAAmB,EAAC,2BAA2B;QACtDvD,IAAA,EAAM;QACNyD,IAAA,EAAM;MACR;MAAA;MAAAvH,aAAA,GAAAI,CAAA;MACA;IACF;IAAA;IAAA;MAAAJ,aAAA,GAAAmD,CAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IAEAuB,cAAA,CAAe;IAAA;IAAA3B,aAAA,GAAAI,CAAA;IACf6B,UAAA;IAEA,MAAMuF,MAAA;IAAA;IAAA,CAAAxH,aAAA,GAAAI,CAAA,SAAS,MAAM,IAAA8B,sBAAA,CAAAuF,oBAAoB,EAAC;MAAA;MAAAzH,aAAA,GAAAC,CAAA;MACxC;MACA,IAAIyH,QAAA;MAAA;MAAA,CAAA1H,aAAA,GAAAI,CAAA,SAAW;MACf,MAAMuH,QAAA;MAAA;MAAA,CAAA3H,aAAA,GAAAI,CAAA,SAAWwH,WAAA,CAAY;QAAA;QAAA5H,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAC3BsH,QAAA,IAAY;QAAA;QAAA1H,aAAA,GAAAI,CAAA;QACZqB,iBAAA,CAAkBiG,QAAA;QAAA;QAAA1H,aAAA,GAAAI,CAAA;QAElB,IAAIsH,QAAA,IAAY,KAAK;UAAA;UAAA1H,aAAA,GAAAmD,CAAA;UAAAnD,aAAA,GAAAI,CAAA;UACnByH,aAAA,CAAcF,QAAA;QAChB;QAAA;QAAA;UAAA3H,aAAA,GAAAmD,CAAA;QAAA;MACF,GAAG;MAEH;MAAA;MAAAnD,aAAA,GAAAI,CAAA;MACA,MAAM,IAAI0G,OAAA,CAAQgB,OAAA,IAAW;QAAA;QAAA9H,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAA2H,UAAA,CAAWD,OAAA,EAAS;MAAA;MAEjD;MACA,MAAME,WAAA;MAAA;MAAA,CAAAhI,aAAA,GAAAI,CAAA,SAAcG,OAAA,CAAQ0H,SAAS,CAAEC,CAAA,IAAM;QAAA;QAAAlI,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAA8H,CAAA,CAAEvE,IAAI,KAAKvC,cAAA;MAAA;MAAA;MAAApB,aAAA,GAAAI,CAAA;MACxD,IAAI4H,WAAA,KAAgB,CAAC,GAAG;QAAA;QAAAhI,aAAA,GAAAmD,CAAA;QAAAnD,aAAA,GAAAI,CAAA;QACtB,MAAM,IAAI+H,KAAA,CAAM;MAClB;MAAA;MAAA;QAAAnI,aAAA,GAAAmD,CAAA;MAAA;MAEA,MAAMiF,YAAA;MAAA;MAAA,CAAApI,aAAA,GAAAI,CAAA,SAAeG,OAAO,CAACyH,WAAA,CAAY,CAACzE,QAAQ,CAAC0E,SAAS,CAAEI,CAAA,IAAM;QAAA;QAAArI,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAiI,CAAA,CAAE1E,IAAI,KAAKrC,eAAA;MAAA;MAAA;MAAAtB,aAAA,GAAAI,CAAA;MAC/E,IAAIgI,YAAA,KAAiB,CAAC,GAAG;QAAA;QAAApI,aAAA,GAAAmD,CAAA;QAAAnD,aAAA,GAAAI,CAAA;QACvB,MAAM,IAAI+H,KAAA,CAAM;MAClB;MAAA;MAAA;QAAAnI,aAAA,GAAAmD,CAAA;MAAA;MAEA,MAAMmF,YAAA;MAAA;MAAA,CAAAtI,aAAA,GAAAI,CAAA,SAAec,WAAA,CAAYuC,GAAG,CAAE6B,IAAA,IAAS;QAAA;QAAAtF,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAkF,IAAA,CAAK3B,IAAI;MAAJ,CAAI;MAExD;MACA,MAAM4E,YAAA;MAAA;MAAA,CAAAvI,aAAA,GAAAI,CAAA,SAAec,WAAA,CAAYsD,MAAM,CAAC,CAACC,KAAA,EAAOa,IAAA,KAAS;QAAA;QAAAtF,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAqE,KAAA,GAAQa,IAAA,CAAKrB,IAAI,IAAI,OAAO,IAAG;MAAA,GAAI;MAAA;MAAAjE,aAAA,GAAAI,CAAA;MAE5F,OAAO;QAAEmI,YAAA;QAAcD;MAAa;IACtC,GAAG;IAAA;IAAAtI,aAAA,GAAAI,CAAA;IAEH,IAAIoH,MAAA,CAAOzF,KAAK,EAAE;MAAA;MAAA/B,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MAChB4B,QAAA,CAASwF,MAAA,CAAOzF,KAAK;IACvB,OAAO;MAAA;MAAA/B,aAAA,GAAAmD,CAAA;MAAAnD,aAAA,GAAAI,CAAA;MAAA,IAAIoH,MAAA,CAAOgB,IAAI,EAAE;QAAA;QAAAxI,aAAA,GAAAmD,CAAA;QAAAnD,aAAA,GAAAI,CAAA;QACtB6C,gBAAA,CAAkBwF,IAAA,IAAU;UAAA;UAAAzI,aAAA,GAAAC,CAAA;UAAAD,aAAA,GAAAI,CAAA;UAAA;YAC1B,GAAGqI,IAAI;YACPnG,WAAA,EAAamG,IAAA,CAAKnG,WAAW,GAAGkF,MAAA,CAAOgB,IAAI,CAAED;UAC/C;QAAA;QAEA;QAAA;QAAAvI,aAAA,GAAAI,CAAA;QACA4B,QAAA,CAAS,IAAAE,sBAAA,CAAAmF,mBAAmB,EAAC,oCAAoC;UAC/DvD,IAAA,EAAM;UACNyD,IAAA,EAAM;QACR;QAEA;QAAA;QAAAvH,aAAA,GAAAI,CAAA;QACA2H,UAAA,CAAW;UAAA;UAAA/H,aAAA,GAAAC,CAAA;UAAAD,aAAA,GAAAI,CAAA;UACTqB,iBAAA,CAAkB;UAAA;UAAAzB,aAAA,GAAAI,CAAA;UAClBe,cAAA,CAAe,EAAE;UAAA;UAAAnB,aAAA,GAAAI,CAAA;UACjBiB,iBAAA,CAAkB;UAAA;UAAArB,aAAA,GAAAI,CAAA;UAClBmB,kBAAA,CAAmB;UAAA;UAAAvB,aAAA,GAAAI,CAAA;UACnBa,kBAAA,CAAmB;UAAA;UAAAjB,aAAA,GAAAI,CAAA;UACnB6B,UAAA;QACF,GAAG;MACL;MAAA;MAAA;QAAAjC,aAAA,GAAAmD,CAAA;MAAA;IAAA;IAAA;IAAAnD,aAAA,GAAAI,CAAA;IAEAuB,cAAA,CAAe;EACjB;EAAA;EAAA3B,aAAA,GAAAI,CAAA;EAEA,MAAMsI,UAAA,GAAcC,KAAA;IAAA;IAAA3I,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAClBe,cAAA,CAAgBsH,IAAA,IAAS;MAAA;MAAAzI,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAI,CAAA;MAAA,OAAAqI,IAAA,CAAK1D,MAAM,CAAC,CAAC6D,CAAA,EAAGC,CAAA,KAAM;QAAA;QAAA7I,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAI,CAAA;QAAA,OAAAyI,CAAA,KAAMF,KAAA;MAAA;IAAA;EACvD;EAAA;EAAA3I,aAAA,GAAAI,CAAA;EAEA,MAAM0I,kBAAA,GAAqB,MAAAA,CAAA;IAAA;IAAA9I,aAAA,GAAAC,CAAA;IACzB;IACA;IAEA;IACA;IACA;IACA;IAEA,MAAM8I,UAAA;IAAA;IAAA,CAAA/I,aAAA,GAAAI,CAAA,SAAagE,IAAA,CAAKE,MAAM,KAAK,IAAG;IAAA;;;IACtCrB,gBAAA,CAAkBwF,IAAA,IAAU;MAAA;MAAAzI,aAAA,GAAAC,CAAA;MAAAD,aAAA,GAAAI,CAAA;MAAA;QAC1B,GAAGqI,IAAI;QACPnG,WAAA,EAAa8B,IAAA,CAAK4E,GAAG,CAAC,GAAGP,IAAA,CAAKnG,WAAW,GAAGyG,UAAA;MAC9C;IAAA;IAAA;IAAA/I,aAAA,GAAAI,CAAA;IAEA4B,QAAA,CAAS,IAAAE,sBAAA,CAAAmF,mBAAmB,EAAC,4BAA4B0B,UAAA,CAAWrD,OAAO,CAAC,kBAAkB,EAAE;MAC9F5B,IAAA,EAAM;MACNyD,IAAA,EAAM;IACR;EACF;EAEA,MAAM0B,gBAAA;EAAA;EAAA,CAAAjJ,aAAA,GAAAI,CAAA;EAAmB;EAAA,CAAAJ,aAAA,GAAAmD,CAAA,WAAA5C,OAAA;EAAA;EAAA,CAAAP,aAAA,GAAAmD,CAAA,WAAW,EAAE;EACtC,MAAM+F,iBAAA;EAAA;EAAA,CAAAlJ,aAAA,GAAAI,CAAA,SAAoBgB,cAAA;EAAA;EAAA,CAAApB,aAAA,GAAAmD,CAAA;EAAiB;EAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAA5C,OAAA,CAAQ4I,IAAI,CAAEjB,CAAA,IAAM;IAAA;IAAAlI,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAI,CAAA;IAAA,OAAA8H,CAAA,CAAEvE,IAAI,KAAKvC,cAAA;EAAA,IAAiBmC,QAAA;EAAA;EAAA,CAAAvD,aAAA,GAAAmD,CAAA,WAAY,EAAE;EAAA;EAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAG,EAAE;EAE9G,MAAMiG,iBAAA;EAAA;EAAA,CAAApJ,aAAA,GAAAI,CAAA,SAAoBmE,kBAAC,GAAqBvB,aAAA,CAAcT,YAAY,GAAI;EAAA;EAAAvC,aAAA,GAAAI,CAAA;EAE9E,oBACE,IAAAiJ,WAAA,CAAAC,IAAA,EAAC;IAAIC,SAAA,EAAU;;IACZ;IAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAArB,QAAA;IAAA;IAAA,CAAA9B,aAAA,GAAAmD,CAAA,WAAYpB,KAAA;IAAA;IAAA,CAAA/B,aAAA,GAAAmD,CAAA,wBACX,IAAAkG,WAAA,CAAAG,GAAA,EAAC;MAAID,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAG,GAAA,EAACtH,sBAAA,CAAAuH,oBAAoB;QACnB1H,KAAA,EAAOA,KAAA;QACP2H,KAAA,EAAOzH;;sBAIb,IAAAoH,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;QAAGD,SAAA,EAAU;kBAAqB;uBACnC,IAAAF,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;UAAIC,SAAA,EAAU;kCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;YACCG,OAAA,EAASA,CAAA,KAAM;cAAA;cAAA3J,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAI,CAAA;cAAA,OAAAQ,WAAA,CAAY;YAAA;YAC3B2I,SAAA,EAAW,aAAa5I,QAAA,KAAa;YAAA;YAAA,CAAAX,aAAA,GAAAmD,CAAA,WAAS;YAAA;YAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAA2B,aAAY;sBAErF,iBAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAC,IAAI;cAAC5F,IAAA,EAAM;;2BAEd,IAAAoF,WAAA,CAAAG,GAAA,EAAC;YACCG,OAAA,EAASA,CAAA,KAAM;cAAA;cAAA3J,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAI,CAAA;cAAA,OAAAQ,WAAA,CAAY;YAAA;YAC3B2I,SAAA,EAAW,aAAa5I,QAAA,KAAa;YAAA;YAAA,CAAAX,aAAA,GAAAmD,CAAA,WAAS;YAAA;YAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAA2B,aAAY;sBAErF,iBAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAE,OAAO;cAAC7F,IAAA,EAAM;;;yBAGnB,IAAAoF,WAAA,CAAAC,IAAA,EAAC;UACCC,SAAA,EAAU;UACVI,OAAA,EAASpD,iBAAA;kCAET,IAAA8C,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAG,WAAW;YAAC9F,IAAA,EAAM;cAAM;;;qBAO/B,IAAAoF,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;UAAIC,SAAA,EAAU;kCACb,IAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAI,SAAS;YAAC/F,IAAA,EAAM;YAAIsF,SAAA,EAAU;2BAC/B,IAAAF,WAAA,CAAAG,GAAA,EAAC;YAAKD,SAAA,EAAU;sBAAc;;yBAEhC,IAAAF,WAAA,CAAAG,GAAA,EAAC;UAAOG,OAAA,EAASb,kBAAA;UAAoBS,SAAA,EAAU;oBAA4C;;uBAI7F,IAAAF,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;UAAID,SAAA,EAAU;oBACb,iBAAAF,WAAA,CAAAG,GAAA,EAAC;YAAID,SAAA,EAAU;sBACb,iBAAAF,WAAA,CAAAG,GAAA,EAAC;cACCD,SAAA,EAAW,gDACTH,iBAAA,GAAoB;cAAA;cAAA,CAAApJ,aAAA,GAAAmD,CAAA,WAAK;cAAA;cAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAeiG,iBAAA,GAAoB;cAAA;cAAA,CAAApJ,aAAA,GAAAmD,CAAA,WAAK;cAAA;cAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAkB,kBACnF;cACF8G,KAAA,EAAO;gBAAEC,KAAA,EAAO,GAAG9F,IAAA,CAAK+F,GAAG,CAACf,iBAAA,EAAmB;cAAQ;;;yBAI7D,IAAAC,WAAA,CAAAC,IAAA,EAAC;UAAIC,SAAA,EAAU;qBACZhF,kBAAA,CAAmBmB,OAAO,CAAC,IAAG,UAAO1C,aAAA,CAAcT,YAAY,EAAC;;;MAGpE;MAAA,CAAAvC,aAAA,GAAAmD,CAAA,WAAAiG,iBAAA,GAAoB;MAAA;MAAA,CAAApJ,aAAA,GAAAmD,CAAA,wBACnB,IAAAkG,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAQ,aAAa;UAACnG,IAAA,EAAM;yBACrB,IAAAoF,WAAA,CAAAG,GAAA,EAAC;oBAAK;;;qBAKZ,IAAAH,WAAA,CAAAC,IAAA,EAAC;MAAIC,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;UAAIC,SAAA,EAAU;kCACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;YACCK,OAAA,EAASA,CAAA,KAAM;cAAA;cAAA3J,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAI,CAAA;cAAA,OAAAW,iBAAA,CAAkB;YAAA;YACjCwI,SAAA,EAAW,iCACTzI,cAAA,KAAmB;YAAA;YAAA,CAAAd,aAAA,GAAAmD,CAAA,WACf;YAAA;YAAA,CAAAnD,aAAA,GAAAmD,CAAA,WACA,sCACJ;uBACH,eACa2B,iBAAA,CAAkB1B,MAAM,EAAC;2BAEvC,IAAAiG,WAAA,CAAAG,GAAA,EAAC;YACCG,OAAA,EAASA,CAAA,KAAM;cAAA;cAAA3J,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAI,CAAA;cAAA,OAAAW,iBAAA,CAAkB;YAAA;YACjCwI,SAAA,EAAW,iCACTzI,cAAA,KAAmB;YAAA;YAAA,CAAAd,aAAA,GAAAmD,CAAA,WACf;YAAA;YAAA,CAAAnD,aAAA,GAAAmD,CAAA,WACA,sCACJ;sBACH;2BAGD,IAAAkG,WAAA,CAAAG,GAAA,EAAC;YACCG,OAAA,EAASA,CAAA,KAAM;cAAA;cAAA3J,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAI,CAAA;cAAA,OAAAW,iBAAA,CAAkB;YAAA;YACjCwI,SAAA,EAAW,iCACTzI,cAAA,KAAmB;YAAA;YAAA,CAAAd,aAAA,GAAAmD,CAAA,WACf;YAAA;YAAA,CAAAnD,aAAA,GAAAmD,CAAA,WACA,sCACJ;sBACH;2BAGD,IAAAkG,WAAA,CAAAG,GAAA,EAAC;YACCG,OAAA,EAASA,CAAA,KAAM;cAAA;cAAA3J,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAI,CAAA;cAAA,OAAAW,iBAAA,CAAkB;YAAA;YACjCwI,SAAA,EAAW,iCACTzI,cAAA,KAAmB;YAAA;YAAA,CAAAd,aAAA,GAAAmD,CAAA,WACf;YAAA;YAAA,CAAAnD,aAAA,GAAAmD,CAAA,WACA,sCACJ;sBACH;;yBAKH,IAAAkG,WAAA,CAAAC,IAAA,EAAC;UAAIC,SAAA,EAAU;kCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;YAAM1F,IAAA,EAAK;YAAOuG,WAAA,EAAY;YAAsBd,SAAA,EAAU;2BAC/D,IAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAU,MAAM;YAACf,SAAA,EAAU;YAAsCtF,IAAA,EAAM;;;UAIjEtD,QAAA,KAAa;MAAA;MAAA,cAAAX,aAAA,GAAAmD,CAAA,WACZ,IAAAkG,WAAA,CAAAG,GAAA,EAAC;QAAID,SAAA,EAAU;kBACZzE,iBAAA,CAAkBrB,GAAG,CAAC,CAACC,GAAA,EAAK6G,GAAA,KAC3B;UAAA;UAAAvK,aAAA,GAAAC,CAAA;UAAAD,aAAA,GAAAI,CAAA;UAAA,OAD2B,aAC3B,IAAAiJ,WAAA,CAAAC,IAAA,EAAC;YAECC,SAAA,EAAU;oCAEV,IAAAF,WAAA,CAAAC,IAAA,EAAC;cAAIC,SAAA,EAAU;;cACZ;cAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAII,IAAI,KAAK;cAAA;cAAA,CAAA9D,aAAA,GAAAmD,CAAA,wBAAS,IAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAY,QAAQ;gBAACvG,IAAA,EAAM;gBAAIsF,SAAA,EAAU;;cACpD;cAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAII,IAAI,KAAK;cAAA;cAAA,CAAA9D,aAAA,GAAAmD,CAAA,wBAAW,IAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAY,QAAQ;gBAACvG,IAAA,EAAM;gBAAIsF,SAAA,EAAU;mBACrD;cAAA;cAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAII,IAAI,KAAK;cAAA;cAAA,CAAA9D,aAAA,GAAAmD,CAAA,WAASO,GAAA,CAAII,IAAI,KAAK,MAAK;cAAA;cAAA,CAAA9D,aAAA,GAAAmD,CAAA,wBAAM,IAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAY,QAAQ;gBAACvG,IAAA,EAAM;gBAAIsF,SAAA,EAAU;;6BAEhF,IAAAF,WAAA,CAAAC,IAAA,EAAC;cAAIC,SAAA,EAAU;sCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAID,SAAA,EAAU;0BAAwB7F,GAAA,CAAIC;+BAC3C,IAAA0F,WAAA,CAAAG,GAAA,EAAC;gBAAID,SAAA,EAAU;0BAAyB7F,GAAA,CAAIJ;+BAC5C,IAAA+F,WAAA,CAAAC,IAAA,EAAC;gBAAIC,SAAA,EAAU;2BACZ7F,GAAA,CAAIE,IAAI,EAAC,OAAIF,GAAA,CAAIO,IAAI;;cAEvB;cAAA,CAAAjE,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAIS,QAAQ,GAAG;cAAA;cAAA,CAAAnE,aAAA,GAAAmD,CAAA,wBAAK,IAAAkG,WAAA,CAAAC,IAAA,EAAC;gBAAIC,SAAA,EAAU;2BAA8B7F,GAAA,CAAIS,QAAQ,EAAC;;;aAd5EoG,GAAA;QAAA;;;gDAoBX,IAAAlB,WAAA,CAAAG,GAAA,EAAC;QAAID,SAAA,EAAU;kBACb,iBAAAF,WAAA,CAAAC,IAAA,EAAC;UAAMC,SAAA,EAAU;kCACf,IAAAF,WAAA,CAAAG,GAAA,EAAC;YAAMD,SAAA,EAAU;sBACf,iBAAAF,WAAA,CAAAC,IAAA,EAAC;sCACC,IAAAD,WAAA,CAAAG,GAAA,EAAC;gBAAGD,SAAA,EAAU;0BAAiF;+BAG/F,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAGD,SAAA,EAAU;0BAAiF;+BAG/F,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAGD,SAAA,EAAU;0BAAiF;+BAG/F,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAGD,SAAA,EAAU;0BAAiF;+BAG/F,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAGD,SAAA,EAAU;0BAAiF;+BAG/F,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAGD,SAAA,EAAU;0BAAiF;;;2BAKnG,IAAAF,WAAA,CAAAG,GAAA,EAAC;YAAMD,SAAA,EAAU;sBACdzE,iBAAA,CAAkBrB,GAAG,CAAC,CAACC,GAAA,EAAK6G,GAAA,KAC3B;cAAA;cAAAvK,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAI,CAAA;cAAA,OAD2B,aAC3B,IAAAiJ,WAAA,CAAAC,IAAA,EAAC;gBAAaC,SAAA,EAAU;wCACtB,IAAAF,WAAA,CAAAG,GAAA,EAAC;kBAAGD,SAAA,EAAU;4BACZ,iBAAAF,WAAA,CAAAC,IAAA,EAAC;oBAAIC,SAAA,EAAU;;oBACZ;oBAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAII,IAAI,KAAK;oBAAA;oBAAA,CAAA9D,aAAA,GAAAmD,CAAA,wBAAS,IAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAY,QAAQ;sBAACvG,IAAA,EAAM;sBAAIsF,SAAA,EAAU;;oBACpD;oBAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAII,IAAI,KAAK;oBAAA;oBAAA,CAAA9D,aAAA,GAAAmD,CAAA,wBAAW,IAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAY,QAAQ;sBAACvG,IAAA,EAAM;sBAAIsF,SAAA,EAAU;yBACrD;oBAAA;oBAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAAO,GAAA,CAAII,IAAI,KAAK;oBAAA;oBAAA,CAAA9D,aAAA,GAAAmD,CAAA,WAASO,GAAA,CAAII,IAAI,KAAK,MAAK;oBAAA;oBAAA,CAAA9D,aAAA,GAAAmD,CAAA,wBACxC,IAAAkG,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAY,QAAQ;sBAACvG,IAAA,EAAM;sBAAIsF,SAAA,EAAU;sCAEhC,IAAAF,WAAA,CAAAG,GAAA,EAAC;sBAAID,SAAA,EAAU;gCAAqC7F,GAAA,CAAIC;;;iCAG5D,IAAA0F,WAAA,CAAAC,IAAA,EAAC;kBAAGC,SAAA,EAAU;0CACZ,IAAAF,WAAA,CAAAG,GAAA,EAAC;oBAAID,SAAA,EAAU;8BAAyB7F,GAAA,CAAIJ;mCAC5C,IAAA+F,WAAA,CAAAG,GAAA,EAAC;oBAAID,SAAA,EAAU;8BAAyB7F,GAAA,CAAIF;;iCAE9C,IAAA6F,WAAA,CAAAG,GAAA,EAAC;kBAAGD,SAAA,EAAU;4BAAqD7F,GAAA,CAAIE;iCACvE,IAAAyF,WAAA,CAAAG,GAAA,EAAC;kBAAGD,SAAA,EAAU;4BAAqD7F,GAAA,CAAIO;iCACvE,IAAAoF,WAAA,CAAAG,GAAA,EAAC;kBAAGD,SAAA,EAAU;4BACZ,iBAAAF,WAAA,CAAAG,GAAA,EAAC;oBAAKD,SAAA,EAAU;8BAAyB7F,GAAA,CAAIS;;iCAE/C,IAAAkF,WAAA,CAAAC,IAAA,EAAC;kBAAGC,SAAA,EAAU;0CACZ,IAAAF,WAAA,CAAAG,GAAA,EAAC;oBAAOD,SAAA,EAAU;8BAChB,iBAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAa,QAAQ;sBAACxG,IAAA,EAAM;;mCAElB,IAAAoF,WAAA,CAAAG,GAAA,EAAC;oBAAOD,SAAA,EAAU;8BAChB,iBAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAc,IAAI;sBAACzG,IAAA,EAAM;;mCAEd,IAAAoF,WAAA,CAAAG,GAAA,EAAC;oBAAOD,SAAA,EAAU;8BAChB,iBAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAe,KAAK;sBAAC1G,IAAA,EAAM;;;;iBA5BVsG,GAAA;YAAA;;;;;IAwCpB;IAAA,CAAAvK,aAAA,GAAAmD,CAAA,WAAAnC,eAAA;IAAA;IAAA,CAAAhB,aAAA,GAAAmD,CAAA,wBACC,IAAAkG,WAAA,CAAAG,GAAA,EAAC;MAAID,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAC,IAAA,EAAC;QAAIC,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;UAAID,SAAA,EAAU;oBACb,iBAAAF,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;cAAGD,SAAA,EAAU;wBAA+B;6BAC7C,IAAAF,WAAA,CAAAG,GAAA,EAAC;cACCG,OAAA,EAASA,CAAA,KAAM;gBAAA;gBAAA3J,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OAAAa,kBAAA,CAAmB;cAAA;cAClCsI,SAAA,EAAU;cACVqB,QAAA,EAAUlJ,WAAA;wBAEV,iBAAA2H,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAiB,CAAC;gBAAC5G,IAAA,EAAM;;;;yBAKf,IAAAoF,WAAA,CAAAC,IAAA,EAAC;UAAIC,SAAA,EAAU;;UAEZ;UAAA,CAAAvJ,aAAA,GAAAmD,CAAA,WAAAiG,iBAAA,GAAoB;UAAA;UAAA,CAAApJ,aAAA,GAAAmD,CAAA,wBACnB,IAAAkG,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;cAAIC,SAAA,EAAU;sCACb,IAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAQ,aAAa;gBAACnG,IAAA,EAAM;+BACrB,IAAAoF,WAAA,CAAAC,IAAA,EAAC;gBAAKC,SAAA,EAAU;2BAAsB,YAC3BH,iBAAA,GAAoB;gBAAA;gBAAA,CAAApJ,aAAA,GAAAmD,CAAA,WAAK;gBAAA;gBAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAa;;6BAGnD,IAAAkG,WAAA,CAAAG,GAAA,EAAC;cAAED,SAAA,EAAU;wBACVH,iBAAA,GAAoB;cAAA;cAAA,CAAApJ,aAAA,GAAAmD,CAAA,WACjB;cAAA;cAAA,CAAAnD,aAAA,GAAAmD,CAAA,WACA;;4BAKV,IAAAkG,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;cAAMD,SAAA,EAAU;wBAA+C;6BAChE,IAAAF,WAAA,CAAAC,IAAA,EAAC;cACCC,SAAA,EAAU;cACVlD,KAAA,EAAOjF,cAAA;cACP0J,QAAA,EAAWrE,CAAA;gBAAA;gBAAAzG,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBACTiB,iBAAA,CAAkBoF,CAAA,CAAEC,MAAM,CAACL,KAAK;gBAAA;gBAAArG,aAAA,GAAAI,CAAA;gBAChCmB,kBAAA,CAAmB;cACrB;cACAqJ,QAAA,EAAUlJ,WAAA;sCAEV,IAAA2H,WAAA,CAAAG,GAAA,EAAC;gBAAOnD,KAAA,EAAM;0BAAG;kBAChB4C,gBAAA,CAAiBxF,GAAG,CAAC,CAACH,MAAA,EAAQiH,GAAA,KAC7B;gBAAA;gBAAAvK,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OAD6B,aAC7B,IAAAiJ,WAAA,CAAAG,GAAA,EAAC;kBAAiBnD,KAAA,EAAO/C,MAAA,CAAOK,IAAI;4BACjCL,MAAA,CAAOK;mBADG4G,GAAA;cAAA;;2BAOnB,IAAAlB,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;cAAMD,SAAA,EAAU;wBAA+C;6BAChE,IAAAF,WAAA,CAAAC,IAAA,EAAC;cACCC,SAAA,EAAU;cACVlD,KAAA,EAAO/E,eAAA;cACPwJ,QAAA,EAAWrE,CAAA,IAAM;gBAAA;gBAAAzG,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OAAAmB,kBAAA,CAAmBkF,CAAA,CAAEC,MAAM,CAACL,KAAK;cAAA;cAClDuE,QAAA;cAAU;cAAA,CAAA5K,aAAA,GAAAmD,CAAA,YAAC/B,cAAA;cAAA;cAAA,CAAApB,aAAA,GAAAmD,CAAA,WAAkBzB,WAAA;sCAE7B,IAAA2H,WAAA,CAAAG,GAAA,EAAC;gBAAOnD,KAAA,EAAM;0BAAG;kBAChB6C,iBAAA,CAAkBzF,GAAG,CAAC,CAACD,OAAA,EAAS+G,GAAA,KAC/B;gBAAA;gBAAAvK,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OAD+B,aAC/B,IAAAiJ,WAAA,CAAAG,GAAA,EAAC;kBAAiBnD,KAAA,EAAO7C,OAAA,CAAQG,IAAI;4BAClCH,OAAA,CAAQG;mBADE4G,GAAA;cAAA;;2BAOnB,IAAAlB,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;cAAIC,SAAA,EAAU;sCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAMD,SAAA,EAAU;0BAA0C;+BAC3D,IAAAF,WAAA,CAAAC,IAAA,EAAC;gBAAMC,SAAA,EAAU;wCACf,IAAAF,WAAA,CAAAG,GAAA,EAAC;kBACC1F,IAAA,EAAK;kBACLiH,OAAA,EAASnJ,kBAAA;kBACTkJ,QAAA,EAAWrE,CAAA,IAAM;oBAAA;oBAAAzG,aAAA,GAAAC,CAAA;oBAAAD,aAAA,GAAAI,CAAA;oBAAA,OAAAyB,qBAAA,CAAsB4E,CAAA,CAAEC,MAAM,CAACqE,OAAO;kBAAA;kBACvDH,QAAA,EAAUlJ;iCAEZ,IAAA2H,WAAA,CAAAG,GAAA,EAAC;kBAAKD,SAAA,EAAU;4BAAgB;;;6BAGpC,IAAAF,WAAA,CAAAC,IAAA,EAAC;cACCC,SAAA,EAAU;cACVI,OAAA,EAAS3C,gBAAA;sCAET,IAAAqC,WAAA,CAAAG,GAAA,EAAC;gBACC1F,IAAA,EAAK;gBACLkH,GAAA,EAAKxK,YAAA;gBACL+I,SAAA,EAAU;gBACV0B,QAAQ;gBACRH,QAAA,EAAUtE,gBAAA;gBACVoE,QAAA,EAAUlJ,WAAA;gBACVwJ,MAAA,EAAO;+BAET,IAAA7B,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAG,WAAW;gBAAC9F,IAAA,EAAM;gBAAIsF,SAAA,EAAU;+BACjC,IAAAF,WAAA,CAAAG,GAAA,EAAC;gBAAED,SAAA,EAAU;0BAAwB;+BACrC,IAAAF,WAAA,CAAAC,IAAA,EAAC;gBAAEC,SAAA,EAAU;2BAA6B,QACnCvG,aAAA,CAAcR,WAAW,EAAC;;;;UAKpC;UAAA,CAAAxC,aAAA,GAAAmD,CAAA,WAAAjC,WAAA,CAAYkC,MAAM,GAAG;UAAA;UAAA,CAAApD,aAAA,GAAAmD,CAAA,wBACpB,IAAAkG,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;cAAGD,SAAA,EAAU;wBAAyC;6BACvD,IAAAF,WAAA,CAAAG,GAAA,EAAC;cAAID,SAAA,EAAU;wBACZrI,WAAA,CAAYuC,GAAG,CAAC,CAAC6B,IAAA,EAAMiF,GAAA;gBAAA;gBAAAvK,aAAA,GAAAC,CAAA;gBACtB,MAAMkL,QAAA;gBAAA;gBAAA,CAAAnL,aAAA,GAAAI,CAAA,SAAW,CAACkF,IAAA,CAAKrB,IAAI,IAAI,OAAO,IAAG,CAAC,EAAGyB,OAAO,CAAC;gBACrD,MAAM0F,WAAA;gBAAA;gBAAA,CAAApL,aAAA,GAAAI,CAAA,SAAckF,IAAA,CAAKrB,IAAI,IAAI,OAAO,IAAG,IAAKjB,aAAA,CAAcR,WAAW;gBAAA;gBAAAxC,aAAA,GAAAI,CAAA;gBAEzE,oBACE,IAAAiJ,WAAA,CAAAC,IAAA,EAAC;kBAECC,SAAA,EAAW,iDAAiD6B,WAAA;kBAAA;kBAAA,CAAApL,aAAA,GAAAmD,CAAA,WAAc;kBAAA;kBAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAoC,eAAc;0CAE5H,IAAAkG,WAAA,CAAAC,IAAA,EAAC;oBAAIC,SAAA,EAAU;4CACb,IAAAF,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAY,QAAQ;sBAACvG,IAAA,EAAM;sBAAIsF,SAAA,EAAW,QAAQ6B,WAAA;sBAAA;sBAAA,CAAApL,aAAA,GAAAmD,CAAA,WAAc;sBAAA;sBAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAiB;qCACtE,IAAAkG,WAAA,CAAAC,IAAA,EAAC;8CACC,IAAAD,WAAA,CAAAG,GAAA,EAAC;wBAAKD,SAAA,EAAU;kCAAwCjE,IAAA,CAAK3B;uCAC7D,IAAA0F,WAAA,CAAAC,IAAA,EAAC;wBAAKC,SAAA,EAAW,WAAW6B,WAAA;wBAAA;wBAAA,CAAApL,aAAA,GAAAmD,CAAA,WAAc;wBAAA;wBAAA,CAAAnD,aAAA,GAAAmD,CAAA,WAAiB,kBAAiB;mCACzEgI,QAAA,EAAS;wBAAK;wBAAA,CAAAnL,aAAA,GAAAmD,CAAA,WAAAiI,WAAA;wBAAA;wBAAA,CAAApL,aAAA,GAAAmD,CAAA,WAAe;;;mCAIpC,IAAAkG,WAAA,CAAAG,GAAA,EAAC;oBACCG,OAAA,EAASA,CAAA,KAAM;sBAAA;sBAAA3J,aAAA,GAAAC,CAAA;sBAAAD,aAAA,GAAAI,CAAA;sBAAA,OAAAsI,UAAA,CAAW6B,GAAA;oBAAA;oBAC1BhB,SAAA,EAAU;oBACVqB,QAAA,EAAUlJ,WAAA;8BAEV,iBAAA2H,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAiB,CAAC;sBAAC5G,IAAA,EAAM;;;mBAjBNsG,GAAA;cAqBX;6BAEF,IAAAlB,WAAA,CAAAC,IAAA,EAAC;cAAIC,SAAA,EAAU;yBAA6B,WACjC,CAAArI,WAAA,CAAYsD,MAAM,CAAC,CAAC6G,GAAA,EAAK/F,IAAA,KAAS;gBAAA;gBAAAtF,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OAAAiL,GAAA,GAAM/F,IAAA,CAAKrB,IAAI;cAAJ,CAAI,EAAE,MAAM,OAAO,IAAG,CAAC,EAAGyB,OAAO,CAAC,IAAG;;;UAKhG;UAAA,CAAA1F,aAAA,GAAAmD,CAAA,WAAAzB,WAAA;UAAA;UAAA,CAAA1B,aAAA,GAAAmD,CAAA,wBACC,IAAAkG,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAC,IAAA,EAAC;cAAIC,SAAA,EAAU;sCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;0BAAK;+BACN,IAAAH,WAAA,CAAAC,IAAA,EAAC;2BAAM9H,cAAA,EAAe;;6BAExB,IAAA6H,WAAA,CAAAG,GAAA,EAAC;cAAID,SAAA,EAAU;wBACb,iBAAAF,WAAA,CAAAG,GAAA,EAAC;gBACCD,SAAA,EAAU;gBACVU,KAAA,EAAO;kBAAEC,KAAA,EAAO,GAAG1I,cAAA;gBAAkB;;;4BAM7C,IAAA6H,WAAA,CAAAC,IAAA,EAAC;YAAIC,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAG,GAAA,EAAC;cACCD,SAAA,EAAU;cACVI,OAAA,EAASA,CAAA,KAAM;gBAAA;gBAAA3J,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAI,CAAA;gBAAA,OAAAa,kBAAA,CAAmB;cAAA;cAClC2J,QAAA,EAAUlJ,WAAA;wBACX;6BAGD,IAAA2H,WAAA,CAAAG,GAAA,EAAC;cACCD,SAAA,EAAU;cACVI,OAAA,EAASxC,YAAA;cACTyD,QAAA;cAAU;cAAA,CAAA5K,aAAA,GAAAmD,CAAA,WAAAjC,WAAA,CAAYkC,MAAM,KAAK;cAAA;cAAA,CAAApD,aAAA,GAAAmD,CAAA,WAAK,CAAC/B,cAAA;cAAA;cAAA,CAAApB,aAAA,GAAAmD,CAAA,WAAkB,CAAC7B,eAAA;cAAA;cAAA,CAAAtB,aAAA,GAAAmD,CAAA,WAAmBzB,WAAA;wBAE5EA,WAAA;cAAA;cAAA,cAAA1B,aAAA,GAAAmD,CAAA,WACC,IAAAkG,WAAA,CAAAG,GAAA,EAAAH,WAAA,CAAAiC,QAAA;0BAAE;;;wDAEF,IAAAjC,WAAA,CAAAC,IAAA,EAAAD,WAAA,CAAAiC,QAAA;wCACE,IAAAjC,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAG,WAAW;kBAAC9F,IAAA,EAAM;oBAAM,YAChB/C,WAAA,CAAYkC,MAAM,EAAC;;;;;;;;AAWlD;MAEAtD,QAAA;AAAA;AAAA,CAAAE,aAAA,GAAAI,CAAA,SAAeL,SAAA","ignoreList":[]}