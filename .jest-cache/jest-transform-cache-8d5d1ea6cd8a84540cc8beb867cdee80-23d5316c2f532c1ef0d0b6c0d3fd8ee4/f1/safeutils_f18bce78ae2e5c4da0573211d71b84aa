2174fc2606ee541632e3628a952d62ec
// Create a safe utility file that doesn't depend on external libraries
"use strict";

/* istanbul ignore next */
function cov_1w19yyo650() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\safe-utils.ts";
  var hash = "ef05849a075de6914fe5000b08237b32f297dc0c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\safe-utils.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 18
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 26
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 26
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 29
        }
      },
      "10": {
        start: {
          line: 33,
          column: 20
        },
        end: {
          line: 33,
          column: 22
        }
      },
      "11": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "13": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 29
        }
      },
      "14": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "15": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "16": {
        start: {
          line: 38,
          column: 15
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "17": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 41,
          column: 13
        }
      },
      "18": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 45
        }
      },
      "19": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 45
        }
      },
      "20": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 29
        }
      },
      "21": {
        start: {
          line: 46,
          column: 23
        },
        end: {
          line: 51,
          column: 1
        }
      },
      "22": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 50,
          column: 22
        }
      },
      "23": {
        start: {
          line: 52,
          column: 19
        },
        end: {
          line: 58,
          column: 1
        }
      },
      "24": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 57,
          column: 20
        }
      },
      "25": {
        start: {
          line: 59,
          column: 19
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "26": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 55
        }
      },
      "27": {
        start: {
          line: 62,
          column: 22
        },
        end: {
          line: 65,
          column: 1
        }
      },
      "28": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 51
        }
      },
      "29": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 34
        }
      },
      "30": {
        start: {
          line: 66,
          column: 21
        },
        end: {
          line: 69,
          column: 1
        }
      },
      "31": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 46
        }
      },
      "32": {
        start: {
          line: 67,
          column: 34
        },
        end: {
          line: 67,
          column: 46
        }
      },
      "33": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 22
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 25
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "cn",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 11
          }
        },
        loc: {
          start: {
            line: 32,
            column: 23
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 32
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 24
          }
        },
        loc: {
          start: {
            line: 46,
            column: 33
          },
          end: {
            line: 51,
            column: 1
          }
        },
        line: 46
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 52,
            column: 19
          },
          end: {
            line: 52,
            column: 20
          }
        },
        loc: {
          start: {
            line: 52,
            column: 27
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 52
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 59,
            column: 20
          }
        },
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 59
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 62,
            column: 22
          },
          end: {
            line: 62,
            column: 23
          }
        },
        loc: {
          start: {
            line: 62,
            column: 31
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 62
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 66,
            column: 21
          },
          end: {
            line: 66,
            column: 22
          }
        },
        loc: {
          start: {
            line: 66,
            column: 40
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 66
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 42,
            column: 9
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 15
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 16
          },
          end: {
            line: 40,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "4": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\safe-utils.ts"],
      sourcesContent: ["// Create a safe utility file that doesn't depend on external libraries\nexport function cn(...inputs: (string | undefined | null | boolean | Record<string, boolean>)[]): string {\n  const classes: string[] = []\n\n  for (const input of inputs) {\n    if (!input) continue\n\n    if (typeof input === \"string\") {\n      classes.push(input)\n    } else if (typeof input === \"object\") {\n      for (const [key, value] of Object.entries(input)) {\n        if (value) classes.push(key)\n      }\n    }\n  }\n\n  return classes.join(\" \")\n}\n\nexport const formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(amount)\n}\n\nexport const formatDate = (date: Date): string => {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  }).format(date)\n}\n\nexport const generateId = (): string => {\n  return Math.random().toString(36).substring(2, 11)\n}\n\nexport const validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nexport const truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) return text\n  return text.substring(0, maxLength) + \"...\"\n}\n"],
      names: ["cn", "formatCurrency", "formatDate", "generateId", "truncateText", "validateEmail", "inputs", "classes", "input", "push", "key", "value", "Object", "entries", "join", "amount", "Intl", "NumberFormat", "style", "currency", "format", "date", "DateTimeFormat", "year", "month", "day", "Math", "random", "toString", "substring", "email", "emailRegex", "test", "text", "maxLength", "length"],
      mappings: "AAAA,uEAAuE;;;;;;;;;;;;QACvDA;eAAAA;;QAkBHC;eAAAA;;QAOAC;eAAAA;;QAQAC;eAAAA;;QASAC;eAAAA;;QALAC;eAAAA;;;AArCN,SAASL,GAAG,GAAGM,MAAyE;IAC7F,MAAMC,UAAoB,EAAE;IAE5B,KAAK,MAAMC,SAASF,OAAQ;QAC1B,IAAI,CAACE,OAAO;QAEZ,IAAI,OAAOA,UAAU,UAAU;YAC7BD,QAAQE,IAAI,CAACD;QACf,OAAO,IAAI,OAAOA,UAAU,UAAU;YACpC,KAAK,MAAM,CAACE,KAAKC,MAAM,IAAIC,OAAOC,OAAO,CAACL,OAAQ;gBAChD,IAAIG,OAAOJ,QAAQE,IAAI,CAACC;YAC1B;QACF;IACF;IAEA,OAAOH,QAAQO,IAAI,CAAC;AACtB;AAEO,MAAMb,iBAAiB,CAACc;IAC7B,OAAO,IAAIC,KAAKC,YAAY,CAAC,SAAS;QACpCC,OAAO;QACPC,UAAU;IACZ,GAAGC,MAAM,CAACL;AACZ;AAEO,MAAMb,aAAa,CAACmB;IACzB,OAAO,IAAIL,KAAKM,cAAc,CAAC,SAAS;QACtCC,MAAM;QACNC,OAAO;QACPC,KAAK;IACP,GAAGL,MAAM,CAACC;AACZ;AAEO,MAAMlB,aAAa;IACxB,OAAOuB,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAG;AACjD;AAEO,MAAMxB,gBAAgB,CAACyB;IAC5B,MAAMC,aAAa;IACnB,OAAOA,WAAWC,IAAI,CAACF;AACzB;AAEO,MAAM1B,eAAe,CAAC6B,MAAcC;IACzC,IAAID,KAAKE,MAAM,IAAID,WAAW,OAAOD;IACrC,OAAOA,KAAKJ,SAAS,CAAC,GAAGK,aAAa;AACxC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ef05849a075de6914fe5000b08237b32f297dc0c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1w19yyo650 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1w19yyo650();
cov_1w19yyo650().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1w19yyo650().f[0]++;
  cov_1w19yyo650().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1w19yyo650().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1w19yyo650().s[3]++;
_export(exports, {
  get cn() {
    /* istanbul ignore next */
    cov_1w19yyo650().f[1]++;
    cov_1w19yyo650().s[4]++;
    return cn;
  },
  get formatCurrency() {
    /* istanbul ignore next */
    cov_1w19yyo650().f[2]++;
    cov_1w19yyo650().s[5]++;
    return formatCurrency;
  },
  get formatDate() {
    /* istanbul ignore next */
    cov_1w19yyo650().f[3]++;
    cov_1w19yyo650().s[6]++;
    return formatDate;
  },
  get generateId() {
    /* istanbul ignore next */
    cov_1w19yyo650().f[4]++;
    cov_1w19yyo650().s[7]++;
    return generateId;
  },
  get truncateText() {
    /* istanbul ignore next */
    cov_1w19yyo650().f[5]++;
    cov_1w19yyo650().s[8]++;
    return truncateText;
  },
  get validateEmail() {
    /* istanbul ignore next */
    cov_1w19yyo650().f[6]++;
    cov_1w19yyo650().s[9]++;
    return validateEmail;
  }
});
function cn(...inputs) {
  /* istanbul ignore next */
  cov_1w19yyo650().f[7]++;
  const classes =
  /* istanbul ignore next */
  (cov_1w19yyo650().s[10]++, []);
  /* istanbul ignore next */
  cov_1w19yyo650().s[11]++;
  for (const input of inputs) {
    /* istanbul ignore next */
    cov_1w19yyo650().s[12]++;
    if (!input) {
      /* istanbul ignore next */
      cov_1w19yyo650().b[0][0]++;
      cov_1w19yyo650().s[13]++;
      continue;
    } else
    /* istanbul ignore next */
    {
      cov_1w19yyo650().b[0][1]++;
    }
    cov_1w19yyo650().s[14]++;
    if (typeof input === "string") {
      /* istanbul ignore next */
      cov_1w19yyo650().b[1][0]++;
      cov_1w19yyo650().s[15]++;
      classes.push(input);
    } else {
      /* istanbul ignore next */
      cov_1w19yyo650().b[1][1]++;
      cov_1w19yyo650().s[16]++;
      if (typeof input === "object") {
        /* istanbul ignore next */
        cov_1w19yyo650().b[2][0]++;
        cov_1w19yyo650().s[17]++;
        for (const [key, value] of Object.entries(input)) {
          /* istanbul ignore next */
          cov_1w19yyo650().s[18]++;
          if (value) {
            /* istanbul ignore next */
            cov_1w19yyo650().b[3][0]++;
            cov_1w19yyo650().s[19]++;
            classes.push(key);
          } else
          /* istanbul ignore next */
          {
            cov_1w19yyo650().b[3][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1w19yyo650().b[2][1]++;
      }
    }
  }
  /* istanbul ignore next */
  cov_1w19yyo650().s[20]++;
  return classes.join(" ");
}
/* istanbul ignore next */
cov_1w19yyo650().s[21]++;
const formatCurrency = amount => {
  /* istanbul ignore next */
  cov_1w19yyo650().f[8]++;
  cov_1w19yyo650().s[22]++;
  return new Intl.NumberFormat("en-US", {
    style: "currency",
    currency: "USD"
  }).format(amount);
};
/* istanbul ignore next */
cov_1w19yyo650().s[23]++;
const formatDate = date => {
  /* istanbul ignore next */
  cov_1w19yyo650().f[9]++;
  cov_1w19yyo650().s[24]++;
  return new Intl.DateTimeFormat("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric"
  }).format(date);
};
/* istanbul ignore next */
cov_1w19yyo650().s[25]++;
const generateId = () => {
  /* istanbul ignore next */
  cov_1w19yyo650().f[10]++;
  cov_1w19yyo650().s[26]++;
  return Math.random().toString(36).substring(2, 11);
};
/* istanbul ignore next */
cov_1w19yyo650().s[27]++;
const validateEmail = email => {
  /* istanbul ignore next */
  cov_1w19yyo650().f[11]++;
  const emailRegex =
  /* istanbul ignore next */
  (cov_1w19yyo650().s[28]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
  /* istanbul ignore next */
  cov_1w19yyo650().s[29]++;
  return emailRegex.test(email);
};
/* istanbul ignore next */
cov_1w19yyo650().s[30]++;
const truncateText = (text, maxLength) => {
  /* istanbul ignore next */
  cov_1w19yyo650().f[12]++;
  cov_1w19yyo650().s[31]++;
  if (text.length <= maxLength) {
    /* istanbul ignore next */
    cov_1w19yyo650().b[4][0]++;
    cov_1w19yyo650().s[32]++;
    return text;
  } else
  /* istanbul ignore next */
  {
    cov_1w19yyo650().b[4][1]++;
  }
  cov_1w19yyo650().s[33]++;
  return text.substring(0, maxLength) + "...";
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXcxOXl5bzY1MCIsImFjdHVhbENvdmVyYWdlIiwicyIsImNuIiwiZiIsImZvcm1hdEN1cnJlbmN5IiwiZm9ybWF0RGF0ZSIsImdlbmVyYXRlSWQiLCJ0cnVuY2F0ZVRleHQiLCJ2YWxpZGF0ZUVtYWlsIiwiaW5wdXRzIiwiY2xhc3NlcyIsImlucHV0IiwiYiIsInB1c2giLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImVudHJpZXMiLCJqb2luIiwiYW1vdW50IiwiSW50bCIsIk51bWJlckZvcm1hdCIsInN0eWxlIiwiY3VycmVuY3kiLCJmb3JtYXQiLCJkYXRlIiwiRGF0ZVRpbWVGb3JtYXQiLCJ5ZWFyIiwibW9udGgiLCJkYXkiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciLCJlbWFpbCIsImVtYWlsUmVnZXgiLCJ0ZXN0IiwidGV4dCIsIm1heExlbmd0aCIsImxlbmd0aCJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY2hhc2VcXERvd25sb2Fkc1xcY3JtICgzMilcXHNyY1xcbGliXFxzYWZlLXV0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENyZWF0ZSBhIHNhZmUgdXRpbGl0eSBmaWxlIHRoYXQgZG9lc24ndCBkZXBlbmQgb24gZXh0ZXJuYWwgbGlicmFyaWVzXG5leHBvcnQgZnVuY3Rpb24gY24oLi4uaW5wdXRzOiAoc3RyaW5nIHwgdW5kZWZpbmVkIHwgbnVsbCB8IGJvb2xlYW4gfCBSZWNvcmQ8c3RyaW5nLCBib29sZWFuPilbXSk6IHN0cmluZyB7XG4gIGNvbnN0IGNsYXNzZXM6IHN0cmluZ1tdID0gW11cblxuICBmb3IgKGNvbnN0IGlucHV0IG9mIGlucHV0cykge1xuICAgIGlmICghaW5wdXQpIGNvbnRpbnVlXG5cbiAgICBpZiAodHlwZW9mIGlucHV0ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBjbGFzc2VzLnB1c2goaW5wdXQpXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgaW5wdXQgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGlucHV0KSkge1xuICAgICAgICBpZiAodmFsdWUpIGNsYXNzZXMucHVzaChrZXkpXG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGNsYXNzZXMuam9pbihcIiBcIilcbn1cblxuZXhwb3J0IGNvbnN0IGZvcm1hdEN1cnJlbmN5ID0gKGFtb3VudDogbnVtYmVyKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIG5ldyBJbnRsLk51bWJlckZvcm1hdChcImVuLVVTXCIsIHtcbiAgICBzdHlsZTogXCJjdXJyZW5jeVwiLFxuICAgIGN1cnJlbmN5OiBcIlVTRFwiLFxuICB9KS5mb3JtYXQoYW1vdW50KVxufVxuXG5leHBvcnQgY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlOiBEYXRlKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIG5ldyBJbnRsLkRhdGVUaW1lRm9ybWF0KFwiZW4tVVNcIiwge1xuICAgIHllYXI6IFwibnVtZXJpY1wiLFxuICAgIG1vbnRoOiBcInNob3J0XCIsXG4gICAgZGF5OiBcIm51bWVyaWNcIixcbiAgfSkuZm9ybWF0KGRhdGUpXG59XG5cbmV4cG9ydCBjb25zdCBnZW5lcmF0ZUlkID0gKCk6IHN0cmluZyA9PiB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgMTEpXG59XG5cbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUVtYWlsID0gKGVtYWlsOiBzdHJpbmcpOiBib29sZWFuID0+IHtcbiAgY29uc3QgZW1haWxSZWdleCA9IC9eW15cXHNAXStAW15cXHNAXStcXC5bXlxcc0BdKyQvXG4gIHJldHVybiBlbWFpbFJlZ2V4LnRlc3QoZW1haWwpXG59XG5cbmV4cG9ydCBjb25zdCB0cnVuY2F0ZVRleHQgPSAodGV4dDogc3RyaW5nLCBtYXhMZW5ndGg6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gIGlmICh0ZXh0Lmxlbmd0aCA8PSBtYXhMZW5ndGgpIHJldHVybiB0ZXh0XG4gIHJldHVybiB0ZXh0LnN1YnN0cmluZygwLCBtYXhMZW5ndGgpICsgXCIuLi5cIlxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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