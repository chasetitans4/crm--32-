{"version":3,"names":["cov_v9jnwmbtu","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","isArrayNotEmpty","isNotEmpty","isNumberInRange","isPositiveNumber","isValidDateString","isValidEmail","isValidPassword","isValidPhone","validateEmailSecure","validateObject","validatePasswordSecure","email","isValid","error","trimmedEmail","trim","toLowerCase","length","suspiciousPatterns","pattern","test","password","hasLowercase","hasUppercase","hasNumbers","hasSpecialChars","missingRequirements","push","join","weakPatterns","value","emailRegex","phone","phoneRegex","digitsOnly","replace","min","max","dateString","regex","date","Date","toISOString","slice","arr","Array","isArray","minLength","result","data","rules","errors","key","Object","prototype","hasOwnProperty","call","rule"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\validation.ts"],"sourcesContent":["// src/utils/validation.ts\n\n/**\n * This utility file provides common validation functions for various data types.\n * It can be used for form validation, data integrity checks, etc.\n */\n\n/**\n * Secure email validation with additional security checks\n * @param email The email to validate\n * @returns Object with isValid boolean and error message if invalid\n */\nexport function validateEmailSecure(email: string | null | undefined): { isValid: boolean; error?: string } {\n  if (!email || typeof email !== 'string') {\n    return { isValid: false, error: 'Email is required' }\n  }\n\n  const trimmedEmail = email.trim().toLowerCase()\n  \n  // Check for basic email format\n  if (!isValidEmail(trimmedEmail)) {\n    return { isValid: false, error: 'Invalid email format' }\n  }\n\n  // Additional security checks\n  if (trimmedEmail.length > 254) {\n    return { isValid: false, error: 'Email is too long' }\n  }\n\n  // Check for suspicious patterns\n  const suspiciousPatterns = [\n    /\\.\\./, // consecutive dots\n    /^\\.|\\.$/, // starts or ends with dot\n    /@\\.|@$/, // @ followed by dot or at end\n  ]\n\n  for (const pattern of suspiciousPatterns) {\n    if (pattern.test(trimmedEmail)) {\n      return { isValid: false, error: 'Invalid email format' }\n    }\n  }\n\n  return { isValid: true }\n}\n\n/**\n * Secure password validation with comprehensive security checks\n * @param password The password to validate\n * @returns Object with isValid boolean and error message if invalid\n */\nexport function validatePasswordSecure(password: string | null | undefined): { isValid: boolean; error?: string } {\n  if (!password || typeof password !== 'string') {\n    return { isValid: false, error: 'Password is required' }\n  }\n\n  // Length check\n  if (password.length < 8) {\n    return { isValid: false, error: 'Password must be at least 8 characters long' }\n  }\n\n  if (password.length > 128) {\n    return { isValid: false, error: 'Password is too long (max 128 characters)' }\n  }\n\n  // Character requirements\n  const hasLowercase = /[a-z]/.test(password)\n  const hasUppercase = /[A-Z]/.test(password)\n  const hasNumbers = /\\d/.test(password)\n  const hasSpecialChars = /[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/.test(password)\n\n  const missingRequirements = []\n  if (!hasLowercase) missingRequirements.push('lowercase letter')\n  if (!hasUppercase) missingRequirements.push('uppercase letter')\n  if (!hasNumbers) missingRequirements.push('number')\n  if (!hasSpecialChars) missingRequirements.push('special character')\n\n  if (missingRequirements.length > 0) {\n    return { \n      isValid: false, \n      error: `Password must contain at least one ${missingRequirements.join(', ')}` \n    }\n  }\n\n  // Check for common weak patterns\n  const weakPatterns = [\n    /123456/, // sequential numbers\n    /abcdef/, // sequential letters\n    /qwerty/, // keyboard patterns\n    /password/i, // contains \"password\"\n    /(.)\\1{2,}/, // repeated characters (3 or more)\n  ]\n\n  for (const pattern of weakPatterns) {\n    if (pattern.test(password)) {\n      return { isValid: false, error: 'Password contains weak patterns' }\n    }\n  }\n\n  return { isValid: true }\n}\n\n/**\n * Checks if a string is not empty or just whitespace.\n * @param value The string to check.\n * @returns True if the string has content, false otherwise.\n */\nexport function isNotEmpty(value: string | null | undefined): boolean {\n  return typeof value === \"string\" && value.trim().length > 0\n}\n\n/**\n * Checks if a string is a valid email format.\n * @param email The string to check.\n * @returns True if it's a valid email, false otherwise.\n */\nexport function isValidEmail(email: string | null | undefined): boolean {\n  if (!isNotEmpty(email)) return false\n  // Basic regex for email validation\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email as string)\n}\n\n/**\n * Checks if a string is a valid phone number format (basic check).\n * Supports various formats, but not exhaustive.\n * @param phone The string to check.\n * @returns True if it's a valid phone number, false otherwise.\n */\nexport function isValidPhone(phone: string | null | undefined): boolean {\n  if (!isNotEmpty(phone)) return false\n  // Allows digits, spaces, hyphens, parentheses, and plus sign for international codes\n  const phoneRegex = /^\\+?[\\d\\s\\-$$$$]+$/\n  // Also check for minimum number of digits to avoid very short strings\n  const digitsOnly = (phone as string).replace(/\\D/g, \"\")\n  return phoneRegex.test(phone as string) && digitsOnly.length >= 7\n}\n\n/**\n * Checks if a number is within a specified range (inclusive).\n * @param value The number to check.\n * @param min The minimum allowed value.\n * @param max The maximum allowed value.\n * @returns True if the number is within range, false otherwise.\n */\nexport function isNumberInRange(value: number | null | undefined, min: number, max: number): boolean {\n  return typeof value === \"number\" && value >= min && value <= max\n}\n\n/**\n * Checks if a string represents a valid date in YYYY-MM-DD format.\n * @param dateString The date string to check.\n * @returns True if it's a valid date string, false otherwise.\n */\nexport function isValidDateString(dateString: string | null | undefined): boolean {\n  if (!isNotEmpty(dateString)) return false\n  const regex = /^\\d{4}-\\d{2}-\\d{2}$/\n  if (!regex.test(dateString as string)) return false\n  const date = new Date(dateString as string)\n  // Check if the date object is valid and matches the original string (to catch invalid dates like Feb 30)\n  return date.toISOString().slice(0, 10) === dateString\n}\n\n/**\n * Checks if a value is a positive number (greater than 0).\n * @param value The number to check.\n * @returns True if positive, false otherwise.\n */\nexport function isPositiveNumber(value: number | null | undefined): boolean {\n  return typeof value === \"number\" && value > 0\n}\n\n/**\n * Checks if an array is not empty.\n * @param arr The array to check.\n * @returns True if the array has elements, false otherwise.\n */\nexport function isArrayNotEmpty<T>(arr: T[] | null | undefined): boolean {\n  return Array.isArray(arr) && arr.length > 0\n}\n\n/**\n * Validates a password based on common criteria.\n * Now uses the standardized secure password validation.\n * @param password The password string to validate.\n * @param minLength Minimum required length (ignored, uses secure validation standards).\n * @returns True if the password meets criteria, false otherwise.\n */\nexport function isValidPassword(password: string | null | undefined, minLength = 8): boolean {\n  const result = validatePasswordSecure(password)\n  return result.isValid\n}\n\n/**\n * A generic function to validate an object against a set of rules.\n * @param data The object to validate.\n * @param rules An object where keys are data properties and values are validation functions.\n * @returns An object containing errors, or empty if valid.\n */\nexport function validateObject<T extends Record<string, unknown>>(\n  data: T,\n  rules: { [K in keyof T]?: (value: T[K]) => string | null },\n): Record<string, string> {\n  const errors: Record<string, string> = {}\n  for (const key in rules) {\n    if (Object.prototype.hasOwnProperty.call(rules, key)) {\n      const rule = rules[key]\n      if (rule) {\n        const error = rule(data[key])\n        if (error) {\n          errors[key] = error\n        }\n      }\n    }\n  }\n  return errors\n}\n\n// Example usage of validateObject:\n/*\ninterface UserForm {\n  name: string;\n  email: string;\n  age: number;\n  password?: string;\n}\n\nconst userRules = {\n  name: (value: string) => isNotEmpty(value) ? null : \"Name is required.\",\n  email: (value: string) => isValidEmail(value) ? null : \"Invalid email format.\",\n  age: (value: number) => isNumberInRange(value, 18, 99) ? null : \"Age must be between 18 and 99.\",\n  password: (value?: string) => {\n    if (!value || !isNotEmpty(value)) return null\n    const result = validatePasswordSecure(value)\n    return result.isValid ? null : (result.error || \"Password does not meet security requirements.\")\n  },\n};\n\nconst userData: UserForm = {\n  name: \"John Doe\",\n  email: \"john@example.com\",\n  age: 30,\n  password: process.env.EXAMPLE_PASSWORD || \"[REDACTED]\",\n};\n\nconst errors = validateObject(userData, userRules);\nif (Object.keys(errors).length > 0) {\n  console.log(\"Validation Errors:\", errors);\n} else {\n  console.log(\"User data is valid.\");\n}\n*/\n"],"mappings":"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","ignoreList":[]}