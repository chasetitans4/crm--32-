0ed081b978a023258b5921a02ca0d537
"use client";
"use strict";

/* istanbul ignore next */
function cov_4zwuxatq4() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\SystemStatus.tsx";
  var hash = "a149827c5d259354974005fa4645109ae9dda5f4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\SystemStatus.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "7": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "8": {
        start: {
          line: 17,
          column: 26
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "9": {
        start: {
          line: 18,
          column: 21
        },
        end: {
          line: 18,
          column: 52
        }
      },
      "10": {
        start: {
          line: 19,
          column: 40
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "11": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 6
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "13": {
        start: {
          line: 27,
          column: 39
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "14": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "15": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "16": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "17": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "18": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "20": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "22": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "23": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "24": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "25": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "27": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "28": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "29": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "30": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "31": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "32": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "33": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "35": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "36": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "37": {
        start: {
          line: 67,
          column: 26
        },
        end: {
          line: 129,
          column: 1
        }
      },
      "38": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 139,
          column: 1
        }
      },
      "39": {
        start: {
          line: 140,
          column: 21
        },
        end: {
          line: 323,
          column: 1
        }
      },
      "40": {
        start: {
          line: 141,
          column: 46
        },
        end: {
          line: 141,
          column: 72
        }
      },
      "41": {
        start: {
          line: 142,
          column: 54
        },
        end: {
          line: 142,
          column: 80
        }
      },
      "42": {
        start: {
          line: 143,
          column: 46
        },
        end: {
          line: 143,
          column: 72
        }
      },
      "43": {
        start: {
          line: 144,
          column: 60
        },
        end: {
          line: 144,
          column: 84
        }
      },
      "44": {
        start: {
          line: 145,
          column: 48
        },
        end: {
          line: 145,
          column: 74
        }
      },
      "45": {
        start: {
          line: 146,
          column: 25
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "46": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 31
        }
      },
      "47": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 35
        }
      },
      "48": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 31
        }
      },
      "49": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 36
        }
      },
      "50": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "51": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 152,
          column: 70
        }
      },
      "52": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 34
        }
      },
      "53": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 41
        }
      },
      "54": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 89
        }
      },
      "55": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 42
        }
      },
      "56": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 35
        }
      },
      "57": {
        start: {
          line: 158,
          column: 22
        },
        end: {
          line: 158,
          column: 70
        }
      },
      "58": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 32
        }
      },
      "59": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 41
        }
      },
      "60": {
        start: {
          line: 162,
          column: 26
        },
        end: {
          line: 162,
          column: 28
        }
      },
      "61": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "62": {
        start: {
          line: 163,
          column: 20
        },
        end: {
          line: 163,
          column: 21
        }
      },
      "63": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 67
        }
      },
      "64": {
        start: {
          line: 164,
          column: 41
        },
        end: {
          line: 164,
          column: 65
        }
      },
      "65": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 90
        }
      },
      "66": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 43
        }
      },
      "67": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 169,
          column: 32
        }
      },
      "68": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "69": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 23
        }
      },
      "70": {
        start: {
          line: 174,
          column: 26
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "71": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "72": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 179,
          column: 19
        }
      },
      "73": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 183,
          column: 19
        }
      },
      "74": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 187,
          column: 19
        }
      },
      "75": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 28
        }
      },
      "76": {
        start: {
          line: 192,
          column: 32
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "77": {
        start: {
          line: 192,
          column: 91
        },
        end: {
          line: 223,
          column: 10
        }
      },
      "78": {
        start: {
          line: 224,
          column: 4
        },
        end: {
          line: 322,
          column: 7
        }
      },
      "79": {
        start: {
          line: 276,
          column: 96
        },
        end: {
          line: 313,
          column: 41
        }
      },
      "80": {
        start: {
          line: 297,
          column: 112
        },
        end: {
          line: 310,
          column: 63
        }
      },
      "81": {
        start: {
          line: 324,
          column: 17
        },
        end: {
          line: 324,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 140,
            column: 21
          },
          end: {
            line: 140,
            column: 22
          }
        },
        loc: {
          start: {
            line: 140,
            column: 25
          },
          end: {
            line: 323,
            column: 1
          }
        },
        line: 140
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 146,
            column: 25
          },
          end: {
            line: 146,
            column: 26
          }
        },
        loc: {
          start: {
            line: 146,
            column: 35
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 146
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 164,
            column: 30
          },
          end: {
            line: 164,
            column: 31
          }
        },
        loc: {
          start: {
            line: 164,
            column: 41
          },
          end: {
            line: 164,
            column: 65
          }
        },
        line: 164
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 171,
            column: 27
          }
        },
        loc: {
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 174,
            column: 26
          },
          end: {
            line: 174,
            column: 27
          }
        },
        loc: {
          start: {
            line: 174,
            column: 36
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 174
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 192,
            column: 32
          },
          end: {
            line: 192,
            column: 33
          }
        },
        loc: {
          start: {
            line: 192,
            column: 91
          },
          end: {
            line: 223,
            column: 10
          }
        },
        line: 192
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 276,
            column: 63
          },
          end: {
            line: 276,
            column: 64
          }
        },
        loc: {
          start: {
            line: 276,
            column: 96
          },
          end: {
            line: 313,
            column: 41
          }
        },
        line: 276
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 297,
            column: 75
          },
          end: {
            line: 297,
            column: 76
          }
        },
        loc: {
          start: {
            line: 297,
            column: 112
          },
          end: {
            line: 310,
            column: 63
          }
        },
        line: 297
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 38
          }
        }, {
          start: {
            line: 22,
            column: 41
          },
          end: {
            line: 24,
            column: 5
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 14
          }
        }, {
          start: {
            line: 22,
            column: 18
          },
          end: {
            line: 22,
            column: 32
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 31,
            column: 65
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 45
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "7": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "8": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "9": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 31
          }
        }],
        line: 44
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 88
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 29
          }
        }, {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 79
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 88
          }
        }, {
          start: {
            line: 53,
            column: 91
          },
          end: {
            line: 53,
            column: 95
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 54
      },
      "15": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 33
          }
        }, {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "16": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "17": {
        loc: {
          start: {
            line: 175,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 179,
            column: 19
          }
        }, {
          start: {
            line: 180,
            column: 12
          },
          end: {
            line: 183,
            column: 19
          }
        }, {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 187,
            column: 19
          }
        }, {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 189,
            column: 28
          }
        }],
        line: 175
      },
      "18": {
        loc: {
          start: {
            line: 209,
            column: 24
          },
          end: {
            line: 211,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 209,
            column: 24
          },
          end: {
            line: 209,
            column: 53
          }
        }, {
          start: {
            line: 209,
            column: 71
          },
          end: {
            line: 211,
            column: 26
          }
        }],
        line: 209
      },
      "19": {
        loc: {
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 24
          },
          end: {
            line: 212,
            column: 30
          }
        }, {
          start: {
            line: 212,
            column: 34
          },
          end: {
            line: 212,
            column: 123
          }
        }],
        line: 212
      },
      "20": {
        loc: {
          start: {
            line: 212,
            column: 48
          },
          end: {
            line: 212,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 48
          },
          end: {
            line: 212,
            column: 68
          }
        }, {
          start: {
            line: 212,
            column: 73
          },
          end: {
            line: 212,
            column: 121
          }
        }],
        line: 212
      },
      "21": {
        loc: {
          start: {
            line: 212,
            column: 73
          },
          end: {
            line: 212,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 212,
            column: 100
          },
          end: {
            line: 212,
            column: 109
          }
        }, {
          start: {
            line: 212,
            column: 112
          },
          end: {
            line: 212,
            column: 121
          }
        }],
        line: 212
      },
      "22": {
        loc: {
          start: {
            line: 215,
            column: 16
          },
          end: {
            line: 221,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 215,
            column: 39
          },
          end: {
            line: 218,
            column: 18
          }
        }, {
          start: {
            line: 218,
            column: 35
          },
          end: {
            line: 221,
            column: 18
          }
        }],
        line: 215
      },
      "23": {
        loc: {
          start: {
            line: 244,
            column: 32
          },
          end: {
            line: 244,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 49
          },
          end: {
            line: 244,
            column: 79
          }
        }, {
          start: {
            line: 244,
            column: 82
          },
          end: {
            line: 244,
            column: 98
          }
        }],
        line: 244
      },
      "24": {
        loc: {
          start: {
            line: 269,
            column: 32
          },
          end: {
            line: 271,
            column: 34
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 32
          },
          end: {
            line: 269,
            column: 64
          }
        }, {
          start: {
            line: 269,
            column: 82
          },
          end: {
            line: 271,
            column: 34
          }
        }],
        line: 269
      },
      "25": {
        loc: {
          start: {
            line: 274,
            column: 24
          },
          end: {
            line: 317,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 72
          },
          end: {
            line: 314,
            column: 26
          }
        }, {
          start: {
            line: 314,
            column: 43
          },
          end: {
            line: 317,
            column: 26
          }
        }],
        line: 274
      },
      "26": {
        loc: {
          start: {
            line: 287,
            column: 56
          },
          end: {
            line: 287,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 56
          },
          end: {
            line: 287,
            column: 70
          }
        }, {
          start: {
            line: 287,
            column: 74
          },
          end: {
            line: 287,
            column: 96
          }
        }],
        line: 287
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\SystemStatus.tsx"],
      sourcesContent: ["\"use client\"\n\nimport React, { useState, useEffect } from \"react\"\nimport { AlertCircle, CheckCircle, XCircle, RefreshCw, BarChart2, Code, FlaskConical, Clock } from \"lucide-react\"\nimport { analyzeCodeQuality, formatCodeQualityReport, CodeQualityReport } from \"../utils/codeQuality\"\nimport { runTests, formatTestRunReport, TestRunReport } from \"../utils/testRunner\"\nimport { validateStartup, formatStartupReport, StartupValidationReport } from \"../utils/startupValidator\"\nimport { getPerformanceSnapshot, logPerformanceSnapshot, PerformanceSnapshot } from \"../utils/performance\"\nimport LoadingIndicator from \"./LoadingIndicator\" // Assuming you have a LoadingIndicator component\n\nconst MOCK_CODE_SNIPPET = `\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n}\n\nconst UserList: React.FC = () => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        // Mock fetchData since it's not available in this context\n        const fetchData = async (url: string): Promise<User[]> => {\n          console.log('Fetching from ' + url);\n          await new Promise(resolve => setTimeout(resolve, 1000));\n          if (url === '/users') {\n            return [\n              { id: '1', name: 'John Doe', email: 'john.doe@example.com' },\n              { id: '2', name: 'Jane Smith', email: 'jane.smith@example.com' },\n            ];\n          }\n          throw new Error('Failed to fetch data');\n        };\n        \n        const data = await fetchData('/users');\n        setUsers(data);\n      } catch (err) {\n        console.error('Failed to fetch users:', err);\n        setError(err instanceof Error ? err.message : 'An unknown error occurred');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUsers();\n  }, []);\n\n  if (loading) {\n    return <div>Loading users...</div>;\n  }\n\n  if (error) {\n    return <div style={{ color: 'red' }}>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <ul>\n        {users.map(user => (\n          <li key={user.id}>{user.name} ({user.email})</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default UserList;\n`;\n\nconst MOCK_TEST_CASES = [\n  \"User authentication flow\",\n  \"Data fetching and display\",\n  \"Form submission validation\",\n  \"API error handling\",\n  \"Component rendering performance\",\n  \"Database query efficiency\",\n  \"Edge case: empty data set\",\n  \"Edge case: invalid input\",\n]\n\nconst SystemStatus: React.FC = () => {\n  const [startupReport, setStartupReport] = useState<StartupValidationReport | null>(null)\n  const [codeQualityReport, setCodeQualityReport] = useState<CodeQualityReport | null>(null)\n  const [testRunReport, setTestRunReport] = useState<TestRunReport | null>(null)\n  const [performanceSnapshots, setPerformanceSnapshots] = useState<PerformanceSnapshot[]>([])\n  const [loadingSection, setLoadingSection] = useState<string | null>(null)\n\n  const runAllChecks = async () => {\n    setStartupReport(null)\n    setCodeQualityReport(null)\n    setTestRunReport(null)\n    setPerformanceSnapshots([])\n\n    setLoadingSection(\"startup\")\n    const startup = await validateStartup()\n    setStartupReport(startup)\n\n    setLoadingSection(\"codeQuality\")\n    const codeQuality = await analyzeCodeQuality(MOCK_CODE_SNIPPET)\n    setCodeQualityReport(codeQuality)\n\n    setLoadingSection(\"tests\")\n    const tests = await runTests(MOCK_TEST_CASES)\n    setTestRunReport(tests)\n\n    setLoadingSection(\"performance\")\n    // Collect a few performance snapshots\n    const snapshots = []\n    for (let i = 0; i < 3; i++) {\n      await new Promise((resolve) => setTimeout(resolve, 500)) // Simulate delay between snapshots\n      snapshots.push(getPerformanceSnapshot(`Snapshot ${i + 1}`))\n    }\n    setPerformanceSnapshots(snapshots)\n    // Performance snapshot collected for display\n\n    setLoadingSection(null)\n  }\n\n  useEffect(() => {\n    runAllChecks()\n  }, [])\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"success\":\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />\n      case \"failure\":\n        return <XCircle className=\"w-5 h-5 text-red-500\" />\n      case \"warning\":\n        return <AlertCircle className=\"w-5 h-5 text-yellow-500\" />\n      default:\n        return null\n    }\n  }\n\n  const renderReportSection = (title: string, icon: React.ComponentType<any>, report: any, loadingKey: string, formatFn: (report: any) => string) => (\n    <div className=\"bg-white shadow rounded-lg p-6\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h2 className=\"text-xl font-semibold text-gray-900 flex items-center space-x-2\">\n          {React.createElement(icon, { className: \"w-6 h-6 text-blue-600\" })}\n          <span>{title}</span>\n        </h2>\n        {loadingSection === loadingKey && <LoadingIndicator message=\"Analyzing...\" />}\n        {report && getStatusIcon(report.overallStatus || (report.failedTests === 0 ? \"success\" : \"failure\"))}\n      </div>\n      {report ? (\n        <pre className=\"bg-gray-50 p-4 rounded-md text-sm overflow-auto max-h-96\">{formatFn(report)}</pre>\n      ) : (\n        <p className=\"text-gray-500\">Click \"Run All Checks\" to generate the report.</p>\n      )}\n    </div>\n  )\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 p-8\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        <div className=\"flex justify-between items-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">System Status Dashboard</h1>\n          <button\n            onClick={runAllChecks}\n            className=\"flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50\"\n            disabled={!!loadingSection}\n          >\n            <RefreshCw className=\"w-5 h-5 mr-2\" />\n            {loadingSection ? `Running ${loadingSection}...` : \"Run All Checks\"}\n          </button>\n        </div>\n\n        {renderReportSection(\"Startup Validation\", FlaskConical, startupReport, \"startup\", formatStartupReport)}\n        {renderReportSection(\"Code Quality Analysis\", Code, codeQualityReport, \"codeQuality\", formatCodeQualityReport)}\n        {renderReportSection(\"Test Run Results\", FlaskConical, testRunReport, \"tests\", formatTestRunReport)}\n\n        <div className=\"bg-white shadow rounded-lg p-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h2 className=\"text-xl font-semibold text-gray-900 flex items-center space-x-2\">\n              <BarChart2 className=\"w-6 h-6 text-blue-600\" />\n              <span>Performance Monitoring</span>\n            </h2>\n            {loadingSection === \"performance\" && <LoadingIndicator message=\"Collecting...\" />}\n          </div>\n          {performanceSnapshots.length > 0 ? (\n            <div className=\"space-y-4\">\n              {performanceSnapshots.map((snapshot, index) => (\n                <div key={index} className=\"bg-gray-50 p-4 rounded-md text-sm\">\n                  <h3 className=\"font-medium text-gray-800 mb-2 flex items-center space-x-2\">\n                    <Clock className=\"w-4 h-4\" />\n                    <span>\n                      {snapshot.event || \"Performance Snapshot\"} ({new Date(snapshot.snapshotTime).toLocaleTimeString()}\n                      )\n                    </span>\n                  </h3>\n                  <ul className=\"list-disc list-inside space-y-1\">\n                    {snapshot.metrics.map((metric, metricIndex) => (\n                      <li key={metricIndex}>\n                        {metric.name}:{\" \"}\n                        <span className=\"font-semibold\">\n                          {metric.value}\n                          {metric.unit}\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"text-gray-500\">Click \"Run All Checks\" to collect performance data.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SystemStatus\n"],
      names: ["MOCK_CODE_SNIPPET", "MOCK_TEST_CASES", "SystemStatus", "startupReport", "setStartupReport", "useState", "codeQualityReport", "setCodeQualityReport", "testRunReport", "setTestRunReport", "performanceSnapshots", "setPerformanceSnapshots", "loadingSection", "setLoadingSection", "runAllChecks", "startup", "validateStartup", "codeQuality", "analyzeCodeQuality", "tests", "runTests", "snapshots", "i", "Promise", "resolve", "setTimeout", "push", "getPerformanceSnapshot", "useEffect", "getStatusIcon", "status", "CheckCircle", "className", "XCircle", "AlertCircle", "renderReportSection", "title", "icon", "report", "loadingKey", "formatFn", "div", "h2", "React", "createElement", "span", "LoadingIndicator", "message", "overallStatus", "failedTests", "pre", "p", "h1", "button", "onClick", "disabled", "RefreshCw", "FlaskConical", "formatStartupReport", "Code", "formatCodeQualityReport", "formatTestRunReport", "BarChart2", "length", "map", "snapshot", "index", "h3", "Clock", "event", "Date", "snapshotTime", "toLocaleTimeString", "ul", "metrics", "metric", "metricIndex", "li", "name", "value", "unit"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a149827c5d259354974005fa4645109ae9dda5f4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_4zwuxatq4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_4zwuxatq4();
cov_4zwuxatq4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_4zwuxatq4().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_4zwuxatq4().f[0]++;
    cov_4zwuxatq4().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_4zwuxatq4().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_4zwuxatq4().s[4]++, _interop_require_wildcard(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_4zwuxatq4().s[5]++, require("lucide-react"));
const _codeQuality =
/* istanbul ignore next */
(cov_4zwuxatq4().s[6]++, require("../utils/codeQuality"));
const _testRunner =
/* istanbul ignore next */
(cov_4zwuxatq4().s[7]++, require("../utils/testRunner"));
const _startupValidator =
/* istanbul ignore next */
(cov_4zwuxatq4().s[8]++, require("../utils/startupValidator"));
const _performance =
/* istanbul ignore next */
(cov_4zwuxatq4().s[9]++, require("../utils/performance"));
const _LoadingIndicator =
/* istanbul ignore next */
(/*#__PURE__*/cov_4zwuxatq4().s[10]++, _interop_require_default(require("./LoadingIndicator" // Assuming you have a LoadingIndicator component
)));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_4zwuxatq4().f[1]++;
  cov_4zwuxatq4().s[11]++;
  return /* istanbul ignore next */(cov_4zwuxatq4().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_4zwuxatq4().f[2]++;
  cov_4zwuxatq4().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_4zwuxatq4().b[2][0]++;
    cov_4zwuxatq4().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_4zwuxatq4().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_4zwuxatq4().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_4zwuxatq4().f[3]++;
    cov_4zwuxatq4().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_4zwuxatq4().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_4zwuxatq4().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_4zwuxatq4().f[4]++;
  cov_4zwuxatq4().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_4zwuxatq4().b[4][0]++;
    cov_4zwuxatq4().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_4zwuxatq4().b[4][1]++;
  }
  cov_4zwuxatq4().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_4zwuxatq4().b[6][0]++;
    cov_4zwuxatq4().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_4zwuxatq4().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_4zwuxatq4().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_4zwuxatq4().b[8][0]++;
    cov_4zwuxatq4().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_4zwuxatq4().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[26]++,
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_4zwuxatq4().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_4zwuxatq4().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_4zwuxatq4().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_4zwuxatq4().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_4zwuxatq4().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_4zwuxatq4().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_4zwuxatq4().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_4zwuxatq4().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_4zwuxatq4().b[13][1]++, null));
      /* istanbul ignore next */
      cov_4zwuxatq4().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_4zwuxatq4().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_4zwuxatq4().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_4zwuxatq4().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_4zwuxatq4().b[14][0]++;
        cov_4zwuxatq4().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_4zwuxatq4().b[14][1]++;
        cov_4zwuxatq4().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_4zwuxatq4().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_4zwuxatq4().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_4zwuxatq4().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_4zwuxatq4().b[16][0]++;
    cov_4zwuxatq4().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_4zwuxatq4().b[16][1]++;
  }
  cov_4zwuxatq4().s[36]++;
  return newObj;
}
const MOCK_CODE_SNIPPET =
/* istanbul ignore next */
(cov_4zwuxatq4().s[37]++, `

interface User {
  id: string;
  name: string;
  email: string;
}

const UserList: React.FC = () => {
  const [users, setUsers] = useState<User[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const loadUsers = async () => {
      try {
        // Mock fetchData since it's not available in this context
        const fetchData = async (url: string): Promise<User[]> => {
          console.log('Fetching from ' + url);
          await new Promise(resolve => setTimeout(resolve, 1000));
          if (url === '/users') {
            return [
              { id: '1', name: 'John Doe', email: 'john.doe@example.com' },
              { id: '2', name: 'Jane Smith', email: 'jane.smith@example.com' },
            ];
          }
          throw new Error('Failed to fetch data');
        };
        
        const data = await fetchData('/users');
        setUsers(data);
      } catch (err) {
        console.error('Failed to fetch users:', err);
        setError(err instanceof Error ? err.message : 'An unknown error occurred');
      } finally {
        setLoading(false);
      }
    };
    loadUsers();
  }, []);

  if (loading) {
    return <div>Loading users...</div>;
  }

  if (error) {
    return <div style={{ color: 'red' }}>Error: {error}</div>;
  }

  return (
    <div>
      <h1>Users</h1>
      <ul>
        {users.map(user => (
          <li key={user.id}>{user.name} ({user.email})</li>
        ))}
      </ul>
    </div>
  );
};

export default UserList;
`);
const MOCK_TEST_CASES =
/* istanbul ignore next */
(cov_4zwuxatq4().s[38]++, ["User authentication flow", "Data fetching and display", "Form submission validation", "API error handling", "Component rendering performance", "Database query efficiency", "Edge case: empty data set", "Edge case: invalid input"]);
/* istanbul ignore next */
cov_4zwuxatq4().s[39]++;
const SystemStatus = () => {
  /* istanbul ignore next */
  cov_4zwuxatq4().f[5]++;
  const [startupReport, setStartupReport] =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[40]++, (0, _react.useState)(null));
  const [codeQualityReport, setCodeQualityReport] =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[41]++, (0, _react.useState)(null));
  const [testRunReport, setTestRunReport] =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[42]++, (0, _react.useState)(null));
  const [performanceSnapshots, setPerformanceSnapshots] =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[43]++, (0, _react.useState)([]));
  const [loadingSection, setLoadingSection] =
  /* istanbul ignore next */
  (cov_4zwuxatq4().s[44]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_4zwuxatq4().s[45]++;
  const runAllChecks = async () => {
    /* istanbul ignore next */
    cov_4zwuxatq4().f[6]++;
    cov_4zwuxatq4().s[46]++;
    setStartupReport(null);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[47]++;
    setCodeQualityReport(null);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[48]++;
    setTestRunReport(null);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[49]++;
    setPerformanceSnapshots([]);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[50]++;
    setLoadingSection("startup");
    const startup =
    /* istanbul ignore next */
    (cov_4zwuxatq4().s[51]++, await (0, _startupValidator.validateStartup)());
    /* istanbul ignore next */
    cov_4zwuxatq4().s[52]++;
    setStartupReport(startup);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[53]++;
    setLoadingSection("codeQuality");
    const codeQuality =
    /* istanbul ignore next */
    (cov_4zwuxatq4().s[54]++, await (0, _codeQuality.analyzeCodeQuality)(MOCK_CODE_SNIPPET));
    /* istanbul ignore next */
    cov_4zwuxatq4().s[55]++;
    setCodeQualityReport(codeQuality);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[56]++;
    setLoadingSection("tests");
    const tests =
    /* istanbul ignore next */
    (cov_4zwuxatq4().s[57]++, await (0, _testRunner.runTests)(MOCK_TEST_CASES));
    /* istanbul ignore next */
    cov_4zwuxatq4().s[58]++;
    setTestRunReport(tests);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[59]++;
    setLoadingSection("performance");
    // Collect a few performance snapshots
    const snapshots =
    /* istanbul ignore next */
    (cov_4zwuxatq4().s[60]++, []);
    /* istanbul ignore next */
    cov_4zwuxatq4().s[61]++;
    for (let i =
    /* istanbul ignore next */
    (cov_4zwuxatq4().s[62]++, 0); i < 3; i++) {
      /* istanbul ignore next */
      cov_4zwuxatq4().s[63]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_4zwuxatq4().f[7]++;
        cov_4zwuxatq4().s[64]++;
        return setTimeout(resolve, 500);
      }); // Simulate delay between snapshots
      /* istanbul ignore next */
      cov_4zwuxatq4().s[65]++;
      snapshots.push((0, _performance.getPerformanceSnapshot)(`Snapshot ${i + 1}`));
    }
    /* istanbul ignore next */
    cov_4zwuxatq4().s[66]++;
    setPerformanceSnapshots(snapshots);
    // Performance snapshot collected for display
    /* istanbul ignore next */
    cov_4zwuxatq4().s[67]++;
    setLoadingSection(null);
  };
  /* istanbul ignore next */
  cov_4zwuxatq4().s[68]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_4zwuxatq4().f[8]++;
    cov_4zwuxatq4().s[69]++;
    runAllChecks();
  }, []);
  /* istanbul ignore next */
  cov_4zwuxatq4().s[70]++;
  const getStatusIcon = status => {
    /* istanbul ignore next */
    cov_4zwuxatq4().f[9]++;
    cov_4zwuxatq4().s[71]++;
    switch (status) {
      case "success":
        /* istanbul ignore next */
        cov_4zwuxatq4().b[17][0]++;
        cov_4zwuxatq4().s[72]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
          className: "w-5 h-5 text-green-500"
        });
      case "failure":
        /* istanbul ignore next */
        cov_4zwuxatq4().b[17][1]++;
        cov_4zwuxatq4().s[73]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.XCircle, {
          className: "w-5 h-5 text-red-500"
        });
      case "warning":
        /* istanbul ignore next */
        cov_4zwuxatq4().b[17][2]++;
        cov_4zwuxatq4().s[74]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertCircle, {
          className: "w-5 h-5 text-yellow-500"
        });
      default:
        /* istanbul ignore next */
        cov_4zwuxatq4().b[17][3]++;
        cov_4zwuxatq4().s[75]++;
        return null;
    }
  };
  /* istanbul ignore next */
  cov_4zwuxatq4().s[76]++;
  const renderReportSection = (title, icon, report, loadingKey, formatFn) => {
    /* istanbul ignore next */
    cov_4zwuxatq4().f[10]++;
    cov_4zwuxatq4().s[77]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "bg-white shadow rounded-lg p-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between mb-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h2", {
          className: "text-xl font-semibold text-gray-900 flex items-center space-x-2",
          children: [/*#__PURE__*/_react.default.createElement(icon, {
            className: "w-6 h-6 text-blue-600"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            children: title
          })]
        }),
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[18][0]++, loadingSection === loadingKey) &&
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[18][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingIndicator.default, {
          message: "Analyzing..."
        })),
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[19][0]++, report) &&
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[19][1]++, getStatusIcon(
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[20][0]++, report.overallStatus) ||
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[20][1]++, report.failedTests === 0 ?
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[21][0]++, "success") :
        /* istanbul ignore next */
        (cov_4zwuxatq4().b[21][1]++, "failure"))))]
      }), report ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_4zwuxatq4().b[22][0]++, (0, _jsxruntime.jsx)("pre", {
        className: "bg-gray-50 p-4 rounded-md text-sm overflow-auto max-h-96",
        children: formatFn(report)
      })) :
      /* istanbul ignore next */
      (/*#__PURE__*/cov_4zwuxatq4().b[22][1]++, (0, _jsxruntime.jsx)("p", {
        className: "text-gray-500",
        children: 'Click "Run All Checks" to generate the report.'
      }))]
    });
  };
  /* istanbul ignore next */
  cov_4zwuxatq4().s[78]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "min-h-screen bg-gray-50 p-8",
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "max-w-7xl mx-auto space-y-8",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex justify-between items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-gray-900",
          children: "System Status Dashboard"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
          onClick: runAllChecks,
          className: "flex items-center px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50",
          disabled: !!loadingSection,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            className: "w-5 h-5 mr-2"
          }), loadingSection ?
          /* istanbul ignore next */
          (cov_4zwuxatq4().b[23][0]++, `Running ${loadingSection}...`) :
          /* istanbul ignore next */
          (cov_4zwuxatq4().b[23][1]++, "Run All Checks")]
        })]
      }), renderReportSection("Startup Validation", _lucidereact.FlaskConical, startupReport, "startup", _startupValidator.formatStartupReport), renderReportSection("Code Quality Analysis", _lucidereact.Code, codeQualityReport, "codeQuality", _codeQuality.formatCodeQualityReport), renderReportSection("Test Run Results", _lucidereact.FlaskConical, testRunReport, "tests", _testRunner.formatTestRunReport), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "bg-white shadow rounded-lg p-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between mb-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h2", {
            className: "text-xl font-semibold text-gray-900 flex items-center space-x-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.BarChart2, {
              className: "w-6 h-6 text-blue-600"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              children: "Performance Monitoring"
            })]
          }),
          /* istanbul ignore next */
          (cov_4zwuxatq4().b[24][0]++, loadingSection === "performance") &&
          /* istanbul ignore next */
          (cov_4zwuxatq4().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingIndicator.default, {
            message: "Collecting..."
          }))]
        }), performanceSnapshots.length > 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_4zwuxatq4().b[25][0]++, (0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: performanceSnapshots.map((snapshot, index) => {
            /* istanbul ignore next */
            cov_4zwuxatq4().f[11]++;
            cov_4zwuxatq4().s[79]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "bg-gray-50 p-4 rounded-md text-sm",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
                className: "font-medium text-gray-800 mb-2 flex items-center space-x-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Clock, {
                  className: "w-4 h-4"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  children: [
                  /* istanbul ignore next */
                  (cov_4zwuxatq4().b[26][0]++, snapshot.event) ||
                  /* istanbul ignore next */
                  (cov_4zwuxatq4().b[26][1]++, "Performance Snapshot"), " (", new Date(snapshot.snapshotTime).toLocaleTimeString(), ")"]
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("ul", {
                className: "list-disc list-inside space-y-1",
                children: snapshot.metrics.map((metric, metricIndex) => {
                  /* istanbul ignore next */
                  cov_4zwuxatq4().f[12]++;
                  cov_4zwuxatq4().s[80]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("li", {
                    children: [metric.name, ":", " ", /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "font-semibold",
                      children: [metric.value, metric.unit]
                    })]
                  }, metricIndex);
                })
              })]
            }, index);
          })
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_4zwuxatq4().b[25][1]++, (0, _jsxruntime.jsx)("p", {
          className: "text-gray-500",
          children: 'Click "Run All Checks" to collect performance data.'
        }))]
      })]
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_4zwuxatq4().s[81]++, SystemStatus);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,