{"version":3,"names":["cov_mltp2mxlf","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","analyzeCodeQuality","formatCodeQualityReport","getImprovementSuggestions","code","Promise","resolve","setTimeout","issues","score","includes","push","message","split","findIndex","severity","length","report","Math","max","timestamp","Date","toISOString","issueType","summary","toLocaleString","forEach","issue","index"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\codeQuality.ts"],"sourcesContent":["// src/utils/codeQuality.ts\n\n/**\n * This utility file provides functions for analyzing and improving code quality.\n * It can be extended to integrate with linting tools, static analysis, etc.\n */\n\n/**\n * Simulates a code quality check.\n * In a real application, this would involve running linting tools or static analyzers.\n * @param code The code string to analyze.\n * @returns A promise that resolves with a CodeQualityReport.\n */\nexport async function analyzeCodeQuality(code: string): Promise<CodeQualityReport> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const issues: CodeQualityIssue[] = []\n      let score = 100\n\n      // Simulate finding common issues\n      if (code.includes(\"any\")) {\n        issues.push({\n          type: \"Warning\",\n          message: \"Avoid using 'any' type for better type safety.\",\n          line: code.split(\"\\n\").findIndex((line) => line.includes(\"any\")) + 1,\n          severity: \"Medium\",\n        })\n        score -= 5\n      }\n      if (code.includes(\"console.log\")) {\n        issues.push({\n          type: \"Info\",\n          message: \"Consider removing console.log statements in production code.\",\n          line: code.split(\"\\n\").findIndex((line) => line.includes(\"console.log\")) + 1,\n          severity: \"Low\",\n        })\n        score -= 2\n      }\n      if (code.length > 1000 && !code.includes(\"useMemo\") && !code.includes(\"useCallback\")) {\n        issues.push({\n          type: \"Warning\",\n          message: \"Large component, consider memoization or splitting into smaller components.\",\n          line: 1,\n          severity: \"Medium\",\n        })\n        score -= 10\n      }\n      if (code.includes(\"FIXME\") || code.includes(\"TODO\")) {\n        issues.push({\n          type: \"Info\",\n          message: \"Found development comments (FIXME/TODO).\",\n          line: code.split(\"\\n\").findIndex((line) => line.includes(\"FIXME\") || line.includes(\"TODO\")) + 1,\n          severity: \"Low\",\n        })\n        score -= 1\n      }\n\n      const report: CodeQualityReport = {\n        score: Math.max(0, score), // Ensure score doesn't go below 0\n        issues: issues,\n        timestamp: new Date().toISOString(),\n      }\n      resolve(report)\n    }, 500) // Simulate network delay\n  })\n}\n\n/**\n * Represents a single code quality issue found.\n */\nexport interface CodeQualityIssue {\n  type: \"Error\" | \"Warning\" | \"Info\"\n  message: string\n  line?: number\n  severity: \"High\" | \"Medium\" | \"Low\"\n}\n\n/**\n * Represents a report of the code quality analysis.\n */\nexport interface CodeQualityReport {\n  score: number // A score from 0-100, higher is better\n  issues: CodeQualityIssue[]\n  timestamp: string\n}\n\n/**\n * Provides suggestions for improving code quality based on common patterns.\n * @param issueType The type of issue to get suggestions for.\n * @returns A string containing improvement suggestions.\n */\nexport function getImprovementSuggestions(issueType: CodeQualityIssue[\"type\"]): string {\n  switch (issueType) {\n    case \"Error\":\n      return \"Review the error message carefully. Check variable definitions, function calls, and logical flow. Use a debugger to step through the code.\"\n    case \"Warning\":\n      return \"Warnings often indicate potential problems or best practice violations. Consider refactoring the code, improving type definitions, or optimizing performance.\"\n    case \"Info\":\n      return \"Informational messages highlight areas for minor improvements or cleanup. This might include removing unused code, adding comments, or refining naming conventions.\"\n    default:\n      return \"General code quality improvement tips: Write clear, concise code. Follow consistent coding styles. Use meaningful variable names. Break down complex functions into smaller, manageable ones. Write unit tests.\"\n  }\n}\n\n/**\n * Formats a code quality report into a human-readable string.\n * @param report The CodeQualityReport to format.\n * @returns A formatted string summary of the report.\n */\nexport function formatCodeQualityReport(report: CodeQualityReport): string {\n  let summary = `Code Quality Report (Generated: ${new Date(report.timestamp).toLocaleString()}):\\n`\n  summary += `Overall Score: ${report.score}/100\\n\\n`\n\n  if (report.issues.length === 0) {\n    summary += \"No issues found. Great job!\\n\"\n  } else {\n    summary += \"Issues Found:\\n\"\n    report.issues.forEach((issue, index) => {\n      summary += `${index + 1}. [${issue.type}] ${issue.message}`\n      if (issue.line) {\n        summary += ` (Line: ${issue.line})`\n      }\n      summary += ` - Severity: ${issue.severity}\\n`\n    })\n  }\n  return summary\n}\n"],"mappings":"AAAA;AAEA;;;GAAA,CAKA;;;;;MAKC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAA3B,IAAA;EAAA;EAAA,IAAA4B,QAAA,GAAA3B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAyB,QAAA,CAAA7B,IAAA,KAAA6B,QAAA,CAAA7B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA4B,QAAA,CAAA7B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAyB,cAAA,GAAAD,QAAA,CAAA7B,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MACqB+B,mBAAA;IAAA;IAAAhC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAY,kBAAA;;MAgGNC,wBAAA;IAAA;IAAAjC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAa,uBAAA;;MAlBAC,0BAAA;IAAA;IAAAlC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAc,yBAAA;;;AA9ET,eAAeF,mBAAmBG,IAAY;EAAA;EAAAnC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EACnD,OAAO,IAAIgB,OAAA,CAASC,OAAA;IAAA;IAAArC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAClBkB,UAAA,CAAW;MAAA;MAAAtC,aAAA,GAAAqB,CAAA;MACT,MAAMkB,MAAA;MAAA;MAAA,CAAAvC,aAAA,GAAAoB,CAAA,OAA6B,EAAE;MACrC,IAAIoB,KAAA;MAAA;MAAA,CAAAxC,aAAA,GAAAoB,CAAA,QAAQ;MAEZ;MAAA;MAAApB,aAAA,GAAAoB,CAAA;MACA,IAAIe,IAAA,CAAKM,QAAQ,CAAC,QAAQ;QAAA;QAAAzC,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACxBmB,MAAA,CAAOG,IAAI,CAAC;UACVzB,IAAA,EAAM;UACN0B,OAAA,EAAS;UACTlC,IAAA,EAAM0B,IAAA,CAAKS,KAAK,CAAC,MAAMC,SAAS,CAAEpC,IAAA,IAAS;YAAA;YAAAT,aAAA,GAAAqB,CAAA;YAAArB,aAAA,GAAAoB,CAAA;YAAA,OAAAX,IAAA,CAAKgC,QAAQ,CAAC;UAAA,KAAU;UACnEK,QAAA,EAAU;QACZ;QAAA;QAAA9C,aAAA,GAAAoB,CAAA;QACAoB,KAAA,IAAS;MACX;MAAA;MAAA;QAAAxC,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACA,IAAIe,IAAA,CAAKM,QAAQ,CAAC,gBAAgB;QAAA;QAAAzC,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAChCmB,MAAA,CAAOG,IAAI,CAAC;UACVzB,IAAA,EAAM;UACN0B,OAAA,EAAS;UACTlC,IAAA,EAAM0B,IAAA,CAAKS,KAAK,CAAC,MAAMC,SAAS,CAAEpC,IAAA,IAAS;YAAA;YAAAT,aAAA,GAAAqB,CAAA;YAAArB,aAAA,GAAAoB,CAAA;YAAA,OAAAX,IAAA,CAAKgC,QAAQ,CAAC;UAAA,KAAkB;UAC3EK,QAAA,EAAU;QACZ;QAAA;QAAA9C,aAAA,GAAAoB,CAAA;QACAoB,KAAA,IAAS;MACX;MAAA;MAAA;QAAAxC,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,UAAAa,IAAA,CAAKY,MAAM,GAAG;MAAA;MAAA,CAAA/C,aAAA,GAAAsB,CAAA,UAAQ,CAACa,IAAA,CAAKM,QAAQ,CAAC;MAAA;MAAA,CAAAzC,aAAA,GAAAsB,CAAA,UAAc,CAACa,IAAA,CAAKM,QAAQ,CAAC,iBAAgB;QAAA;QAAAzC,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACpFmB,MAAA,CAAOG,IAAI,CAAC;UACVzB,IAAA,EAAM;UACN0B,OAAA,EAAS;UACTlC,IAAA,EAAM;UACNqC,QAAA,EAAU;QACZ;QAAA;QAAA9C,aAAA,GAAAoB,CAAA;QACAoB,KAAA,IAAS;MACX;MAAA;MAAA;QAAAxC,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACA;MAAI;MAAA,CAAApB,aAAA,GAAAsB,CAAA,UAAAa,IAAA,CAAKM,QAAQ,CAAC;MAAA;MAAA,CAAAzC,aAAA,GAAAsB,CAAA,UAAYa,IAAA,CAAKM,QAAQ,CAAC,UAAS;QAAA;QAAAzC,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACnDmB,MAAA,CAAOG,IAAI,CAAC;UACVzB,IAAA,EAAM;UACN0B,OAAA,EAAS;UACTlC,IAAA,EAAM0B,IAAA,CAAKS,KAAK,CAAC,MAAMC,SAAS,CAAEpC,IAAA,IAAS;YAAA;YAAAT,aAAA,GAAAqB,CAAA;YAAArB,aAAA,GAAAoB,CAAA;YAAA,kCAAApB,aAAA,GAAAsB,CAAA,UAAAb,IAAA,CAAKgC,QAAQ,CAAC;YAAA;YAAA,CAAAzC,aAAA,GAAAsB,CAAA,UAAYb,IAAA,CAAKgC,QAAQ,CAAC;UAAA,KAAW;UAC9FK,QAAA,EAAU;QACZ;QAAA;QAAA9C,aAAA,GAAAoB,CAAA;QACAoB,KAAA,IAAS;MACX;MAAA;MAAA;QAAAxC,aAAA,GAAAsB,CAAA;MAAA;MAEA,MAAM0B,MAAA;MAAA;MAAA,CAAAhD,aAAA,GAAAoB,CAAA,QAA4B;QAChCoB,KAAA,EAAOS,IAAA,CAAKC,GAAG,CAAC,GAAGV,KAAA;QACnBD,MAAA,EAAQA,MAAA;QACRY,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;MACnC;MAAA;MAAArD,aAAA,GAAAoB,CAAA;MACAiB,OAAA,CAAQW,MAAA;IACV,GAAG,MAAK;EACV;AACF;AA0BO,SAASd,0BAA0BoB,SAAmC;EAAA;EAAAtD,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EAC3E,QAAQkC,SAAA;IACN,KAAK;MAAA;MAAAtD,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACH,OAAO;IACT,KAAK;MAAA;MAAApB,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACH,OAAO;IACT,KAAK;MAAA;MAAApB,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACH,OAAO;IACT;MAAA;MAAApB,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACE,OAAO;EACX;AACF;AAOO,SAASa,wBAAwBe,MAAyB;EAAA;EAAAhD,aAAA,GAAAqB,CAAA;EAC/D,IAAIkC,OAAA;EAAA;EAAA,CAAAvD,aAAA,GAAAoB,CAAA,QAAU,mCAAmC,IAAIgC,IAAA,CAAKJ,MAAA,CAAOG,SAAS,EAAEK,cAAc,QAAQ;EAAA;EAAAxD,aAAA,GAAAoB,CAAA;EAClGmC,OAAA,IAAW,kBAAkBP,MAAA,CAAOR,KAAK,UAAU;EAAA;EAAAxC,aAAA,GAAAoB,CAAA;EAEnD,IAAI4B,MAAA,CAAOT,MAAM,CAACQ,MAAM,KAAK,GAAG;IAAA;IAAA/C,aAAA,GAAAsB,CAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAC9BmC,OAAA,IAAW;EACb,OAAO;IAAA;IAAAvD,aAAA,GAAAsB,CAAA;IAAAtB,aAAA,GAAAoB,CAAA;IACLmC,OAAA,IAAW;IAAA;IAAAvD,aAAA,GAAAoB,CAAA;IACX4B,MAAA,CAAOT,MAAM,CAACkB,OAAO,CAAC,CAACC,KAAA,EAAOC,KAAA;MAAA;MAAA3D,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAC5BmC,OAAA,IAAW,GAAGI,KAAA,GAAQ,OAAOD,KAAA,CAAMzC,IAAI,KAAKyC,KAAA,CAAMf,OAAO,EAAE;MAAA;MAAA3C,aAAA,GAAAoB,CAAA;MAC3D,IAAIsC,KAAA,CAAMjD,IAAI,EAAE;QAAA;QAAAT,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QACdmC,OAAA,IAAW,WAAWG,KAAA,CAAMjD,IAAI,GAAG;MACrC;MAAA;MAAA;QAAAT,aAAA,GAAAsB,CAAA;MAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACAmC,OAAA,IAAW,gBAAgBG,KAAA,CAAMZ,QAAQ,IAAI;IAC/C;EACF;EAAA;EAAA9C,aAAA,GAAAoB,CAAA;EACA,OAAOmC,OAAA;AACT","ignoreList":[]}