1361fcee381c55b24071024ab410cede
"use strict";

/* istanbul ignore next */
function cov_255m12gg1k() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\backendService.ts";
  var hash = "eeeb046d58564fc1150ed9bd30acefb56a9f6397";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\backendService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "7": {
        start: {
          line: 21,
          column: 33
        },
        end: {
          line: 25,
          column: 1
        }
      },
      "8": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 60
        }
      },
      "9": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 65
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 121
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 41
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 33
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 39
        }
      },
      "16": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 69
        }
      },
      "18": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "19": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 43,
          column: 44
        }
      },
      "20": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 37
        }
      },
      "21": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "22": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 44
        }
      },
      "23": {
        start: {
          line: 58,
          column: 37
        },
        end: {
          line: 58,
          column: 44
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 11
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "26": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 38
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 65,
          column: 11
        }
      },
      "28": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 34
        }
      },
      "29": {
        start: {
          line: 67,
          column: 27
        },
        end: {
          line: 67,
          column: 64
        }
      },
      "30": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "31": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "32": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "33": {
        start: {
          line: 73,
          column: 37
        },
        end: {
          line: 73,
          column: 44
        }
      },
      "34": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "35": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 45
        }
      },
      "36": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 81,
          column: 37
        }
      },
      "37": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "38": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "40": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 92,
          column: 14
        }
      },
      "41": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "42": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 66
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "44": {
        start: {
          line: 98,
          column: 44
        },
        end: {
          line: 98,
          column: 111
        }
      },
      "45": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 35
        }
      },
      "46": {
        start: {
          line: 99,
          column: 23
        },
        end: {
          line: 99,
          column: 35
        }
      },
      "47": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 51
        }
      },
      "48": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 26
        }
      },
      "49": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 106,
          column: 13
        }
      },
      "50": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 70
        }
      },
      "51": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 24
        }
      },
      "52": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "53": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 117,
          column: 14
        }
      },
      "54": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "55": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 123,
          column: 15
        }
      },
      "56": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "57": {
        start: {
          line: 126,
          column: 44
        },
        end: {
          line: 126,
          column: 124
        }
      },
      "58": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 127,
          column: 35
        }
      },
      "59": {
        start: {
          line: 127,
          column: 23
        },
        end: {
          line: 127,
          column: 35
        }
      },
      "60": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 51
        }
      },
      "61": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 26
        }
      },
      "62": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "63": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "64": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 24
        }
      },
      "65": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "66": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 19
        }
      },
      "67": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "68": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "69": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 19
        }
      },
      "70": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "71": {
        start: {
          line: 153,
          column: 30
        },
        end: {
          line: 153,
          column: 88
        }
      },
      "72": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 35
        }
      },
      "73": {
        start: {
          line: 154,
          column: 23
        },
        end: {
          line: 154,
          column: 35
        }
      },
      "74": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 51
        }
      },
      "75": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "76": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 160,
          column: 19
        }
      },
      "77": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 23
        }
      },
      "78": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 24
        }
      },
      "79": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "80": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 43
        }
      },
      "81": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "82": {
        start: {
          line: 172,
          column: 24
        },
        end: {
          line: 172,
          column: 66
        }
      },
      "83": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 181,
          column: 13
        }
      },
      "84": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 180,
          column: 19
        }
      },
      "85": {
        start: {
          line: 175,
          column: 20
        },
        end: {
          line: 179,
          column: 21
        }
      },
      "86": {
        start: {
          line: 176,
          column: 24
        },
        end: {
          line: 176,
          column: 53
        }
      },
      "87": {
        start: {
          line: 178,
          column: 24
        },
        end: {
          line: 178,
          column: 53
        }
      },
      "88": {
        start: {
          line: 182,
          column: 36
        },
        end: {
          line: 182,
          column: 47
        }
      },
      "89": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 35
        }
      },
      "90": {
        start: {
          line: 183,
          column: 23
        },
        end: {
          line: 183,
          column: 35
        }
      },
      "91": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 51
        }
      },
      "92": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 30
        }
      },
      "93": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "94": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 58
        }
      },
      "95": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 24
        }
      },
      "96": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 267,
          column: 9
        }
      },
      "97": {
        start: {
          line: 198,
          column: 16
        },
        end: {
          line: 223,
          column: 18
        }
      },
      "98": {
        start: {
          line: 225,
          column: 16
        },
        end: {
          line: 250,
          column: 18
        }
      },
      "99": {
        start: {
          line: 252,
          column: 16
        },
        end: {
          line: 264,
          column: 18
        }
      },
      "100": {
        start: {
          line: 266,
          column: 16
        },
        end: {
          line: 266,
          column: 26
        }
      },
      "101": {
        start: {
          line: 271,
          column: 23
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "102": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 39
        }
      },
      "103": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 32
        }
      },
      "104": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 49
        }
      },
      "105": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 288,
          column: 10
        }
      },
      "106": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 44
        }
      },
      "107": {
        start: {
          line: 291,
          column: 37
        },
        end: {
          line: 291,
          column: 44
        }
      },
      "108": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 81
        }
      },
      "109": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 44
        }
      },
      "110": {
        start: {
          line: 295,
          column: 37
        },
        end: {
          line: 295,
          column: 44
        }
      },
      "111": {
        start: {
          line: 296,
          column: 31
        },
        end: {
          line: 296,
          column: 81
        }
      },
      "112": {
        start: {
          line: 296,
          column: 66
        },
        end: {
          line: 296,
          column: 80
        }
      },
      "113": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 306,
          column: 9
        }
      },
      "114": {
        start: {
          line: 298,
          column: 12
        },
        end: {
          line: 305,
          column: 13
        }
      },
      "115": {
        start: {
          line: 299,
          column: 16
        },
        end: {
          line: 299,
          column: 56
        }
      },
      "116": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 300,
          column: 37
        }
      },
      "117": {
        start: {
          line: 301,
          column: 16
        },
        end: {
          line: 301,
          column: 63
        }
      },
      "118": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 77
        }
      },
      "119": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 79
        }
      },
      "120": {
        start: {
          line: 308,
          column: 63
        },
        end: {
          line: 308,
          column: 77
        }
      },
      "121": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 32
        }
      },
      "122": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 44
        }
      },
      "123": {
        start: {
          line: 312,
          column: 37
        },
        end: {
          line: 312,
          column: 44
        }
      },
      "124": {
        start: {
          line: 313,
          column: 39
        },
        end: {
          line: 313,
          column: 45
        }
      },
      "125": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "126": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 67
        }
      },
      "127": {
        start: {
          line: 317,
          column: 16
        },
        end: {
          line: 317,
          column: 22
        }
      },
      "128": {
        start: {
          line: 319,
          column: 46
        },
        end: {
          line: 319,
          column: 50
        }
      },
      "129": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 320,
          column: 86
        }
      },
      "130": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 22
        }
      },
      "131": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 323,
          column: 81
        }
      },
      "132": {
        start: {
          line: 324,
          column: 16
        },
        end: {
          line: 324,
          column: 22
        }
      },
      "133": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "134": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 44
        }
      },
      "135": {
        start: {
          line: 332,
          column: 25
        },
        end: {
          line: 332,
          column: 75
        }
      },
      "136": {
        start: {
          line: 333,
          column: 23
        },
        end: {
          line: 333,
          column: 53
        }
      },
      "137": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 48
        }
      },
      "138": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 44
        }
      },
      "139": {
        start: {
          line: 337,
          column: 37
        },
        end: {
          line: 337,
          column: 44
        }
      },
      "140": {
        start: {
          line: 338,
          column: 25
        },
        end: {
          line: 338,
          column: 75
        }
      },
      "141": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 339,
          column: 61
        }
      },
      "142": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 348,
          column: 11
        }
      },
      "143": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "144": {
        start: {
          line: 352,
          column: 12
        },
        end: {
          line: 356,
          column: 14
        }
      },
      "145": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 52
        }
      },
      "146": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "147": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 19
        }
      },
      "148": {
        start: {
          line: 366,
          column: 25
        },
        end: {
          line: 372,
          column: 9
        }
      },
      "149": {
        start: {
          line: 373,
          column: 8
        },
        end: {
          line: 382,
          column: 9
        }
      },
      "150": {
        start: {
          line: 374,
          column: 12
        },
        end: {
          line: 381,
          column: 13
        }
      },
      "151": {
        start: {
          line: 375,
          column: 29
        },
        end: {
          line: 375,
          column: 52
        }
      },
      "152": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 376,
          column: 49
        }
      },
      "153": {
        start: {
          line: 377,
          column: 16
        },
        end: {
          line: 377,
          column: 56
        }
      },
      "154": {
        start: {
          line: 380,
          column: 16
        },
        end: {
          line: 380,
          column: 70
        }
      },
      "155": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "156": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 393,
          column: 14
        }
      },
      "157": {
        start: {
          line: 395,
          column: 26
        },
        end: {
          line: 395,
          column: 36
        }
      },
      "158": {
        start: {
          line: 396,
          column: 8
        },
        end: {
          line: 415,
          column: 9
        }
      },
      "159": {
        start: {
          line: 397,
          column: 12
        },
        end: {
          line: 399,
          column: 13
        }
      },
      "160": {
        start: {
          line: 398,
          column: 16
        },
        end: {
          line: 398,
          column: 67
        }
      },
      "161": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 78
        }
      },
      "162": {
        start: {
          line: 401,
          column: 33
        },
        end: {
          line: 401,
          column: 55
        }
      },
      "163": {
        start: {
          line: 402,
          column: 12
        },
        end: {
          line: 407,
          column: 14
        }
      },
      "164": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 414,
          column: 14
        }
      },
      "165": {
        start: {
          line: 418,
          column: 30
        },
        end: {
          line: 418,
          column: 110
        }
      },
      "166": {
        start: {
          line: 418,
          column: 84
        },
        end: {
          line: 418,
          column: 109
        }
      },
      "167": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 72
        }
      },
      "168": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 425,
          column: 9
        }
      },
      "169": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 431,
          column: 9
        }
      },
      "170": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 45
        }
      },
      "171": {
        start: {
          line: 432,
          column: 8
        },
        end: {
          line: 435,
          column: 9
        }
      },
      "172": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 74
        }
      },
      "173": {
        start: {
          line: 434,
          column: 12
        },
        end: {
          line: 434,
          column: 77
        }
      },
      "174": {
        start: {
          line: 434,
          column: 54
        },
        end: {
          line: 434,
          column: 75
        }
      },
      "175": {
        start: {
          line: 438,
          column: 23
        },
        end: {
          line: 438,
          column: 43
        }
      },
      "176": {
        start: {
          line: 439,
          column: 17
        },
        end: {
          line: 439,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 37
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 28
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        loc: {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 57
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 59,
            column: 42
          },
          end: {
            line: 59,
            column: 43
          }
        },
        loc: {
          start: {
            line: 59,
            column: 46
          },
          end: {
            line: 62,
            column: 9
          }
        },
        line: 59
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 44
          }
        },
        loc: {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 63
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 24
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 72
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 77,
            column: 40
          },
          end: {
            line: 77,
            column: 41
          }
        },
        loc: {
          start: {
            line: 77,
            column: 44
          },
          end: {
            line: 81,
            column: 9
          }
        },
        line: 77
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 30
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 84
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 34
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 110
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 140,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        loc: {
          start: {
            line: 140,
            column: 28
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 140
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 5
          }
        },
        loc: {
          start: {
            line: 166,
            column: 31
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 166
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 174,
            column: 48
          },
          end: {
            line: 174,
            column: 49
          }
        },
        loc: {
          start: {
            line: 174,
            column: 64
          },
          end: {
            line: 180,
            column: 17
          }
        },
        line: 174
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 23
          },
          end: {
            line: 268,
            column: 5
          }
        },
        line: 195
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 5
          }
        },
        loc: {
          start: {
            line: 270,
            column: 43
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 270
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 23
          },
          end: {
            line: 293,
            column: 5
          }
        },
        line: 290
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 294,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        loc: {
          start: {
            line: 294,
            column: 31
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 294
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 296,
            column: 56
          },
          end: {
            line: 296,
            column: 57
          }
        },
        loc: {
          start: {
            line: 296,
            column: 66
          },
          end: {
            line: 296,
            column: 80
          }
        },
        line: 296
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 308,
            column: 53
          },
          end: {
            line: 308,
            column: 54
          }
        },
        loc: {
          start: {
            line: 308,
            column: 63
          },
          end: {
            line: 308,
            column: 77
          }
        },
        line: 308
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 311,
            column: 5
          }
        },
        loc: {
          start: {
            line: 311,
            column: 39
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 311
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        loc: {
          start: {
            line: 328,
            column: 35
          },
          end: {
            line: 335,
            column: 5
          }
        },
        line: 328
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 41
          },
          end: {
            line: 340,
            column: 5
          }
        },
        line: 336
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 342,
            column: 4
          },
          end: {
            line: 342,
            column: 5
          }
        },
        loc: {
          start: {
            line: 342,
            column: 51
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 342
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 350,
            column: 4
          },
          end: {
            line: 350,
            column: 5
          }
        },
        loc: {
          start: {
            line: 350,
            column: 26
          },
          end: {
            line: 359,
            column: 5
          }
        },
        line: 350
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 5
          }
        },
        loc: {
          start: {
            line: 361,
            column: 28
          },
          end: {
            line: 383,
            column: 5
          }
        },
        line: 361
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 385,
            column: 4
          },
          end: {
            line: 385,
            column: 5
          }
        },
        loc: {
          start: {
            line: 385,
            column: 34
          },
          end: {
            line: 416,
            column: 5
          }
        },
        line: 385
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 417,
            column: 4
          },
          end: {
            line: 417,
            column: 5
          }
        },
        loc: {
          start: {
            line: 417,
            column: 25
          },
          end: {
            line: 420,
            column: 5
          }
        },
        line: 417
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 418,
            column: 74
          },
          end: {
            line: 418,
            column: 75
          }
        },
        loc: {
          start: {
            line: 418,
            column: 84
          },
          end: {
            line: 418,
            column: 109
          }
        },
        line: 418
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 421,
            column: 4
          },
          end: {
            line: 421,
            column: 5
          }
        },
        loc: {
          start: {
            line: 421,
            column: 28
          },
          end: {
            line: 426,
            column: 5
          }
        },
        line: 421
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 14
          },
          end: {
            line: 436,
            column: 5
          }
        },
        line: 428
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 434,
            column: 50
          },
          end: {
            line: 434,
            column: 51
          }
        },
        loc: {
          start: {
            line: 434,
            column: 54
          },
          end: {
            line: 434,
            column: 75
          }
        },
        line: 434
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 22
          }
        }, {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 37
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 24,
            column: 78
          }
        }, {
          start: {
            line: 24,
            column: 82
          },
          end: {
            line: 24,
            column: 120
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 16
          },
          end: {
            line: 27,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 27,
            column: 27
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 51
          }
        }, {
          start: {
            line: 34,
            column: 55
          },
          end: {
            line: 34,
            column: 78
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 47,
            column: 9
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: 52,
            column: 15
          },
          end: {
            line: 54,
            column: 9
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 73,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "10": {
        loc: {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 29
          }
        }, {
          start: {
            line: 78,
            column: 33
          },
          end: {
            line: 78,
            column: 55
          }
        }],
        line: 78
      },
      "11": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "12": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "13": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 26
          }
        }, {
          start: {
            line: 94,
            column: 30
          },
          end: {
            line: 94,
            column: 59
          }
        }],
        line: 94
      },
      "14": {
        loc: {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 99,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "15": {
        loc: {
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 106,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 124,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "18": {
        loc: {
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 12
          },
          end: {
            line: 119,
            column: 26
          }
        }, {
          start: {
            line: 119,
            column: 30
          },
          end: {
            line: 119,
            column: 59
          }
        }],
        line: 119
      },
      "19": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 127,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "22": {
        loc: {
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "23": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 146,
            column: 26
          }
        }, {
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 59
          }
        }],
        line: 146
      },
      "24": {
        loc: {
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 12
          },
          end: {
            line: 154,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "25": {
        loc: {
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 12
          },
          end: {
            line: 162,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "26": {
        loc: {
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 167
      },
      "27": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 181,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "28": {
        loc: {
          start: {
            line: 175,
            column: 20
          },
          end: {
            line: 179,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 20
          },
          end: {
            line: 179,
            column: 21
          }
        }, {
          start: {
            line: 177,
            column: 27
          },
          end: {
            line: 179,
            column: 21
          }
        }],
        line: 175
      },
      "29": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "30": {
        loc: {
          start: {
            line: 185,
            column: 19
          },
          end: {
            line: 185,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 19
          },
          end: {
            line: 185,
            column: 23
          }
        }, {
          start: {
            line: 185,
            column: 27
          },
          end: {
            line: 185,
            column: 29
          }
        }],
        line: 185
      },
      "31": {
        loc: {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 190,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "32": {
        loc: {
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 16
          },
          end: {
            line: 188,
            column: 30
          }
        }, {
          start: {
            line: 188,
            column: 34
          },
          end: {
            line: 188,
            column: 63
          }
        }],
        line: 188
      },
      "33": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 267,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 197,
            column: 12
          },
          end: {
            line: 223,
            column: 18
          }
        }, {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 250,
            column: 18
          }
        }, {
          start: {
            line: 251,
            column: 12
          },
          end: {
            line: 264,
            column: 18
          }
        }, {
          start: {
            line: 265,
            column: 12
          },
          end: {
            line: 266,
            column: 26
          }
        }],
        line: 196
      },
      "34": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 291,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 291
      },
      "35": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 295,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "36": {
        loc: {
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 312,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 312,
            column: 8
          },
          end: {
            line: 312,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 312
      },
      "37": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 315,
            column: 12
          },
          end: {
            line: 317,
            column: 22
          }
        }, {
          start: {
            line: 318,
            column: 12
          },
          end: {
            line: 321,
            column: 22
          }
        }, {
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 324,
            column: 22
          }
        }],
        line: 314
      },
      "38": {
        loc: {
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 329,
            column: 8
          },
          end: {
            line: 331,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 329
      },
      "39": {
        loc: {
          start: {
            line: 332,
            column: 59
          },
          end: {
            line: 332,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 59
          },
          end: {
            line: 332,
            column: 66
          }
        }, {
          start: {
            line: 332,
            column: 70
          },
          end: {
            line: 332,
            column: 72
          }
        }],
        line: 332
      },
      "40": {
        loc: {
          start: {
            line: 334,
            column: 15
          },
          end: {
            line: 334,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 334,
            column: 24
          },
          end: {
            line: 334,
            column: 42
          }
        }, {
          start: {
            line: 334,
            column: 45
          },
          end: {
            line: 334,
            column: 47
          }
        }],
        line: 334
      },
      "41": {
        loc: {
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 337,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 337,
            column: 8
          },
          end: {
            line: 337,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 337
      },
      "42": {
        loc: {
          start: {
            line: 338,
            column: 59
          },
          end: {
            line: 338,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 338,
            column: 59
          },
          end: {
            line: 338,
            column: 66
          }
        }, {
          start: {
            line: 338,
            column: 70
          },
          end: {
            line: 338,
            column: 72
          }
        }],
        line: 338
      },
      "43": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "44": {
        loc: {
          start: {
            line: 352,
            column: 19
          },
          end: {
            line: 356,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 352,
            column: 19
          },
          end: {
            line: 352,
            column: 46
          }
        }, {
          start: {
            line: 352,
            column: 50
          },
          end: {
            line: 356,
            column: 13
          }
        }],
        line: 352
      },
      "45": {
        loc: {
          start: {
            line: 355,
            column: 24
          },
          end: {
            line: 355,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 355,
            column: 49
          },
          end: {
            line: 355,
            column: 58
          }
        }, {
          start: {
            line: 355,
            column: 61
          },
          end: {
            line: 355,
            column: 69
          }
        }],
        line: 355
      },
      "46": {
        loc: {
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 365,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 8
          },
          end: {
            line: 365,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "47": {
        loc: {
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 386,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 386
      },
      "48": {
        loc: {
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 399,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 397,
            column: 12
          },
          end: {
            line: 399,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 397
      },
      "49": {
        loc: {
          start: {
            line: 424,
            column: 15
          },
          end: {
            line: 424,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 424,
            column: 40
          },
          end: {
            line: 424,
            column: 44
          }
        }, {
          start: {
            line: 424,
            column: 47
          },
          end: {
            line: 424,
            column: 50
          }
        }],
        line: 424
      },
      "50": {
        loc: {
          start: {
            line: 429,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 429,
            column: 8
          },
          end: {
            line: 431,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 429
      },
      "51": {
        loc: {
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 432,
            column: 8
          },
          end: {
            line: 435,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 432
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0, 0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0, 0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\backendService.ts"],
      sourcesContent: ["import { supabase } from \"../lib/supabase\"\nimport type { Database } from \"../lib/supabase\"\n\ntype Tables<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Row\"]\ntype Inserts<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Insert\"]\ntype Updates<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Update\"]\n\nexport interface BackendConfig {\n  apiUrl: string\n  timeout: number\n  retryAttempts: number\n  enableOfflineMode: boolean\n  syncInterval: number\n}\n\nexport interface SyncStatus {\n  entity: string\n  lastSync: string\n  status: \"synced\" | \"pending\" | \"error\"\n  errorMessage?: string\n}\n\nexport interface OfflineAction {\n  id: string\n  type: \"create\" | \"update\" | \"delete\"\n  entity: string\n  data: Record<string, unknown>\n  timestamp: string\n  synced: boolean\n}\n\nexport interface BackupData {\n  id: string\n  timestamp: string\n  entities: Record<string, unknown[]>\n  size: number\n  compressed: boolean\n}\n\n// Helper function to check if we have a real Supabase connection\nconst isRealSupabaseConnection = () => {\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\n  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n  return supabaseUrl && supabaseKey && !supabaseUrl.includes(\"your-project\") && !supabaseKey.includes(\"your-anon-key\")\n}\n\nclass BackendService {\n  private config: BackendConfig\n  private offlineQueue: OfflineAction[] = []\n  private syncStatus: Map<string, SyncStatus> = new Map()\n  private isOnline = navigator.onLine\n  private syncInterval: NodeJS.Timeout | null = null\n  private hasRealConnection = false\n\n  constructor(config: Partial<BackendConfig> = {}) {\n    this.config = {\n      apiUrl: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3001\",\n      timeout: 30000,\n      retryAttempts: 3,\n      enableOfflineMode: true,\n      syncInterval: 30000, // 30 seconds\n      ...config,\n    }\n\n    this.hasRealConnection = Boolean(isRealSupabaseConnection())\n\n    if (this.hasRealConnection) {\n      this.initializeOfflineSupport()\n      this.startSyncInterval()\n    } else {\n      // Silent logging - Backend service running in mock mode\n    }\n  }\n\n  async initialize(): Promise<void> {\n    if (this.hasRealConnection) {\n      // Silent logging - Backend service initialized with real database\n    } else {\n      // Silent logging - Backend service initialized in mock mode\n    }\n  }\n\n  // Connection Management\n  private initializeOfflineSupport(): void {\n    if (!this.hasRealConnection) return\n\n    window.addEventListener(\"online\", () => {\n      this.isOnline = true\n      this.syncOfflineActions()\n    })\n\n    window.addEventListener(\"offline\", () => {\n      this.isOnline = false\n    })\n\n    // Load offline queue from localStorage\n    const savedQueue = localStorage.getItem(\"offline_queue\")\n    if (savedQueue) {\n      this.offlineQueue = JSON.parse(savedQueue)\n    }\n  }\n\n  private startSyncInterval(): void {\n    if (!this.hasRealConnection) return\n\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval)\n    }\n\n    this.syncInterval = setInterval(() => {\n      if (this.isOnline && this.hasRealConnection) {\n        this.syncAllEntities()\n      }\n    }, this.config.syncInterval)\n  }\n\n  // CRUD Operations with Offline Support\n  async create<T extends keyof Database[\"public\"][\"Tables\"]>(table: T, data: Inserts<T>): Promise<Tables<T>> {\n    if (!this.hasRealConnection) {\n      // Return mock data for development\n      return {\n        id: crypto.randomUUID(),\n        ...data,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString(),\n      } as Tables<T>\n    }\n\n    if (!this.isOnline && this.config.enableOfflineMode) {\n      return this.queueOfflineAction(\"create\", table as string, data as any)\n    }\n\n    try {\n      const { data: result, error } = await (supabase as any).from(table).insert(data as any).select().single()\n\n      if (error) throw error\n\n      // Update sync status\n      this.updateSyncStatus(table as string, \"synced\")\n\n      return result as Tables<T>\n    } catch (error: any) {\n      if (this.config.enableOfflineMode) {\n        return this.queueOfflineAction(\"create\", table as string, data as any)\n      }\n      throw error\n    }\n  }\n\n  async update<T extends keyof Database[\"public\"][\"Tables\"]>(\n    table: T,\n    id: string,\n    data: Updates<T>,\n  ): Promise<Tables<T>> {\n    if (!this.hasRealConnection) {\n      // Return mock data for development\n      return {\n        id,\n        ...data,\n        updated_at: new Date().toISOString(),\n      } as Tables<T>\n    }\n\n    if (!this.isOnline && this.config.enableOfflineMode) {\n      return this.queueOfflineAction(\"update\", table as string, { id, ...data as any })\n    }\n\n    try {\n      const { data: result, error } = await (supabase as any).from(table).update(data as any).eq(\"id\", id as any).select().single()\n\n      if (error) throw error\n\n      this.updateSyncStatus(table as string, \"synced\")\n\n      return result as Tables<T>\n    } catch (error: any) {\n      if (this.config.enableOfflineMode) {\n        return this.queueOfflineAction(\"update\", table as string, { id, ...data as any })\n      }\n      throw error\n    }\n  }\n\n  async delete<T extends keyof Database[\"public\"][\"Tables\"]>(table: T, id: string): Promise<void> {\n    if (!this.hasRealConnection) {\n      // Mock delete - just log it\n      // Silent logging - Mock delete operation\n      return\n    }\n\n    if (!this.isOnline && this.config.enableOfflineMode) {\n      this.queueOfflineAction(\"delete\", table as string, { id })\n      return\n    }\n\n    try {\n      const { error } = await (supabase as any).from(table).delete().eq(\"id\", id as any)\n\n      if (error) throw error\n\n      this.updateSyncStatus(table as string, \"synced\")\n    } catch (error: any) {\n      if (this.config.enableOfflineMode) {\n        this.queueOfflineAction(\"delete\", table as string, { id })\n        return\n      }\n      throw error\n    }\n  }\n\n  async read<T extends keyof Database[\"public\"][\"Tables\"]>(\n    table: T,\n    filters?: Record<string, any>,\n  ): Promise<Tables<T>[]> {\n    if (!this.hasRealConnection) {\n      // Return mock data based on table\n      return this.getMockData(table as string) as Tables<T>[]\n    }\n\n    try {\n      let query = (supabase as any).from(table).select(\"*\")\n\n      if (filters) {\n        Object.entries(filters).forEach(([key, value]) => {\n          if (Array.isArray(value)) {\n            query = query.in(key as any, value as any)\n          } else {\n            query = query.eq(key as any, value as any)\n          }\n        })\n      }\n\n      const { data, error } = await query\n\n      if (error) throw error\n\n      this.updateSyncStatus(table as string, \"synced\")\n\n      return (data || []) as Tables<T>[]\n    } catch (error: any) {\n      // Try to get cached data if offline\n      if (!this.isOnline && this.config.enableOfflineMode) {\n        return this.getCachedData(table as string, filters)\n      }\n      throw error\n    }\n  }\n\n  // Mock data for development\n  private getMockData(table: string): any[] {\n    switch (table) {\n      case \"clients\":\n        return [\n          {\n            id: \"1\",\n            name: \"Acme Corp\",\n            email: \"john@acme.com\",\n            phone: \"555-0123\",\n            company: \"Acme Corporation\",\n            status: \"active\",\n            stage: \"1\",\n            value: 5000,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          },\n          {\n            id: \"2\",\n            name: \"Tech Solutions\",\n            email: \"sarah@techsolutions.com\",\n            phone: \"555-0456\",\n            company: \"Tech Solutions Inc\",\n            status: \"active\",\n            stage: \"3\",\n            value: 12000,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          },\n        ]\n      case \"tasks\":\n        return [\n          {\n            id: \"1\",\n            title: \"Design Homepage\",\n            description: \"Create homepage design mockup\",\n            status: \"pending\",\n            priority: \"high\",\n            due_date: \"2024-02-15\",\n            client_id: \"1\",\n            assigned_to: \"John Doe\",\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          },\n          {\n            id: \"2\",\n            title: \"Client Review\",\n            description: \"Review client feedback\",\n            status: \"completed\",\n            priority: \"medium\",\n            due_date: \"2024-02-20\",\n            client_id: \"2\",\n            assigned_to: \"Jane Smith\",\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          },\n        ]\n      case \"events\":\n        return [\n          {\n            id: \"1\",\n            title: \"Client Meeting\",\n            description: \"Discuss project requirements\",\n            start_date: \"2024-02-15T10:00:00Z\",\n            end_date: \"2024-02-15T11:00:00Z\",\n            type: \"meeting\",\n            client_id: \"1\",\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n          },\n        ]\n      default:\n        return []\n    }\n  }\n\n  // Offline Queue Management\n  private queueOfflineAction(type: OfflineAction[\"type\"], entity: string, data: any): any {\n    const action: OfflineAction = {\n      id: crypto.randomUUID(),\n      type,\n      entity,\n      data,\n      timestamp: new Date().toISOString(),\n      synced: false,\n    }\n\n    this.offlineQueue.push(action)\n    this.saveOfflineQueue()\n    this.updateSyncStatus(entity, \"pending\")\n\n    // Return optimistic result for UI\n    return {\n      id: action.id,\n      ...data,\n      created_at: action.timestamp,\n      updated_at: action.timestamp,\n    }\n  }\n\n  private saveOfflineQueue(): void {\n    if (!this.hasRealConnection) return\n    localStorage.setItem(\"offline_queue\", JSON.stringify(this.offlineQueue))\n  }\n\n  private async syncOfflineActions(): Promise<void> {\n    if (!this.hasRealConnection) return\n\n    const pendingActions = this.offlineQueue.filter((action) => !action.synced)\n\n    for (const action of pendingActions) {\n      try {\n        await this.executeOfflineAction(action)\n        action.synced = true\n        this.updateSyncStatus(action.entity, \"synced\")\n      } catch (error: any) {\n        // Silent error handling - Failed to sync action\n        this.updateSyncStatus(action.entity, \"error\", error.message)\n      }\n    }\n\n    // Remove synced actions\n    this.offlineQueue = this.offlineQueue.filter((action) => !action.synced)\n    this.saveOfflineQueue()\n  }\n\n  private async executeOfflineAction(action: OfflineAction): Promise<void> {\n    if (!this.hasRealConnection) return\n\n    const { type, entity, data } = action\n\n    switch (type) {\n      case \"create\":\n        await (supabase as any).from(entity).insert(data as any)\n        break\n      case \"update\":\n        const { id, ...updateData } = data\n        await (supabase as any).from(entity).update(updateData as any).eq(\"id\", id as any)\n        break\n      case \"delete\":\n        await (supabase as any).from(entity).delete().eq(\"id\", (data as any).id)\n        break\n    }\n  }\n\n  // Caching\n  private getCachedData(entity: string, filters?: Record<string, any>): any[] {\n    if (!this.hasRealConnection) {\n      return this.getMockData(entity)\n    }\n\n    const cacheKey = `cache_${entity}_${JSON.stringify(filters || {})}`\n    const cached = localStorage.getItem(cacheKey)\n    return cached ? JSON.parse(cached) : []\n  }\n\n  private setCachedData(entity: string, data: any[], filters?: Record<string, any>): void {\n    if (!this.hasRealConnection) return\n\n    const cacheKey = `cache_${entity}_${JSON.stringify(filters || {})}`\n    localStorage.setItem(cacheKey, JSON.stringify(data))\n  }\n\n  // Sync Status Management\n  private updateSyncStatus(entity: string, status: SyncStatus[\"status\"], errorMessage?: string): void {\n    this.syncStatus.set(entity, {\n      entity,\n      lastSync: new Date().toISOString(),\n      status,\n      errorMessage,\n    })\n  }\n\n  getSyncStatus(entity?: string): SyncStatus | SyncStatus[] {\n    if (entity) {\n      return (\n        this.syncStatus.get(entity) || {\n          entity,\n          lastSync: \"\",\n          status: this.hasRealConnection ? \"pending\" : \"synced\",\n        }\n      )\n    }\n    return Array.from(this.syncStatus.values())\n  }\n\n  // Full Sync\n  private async syncAllEntities(): Promise<void> {\n    if (!this.hasRealConnection) {\n      // Silent logging - Skipping sync, using mock data\n      return\n    }\n\n    const entities = [\"clients\", \"tasks\", \"events\", \"projects\", \"invoices\"]\n\n    for (const entity of entities) {\n      try {\n        const data = await this.read(entity as any)\n        this.setCachedData(entity, data)\n        this.updateSyncStatus(entity, \"synced\")\n      } catch (error: any) {\n        // Silent error handling - Failed to sync entity\n        this.updateSyncStatus(entity, \"error\", error.message)\n      }\n    }\n  }\n\n  // Performance Monitoring\n  async getPerformanceMetrics(): Promise<{\n    responseTime: number\n    errorRate: number\n    syncQueueSize: number\n    cacheHitRate: number\n  }> {\n    if (!this.hasRealConnection) {\n      // Return mock metrics for development\n      return {\n        responseTime: 50,\n        errorRate: 0,\n        syncQueueSize: 0,\n        cacheHitRate: 1,\n      }\n    }\n\n    const startTime = Date.now()\n\n    try {\n      if (!supabase) {\n        throw new Error(\"Supabase client not initialized\")\n      }\n      \n      await supabase.from(\"clients\").select(\"count\").limit(1)\n      const responseTime = Date.now() - startTime\n\n      return {\n        responseTime,\n        errorRate: this.calculateErrorRate(),\n        syncQueueSize: this.offlineQueue.length,\n        cacheHitRate: this.calculateCacheHitRate(),\n      }\n    } catch (error) {\n      return {\n        responseTime: -1,\n        errorRate: 1,\n        syncQueueSize: this.offlineQueue.length,\n        cacheHitRate: 0,\n      }\n    }\n  }\n\n  private calculateErrorRate(): number {\n    const errorStatuses = Array.from(this.syncStatus.values()).filter((status) => status.status === \"error\")\n    return errorStatuses.length / Math.max(this.syncStatus.size, 1)\n  }\n\n  private calculateCacheHitRate(): number {\n    // Simplified cache hit rate calculation\n    // In a real implementation, you'd track cache hits vs misses\n    return this.hasRealConnection ? 0.85 : 1.0 // 100% hit rate for mock data\n  }\n\n  // Cleanup\n  destroy(): void {\n    if (this.syncInterval) {\n      clearInterval(this.syncInterval)\n    }\n\n    if (this.hasRealConnection) {\n      window.removeEventListener(\"online\", this.syncOfflineActions)\n      window.removeEventListener(\"offline\", () => (this.isOnline = false))\n    }\n  }\n}\n\nexport const backendService = new BackendService()\nexport default backendService\n"],
      names: ["backendService", "isRealSupabaseConnection", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "includes", "BackendService", "config", "offlineQueue", "syncStatus", "Map", "isOnline", "navigator", "onLine", "syncInterval", "hasRealConnection", "apiUrl", "NEXT_PUBLIC_API_URL", "timeout", "retryAttempts", "enableOfflineMode", "Boolean", "initializeOfflineSupport", "startSyncInterval", "initialize", "window", "addEventListener", "syncOfflineActions", "savedQueue", "localStorage", "getItem", "JSON", "parse", "clearInterval", "setInterval", "syncAllEntities", "create", "table", "data", "id", "crypto", "randomUUID", "created_at", "Date", "toISOString", "updated_at", "queueOfflineAction", "result", "error", "supabase", "from", "insert", "select", "single", "updateSyncStatus", "update", "eq", "delete", "read", "filters", "getMockData", "query", "Object", "entries", "forEach", "key", "value", "Array", "isArray", "in", "getCachedData", "name", "email", "phone", "company", "status", "stage", "title", "description", "priority", "due_date", "client_id", "assigned_to", "start_date", "end_date", "type", "entity", "action", "timestamp", "synced", "push", "saveOfflineQueue", "setItem", "stringify", "pendingActions", "filter", "executeOfflineAction", "message", "updateData", "cacheKey", "cached", "setCachedData", "errorMessage", "set", "lastSync", "getSyncStatus", "get", "values", "entities", "getPerformanceMetrics", "responseTime", "errorRate", "syncQueueSize", "cacheHitRate", "startTime", "now", "Error", "limit", "calculateErrorRate", "length", "calculateCacheHitRate", "errorStatuses", "Math", "max", "size", "destroy", "removeEventListener"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eeeb046d58564fc1150ed9bd30acefb56a9f6397"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_255m12gg1k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_255m12gg1k();
cov_255m12gg1k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_255m12gg1k().f[0]++;
  cov_255m12gg1k().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_255m12gg1k().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_255m12gg1k().s[3]++;
_export(exports, {
  get backendService() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[1]++;
    cov_255m12gg1k().s[4]++;
    return backendService;
  },
  get default() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[2]++;
    cov_255m12gg1k().s[5]++;
    return _default;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_255m12gg1k().s[6]++, require("../lib/supabase"));
// Helper function to check if we have a real Supabase connection
/* istanbul ignore next */
cov_255m12gg1k().s[7]++;
const isRealSupabaseConnection = () => {
  /* istanbul ignore next */
  cov_255m12gg1k().f[3]++;
  const supabaseUrl =
  /* istanbul ignore next */
  (cov_255m12gg1k().s[8]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
  const supabaseKey =
  /* istanbul ignore next */
  (cov_255m12gg1k().s[9]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
  /* istanbul ignore next */
  cov_255m12gg1k().s[10]++;
  return /* istanbul ignore next */(cov_255m12gg1k().b[0][0]++, supabaseUrl) &&
  /* istanbul ignore next */
  (cov_255m12gg1k().b[0][1]++, supabaseKey) &&
  /* istanbul ignore next */
  (cov_255m12gg1k().b[0][2]++, !supabaseUrl.includes("your-project")) &&
  /* istanbul ignore next */
  (cov_255m12gg1k().b[0][3]++, !supabaseKey.includes("your-anon-key"));
};
class BackendService {
  constructor(config =
  /* istanbul ignore next */
  (cov_255m12gg1k().b[1][0]++, {})) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[4]++;
    cov_255m12gg1k().s[11]++;
    this.offlineQueue = [];
    /* istanbul ignore next */
    cov_255m12gg1k().s[12]++;
    this.syncStatus = new Map();
    /* istanbul ignore next */
    cov_255m12gg1k().s[13]++;
    this.isOnline = navigator.onLine;
    /* istanbul ignore next */
    cov_255m12gg1k().s[14]++;
    this.syncInterval = null;
    /* istanbul ignore next */
    cov_255m12gg1k().s[15]++;
    this.hasRealConnection = false;
    /* istanbul ignore next */
    cov_255m12gg1k().s[16]++;
    this.config = {
      apiUrl:
      /* istanbul ignore next */
      (cov_255m12gg1k().b[2][0]++, process.env.NEXT_PUBLIC_API_URL) ||
      /* istanbul ignore next */
      (cov_255m12gg1k().b[2][1]++, "http://localhost:3001"),
      timeout: 30000,
      retryAttempts: 3,
      enableOfflineMode: true,
      syncInterval: 30000,
      ...config
    };
    /* istanbul ignore next */
    cov_255m12gg1k().s[17]++;
    this.hasRealConnection = Boolean(isRealSupabaseConnection());
    /* istanbul ignore next */
    cov_255m12gg1k().s[18]++;
    if (this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[3][0]++;
      cov_255m12gg1k().s[19]++;
      this.initializeOfflineSupport();
      /* istanbul ignore next */
      cov_255m12gg1k().s[20]++;
      this.startSyncInterval();
    } else {
      /* istanbul ignore next */
      cov_255m12gg1k().b[3][1]++;
    } // Silent logging - Backend service running in mock mode
  }
  async initialize() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[5]++;
    cov_255m12gg1k().s[21]++;
    if (this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[4][0]++;
    } // Silent logging - Backend service initialized with real database
    else {
      /* istanbul ignore next */
      cov_255m12gg1k().b[4][1]++;
    } // Silent logging - Backend service initialized in mock mode
  }
  // Connection Management
  initializeOfflineSupport() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[6]++;
    cov_255m12gg1k().s[22]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[5][0]++;
      cov_255m12gg1k().s[23]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[5][1]++;
    }
    cov_255m12gg1k().s[24]++;
    window.addEventListener("online", () => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[7]++;
      cov_255m12gg1k().s[25]++;
      this.isOnline = true;
      /* istanbul ignore next */
      cov_255m12gg1k().s[26]++;
      this.syncOfflineActions();
    });
    /* istanbul ignore next */
    cov_255m12gg1k().s[27]++;
    window.addEventListener("offline", () => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[8]++;
      cov_255m12gg1k().s[28]++;
      this.isOnline = false;
    });
    // Load offline queue from localStorage
    const savedQueue =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[29]++, localStorage.getItem("offline_queue"));
    /* istanbul ignore next */
    cov_255m12gg1k().s[30]++;
    if (savedQueue) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[6][0]++;
      cov_255m12gg1k().s[31]++;
      this.offlineQueue = JSON.parse(savedQueue);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[6][1]++;
    }
  }
  startSyncInterval() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[9]++;
    cov_255m12gg1k().s[32]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[7][0]++;
      cov_255m12gg1k().s[33]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[7][1]++;
    }
    cov_255m12gg1k().s[34]++;
    if (this.syncInterval) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[8][0]++;
      cov_255m12gg1k().s[35]++;
      clearInterval(this.syncInterval);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[8][1]++;
    }
    cov_255m12gg1k().s[36]++;
    this.syncInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[10]++;
      cov_255m12gg1k().s[37]++;
      if (
      /* istanbul ignore next */
      (cov_255m12gg1k().b[10][0]++, this.isOnline) &&
      /* istanbul ignore next */
      (cov_255m12gg1k().b[10][1]++, this.hasRealConnection)) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[9][0]++;
        cov_255m12gg1k().s[38]++;
        this.syncAllEntities();
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[9][1]++;
      }
    }, this.config.syncInterval);
  }
  // CRUD Operations with Offline Support
  async create(table, data) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[11]++;
    cov_255m12gg1k().s[39]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[11][0]++;
      cov_255m12gg1k().s[40]++;
      // Return mock data for development
      return {
        id: crypto.randomUUID(),
        ...data,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      };
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[11][1]++;
    }
    cov_255m12gg1k().s[41]++;
    if (
    /* istanbul ignore next */
    (cov_255m12gg1k().b[13][0]++, !this.isOnline) &&
    /* istanbul ignore next */
    (cov_255m12gg1k().b[13][1]++, this.config.enableOfflineMode)) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[12][0]++;
      cov_255m12gg1k().s[42]++;
      return this.queueOfflineAction("create", table, data);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[12][1]++;
    }
    cov_255m12gg1k().s[43]++;
    try {
      const {
        data: result,
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[44]++, await _supabase.supabase.from(table).insert(data).select().single());
      /* istanbul ignore next */
      cov_255m12gg1k().s[45]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[14][0]++;
        cov_255m12gg1k().s[46]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[14][1]++;
      }
      // Update sync status
      cov_255m12gg1k().s[47]++;
      this.updateSyncStatus(table, "synced");
      /* istanbul ignore next */
      cov_255m12gg1k().s[48]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[49]++;
      if (this.config.enableOfflineMode) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[15][0]++;
        cov_255m12gg1k().s[50]++;
        return this.queueOfflineAction("create", table, data);
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[15][1]++;
      }
      cov_255m12gg1k().s[51]++;
      throw error;
    }
  }
  async update(table, id, data) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[12]++;
    cov_255m12gg1k().s[52]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[16][0]++;
      cov_255m12gg1k().s[53]++;
      // Return mock data for development
      return {
        id,
        ...data,
        updated_at: new Date().toISOString()
      };
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[16][1]++;
    }
    cov_255m12gg1k().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_255m12gg1k().b[18][0]++, !this.isOnline) &&
    /* istanbul ignore next */
    (cov_255m12gg1k().b[18][1]++, this.config.enableOfflineMode)) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[17][0]++;
      cov_255m12gg1k().s[55]++;
      return this.queueOfflineAction("update", table, {
        id,
        ...data
      });
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[17][1]++;
    }
    cov_255m12gg1k().s[56]++;
    try {
      const {
        data: result,
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[57]++, await _supabase.supabase.from(table).update(data).eq("id", id).select().single());
      /* istanbul ignore next */
      cov_255m12gg1k().s[58]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[19][0]++;
        cov_255m12gg1k().s[59]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[19][1]++;
      }
      cov_255m12gg1k().s[60]++;
      this.updateSyncStatus(table, "synced");
      /* istanbul ignore next */
      cov_255m12gg1k().s[61]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[62]++;
      if (this.config.enableOfflineMode) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[20][0]++;
        cov_255m12gg1k().s[63]++;
        return this.queueOfflineAction("update", table, {
          id,
          ...data
        });
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[20][1]++;
      }
      cov_255m12gg1k().s[64]++;
      throw error;
    }
  }
  async delete(table, id) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[13]++;
    cov_255m12gg1k().s[65]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[21][0]++;
      cov_255m12gg1k().s[66]++;
      // Mock delete - just log it
      // Silent logging - Mock delete operation
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[21][1]++;
    }
    cov_255m12gg1k().s[67]++;
    if (
    /* istanbul ignore next */
    (cov_255m12gg1k().b[23][0]++, !this.isOnline) &&
    /* istanbul ignore next */
    (cov_255m12gg1k().b[23][1]++, this.config.enableOfflineMode)) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[22][0]++;
      cov_255m12gg1k().s[68]++;
      this.queueOfflineAction("delete", table, {
        id
      });
      /* istanbul ignore next */
      cov_255m12gg1k().s[69]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[22][1]++;
    }
    cov_255m12gg1k().s[70]++;
    try {
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[71]++, await _supabase.supabase.from(table).delete().eq("id", id));
      /* istanbul ignore next */
      cov_255m12gg1k().s[72]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[24][0]++;
        cov_255m12gg1k().s[73]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[24][1]++;
      }
      cov_255m12gg1k().s[74]++;
      this.updateSyncStatus(table, "synced");
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[75]++;
      if (this.config.enableOfflineMode) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[25][0]++;
        cov_255m12gg1k().s[76]++;
        this.queueOfflineAction("delete", table, {
          id
        });
        /* istanbul ignore next */
        cov_255m12gg1k().s[77]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[25][1]++;
      }
      cov_255m12gg1k().s[78]++;
      throw error;
    }
  }
  async read(table, filters) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[14]++;
    cov_255m12gg1k().s[79]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[26][0]++;
      cov_255m12gg1k().s[80]++;
      // Return mock data based on table
      return this.getMockData(table);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[26][1]++;
    }
    cov_255m12gg1k().s[81]++;
    try {
      let query =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[82]++, _supabase.supabase.from(table).select("*"));
      /* istanbul ignore next */
      cov_255m12gg1k().s[83]++;
      if (filters) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[27][0]++;
        cov_255m12gg1k().s[84]++;
        Object.entries(filters).forEach(([key, value]) => {
          /* istanbul ignore next */
          cov_255m12gg1k().f[15]++;
          cov_255m12gg1k().s[85]++;
          if (Array.isArray(value)) {
            /* istanbul ignore next */
            cov_255m12gg1k().b[28][0]++;
            cov_255m12gg1k().s[86]++;
            query = query.in(key, value);
          } else {
            /* istanbul ignore next */
            cov_255m12gg1k().b[28][1]++;
            cov_255m12gg1k().s[87]++;
            query = query.eq(key, value);
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[27][1]++;
      }
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[88]++, await query);
      /* istanbul ignore next */
      cov_255m12gg1k().s[89]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[29][0]++;
        cov_255m12gg1k().s[90]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[29][1]++;
      }
      cov_255m12gg1k().s[91]++;
      this.updateSyncStatus(table, "synced");
      /* istanbul ignore next */
      cov_255m12gg1k().s[92]++;
      return /* istanbul ignore next */(cov_255m12gg1k().b[30][0]++, data) ||
      /* istanbul ignore next */
      (cov_255m12gg1k().b[30][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[93]++;
      // Try to get cached data if offline
      if (
      /* istanbul ignore next */
      (cov_255m12gg1k().b[32][0]++, !this.isOnline) &&
      /* istanbul ignore next */
      (cov_255m12gg1k().b[32][1]++, this.config.enableOfflineMode)) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[31][0]++;
        cov_255m12gg1k().s[94]++;
        return this.getCachedData(table, filters);
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[31][1]++;
      }
      cov_255m12gg1k().s[95]++;
      throw error;
    }
  }
  // Mock data for development
  getMockData(table) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[16]++;
    cov_255m12gg1k().s[96]++;
    switch (table) {
      case "clients":
        /* istanbul ignore next */
        cov_255m12gg1k().b[33][0]++;
        cov_255m12gg1k().s[97]++;
        return [{
          id: "1",
          name: "Acme Corp",
          email: "john@acme.com",
          phone: "555-0123",
          company: "Acme Corporation",
          status: "active",
          stage: "1",
          value: 5000,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }, {
          id: "2",
          name: "Tech Solutions",
          email: "sarah@techsolutions.com",
          phone: "555-0456",
          company: "Tech Solutions Inc",
          status: "active",
          stage: "3",
          value: 12000,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }];
      case "tasks":
        /* istanbul ignore next */
        cov_255m12gg1k().b[33][1]++;
        cov_255m12gg1k().s[98]++;
        return [{
          id: "1",
          title: "Design Homepage",
          description: "Create homepage design mockup",
          status: "pending",
          priority: "high",
          due_date: "2024-02-15",
          client_id: "1",
          assigned_to: "John Doe",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }, {
          id: "2",
          title: "Client Review",
          description: "Review client feedback",
          status: "completed",
          priority: "medium",
          due_date: "2024-02-20",
          client_id: "2",
          assigned_to: "Jane Smith",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }];
      case "events":
        /* istanbul ignore next */
        cov_255m12gg1k().b[33][2]++;
        cov_255m12gg1k().s[99]++;
        return [{
          id: "1",
          title: "Client Meeting",
          description: "Discuss project requirements",
          start_date: "2024-02-15T10:00:00Z",
          end_date: "2024-02-15T11:00:00Z",
          type: "meeting",
          client_id: "1",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }];
      default:
        /* istanbul ignore next */
        cov_255m12gg1k().b[33][3]++;
        cov_255m12gg1k().s[100]++;
        return [];
    }
  }
  // Offline Queue Management
  queueOfflineAction(type, entity, data) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[17]++;
    const action =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[101]++, {
      id: crypto.randomUUID(),
      type,
      entity,
      data,
      timestamp: new Date().toISOString(),
      synced: false
    });
    /* istanbul ignore next */
    cov_255m12gg1k().s[102]++;
    this.offlineQueue.push(action);
    /* istanbul ignore next */
    cov_255m12gg1k().s[103]++;
    this.saveOfflineQueue();
    /* istanbul ignore next */
    cov_255m12gg1k().s[104]++;
    this.updateSyncStatus(entity, "pending");
    // Return optimistic result for UI
    /* istanbul ignore next */
    cov_255m12gg1k().s[105]++;
    return {
      id: action.id,
      ...data,
      created_at: action.timestamp,
      updated_at: action.timestamp
    };
  }
  saveOfflineQueue() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[18]++;
    cov_255m12gg1k().s[106]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[34][0]++;
      cov_255m12gg1k().s[107]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[34][1]++;
    }
    cov_255m12gg1k().s[108]++;
    localStorage.setItem("offline_queue", JSON.stringify(this.offlineQueue));
  }
  async syncOfflineActions() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[19]++;
    cov_255m12gg1k().s[109]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[35][0]++;
      cov_255m12gg1k().s[110]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[35][1]++;
    }
    const pendingActions =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[111]++, this.offlineQueue.filter(action => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[20]++;
      cov_255m12gg1k().s[112]++;
      return !action.synced;
    }));
    /* istanbul ignore next */
    cov_255m12gg1k().s[113]++;
    for (const action of pendingActions) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[114]++;
      try {
        /* istanbul ignore next */
        cov_255m12gg1k().s[115]++;
        await this.executeOfflineAction(action);
        /* istanbul ignore next */
        cov_255m12gg1k().s[116]++;
        action.synced = true;
        /* istanbul ignore next */
        cov_255m12gg1k().s[117]++;
        this.updateSyncStatus(action.entity, "synced");
      } catch (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().s[118]++;
        // Silent error handling - Failed to sync action
        this.updateSyncStatus(action.entity, "error", error.message);
      }
    }
    // Remove synced actions
    /* istanbul ignore next */
    cov_255m12gg1k().s[119]++;
    this.offlineQueue = this.offlineQueue.filter(action => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[21]++;
      cov_255m12gg1k().s[120]++;
      return !action.synced;
    });
    /* istanbul ignore next */
    cov_255m12gg1k().s[121]++;
    this.saveOfflineQueue();
  }
  async executeOfflineAction(action) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[22]++;
    cov_255m12gg1k().s[122]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[36][0]++;
      cov_255m12gg1k().s[123]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[36][1]++;
    }
    const {
      type,
      entity,
      data
    } =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[124]++, action);
    /* istanbul ignore next */
    cov_255m12gg1k().s[125]++;
    switch (type) {
      case "create":
        /* istanbul ignore next */
        cov_255m12gg1k().b[37][0]++;
        cov_255m12gg1k().s[126]++;
        await _supabase.supabase.from(entity).insert(data);
        /* istanbul ignore next */
        cov_255m12gg1k().s[127]++;
        break;
      case "update":
        /* istanbul ignore next */
        cov_255m12gg1k().b[37][1]++;
        const {
          id,
          ...updateData
        } =
        /* istanbul ignore next */
        (cov_255m12gg1k().s[128]++, data);
        /* istanbul ignore next */
        cov_255m12gg1k().s[129]++;
        await _supabase.supabase.from(entity).update(updateData).eq("id", id);
        /* istanbul ignore next */
        cov_255m12gg1k().s[130]++;
        break;
      case "delete":
        /* istanbul ignore next */
        cov_255m12gg1k().b[37][2]++;
        cov_255m12gg1k().s[131]++;
        await _supabase.supabase.from(entity).delete().eq("id", data.id);
        /* istanbul ignore next */
        cov_255m12gg1k().s[132]++;
        break;
    }
  }
  // Caching
  getCachedData(entity, filters) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[23]++;
    cov_255m12gg1k().s[133]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[38][0]++;
      cov_255m12gg1k().s[134]++;
      return this.getMockData(entity);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[38][1]++;
    }
    const cacheKey =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[135]++, `cache_${entity}_${JSON.stringify(
    /* istanbul ignore next */
    (cov_255m12gg1k().b[39][0]++, filters) ||
    /* istanbul ignore next */
    (cov_255m12gg1k().b[39][1]++, {}))}`);
    const cached =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[136]++, localStorage.getItem(cacheKey));
    /* istanbul ignore next */
    cov_255m12gg1k().s[137]++;
    return cached ?
    /* istanbul ignore next */
    (cov_255m12gg1k().b[40][0]++, JSON.parse(cached)) :
    /* istanbul ignore next */
    (cov_255m12gg1k().b[40][1]++, []);
  }
  setCachedData(entity, data, filters) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[24]++;
    cov_255m12gg1k().s[138]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[41][0]++;
      cov_255m12gg1k().s[139]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[41][1]++;
    }
    const cacheKey =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[140]++, `cache_${entity}_${JSON.stringify(
    /* istanbul ignore next */
    (cov_255m12gg1k().b[42][0]++, filters) ||
    /* istanbul ignore next */
    (cov_255m12gg1k().b[42][1]++, {}))}`);
    /* istanbul ignore next */
    cov_255m12gg1k().s[141]++;
    localStorage.setItem(cacheKey, JSON.stringify(data));
  }
  // Sync Status Management
  updateSyncStatus(entity, status, errorMessage) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[25]++;
    cov_255m12gg1k().s[142]++;
    this.syncStatus.set(entity, {
      entity,
      lastSync: new Date().toISOString(),
      status,
      errorMessage
    });
  }
  getSyncStatus(entity) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[26]++;
    cov_255m12gg1k().s[143]++;
    if (entity) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[43][0]++;
      cov_255m12gg1k().s[144]++;
      return /* istanbul ignore next */(cov_255m12gg1k().b[44][0]++, this.syncStatus.get(entity)) ||
      /* istanbul ignore next */
      (cov_255m12gg1k().b[44][1]++, {
        entity,
        lastSync: "",
        status: this.hasRealConnection ?
        /* istanbul ignore next */
        (cov_255m12gg1k().b[45][0]++, "pending") :
        /* istanbul ignore next */
        (cov_255m12gg1k().b[45][1]++, "synced")
      });
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[43][1]++;
    }
    cov_255m12gg1k().s[145]++;
    return Array.from(this.syncStatus.values());
  }
  // Full Sync
  async syncAllEntities() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[27]++;
    cov_255m12gg1k().s[146]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[46][0]++;
      cov_255m12gg1k().s[147]++;
      // Silent logging - Skipping sync, using mock data
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[46][1]++;
    }
    const entities =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[148]++, ["clients", "tasks", "events", "projects", "invoices"]);
    /* istanbul ignore next */
    cov_255m12gg1k().s[149]++;
    for (const entity of entities) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[150]++;
      try {
        const data =
        /* istanbul ignore next */
        (cov_255m12gg1k().s[151]++, await this.read(entity));
        /* istanbul ignore next */
        cov_255m12gg1k().s[152]++;
        this.setCachedData(entity, data);
        /* istanbul ignore next */
        cov_255m12gg1k().s[153]++;
        this.updateSyncStatus(entity, "synced");
      } catch (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().s[154]++;
        // Silent error handling - Failed to sync entity
        this.updateSyncStatus(entity, "error", error.message);
      }
    }
  }
  // Performance Monitoring
  async getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[28]++;
    cov_255m12gg1k().s[155]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[47][0]++;
      cov_255m12gg1k().s[156]++;
      // Return mock metrics for development
      return {
        responseTime: 50,
        errorRate: 0,
        syncQueueSize: 0,
        cacheHitRate: 1
      };
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[47][1]++;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[157]++, Date.now());
    /* istanbul ignore next */
    cov_255m12gg1k().s[158]++;
    try {
      /* istanbul ignore next */
      cov_255m12gg1k().s[159]++;
      if (!_supabase.supabase) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[48][0]++;
        cov_255m12gg1k().s[160]++;
        throw new Error("Supabase client not initialized");
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[48][1]++;
      }
      cov_255m12gg1k().s[161]++;
      await _supabase.supabase.from("clients").select("count").limit(1);
      const responseTime =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[162]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_255m12gg1k().s[163]++;
      return {
        responseTime,
        errorRate: this.calculateErrorRate(),
        syncQueueSize: this.offlineQueue.length,
        cacheHitRate: this.calculateCacheHitRate()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[164]++;
      return {
        responseTime: -1,
        errorRate: 1,
        syncQueueSize: this.offlineQueue.length,
        cacheHitRate: 0
      };
    }
  }
  calculateErrorRate() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[29]++;
    const errorStatuses =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[165]++, Array.from(this.syncStatus.values()).filter(status => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[30]++;
      cov_255m12gg1k().s[166]++;
      return status.status === "error";
    }));
    /* istanbul ignore next */
    cov_255m12gg1k().s[167]++;
    return errorStatuses.length / Math.max(this.syncStatus.size, 1);
  }
  calculateCacheHitRate() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[31]++;
    cov_255m12gg1k().s[168]++;
    // Simplified cache hit rate calculation
    // In a real implementation, you'd track cache hits vs misses
    return this.hasRealConnection ?
    /* istanbul ignore next */
    (cov_255m12gg1k().b[49][0]++, 0.85) :
    /* istanbul ignore next */
    (cov_255m12gg1k().b[49][1]++, 1.0) // 100% hit rate for mock data
    ;
  }
  // Cleanup
  destroy() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[32]++;
    cov_255m12gg1k().s[169]++;
    if (this.syncInterval) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[50][0]++;
      cov_255m12gg1k().s[170]++;
      clearInterval(this.syncInterval);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[50][1]++;
    }
    cov_255m12gg1k().s[171]++;
    if (this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[51][0]++;
      cov_255m12gg1k().s[172]++;
      window.removeEventListener("online", this.syncOfflineActions);
      /* istanbul ignore next */
      cov_255m12gg1k().s[173]++;
      window.removeEventListener("offline", () => {
        /* istanbul ignore next */
        cov_255m12gg1k().f[33]++;
        cov_255m12gg1k().s[174]++;
        return this.isOnline = false;
      });
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[51][1]++;
    }
  }
}
const backendService =
/* istanbul ignore next */
(cov_255m12gg1k().s[175]++, new BackendService());
const _default =
/* istanbul ignore next */
(cov_255m12gg1k().s[176]++, backendService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,