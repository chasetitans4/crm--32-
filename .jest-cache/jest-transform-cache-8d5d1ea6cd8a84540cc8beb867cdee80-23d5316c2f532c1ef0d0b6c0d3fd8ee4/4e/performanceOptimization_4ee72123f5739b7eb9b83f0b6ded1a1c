5341bba820ffa30c7589d82d187a12c6
"use strict";

/* istanbul ignore next */
function cov_1bgot77ta9() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\performanceOptimization.ts";
  var hash = "74f928c688813759aecd60f1a10873ff018eb244";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\performanceOptimization.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 46
        }
      },
      "6": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "8": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 26
        }
      },
      "9": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 53
        }
      },
      "10": {
        start: {
          line: 32,
          column: 26
        },
        end: {
          line: 32,
          column: 36
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "12": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 39,
          column: 11
        }
      },
      "13": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "15": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 43
        }
      },
      "16": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 24
        }
      },
      "17": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 52,
          column: 9
        }
      },
      "18": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "19": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 43
        }
      },
      "20": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 24
        }
      },
      "21": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "22": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "23": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 27
        }
      },
      "24": {
        start: {
          line: 61,
          column: 27
        },
        end: {
          line: 61,
          column: 84
        }
      },
      "25": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "26": {
        start: {
          line: 65,
          column: 30
        },
        end: {
          line: 65,
          column: 60
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "28": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 45
        }
      },
      "29": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "30": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 29
        }
      },
      "31": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 31
        }
      },
      "32": {
        start: {
          line: 77,
          column: 30
        },
        end: {
          line: 77,
          column: 63
        }
      },
      "33": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 102
        }
      },
      "34": {
        start: {
          line: 82,
          column: 31
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "35": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 99,
          column: 10
        }
      },
      "36": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 45
        }
      },
      "37": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "38": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 111,
          column: 54
        }
      },
      "39": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 52
        }
      },
      "40": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 24
        }
      },
      "41": {
        start: {
          line: 116,
          column: 26
        },
        end: {
          line: 116,
          column: 43
        }
      },
      "42": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 19
        }
      },
      "43": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 118,
          column: 56
        }
      },
      "44": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 80
        }
      },
      "45": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 56
        }
      },
      "46": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 121,
          column: 26
        }
      },
      "47": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "48": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 133,
          column: 20
        }
      },
      "49": {
        start: {
          line: 129,
          column: 38
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "50": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 67
        }
      },
      "51": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 39
        }
      },
      "52": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "53": {
        start: {
          line: 139,
          column: 25
        },
        end: {
          line: 139,
          column: 55
        }
      },
      "54": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 33
        }
      },
      "55": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 38
        }
      },
      "56": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 34
        }
      },
      "57": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 145,
          column: 13
        }
      },
      "58": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 144,
          column: 42
        }
      },
      "59": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 146,
          column: 44
        }
      },
      "60": {
        start: {
          line: 151,
          column: 22
        },
        end: {
          line: 151,
          column: 53
        }
      },
      "61": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 32
        }
      },
      "62": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 52
        }
      },
      "63": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 41
        }
      },
      "64": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "65": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "66": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 85
        }
      },
      "67": {
        start: {
          line: 161,
          column: 16
        },
        end: {
          line: 161,
          column: 36
        }
      },
      "68": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 76
        }
      },
      "69": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 28
        }
      },
      "70": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 37
        }
      },
      "71": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 173,
          column: 10
        }
      },
      "72": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 188,
          column: 11
        }
      },
      "73": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 187,
          column: 20
        }
      },
      "74": {
        start: {
          line: 181,
          column: 16
        },
        end: {
          line: 186,
          column: 19
        }
      },
      "75": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "76": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 45
        }
      },
      "77": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 198,
          column: 14
        }
      },
      "78": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 204,
          column: 10
        }
      },
      "79": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 211,
          column: 10
        }
      },
      "80": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 218,
          column: 11
        }
      },
      "81": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 221,
          column: 59
        }
      },
      "82": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 58
        }
      },
      "83": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 46
        }
      },
      "84": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 31
        }
      },
      "85": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 238,
          column: 10
        }
      },
      "86": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 245,
          column: 10
        }
      },
      "87": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 27
        }
      },
      "88": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 29
        }
      },
      "89": {
        start: {
          line: 250,
          column: 39
        },
        end: {
          line: 250,
          column: 75
        }
      },
      "90": {
        start: {
          line: 251,
          column: 17
        },
        end: {
          line: 251,
          column: 47
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 42
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 34
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        loc: {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 40,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        loc: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 41
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 23
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 71,
            column: 5
          }
        },
        loc: {
          start: {
            line: 71,
            column: 28
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 71
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 81,
            column: 4
          },
          end: {
            line: 81,
            column: 5
          }
        },
        loc: {
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 81
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        loc: {
          start: {
            line: 103,
            column: 41
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 103
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 110,
            column: 5
          }
        },
        loc: {
          start: {
            line: 110,
            column: 31
          },
          end: {
            line: 114,
            column: 5
          }
        },
        line: 110
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 115,
            column: 5
          }
        },
        loc: {
          start: {
            line: 115,
            column: 47
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 115
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 24
          },
          end: {
            line: 135,
            column: 5
          }
        },
        line: 124
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 28
          }
        },
        loc: {
          start: {
            line: 125,
            column: 38
          },
          end: {
            line: 134,
            column: 9
          }
        },
        line: 125
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 128,
            column: 23
          },
          end: {
            line: 128,
            column: 24
          }
        },
        loc: {
          start: {
            line: 128,
            column: 27
          },
          end: {
            line: 133,
            column: 13
          }
        },
        line: 128
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 5
          }
        },
        loc: {
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 148,
            column: 5
          }
        },
        line: 137
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 138,
            column: 26
          },
          end: {
            line: 138,
            column: 27
          }
        },
        loc: {
          start: {
            line: 138,
            column: 38
          },
          end: {
            line: 147,
            column: 9
          }
        },
        line: 138
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        loc: {
          start: {
            line: 150,
            column: 27
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 150
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        loc: {
          start: {
            line: 157,
            column: 45
          },
          end: {
            line: 168,
            column: 5
          }
        },
        line: 157
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 159,
            column: 65
          },
          end: {
            line: 159,
            column: 66
          }
        },
        loc: {
          start: {
            line: 159,
            column: 81
          },
          end: {
            line: 162,
            column: 13
          }
        },
        line: 159
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 162,
            column: 21
          },
          end: {
            line: 162,
            column: 22
          }
        },
        loc: {
          start: {
            line: 162,
            column: 30
          },
          end: {
            line: 165,
            column: 13
          }
        },
        line: 162
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        loc: {
          start: {
            line: 170,
            column: 28
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 170
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 23
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 176
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 177,
            column: 27
          },
          end: {
            line: 177,
            column: 28
          }
        },
        loc: {
          start: {
            line: 177,
            column: 38
          },
          end: {
            line: 188,
            column: 9
          }
        },
        line: 177
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 180,
            column: 23
          },
          end: {
            line: 180,
            column: 24
          }
        },
        loc: {
          start: {
            line: 180,
            column: 27
          },
          end: {
            line: 187,
            column: 13
          }
        },
        line: 180
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 21
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 191
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 30
          },
          end: {
            line: 212,
            column: 5
          }
        },
        line: 207
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 214,
            column: 5
          }
        },
        loc: {
          start: {
            line: 214,
            column: 20
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 214
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 220,
            column: 4
          },
          end: {
            line: 220,
            column: 5
          }
        },
        loc: {
          start: {
            line: 220,
            column: 37
          },
          end: {
            line: 223,
            column: 5
          }
        },
        line: 220
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 224,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        loc: {
          start: {
            line: 224,
            column: 38
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 224
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 228
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 232,
            column: 4
          },
          end: {
            line: 232,
            column: 5
          }
        },
        loc: {
          start: {
            line: 232,
            column: 17
          },
          end: {
            line: 248,
            column: 5
          }
        },
        line: 232
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 29
          }
        }, {
          start: {
            line: 31,
            column: 33
          },
          end: {
            line: 31,
            column: 53
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 52,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 68,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 76,
            column: 9
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 78,
            column: 47
          },
          end: {
            line: 78,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 78,
            column: 67
          },
          end: {
            line: 78,
            column: 97
          }
        }, {
          start: {
            line: 78,
            column: 100
          },
          end: {
            line: 78,
            column: 101
          }
        }],
        line: 78
      },
      "7": {
        loc: {
          start: {
            line: 81,
            column: 23
          },
          end: {
            line: 81,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 81,
            column: 33
          },
          end: {
            line: 81,
            column: 35
          }
        }],
        line: 81
      },
      "8": {
        loc: {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 93,
            column: 35
          }
        }, {
          start: {
            line: 93,
            column: 39
          },
          end: {
            line: 95,
            column: 13
          }
        }],
        line: 93
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 15
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 15
          },
          end: {
            line: 96,
            column: 36
          }
        }, {
          start: {
            line: 96,
            column: 40
          },
          end: {
            line: 98,
            column: 13
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 145,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "11": {
        loc: {
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 43
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 157,
            column: 35
          },
          end: {
            line: 157,
            column: 43
          }
        }],
        line: 157
      },
      "12": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "13": {
        loc: {
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\performanceOptimization.ts"],
      sourcesContent: ["import { lazy, useMemo, useCallback } from 'react'\n\n// Performance metrics interface\nexport interface PerformanceMetrics {\n  loadTime: number\n  renderTime: number\n  bundleSize: number\n  cacheHitRate: number\n  imageOptimizationSavings: number\n}\n\n// Cache configuration\nexport interface CacheConfig {\n  ttl: number // Time to live in milliseconds\n  maxSize: number // Maximum cache size in MB\n  strategy: 'lru' | 'fifo' | 'lfu'\n}\n\n// Image optimization options\nexport interface ImageOptimizationOptions {\n  quality: number\n  format: 'webp' | 'avif' | 'jpeg' | 'png'\n  width?: number\n  height?: number\n  lazy: boolean\n}\n\nclass PerformanceOptimizationService {\n  private cache = new Map<string, { data: any; timestamp: number; ttl: number }>()\n  private cacheConfig: CacheConfig = {\n    ttl: 300000, // 5 minutes\n    maxSize: 50, // 50MB\n    strategy: 'lru'\n  }\n  private performanceMetrics: PerformanceMetrics = {\n    loadTime: 0,\n    renderTime: 0,\n    bundleSize: 0,\n    cacheHitRate: 0,\n    imageOptimizationSavings: 0\n  }\n\n  // Code splitting utilities\n  createLazyComponent(importFn: () => Promise<any>) {\n    return lazy(importFn)\n  }\n\n  // Preload critical components\n  preloadComponent(importFn: () => Promise<any>) {\n    return importFn()\n  }\n\n  // Cache management\n  setCache(key: string, data: any, customTTL?: number): void {\n    const ttl = customTTL || this.cacheConfig.ttl\n    const timestamp = Date.now()\n    \n    // Check cache size and evict if necessary\n    this.evictIfNecessary()\n    \n    this.cache.set(key, { data, timestamp, ttl })\n  }\n\n  getCache(key: string): any | null {\n    const cached = this.cache.get(key)\n    \n    if (!cached) {\n      this.updateCacheHitRate(false)\n      return null\n    }\n    \n    // Check if cache has expired\n    if (Date.now() - cached.timestamp > cached.ttl) {\n      this.cache.delete(key)\n      this.updateCacheHitRate(false)\n      return null\n    }\n    \n    // Update cache hit rate\n    this.updateCacheHitRate(true)\n    return cached.data\n  }\n\n  clearCache(): void {\n    this.cache.clear()\n  }\n\n  private evictIfNecessary(): void {\n    const maxEntries = Math.floor(this.cacheConfig.maxSize * 1024 * 1024 / 1000) // Rough estimation\n    \n    if (this.cache.size >= maxEntries) {\n      // Implement LRU eviction\n      const oldestKey = this.cache.keys().next().value\n      if (oldestKey) {\n        this.cache.delete(oldestKey)\n      }\n    }\n  }\n\n  private cacheHits = 0\n  private cacheMisses = 0\n\n  private updateCacheHitRate(hit: boolean): void {\n    if (hit) {\n      this.cacheHits++\n    } else {\n      this.cacheMisses++\n    }\n    \n    const totalRequests = this.cacheHits + this.cacheMisses\n    this.performanceMetrics.cacheHitRate = totalRequests > 0 ? this.cacheHits / totalRequests : 0\n  }\n\n  // Image optimization\n  optimizeImage(src: string, options: Partial<ImageOptimizationOptions> = {}): string {\n    const defaultOptions: ImageOptimizationOptions = {\n      quality: 80,\n      format: 'webp',\n      lazy: true,\n      ...options\n    }\n\n    // In a real implementation, this would integrate with an image optimization service\n    // For now, we'll return a mock optimized URL\n    const params = new URLSearchParams({\n      q: defaultOptions.quality.toString(),\n      f: defaultOptions.format,\n      ...(defaultOptions.width && { w: defaultOptions.width.toString() }),\n      ...(defaultOptions.height && { h: defaultOptions.height.toString() })\n    })\n\n    return `${src}?${params.toString()}`\n  }\n\n  // Lazy loading utilities\n  createIntersectionObserver(callback: IntersectionObserverCallback): IntersectionObserver {\n    return new IntersectionObserver(callback, {\n      rootMargin: '50px 0px',\n      threshold: 0.1\n    })\n  }\n\n  // Performance monitoring\n  measureLoadTime(startTime: number): number {\n    const loadTime = performance.now() - startTime\n    this.performanceMetrics.loadTime = loadTime\n    return loadTime\n  }\n\n  measureRenderTime(componentName: string, renderFn: () => void): number {\n    const startTime = performance.now()\n    renderFn()\n    const renderTime = performance.now() - startTime\n    \n    console.log(`${componentName} render time: ${renderTime.toFixed(2)}ms`)\n    this.performanceMetrics.renderTime = renderTime\n    return renderTime\n  }\n\n  // Bundle analysis\n  analyzeBundleSize(): Promise<number> {\n    return new Promise((resolve) => {\n      // In a real implementation, this would analyze the actual bundle\n      // For now, we'll simulate bundle size analysis\n      setTimeout(() => {\n        const estimatedSize = Math.random() * 1000 + 500 // 500-1500 KB\n        this.performanceMetrics.bundleSize = estimatedSize\n        resolve(estimatedSize)\n      }, 100)\n    })\n  }\n\n  // Resource hints\n  addResourceHints(resources: { href: string; as: string; type?: string }[]): void {\n    resources.forEach(resource => {\n      const link = document.createElement('link')\n      link.rel = 'preload'\n      link.href = resource.href\n      link.as = resource.as\n      if (resource.type) {\n        link.type = resource.type\n      }\n      document.head.appendChild(link)\n    })\n  }\n\n  // Critical CSS inlining\n  inlineCriticalCSS(css: string): void {\n    const style = document.createElement('style')\n    style.textContent = css\n    style.setAttribute('data-critical', 'true')\n    document.head.appendChild(style)\n  }\n\n  // Service Worker registration for caching\n  registerServiceWorker(swPath: string = '/sw.js'): Promise<ServiceWorkerRegistration | null> {\n    if ('serviceWorker' in navigator) {\n      return navigator.serviceWorker.register(swPath)\n        .then(registration => {\n          console.log('Service Worker registered successfully:', registration)\n          return registration\n        })\n        .catch(error => {\n          console.error('Service Worker registration failed:', error)\n          return null\n        })\n    }\n    return Promise.resolve(null)\n  }\n\n  // Performance metrics getter\n  getPerformanceMetrics(): PerformanceMetrics {\n    return { ...this.performanceMetrics }\n  }\n\n  // Web Vitals monitoring\n  measureWebVitals(): Promise<{\n    fcp: number // First Contentful Paint\n    lcp: number // Largest Contentful Paint\n    fid: number // First Input Delay\n    cls: number // Cumulative Layout Shift\n  }> {\n    return new Promise((resolve) => {\n      // Simulate Web Vitals measurement\n      // In a real implementation, you'd use the web-vitals library\n      setTimeout(() => {\n        resolve({\n          fcp: Math.random() * 2000 + 500,\n          lcp: Math.random() * 3000 + 1000,\n          fid: Math.random() * 100 + 10,\n          cls: Math.random() * 0.1\n        })\n      }, 100)\n    })\n  }\n\n  // Memory usage monitoring\n  getMemoryUsage(): {\n    used: number\n    total: number\n    percentage: number\n  } {\n    if ('memory' in performance) {\n      const memory = (performance as any).memory\n      return {\n        used: memory.usedJSHeapSize,\n        total: memory.totalJSHeapSize,\n        percentage: (memory.usedJSHeapSize / memory.totalJSHeapSize) * 100\n      }\n    }\n    \n    return {\n      used: 0,\n      total: 0,\n      percentage: 0\n    }\n  }\n\n  // Configuration updates\n  updateCacheConfig(config: Partial<CacheConfig>): void {\n    this.cacheConfig = { ...this.cacheConfig, ...config }\n  }\n\n  // Missing methods for PerformanceMonitor compatibility\n  getCacheStats(): Promise<{ hitRate: number; size: number }> {\n    return Promise.resolve({\n      hitRate: this.performanceMetrics.cacheHitRate * 100,\n      size: this.cache.size * 1024 // Convert to bytes\n    })\n  }\n\n  logPerformanceMetric(type: string, data: any): void {\n    console.log(`Performance metric [${type}]:`, data)\n    // In a real implementation, this would send data to analytics service\n  }\n\n  initializePerformanceMonitoring(): void {\n    // Initialize performance monitoring setup\n    console.log('Performance monitoring initialized')\n  }\n\n  enableResourceHints(): void {\n    // Enable resource hints for performance optimization\n    console.log('Resource hints enabled')\n  }\n}\n\nexport const performanceOptimizationService = new PerformanceOptimizationService()\nexport default performanceOptimizationService"],
      names: ["performanceOptimizationService", "PerformanceOptimizationService", "createLazyComponent", "importFn", "lazy", "preloadComponent", "setCache", "key", "data", "customTTL", "ttl", "cacheConfig", "timestamp", "Date", "now", "evictIfNecessary", "cache", "set", "getCache", "cached", "get", "updateCacheHitRate", "delete", "clearCache", "clear", "maxEntries", "Math", "floor", "maxSize", "size", "oldestKey", "keys", "next", "value", "hit", "cacheHits", "cacheMisses", "totalRequests", "performanceMetrics", "cacheHitRate", "optimizeImage", "src", "options", "defaultOptions", "quality", "format", "params", "URLSearchParams", "q", "toString", "f", "width", "w", "height", "h", "createIntersectionObserver", "callback", "IntersectionObserver", "rootMargin", "threshold", "measureLoadTime", "startTime", "loadTime", "performance", "measureRenderTime", "componentName", "renderFn", "renderTime", "console", "log", "toFixed", "analyzeBundleSize", "Promise", "resolve", "setTimeout", "estimatedSize", "random", "bundleSize", "addResourceHints", "resources", "forEach", "resource", "link", "document", "createElement", "rel", "href", "as", "type", "head", "appendChild", "inlineCriticalCSS", "css", "style", "textContent", "setAttribute", "registerServiceWorker", "swPath", "navigator", "serviceWorker", "register", "then", "registration", "catch", "error", "getPerformanceMetrics", "measureWebVitals", "fcp", "lcp", "fid", "cls", "getMemoryUsage", "memory", "used", "usedJSHeapSize", "total", "totalJSHeapSize", "percentage", "updateCacheConfig", "config", "getCacheStats", "hitRate", "logPerformanceMetric", "initializePerformanceMonitoring", "enableResourceHints", "Map", "strategy", "imageOptimizationSavings"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "74f928c688813759aecd60f1a10873ff018eb244"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bgot77ta9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bgot77ta9();
cov_1bgot77ta9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1bgot77ta9().f[0]++;
  cov_1bgot77ta9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1bgot77ta9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1bgot77ta9().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[1]++;
    cov_1bgot77ta9().s[4]++;
    return _default;
  },
  get performanceOptimizationService() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[2]++;
    cov_1bgot77ta9().s[5]++;
    return performanceOptimizationService;
  }
});
const _react =
/* istanbul ignore next */
(cov_1bgot77ta9().s[6]++, require("react"));
class PerformanceOptimizationService {
  // Code splitting utilities
  createLazyComponent(importFn) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[3]++;
    cov_1bgot77ta9().s[7]++;
    return (0, _react.lazy)(importFn);
  }
  // Preload critical components
  preloadComponent(importFn) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[4]++;
    cov_1bgot77ta9().s[8]++;
    return importFn();
  }
  // Cache management
  setCache(key, data, customTTL) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[5]++;
    const ttl =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[9]++,
    /* istanbul ignore next */
    (cov_1bgot77ta9().b[0][0]++, customTTL) ||
    /* istanbul ignore next */
    (cov_1bgot77ta9().b[0][1]++, this.cacheConfig.ttl));
    const timestamp =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[10]++, Date.now());
    // Check cache size and evict if necessary
    /* istanbul ignore next */
    cov_1bgot77ta9().s[11]++;
    this.evictIfNecessary();
    /* istanbul ignore next */
    cov_1bgot77ta9().s[12]++;
    this.cache.set(key, {
      data,
      timestamp,
      ttl
    });
  }
  getCache(key) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[6]++;
    const cached =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[13]++, this.cache.get(key));
    /* istanbul ignore next */
    cov_1bgot77ta9().s[14]++;
    if (!cached) {
      /* istanbul ignore next */
      cov_1bgot77ta9().b[1][0]++;
      cov_1bgot77ta9().s[15]++;
      this.updateCacheHitRate(false);
      /* istanbul ignore next */
      cov_1bgot77ta9().s[16]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1bgot77ta9().b[1][1]++;
    }
    // Check if cache has expired
    cov_1bgot77ta9().s[17]++;
    if (Date.now() - cached.timestamp > cached.ttl) {
      /* istanbul ignore next */
      cov_1bgot77ta9().b[2][0]++;
      cov_1bgot77ta9().s[18]++;
      this.cache.delete(key);
      /* istanbul ignore next */
      cov_1bgot77ta9().s[19]++;
      this.updateCacheHitRate(false);
      /* istanbul ignore next */
      cov_1bgot77ta9().s[20]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1bgot77ta9().b[2][1]++;
    }
    // Update cache hit rate
    cov_1bgot77ta9().s[21]++;
    this.updateCacheHitRate(true);
    /* istanbul ignore next */
    cov_1bgot77ta9().s[22]++;
    return cached.data;
  }
  clearCache() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[7]++;
    cov_1bgot77ta9().s[23]++;
    this.cache.clear();
  }
  evictIfNecessary() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[8]++;
    const maxEntries =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[24]++, Math.floor(this.cacheConfig.maxSize * 1024 * 1024 / 1000)) // Rough estimation
    ;
    /* istanbul ignore next */
    cov_1bgot77ta9().s[25]++;
    if (this.cache.size >= maxEntries) {
      /* istanbul ignore next */
      cov_1bgot77ta9().b[3][0]++;
      // Implement LRU eviction
      const oldestKey =
      /* istanbul ignore next */
      (cov_1bgot77ta9().s[26]++, this.cache.keys().next().value);
      /* istanbul ignore next */
      cov_1bgot77ta9().s[27]++;
      if (oldestKey) {
        /* istanbul ignore next */
        cov_1bgot77ta9().b[4][0]++;
        cov_1bgot77ta9().s[28]++;
        this.cache.delete(oldestKey);
      } else
      /* istanbul ignore next */
      {
        cov_1bgot77ta9().b[4][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1bgot77ta9().b[3][1]++;
    }
  }
  updateCacheHitRate(hit) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[9]++;
    cov_1bgot77ta9().s[29]++;
    if (hit) {
      /* istanbul ignore next */
      cov_1bgot77ta9().b[5][0]++;
      cov_1bgot77ta9().s[30]++;
      this.cacheHits++;
    } else {
      /* istanbul ignore next */
      cov_1bgot77ta9().b[5][1]++;
      cov_1bgot77ta9().s[31]++;
      this.cacheMisses++;
    }
    const totalRequests =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[32]++, this.cacheHits + this.cacheMisses);
    /* istanbul ignore next */
    cov_1bgot77ta9().s[33]++;
    this.performanceMetrics.cacheHitRate = totalRequests > 0 ?
    /* istanbul ignore next */
    (cov_1bgot77ta9().b[6][0]++, this.cacheHits / totalRequests) :
    /* istanbul ignore next */
    (cov_1bgot77ta9().b[6][1]++, 0);
  }
  // Image optimization
  optimizeImage(src, options =
  /* istanbul ignore next */
  (cov_1bgot77ta9().b[7][0]++, {})) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[10]++;
    const defaultOptions =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[34]++, {
      quality: 80,
      format: 'webp',
      lazy: true,
      ...options
    });
    // In a real implementation, this would integrate with an image optimization service
    // For now, we'll return a mock optimized URL
    const params =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[35]++, new URLSearchParams({
      q: defaultOptions.quality.toString(),
      f: defaultOptions.format,
      ...(
      /* istanbul ignore next */
      (cov_1bgot77ta9().b[8][0]++, defaultOptions.width) &&
      /* istanbul ignore next */
      (cov_1bgot77ta9().b[8][1]++, {
        w: defaultOptions.width.toString()
      })),
      ...(
      /* istanbul ignore next */
      (cov_1bgot77ta9().b[9][0]++, defaultOptions.height) &&
      /* istanbul ignore next */
      (cov_1bgot77ta9().b[9][1]++, {
        h: defaultOptions.height.toString()
      }))
    }));
    /* istanbul ignore next */
    cov_1bgot77ta9().s[36]++;
    return `${src}?${params.toString()}`;
  }
  // Lazy loading utilities
  createIntersectionObserver(callback) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[11]++;
    cov_1bgot77ta9().s[37]++;
    return new IntersectionObserver(callback, {
      rootMargin: '50px 0px',
      threshold: 0.1
    });
  }
  // Performance monitoring
  measureLoadTime(startTime) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[12]++;
    const loadTime =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[38]++, performance.now() - startTime);
    /* istanbul ignore next */
    cov_1bgot77ta9().s[39]++;
    this.performanceMetrics.loadTime = loadTime;
    /* istanbul ignore next */
    cov_1bgot77ta9().s[40]++;
    return loadTime;
  }
  measureRenderTime(componentName, renderFn) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[13]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[41]++, performance.now());
    /* istanbul ignore next */
    cov_1bgot77ta9().s[42]++;
    renderFn();
    const renderTime =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[43]++, performance.now() - startTime);
    /* istanbul ignore next */
    cov_1bgot77ta9().s[44]++;
    console.log(`${componentName} render time: ${renderTime.toFixed(2)}ms`);
    /* istanbul ignore next */
    cov_1bgot77ta9().s[45]++;
    this.performanceMetrics.renderTime = renderTime;
    /* istanbul ignore next */
    cov_1bgot77ta9().s[46]++;
    return renderTime;
  }
  // Bundle analysis
  analyzeBundleSize() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[14]++;
    cov_1bgot77ta9().s[47]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1bgot77ta9().f[15]++;
      cov_1bgot77ta9().s[48]++;
      // In a real implementation, this would analyze the actual bundle
      // For now, we'll simulate bundle size analysis
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1bgot77ta9().f[16]++;
        const estimatedSize =
        /* istanbul ignore next */
        (cov_1bgot77ta9().s[49]++, Math.random() * 1000 + 500) // 500-1500 KB
        ;
        /* istanbul ignore next */
        cov_1bgot77ta9().s[50]++;
        this.performanceMetrics.bundleSize = estimatedSize;
        /* istanbul ignore next */
        cov_1bgot77ta9().s[51]++;
        resolve(estimatedSize);
      }, 100);
    });
  }
  // Resource hints
  addResourceHints(resources) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[17]++;
    cov_1bgot77ta9().s[52]++;
    resources.forEach(resource => {
      /* istanbul ignore next */
      cov_1bgot77ta9().f[18]++;
      const link =
      /* istanbul ignore next */
      (cov_1bgot77ta9().s[53]++, document.createElement('link'));
      /* istanbul ignore next */
      cov_1bgot77ta9().s[54]++;
      link.rel = 'preload';
      /* istanbul ignore next */
      cov_1bgot77ta9().s[55]++;
      link.href = resource.href;
      /* istanbul ignore next */
      cov_1bgot77ta9().s[56]++;
      link.as = resource.as;
      /* istanbul ignore next */
      cov_1bgot77ta9().s[57]++;
      if (resource.type) {
        /* istanbul ignore next */
        cov_1bgot77ta9().b[10][0]++;
        cov_1bgot77ta9().s[58]++;
        link.type = resource.type;
      } else
      /* istanbul ignore next */
      {
        cov_1bgot77ta9().b[10][1]++;
      }
      cov_1bgot77ta9().s[59]++;
      document.head.appendChild(link);
    });
  }
  // Critical CSS inlining
  inlineCriticalCSS(css) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[19]++;
    const style =
    /* istanbul ignore next */
    (cov_1bgot77ta9().s[60]++, document.createElement('style'));
    /* istanbul ignore next */
    cov_1bgot77ta9().s[61]++;
    style.textContent = css;
    /* istanbul ignore next */
    cov_1bgot77ta9().s[62]++;
    style.setAttribute('data-critical', 'true');
    /* istanbul ignore next */
    cov_1bgot77ta9().s[63]++;
    document.head.appendChild(style);
  }
  // Service Worker registration for caching
  registerServiceWorker(swPath =
  /* istanbul ignore next */
  (cov_1bgot77ta9().b[11][0]++, '/sw.js')) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[20]++;
    cov_1bgot77ta9().s[64]++;
    if ('serviceWorker' in navigator) {
      /* istanbul ignore next */
      cov_1bgot77ta9().b[12][0]++;
      cov_1bgot77ta9().s[65]++;
      return navigator.serviceWorker.register(swPath).then(registration => {
        /* istanbul ignore next */
        cov_1bgot77ta9().f[21]++;
        cov_1bgot77ta9().s[66]++;
        console.log('Service Worker registered successfully:', registration);
        /* istanbul ignore next */
        cov_1bgot77ta9().s[67]++;
        return registration;
      }).catch(error => {
        /* istanbul ignore next */
        cov_1bgot77ta9().f[22]++;
        cov_1bgot77ta9().s[68]++;
        console.error('Service Worker registration failed:', error);
        /* istanbul ignore next */
        cov_1bgot77ta9().s[69]++;
        return null;
      });
    } else
    /* istanbul ignore next */
    {
      cov_1bgot77ta9().b[12][1]++;
    }
    cov_1bgot77ta9().s[70]++;
    return Promise.resolve(null);
  }
  // Performance metrics getter
  getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[23]++;
    cov_1bgot77ta9().s[71]++;
    return {
      ...this.performanceMetrics
    };
  }
  // Web Vitals monitoring
  measureWebVitals() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[24]++;
    cov_1bgot77ta9().s[72]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_1bgot77ta9().f[25]++;
      cov_1bgot77ta9().s[73]++;
      // Simulate Web Vitals measurement
      // In a real implementation, you'd use the web-vitals library
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1bgot77ta9().f[26]++;
        cov_1bgot77ta9().s[74]++;
        resolve({
          fcp: Math.random() * 2000 + 500,
          lcp: Math.random() * 3000 + 1000,
          fid: Math.random() * 100 + 10,
          cls: Math.random() * 0.1
        });
      }, 100);
    });
  }
  // Memory usage monitoring
  getMemoryUsage() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[27]++;
    cov_1bgot77ta9().s[75]++;
    if ('memory' in performance) {
      /* istanbul ignore next */
      cov_1bgot77ta9().b[13][0]++;
      const memory =
      /* istanbul ignore next */
      (cov_1bgot77ta9().s[76]++, performance.memory);
      /* istanbul ignore next */
      cov_1bgot77ta9().s[77]++;
      return {
        used: memory.usedJSHeapSize,
        total: memory.totalJSHeapSize,
        percentage: memory.usedJSHeapSize / memory.totalJSHeapSize * 100
      };
    } else
    /* istanbul ignore next */
    {
      cov_1bgot77ta9().b[13][1]++;
    }
    cov_1bgot77ta9().s[78]++;
    return {
      used: 0,
      total: 0,
      percentage: 0
    };
  }
  // Configuration updates
  updateCacheConfig(config) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[28]++;
    cov_1bgot77ta9().s[79]++;
    this.cacheConfig = {
      ...this.cacheConfig,
      ...config
    };
  }
  // Missing methods for PerformanceMonitor compatibility
  getCacheStats() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[29]++;
    cov_1bgot77ta9().s[80]++;
    return Promise.resolve({
      hitRate: this.performanceMetrics.cacheHitRate * 100,
      size: this.cache.size * 1024 // Convert to bytes
    });
  }
  logPerformanceMetric(type, data) {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[30]++;
    cov_1bgot77ta9().s[81]++;
    console.log(`Performance metric [${type}]:`, data);
    // In a real implementation, this would send data to analytics service
  }
  initializePerformanceMonitoring() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[31]++;
    cov_1bgot77ta9().s[82]++;
    // Initialize performance monitoring setup
    console.log('Performance monitoring initialized');
  }
  enableResourceHints() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[32]++;
    cov_1bgot77ta9().s[83]++;
    // Enable resource hints for performance optimization
    console.log('Resource hints enabled');
  }
  constructor() {
    /* istanbul ignore next */
    cov_1bgot77ta9().f[33]++;
    cov_1bgot77ta9().s[84]++;
    this.cache = new Map();
    /* istanbul ignore next */
    cov_1bgot77ta9().s[85]++;
    this.cacheConfig = {
      ttl: 300000,
      maxSize: 50,
      strategy: 'lru'
    };
    /* istanbul ignore next */
    cov_1bgot77ta9().s[86]++;
    this.performanceMetrics = {
      loadTime: 0,
      renderTime: 0,
      bundleSize: 0,
      cacheHitRate: 0,
      imageOptimizationSavings: 0
    };
    /* istanbul ignore next */
    cov_1bgot77ta9().s[87]++;
    this.cacheHits = 0;
    /* istanbul ignore next */
    cov_1bgot77ta9().s[88]++;
    this.cacheMisses = 0;
  }
}
const performanceOptimizationService =
/* istanbul ignore next */
(cov_1bgot77ta9().s[89]++, new PerformanceOptimizationService());
const _default =
/* istanbul ignore next */
(cov_1bgot77ta9().s[90]++, performanceOptimizationService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZWZhdWx0IiwiY292XzFiZ290Nzd0YTkiLCJmIiwicyIsIl9kZWZhdWx0IiwicGVyZm9ybWFuY2VPcHRpbWl6YXRpb25TZXJ2aWNlIiwiUGVyZm9ybWFuY2VPcHRpbWl6YXRpb25TZXJ2aWNlIiwiY3JlYXRlTGF6eUNvbXBvbmVudCIsImltcG9ydEZuIiwiX3JlYWN0IiwibGF6eSIsInByZWxvYWRDb21wb25lbnQiLCJzZXRDYWNoZSIsImtleSIsImRhdGEiLCJjdXN0b21UVEwiLCJ0dGwiLCJiIiwiY2FjaGVDb25maWciLCJ0aW1lc3RhbXAiLCJEYXRlIiwibm93IiwiZXZpY3RJZk5lY2Vzc2FyeSIsImNhY2hlIiwic2V0IiwiZ2V0Q2FjaGUiLCJjYWNoZWQiLCJnZXQiLCJ1cGRhdGVDYWNoZUhpdFJhdGUiLCJkZWxldGUiLCJjbGVhckNhY2hlIiwiY2xlYXIiLCJtYXhFbnRyaWVzIiwiTWF0aCIsImZsb29yIiwibWF4U2l6ZSIsInNpemUiLCJvbGRlc3RLZXkiLCJrZXlzIiwibmV4dCIsInZhbHVlIiwiaGl0IiwiY2FjaGVIaXRzIiwiY2FjaGVNaXNzZXMiLCJ0b3RhbFJlcXVlc3RzIiwicGVyZm9ybWFuY2VNZXRyaWNzIiwiY2FjaGVIaXRSYXRlIiwib3B0aW1pemVJbWFnZSIsInNyYyIsIm9wdGlvbnMiLCJkZWZhdWx0T3B0aW9ucyIsInF1YWxpdHkiLCJmb3JtYXQiLCJwYXJhbXMiLCJVUkxTZWFyY2hQYXJhbXMiLCJxIiwidG9TdHJpbmciLCJ3aWR0aCIsInciLCJoZWlnaHQiLCJoIiwiY3JlYXRlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIiLCJjYWxsYmFjayIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwicm9vdE1hcmdpbiIsInRocmVzaG9sZCIsIm1lYXN1cmVMb2FkVGltZSIsInN0YXJ0VGltZSIsImxvYWRUaW1lIiwicGVyZm9ybWFuY2UiLCJtZWFzdXJlUmVuZGVyVGltZSIsImNvbXBvbmVudE5hbWUiLCJyZW5kZXJGbiIsInJlbmRlclRpbWUiLCJjb25zb2xlIiwibG9nIiwidG9GaXhlZCIsImFuYWx5emVCdW5kbGVTaXplIiwiUHJvbWlzZSIsInJlc29sdmUiLCJzZXRUaW1lb3V0IiwiZXN0aW1hdGVkU2l6ZSIsInJhbmRvbSIsImJ1bmRsZVNpemUiLCJhZGRSZXNvdXJjZUhpbnRzIiwicmVzb3VyY2VzIiwiZm9yRWFjaCIsInJlc291cmNlIiwibGluayIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInJlbCIsImhyZWYiLCJhcyIsInR5cGUiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJpbmxpbmVDcml0aWNhbENTUyIsImNzcyIsInN0eWxlIiwidGV4dENvbnRlbnQiLCJzZXRBdHRyaWJ1dGUiLCJyZWdpc3RlclNlcnZpY2VXb3JrZXIiLCJzd1BhdGgiLCJuYXZpZ2F0b3IiLCJzZXJ2aWNlV29ya2VyIiwicmVnaXN0ZXIiLCJ0aGVuIiwicmVnaXN0cmF0aW9uIiwiY2F0Y2giLCJlcnJvciIsImdldFBlcmZvcm1hbmNlTWV0cmljcyIsIm1lYXN1cmVXZWJWaXRhbHMiLCJmY3AiLCJsY3AiLCJmaWQiLCJjbHMiLCJnZXRNZW1vcnlVc2FnZSIsIm1lbW9yeSIsInVzZWQiLCJ1c2VkSlNIZWFwU2l6ZSIsInRvdGFsIiwidG90YWxKU0hlYXBTaXplIiwicGVyY2VudGFnZSIsInVwZGF0ZUNhY2hlQ29uZmlnIiwiY29uZmlnIiwiZ2V0Q2FjaGVTdGF0cyIsImhpdFJhdGUiLCJsb2dQZXJmb3JtYW5jZU1ldHJpYyIsImluaXRpYWxpemVQZXJmb3JtYW5jZU1vbml0b3JpbmciLCJlbmFibGVSZXNvdXJjZUhpbnRzIiwiTWFwIiwic3RyYXRlZ3kiLCJpbWFnZU9wdGltaXphdGlvblNhdmluZ3MiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGNoYXNlXFxEb3dubG9hZHNcXGNybSAoMzIpXFxzcmNcXHNlcnZpY2VzXFxwZXJmb3JtYW5jZU9wdGltaXphdGlvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsYXp5LCB1c2VNZW1vLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0J1xuXG4vLyBQZXJmb3JtYW5jZSBtZXRyaWNzIGludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBQZXJmb3JtYW5jZU1ldHJpY3Mge1xuICBsb2FkVGltZTogbnVtYmVyXG4gIHJlbmRlclRpbWU6IG51bWJlclxuICBidW5kbGVTaXplOiBudW1iZXJcbiAgY2FjaGVIaXRSYXRlOiBudW1iZXJcbiAgaW1hZ2VPcHRpbWl6YXRpb25TYXZpbmdzOiBudW1iZXJcbn1cblxuLy8gQ2FjaGUgY29uZmlndXJhdGlvblxuZXhwb3J0IGludGVyZmFjZSBDYWNoZUNvbmZpZyB7XG4gIHR0bDogbnVtYmVyIC8vIFRpbWUgdG8gbGl2ZSBpbiBtaWxsaXNlY29uZHNcbiAgbWF4U2l6ZTogbnVtYmVyIC8vIE1heGltdW0gY2FjaGUgc2l6ZSBpbiBNQlxuICBzdHJhdGVneTogJ2xydScgfCAnZmlmbycgfCAnbGZ1J1xufVxuXG4vLyBJbWFnZSBvcHRpbWl6YXRpb24gb3B0aW9uc1xuZXhwb3J0IGludGVyZmFjZSBJbWFnZU9wdGltaXphdGlvbk9wdGlvbnMge1xuICBxdWFsaXR5OiBudW1iZXJcbiAgZm9ybWF0OiAnd2VicCcgfCAnYXZpZicgfCAnanBlZycgfCAncG5nJ1xuICB3aWR0aD86IG51bWJlclxuICBoZWlnaHQ/OiBudW1iZXJcbiAgbGF6eTogYm9vbGVhblxufVxuXG5jbGFzcyBQZXJmb3JtYW5jZU9wdGltaXphdGlvblNlcnZpY2Uge1xuICBwcml2YXRlIGNhY2hlID0gbmV3IE1hcDxzdHJpbmcsIHsgZGF0YTogYW55OyB0aW1lc3RhbXA6IG51bWJlcjsgdHRsOiBudW1iZXIgfT4oKVxuICBwcml2YXRlIGNhY2hlQ29uZmlnOiBDYWNoZUNvbmZpZyA9IHtcbiAgICB0dGw6IDMwMDAwMCwgLy8gNSBtaW51dGVzXG4gICAgbWF4U2l6ZTogNTAsIC8vIDUwTUJcbiAgICBzdHJhdGVneTogJ2xydSdcbiAgfVxuICBwcml2YXRlIHBlcmZvcm1hbmNlTWV0cmljczogUGVyZm9ybWFuY2VNZXRyaWNzID0ge1xuICAgIGxvYWRUaW1lOiAwLFxuICAgIHJlbmRlclRpbWU6IDAsXG4gICAgYnVuZGxlU2l6ZTogMCxcbiAgICBjYWNoZUhpdFJhdGU6IDAsXG4gICAgaW1hZ2VPcHRpbWl6YXRpb25TYXZpbmdzOiAwXG4gIH1cblxuICAvLyBDb2RlIHNwbGl0dGluZyB1dGlsaXRpZXNcbiAgY3JlYXRlTGF6eUNvbXBvbmVudChpbXBvcnRGbjogKCkgPT4gUHJvbWlzZTxhbnk+KSB7XG4gICAgcmV0dXJuIGxhenkoaW1wb3J0Rm4pXG4gIH1cblxuICAvLyBQcmVsb2FkIGNyaXRpY2FsIGNvbXBvbmVudHNcbiAgcHJlbG9hZENvbXBvbmVudChpbXBvcnRGbjogKCkgPT4gUHJvbWlzZTxhbnk+KSB7XG4gICAgcmV0dXJuIGltcG9ydEZuKClcbiAgfVxuXG4gIC8vIENhY2hlIG1hbmFnZW1lbnRcbiAgc2V0Q2FjaGUoa2V5OiBzdHJpbmcsIGRhdGE6IGFueSwgY3VzdG9tVFRMPzogbnVtYmVyKTogdm9pZCB7XG4gICAgY29uc3QgdHRsID0gY3VzdG9tVFRMIHx8IHRoaXMuY2FjaGVDb25maWcudHRsXG4gICAgY29uc3QgdGltZXN0YW1wID0gRGF0ZS5ub3coKVxuICAgIFxuICAgIC8vIENoZWNrIGNhY2hlIHNpemUgYW5kIGV2aWN0IGlmIG5lY2Vzc2FyeVxuICAgIHRoaXMuZXZpY3RJZk5lY2Vzc2FyeSgpXG4gICAgXG4gICAgdGhpcy5jYWNoZS5zZXQoa2V5LCB7IGRhdGEsIHRpbWVzdGFtcCwgdHRsIH0pXG4gIH1cblxuICBnZXRDYWNoZShrZXk6IHN0cmluZyk6IGFueSB8IG51bGwge1xuICAgIGNvbnN0IGNhY2hlZCA9IHRoaXMuY2FjaGUuZ2V0KGtleSlcbiAgICBcbiAgICBpZiAoIWNhY2hlZCkge1xuICAgICAgdGhpcy51cGRhdGVDYWNoZUhpdFJhdGUoZmFsc2UpXG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgICBcbiAgICAvLyBDaGVjayBpZiBjYWNoZSBoYXMgZXhwaXJlZFxuICAgIGlmIChEYXRlLm5vdygpIC0gY2FjaGVkLnRpbWVzdGFtcCA+IGNhY2hlZC50dGwpIHtcbiAgICAgIHRoaXMuY2FjaGUuZGVsZXRlKGtleSlcbiAgICAgIHRoaXMudXBkYXRlQ2FjaGVIaXRSYXRlKGZhbHNlKVxuICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG4gICAgXG4gICAgLy8gVXBkYXRlIGNhY2hlIGhpdCByYXRlXG4gICAgdGhpcy51cGRhdGVDYWNoZUhpdFJhdGUodHJ1ZSlcbiAgICByZXR1cm4gY2FjaGVkLmRhdGFcbiAgfVxuXG4gIGNsZWFyQ2FjaGUoKTogdm9pZCB7XG4gICAgdGhpcy5jYWNoZS5jbGVhcigpXG4gIH1cblxuICBwcml2YXRlIGV2aWN0SWZOZWNlc3NhcnkoKTogdm9pZCB7XG4gICAgY29uc3QgbWF4RW50cmllcyA9IE1hdGguZmxvb3IodGhpcy5jYWNoZUNvbmZpZy5tYXhTaXplICogMTAyNCAqIDEwMjQgLyAxMDAwKSAvLyBSb3VnaCBlc3RpbWF0aW9uXG4gICAgXG4gICAgaWYgKHRoaXMuY2FjaGUuc2l6ZSA+PSBtYXhFbnRyaWVzKSB7XG4gICAgICAvLyBJbXBsZW1lbnQgTFJVIGV2aWN0aW9uXG4gICAgICBjb25zdCBvbGRlc3RLZXkgPSB0aGlzLmNhY2hlLmtleXMoKS5uZXh0KCkudmFsdWVcbiAgICAgIGlmIChvbGRlc3RLZXkpIHtcbiAgICAgICAgdGhpcy5jYWNoZS5kZWxldGUob2xkZXN0S2V5KVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgY2FjaGVIaXRzID0gMFxuICBwcml2YXRlIGNhY2hlTWlzc2VzID0gMFxuXG4gIHByaXZhdGUgdXBkYXRlQ2FjaGVIaXRSYXRlKGhpdDogYm9vbGVhbik6IHZvaWQge1xuICAgIGlmIChoaXQpIHtcbiAgICAgIHRoaXMuY2FjaGVIaXRzKytcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jYWNoZU1pc3NlcysrXG4gICAgfVxuICAgIFxuICAgIGNvbnN0IHRvdGFsUmVxdWVzdHMgPSB0aGlzLmNhY2hlSGl0cyArIHRoaXMuY2FjaGVNaXNzZXNcbiAgICB0aGlzLnBlcmZvcm1hbmNlTWV0cmljcy5jYWNoZUhpdFJhdGUgPSB0b3RhbFJlcXVlc3RzID4gMCA/IHRoaXMuY2FjaGVIaXRzIC8gdG90YWxSZXF1ZXN0cyA6IDBcbiAgfVxuXG4gIC8vIEltYWdlIG9wdGltaXphdGlvblxuICBvcHRpbWl6ZUltYWdlKHNyYzogc3RyaW5nLCBvcHRpb25zOiBQYXJ0aWFsPEltYWdlT3B0aW1pemF0aW9uT3B0aW9ucz4gPSB7fSk6IHN0cmluZyB7XG4gICAgY29uc3QgZGVmYXVsdE9wdGlvbnM6IEltYWdlT3B0aW1pemF0aW9uT3B0aW9ucyA9IHtcbiAgICAgIHF1YWxpdHk6IDgwLFxuICAgICAgZm9ybWF0OiAnd2VicCcsXG4gICAgICBsYXp5OiB0cnVlLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH1cblxuICAgIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCBpbnRlZ3JhdGUgd2l0aCBhbiBpbWFnZSBvcHRpbWl6YXRpb24gc2VydmljZVxuICAgIC8vIEZvciBub3csIHdlJ2xsIHJldHVybiBhIG1vY2sgb3B0aW1pemVkIFVSTFxuICAgIGNvbnN0IHBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgICAgcTogZGVmYXVsdE9wdGlvbnMucXVhbGl0eS50b1N0cmluZygpLFxuICAgICAgZjogZGVmYXVsdE9wdGlvbnMuZm9ybWF0LFxuICAgICAgLi4uKGRlZmF1bHRPcHRpb25zLndpZHRoICYmIHsgdzogZGVmYXVsdE9wdGlvbnMud2lkdGgudG9TdHJpbmcoKSB9KSxcbiAgICAgIC4uLihkZWZhdWx0T3B0aW9ucy5oZWlnaHQgJiYgeyBoOiBkZWZhdWx0T3B0aW9ucy5oZWlnaHQudG9TdHJpbmcoKSB9KVxuICAgIH0pXG5cbiAgICByZXR1cm4gYCR7c3JjfT8ke3BhcmFtcy50b1N0cmluZygpfWBcbiAgfVxuXG4gIC8vIExhenkgbG9hZGluZyB1dGlsaXRpZXNcbiAgY3JlYXRlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoY2FsbGJhY2s6IEludGVyc2VjdGlvbk9ic2VydmVyQ2FsbGJhY2spOiBJbnRlcnNlY3Rpb25PYnNlcnZlciB7XG4gICAgcmV0dXJuIG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihjYWxsYmFjaywge1xuICAgICAgcm9vdE1hcmdpbjogJzUwcHggMHB4JyxcbiAgICAgIHRocmVzaG9sZDogMC4xXG4gICAgfSlcbiAgfVxuXG4gIC8vIFBlcmZvcm1hbmNlIG1vbml0b3JpbmdcbiAgbWVhc3VyZUxvYWRUaW1lKHN0YXJ0VGltZTogbnVtYmVyKTogbnVtYmVyIHtcbiAgICBjb25zdCBsb2FkVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lXG4gICAgdGhpcy5wZXJmb3JtYW5jZU1ldHJpY3MubG9hZFRpbWUgPSBsb2FkVGltZVxuICAgIHJldHVybiBsb2FkVGltZVxuICB9XG5cbiAgbWVhc3VyZVJlbmRlclRpbWUoY29tcG9uZW50TmFtZTogc3RyaW5nLCByZW5kZXJGbjogKCkgPT4gdm9pZCk6IG51bWJlciB7XG4gICAgY29uc3Qgc3RhcnRUaW1lID0gcGVyZm9ybWFuY2Uubm93KClcbiAgICByZW5kZXJGbigpXG4gICAgY29uc3QgcmVuZGVyVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpIC0gc3RhcnRUaW1lXG4gICAgXG4gICAgY29uc29sZS5sb2coYCR7Y29tcG9uZW50TmFtZX0gcmVuZGVyIHRpbWU6ICR7cmVuZGVyVGltZS50b0ZpeGVkKDIpfW1zYClcbiAgICB0aGlzLnBlcmZvcm1hbmNlTWV0cmljcy5yZW5kZXJUaW1lID0gcmVuZGVyVGltZVxuICAgIHJldHVybiByZW5kZXJUaW1lXG4gIH1cblxuICAvLyBCdW5kbGUgYW5hbHlzaXNcbiAgYW5hbHl6ZUJ1bmRsZVNpemUoKTogUHJvbWlzZTxudW1iZXI+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgIC8vIEluIGEgcmVhbCBpbXBsZW1lbnRhdGlvbiwgdGhpcyB3b3VsZCBhbmFseXplIHRoZSBhY3R1YWwgYnVuZGxlXG4gICAgICAvLyBGb3Igbm93LCB3ZSdsbCBzaW11bGF0ZSBidW5kbGUgc2l6ZSBhbmFseXNpc1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IGVzdGltYXRlZFNpemUgPSBNYXRoLnJhbmRvbSgpICogMTAwMCArIDUwMCAvLyA1MDAtMTUwMCBLQlxuICAgICAgICB0aGlzLnBlcmZvcm1hbmNlTWV0cmljcy5idW5kbGVTaXplID0gZXN0aW1hdGVkU2l6ZVxuICAgICAgICByZXNvbHZlKGVzdGltYXRlZFNpemUpXG4gICAgICB9LCAxMDApXG4gICAgfSlcbiAgfVxuXG4gIC8vIFJlc291cmNlIGhpbnRzXG4gIGFkZFJlc291cmNlSGludHMocmVzb3VyY2VzOiB7IGhyZWY6IHN0cmluZzsgYXM6IHN0cmluZzsgdHlwZT86IHN0cmluZyB9W10pOiB2b2lkIHtcbiAgICByZXNvdXJjZXMuZm9yRWFjaChyZXNvdXJjZSA9PiB7XG4gICAgICBjb25zdCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpXG4gICAgICBsaW5rLnJlbCA9ICdwcmVsb2FkJ1xuICAgICAgbGluay5ocmVmID0gcmVzb3VyY2UuaHJlZlxuICAgICAgbGluay5hcyA9IHJlc291cmNlLmFzXG4gICAgICBpZiAocmVzb3VyY2UudHlwZSkge1xuICAgICAgICBsaW5rLnR5cGUgPSByZXNvdXJjZS50eXBlXG4gICAgICB9XG4gICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGxpbmspXG4gICAgfSlcbiAgfVxuXG4gIC8vIENyaXRpY2FsIENTUyBpbmxpbmluZ1xuICBpbmxpbmVDcml0aWNhbENTUyhjc3M6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxuICAgIHN0eWxlLnRleHRDb250ZW50ID0gY3NzXG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdkYXRhLWNyaXRpY2FsJywgJ3RydWUnKVxuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpXG4gIH1cblxuICAvLyBTZXJ2aWNlIFdvcmtlciByZWdpc3RyYXRpb24gZm9yIGNhY2hpbmdcbiAgcmVnaXN0ZXJTZXJ2aWNlV29ya2VyKHN3UGF0aDogc3RyaW5nID0gJy9zdy5qcycpOiBQcm9taXNlPFNlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb24gfCBudWxsPiB7XG4gICAgaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcbiAgICAgIHJldHVybiBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5yZWdpc3Rlcihzd1BhdGgpXG4gICAgICAgIC50aGVuKHJlZ2lzdHJhdGlvbiA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ1NlcnZpY2UgV29ya2VyIHJlZ2lzdGVyZWQgc3VjY2Vzc2Z1bGx5OicsIHJlZ2lzdHJhdGlvbilcbiAgICAgICAgICByZXR1cm4gcmVnaXN0cmF0aW9uXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignU2VydmljZSBXb3JrZXIgcmVnaXN0cmF0aW9uIGZhaWxlZDonLCBlcnJvcilcbiAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICB9KVxuICAgIH1cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG51bGwpXG4gIH1cblxuICAvLyBQZXJmb3JtYW5jZSBtZXRyaWNzIGdldHRlclxuICBnZXRQZXJmb3JtYW5jZU1ldHJpY3MoKTogUGVyZm9ybWFuY2VNZXRyaWNzIHtcbiAgICByZXR1cm4geyAuLi50aGlzLnBlcmZvcm1hbmNlTWV0cmljcyB9XG4gIH1cblxuICAvLyBXZWIgVml0YWxzIG1vbml0b3JpbmdcbiAgbWVhc3VyZVdlYlZpdGFscygpOiBQcm9taXNlPHtcbiAgICBmY3A6IG51bWJlciAvLyBGaXJzdCBDb250ZW50ZnVsIFBhaW50XG4gICAgbGNwOiBudW1iZXIgLy8gTGFyZ2VzdCBDb250ZW50ZnVsIFBhaW50XG4gICAgZmlkOiBudW1iZXIgLy8gRmlyc3QgSW5wdXQgRGVsYXlcbiAgICBjbHM6IG51bWJlciAvLyBDdW11bGF0aXZlIExheW91dCBTaGlmdFxuICB9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAvLyBTaW11bGF0ZSBXZWIgVml0YWxzIG1lYXN1cmVtZW50XG4gICAgICAvLyBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHlvdSdkIHVzZSB0aGUgd2ViLXZpdGFscyBsaWJyYXJ5XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgcmVzb2x2ZSh7XG4gICAgICAgICAgZmNwOiBNYXRoLnJhbmRvbSgpICogMjAwMCArIDUwMCxcbiAgICAgICAgICBsY3A6IE1hdGgucmFuZG9tKCkgKiAzMDAwICsgMTAwMCxcbiAgICAgICAgICBmaWQ6IE1hdGgucmFuZG9tKCkgKiAxMDAgKyAxMCxcbiAgICAgICAgICBjbHM6IE1hdGgucmFuZG9tKCkgKiAwLjFcbiAgICAgICAgfSlcbiAgICAgIH0sIDEwMClcbiAgICB9KVxuICB9XG5cbiAgLy8gTWVtb3J5IHVzYWdlIG1vbml0b3JpbmdcbiAgZ2V0TWVtb3J5VXNhZ2UoKToge1xuICAgIHVzZWQ6IG51bWJlclxuICAgIHRvdGFsOiBudW1iZXJcbiAgICBwZXJjZW50YWdlOiBudW1iZXJcbiAgfSB7XG4gICAgaWYgKCdtZW1vcnknIGluIHBlcmZvcm1hbmNlKSB7XG4gICAgICBjb25zdCBtZW1vcnkgPSAocGVyZm9ybWFuY2UgYXMgYW55KS5tZW1vcnlcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHVzZWQ6IG1lbW9yeS51c2VkSlNIZWFwU2l6ZSxcbiAgICAgICAgdG90YWw6IG1lbW9yeS50b3RhbEpTSGVhcFNpemUsXG4gICAgICAgIHBlcmNlbnRhZ2U6IChtZW1vcnkudXNlZEpTSGVhcFNpemUgLyBtZW1vcnkudG90YWxKU0hlYXBTaXplKSAqIDEwMFxuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICByZXR1cm4ge1xuICAgICAgdXNlZDogMCxcbiAgICAgIHRvdGFsOiAwLFxuICAgICAgcGVyY2VudGFnZTogMFxuICAgIH1cbiAgfVxuXG4gIC8vIENvbmZpZ3VyYXRpb24gdXBkYXRlc1xuICB1cGRhdGVDYWNoZUNvbmZpZyhjb25maWc6IFBhcnRpYWw8Q2FjaGVDb25maWc+KTogdm9pZCB7XG4gICAgdGhpcy5jYWNoZUNvbmZpZyA9IHsgLi4udGhpcy5jYWNoZUNvbmZpZywgLi4uY29uZmlnIH1cbiAgfVxuXG4gIC8vIE1pc3NpbmcgbWV0aG9kcyBmb3IgUGVyZm9ybWFuY2VNb25pdG9yIGNvbXBhdGliaWxpdHlcbiAgZ2V0Q2FjaGVTdGF0cygpOiBQcm9taXNlPHsgaGl0UmF0ZTogbnVtYmVyOyBzaXplOiBudW1iZXIgfT4ge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgaGl0UmF0ZTogdGhpcy5wZXJmb3JtYW5jZU1ldHJpY3MuY2FjaGVIaXRSYXRlICogMTAwLFxuICAgICAgc2l6ZTogdGhpcy5jYWNoZS5zaXplICogMTAyNCAvLyBDb252ZXJ0IHRvIGJ5dGVzXG4gICAgfSlcbiAgfVxuXG4gIGxvZ1BlcmZvcm1hbmNlTWV0cmljKHR5cGU6IHN0cmluZywgZGF0YTogYW55KTogdm9pZCB7XG4gICAgY29uc29sZS5sb2coYFBlcmZvcm1hbmNlIG1ldHJpYyBbJHt0eXBlfV06YCwgZGF0YSlcbiAgICAvLyBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHRoaXMgd291bGQgc2VuZCBkYXRhIHRvIGFuYWx5dGljcyBzZXJ2aWNlXG4gIH1cblxuICBpbml0aWFsaXplUGVyZm9ybWFuY2VNb25pdG9yaW5nKCk6IHZvaWQge1xuICAgIC8vIEluaXRpYWxpemUgcGVyZm9ybWFuY2UgbW9uaXRvcmluZyBzZXR1cFxuICAgIGNvbnNvbGUubG9nKCdQZXJmb3JtYW5jZSBtb25pdG9yaW5nIGluaXRpYWxpemVkJylcbiAgfVxuXG4gIGVuYWJsZVJlc291cmNlSGludHMoKTogdm9pZCB7XG4gICAgLy8gRW5hYmxlIHJlc291cmNlIGhpbnRzIGZvciBwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb25cbiAgICBjb25zb2xlLmxvZygnUmVzb3VyY2UgaGludHMgZW5hYmxlZCcpXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IHBlcmZvcm1hbmNlT3B0aW1pemF0aW9uU2VydmljZSA9IG5ldyBQZXJmb3JtYW5jZU9wdGltaXphdGlvblNlcnZpY2UoKVxuZXhwb3J0IGRlZmF1bHQgcGVyZm9ybWFuY2VPcHRpbWl6YXRpb25TZXJ2aWNlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQWdTQUEsUUFBQTtJQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtJQUFB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RUFFQTtFQUNBQyxjQUFBLEVBQTREO0lBQUE7SUFBQTdILGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDMUQsT0FBTzJFLE9BQUEsQ0FBUUMsT0FBTyxDQUFDO01BQ3JCZ0QsT0FBQSxFQUFTLElBQUksQ0FBQ2xGLGtCQUFrQixDQUFDQyxZQUFZLEdBQUc7TUFDaERWLElBQUEsRUFBTSxJQUFJLENBQUNiLEtBQUssQ0FBQ2EsSUFBSSxHQUFHLEtBQUs7SUFDL0I7RUFDRjtFQUVBNEYscUJBQXFCbEMsSUFBWSxFQUFFaEYsSUFBUyxFQUFRO0lBQUE7SUFBQWIsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtJQUNsRHVFLE9BQUEsQ0FBUUMsR0FBRyxDQUFDLHVCQUF1Qm1CLElBQUEsSUFBUSxFQUFFaEYsSUFBQTtJQUM3QztFQUNGO0VBRUFtSCxnQ0FBQSxFQUF3QztJQUFBO0lBQUFoSSxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQ3RDO0lBQ0F1RSxPQUFBLENBQVFDLEdBQUcsQ0FBQztFQUNkO0VBRUF1RCxvQkFBQSxFQUE0QjtJQUFBO0lBQUFqSSxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQzFCO0lBQ0F1RSxPQUFBLENBQVFDLEdBQUcsQ0FBQztFQUNkOzs7OztTQWhRUXBELEtBQUEsR0FBUSxJQUFJNEcsR0FBQTtJQUFBO0lBQUFsSSxjQUFBLEdBQUFFLENBQUE7U0FDWmUsV0FBQSxHQUEyQjtNQUNqQ0YsR0FBQSxFQUFLO01BQ0xtQixPQUFBLEVBQVM7TUFDVGlHLFFBQUEsRUFBVTtJQUNaO0lBQUE7SUFBQW5JLGNBQUEsR0FBQUUsQ0FBQTtTQUNRMEMsa0JBQUEsR0FBeUM7TUFDL0N1QixRQUFBLEVBQVU7TUFDVkssVUFBQSxFQUFZO01BQ1pVLFVBQUEsRUFBWTtNQUNackMsWUFBQSxFQUFjO01BQ2R1Rix3QkFBQSxFQUEwQjtJQUM1QjtJQUFBO0lBQUFwSSxjQUFBLEdBQUFFLENBQUE7U0EyRFF1QyxTQUFBLEdBQVk7SUFBQTtJQUFBekMsY0FBQSxHQUFBRSxDQUFBO1NBQ1p3QyxXQUFBLEdBQWM7O0FBeUx4QjtBQUVPLE1BQU10Qyw4QkFBQTtBQUFBO0FBQUEsQ0FBQUosY0FBQSxHQUFBRSxDQUFBLFFBQWlDLElBQUlHLDhCQUFBO01BQ2xERixRQUFBO0FBQUE7QUFBQSxDQUFBSCxjQUFBLEdBQUFFLENBQUEsUUFBZUUsOEJBQUEiLCJpZ25vcmVMaXN0IjpbXX0=