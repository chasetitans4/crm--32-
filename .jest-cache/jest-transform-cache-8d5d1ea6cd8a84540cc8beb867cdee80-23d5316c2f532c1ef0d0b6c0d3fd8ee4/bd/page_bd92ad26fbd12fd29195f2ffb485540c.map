{"version":3,"names":["_default","ReportsPage","cov_1jmi9goccv","f","reports","setReports","s","_react","useState","date","setDate","default","from","Date","to","generateReport","useCallback","b","newReport","id","toISOString","name","toLocaleDateString","createdAt","dateRange","data","Array","length","_","i","sales","Math","floor","random","ReportCard","memo","report","_jsxruntime","jsxs","_card","Card","jsx","CardHeader","CardTitle","CardContent","className","_recharts","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","_popover","Popover","PopoverTrigger","asChild","_button","Button","variant","_lucidereact","Calendar","Fragment","_datefns","format","PopoverContent","align","_calendar","initialFocus","mode","defaultMonth","selected","onSelect","numberOfMonths","onClick","PlusCircle","map","ReportsPageWithProviders","_EnhancedErrorBoundary","EnhancedErrorBoundary","_AuthContext","AuthProvider","_AppContext","AppProvider"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\app\\reports\\page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useMemo, useCallback, memo } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { PlusCircle, Calendar as CalendarIcon } from 'lucide-react';\nimport { DateRange } from \"react-day-picker\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { format } from \"date-fns\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { EnhancedErrorBoundary } from '@/components/EnhancedErrorBoundary';\nimport { AppProvider } from '@/context/AppContext';\nimport { AuthProvider } from '@/context/AuthContext';\n\ninterface Report {\n  id: string;\n  name: string;\n  createdAt: string;\n  dateRange: DateRange;\n  data: any[];\n}\n\nconst ReportsPage: React.FC = () => {\n  const [reports, setReports] = useState<Report[]>([]);\n  const [date, setDate] = React.useState<DateRange | undefined>({\n    from: new Date(2024, 0, 20),\n    to: new Date(2024, 0, 20),\n  });\n\n  const generateReport = useCallback(() => {\n    const from = date?.from || new Date();\n    const to = date?.to || new Date();\n    const newReport: Report = {\n      id: new Date().toISOString(),\n      name: `Report - ${from.toLocaleDateString()} to ${to.toLocaleDateString()}`,\n      createdAt: new Date().toLocaleDateString(),\n      dateRange: { from, to },\n      data: Array.from({ length: 12 }, (_, i) => ({\n        name: `Month ${i + 1}`,\n        sales: Math.floor(Math.random() * 5000) + 1000,\n      })),\n    };\n    setReports([...reports, newReport]);\n  }, [reports, date]);\n\n  // Memoized ReportCard component to prevent unnecessary re-renders\n  const ReportCard = memo(({ report }: { report: any }) => (\n    <Card key={report.id}>\n      <CardHeader>\n        <CardTitle>{report.name}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p className=\"mb-4\">Created on: {report.createdAt}</p>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={report.data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"sales\" fill=\"#8884d8\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  ));\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">Reports</h1>\n        <div className=\"flex items-center gap-2\">\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button\n                id=\"date\"\n                variant={\"outline\"}\n                className=\"w-[300px] justify-start text-left font-normal\"\n              >\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {date?.from ? (\n                  date.to ? (\n                    <>\n                      {format(date.from, \"LLL dd, y\")} - {format(date.to, \"LLL dd, y\")}\n                    </>\n                  ) : (\n                    format(date.from, \"LLL dd, y\")\n                  )\n                ) : (\n                  <span>Pick a date</span>\n                )}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\" align=\"end\">\n              <Calendar\n                initialFocus\n                mode=\"range\"\n                defaultMonth={date?.from}\n                selected={date}\n                onSelect={setDate}\n                numberOfMonths={2}\n              />\n            </PopoverContent>\n          </Popover>\n          <Button onClick={generateReport}>\n            <PlusCircle className=\"mr-2 h-4 w-4\" />\n            Generate Report\n          </Button>\n        </div>\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-1 lg:grid-cols-2\">\n        {reports.map((report) => (\n          <ReportCard key={report.id} report={report} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Wrap the component with error boundary and providers\nconst ReportsPageWithProviders = () => {\n  return (\n    <EnhancedErrorBoundary>\n      <AuthProvider>\n        <AppProvider>\n          <ReportsPage />\n        </AppProvider>\n      </AuthProvider>\n    </EnhancedErrorBoundary>\n  );\n};\n\nexport default ReportsPageWithProviders;"],"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","ignoreList":[]}