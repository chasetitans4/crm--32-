{"version":3,"names":["cov_1hv7gjyd6z","actualCoverage","s","Calendar","f","CalendarComponent","default","_default","state","_AppContext","useAppContext","clients","events","addEvent","updateEvent","deleteEvent","_useEventActions","useEventActions","viewMode","setViewMode","_react","useState","showAddEvent","setShowAddEvent","isEditing","setIsEditing","editingEvent","setEditingEvent","selectedDate","setSelectedDate","Date","showDayDetail","setShowDayDetail","selectedDayEvents","setSelectedDayEvents","newEvent","setNewEvent","title","date","toISOString","split","time","type","relatedTo","currentMonth","setCurrentMonth","formatDate","year","getFullYear","month","String","getMonth","padStart","day","getDate","prevMonth","nextMonth","goToToday","generateCalendarDays","days","firstDay","getDay","daysInMonth","daysInPrevMonth","i","prevMonthDate","push","isCurrentMonth","isPast","setHours","filter","event","currentDate","dateStr","isToday","lastDay","nextDays","nextMonthDate","calendarDays","handleDayClick","dayEvents","handleAddEvent","trim","b","id","error","console","handleEditEvent","description","handleDeleteEvent","eventId","monthName","toLocaleString","getEventTypeColor","getEventTypeBadge","formatTime","getClientName","clientId","undefined","clientIdStr","client","find","c","name","_jsxruntime","jsxs","className","jsx","onClick","_lucidereact","Plus","size","ChevronLeft","ChevronRight","map","idx","slice","eIdx","substring","length","toLocaleDateString","weekday","X","Clock","User","Tag","charAt","toUpperCase","Edit","Trash2","Info","CalendarIcon","value","onChange","e","target","placeholder","_datepicker","DatePicker","setDate","d","ne","Array","from","_","hour","Fragment","toString","label","dayIdx","hourIdx"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\calendar-component.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { Plus, X, ChevronLeft, ChevronRight, CalendarIcon, Clock, User, Tag, Info, Edit, Trash2 } from \"lucide-react\"\r\nimport { useAppContext } from \"../../context/AppContext\"\r\nimport { useEventActions } from \"../../hooks/useEventActions\"\r\nimport type { NewEvent, Event } from \"../../types/index\"\r\nimport { DatePicker } from \"./date-picker\"\r\n\r\nconst CalendarComponent: React.FC = () => {\r\n  const { state } = useAppContext()\r\n  const { clients, events } = state\r\n  const { addEvent, updateEvent, deleteEvent } = useEventActions()\r\n\r\n  const [viewMode, setViewMode] = useState(\"month\")\r\n  const [showAddEvent, setShowAddEvent] = useState(false)\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [editingEvent, setEditingEvent] = useState<Event | null>(null)\r\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date())\r\n  const [showDayDetail, setShowDayDetail] = useState(false)\r\n  const [selectedDayEvents, setSelectedDayEvents] = useState<Event[]>([])\r\n  const [newEvent, setNewEvent] = useState<NewEvent>({\r\n    title: \"\",\r\n    date: new Date().toISOString().split(\"T\")[0],\r\n    time: \"09:00 AM\",\r\n    type: \"meeting\",\r\n    relatedTo: null,\r\n  })\r\n\r\n  const [currentMonth, setCurrentMonth] = useState(new Date())\r\n\r\n  // Format date to YYYY-MM-DD\r\n  const formatDate = (date: Date): string => {\r\n    const year = date.getFullYear()\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\")\r\n    const day = String(date.getDate()).padStart(2, \"0\")\r\n    return `${year}-${month}-${day}`\r\n  }\r\n\r\n  // Navigate to previous month\r\n  const prevMonth = () => {\r\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() - 1, 1))\r\n  }\r\n\r\n  // Navigate to next month\r\n  const nextMonth = () => {\r\n    setCurrentMonth(new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 1))\r\n  }\r\n\r\n  // Navigate to today\r\n  const goToToday = () => {\r\n    setCurrentMonth(new Date())\r\n  }\r\n\r\n  // Generate calendar days for the current month\r\n  const generateCalendarDays = () => {\r\n    const days = []\r\n    const year = currentMonth.getFullYear()\r\n    const month = currentMonth.getMonth()\r\n\r\n    // Get the first day of the month\r\n    const firstDay = new Date(year, month, 1).getDay()\r\n\r\n    // Get the number of days in the month\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate()\r\n\r\n    // Get the number of days in the previous month\r\n    const daysInPrevMonth = new Date(year, month, 0).getDate()\r\n\r\n    // Add empty cells for days before the first day of the month\r\n    for (let i = 0; i < firstDay; i++) {\r\n      const prevMonthDate = new Date(year, month - 1, daysInPrevMonth - firstDay + i + 1)\r\n      days.push({\r\n        day: daysInPrevMonth - firstDay + i + 1,\r\n        date: formatDate(prevMonthDate),\r\n        isCurrentMonth: false,\r\n        isPast: prevMonthDate < new Date(new Date().setHours(0, 0, 0, 0)),\r\n        events: events.filter((event) => event.date === formatDate(prevMonthDate)),\r\n      })\r\n    }\r\n\r\n    // Add cells for each day of the month\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      const currentDate = new Date(year, month, i)\r\n      const dateStr = formatDate(currentDate)\r\n      days.push({\r\n        day: i,\r\n        date: dateStr,\r\n        isCurrentMonth: true,\r\n        isToday: dateStr === formatDate(new Date()),\r\n        isPast: currentDate < new Date(new Date().setHours(0, 0, 0, 0)),\r\n        events: events.filter((event) => event.date === dateStr),\r\n      })\r\n    }\r\n\r\n    // Add empty cells for days after the last day of the month\r\n    const lastDay = new Date(year, month, daysInMonth).getDay()\r\n    const nextDays = 6 - lastDay\r\n    for (let i = 1; i <= nextDays; i++) {\r\n      const nextMonthDate = new Date(year, month + 1, i)\r\n      days.push({\r\n        day: i,\r\n        date: formatDate(nextMonthDate),\r\n        isCurrentMonth: false,\r\n        isPast: nextMonthDate < new Date(new Date().setHours(0, 0, 0, 0)),\r\n        events: events.filter((event) => event.date === formatDate(nextMonthDate)),\r\n      })\r\n    }\r\n\r\n    return days\r\n  }\r\n\r\n  const calendarDays = generateCalendarDays()\r\n\r\n  // Handle day click to show events for that day\r\n  const handleDayClick = (date: string, dayEvents: Event[]) => {\r\n    setSelectedDate(new Date(date))\r\n    setSelectedDayEvents(dayEvents)\r\n    setShowDayDetail(true)\r\n\r\n    // Pre-fill the new event form with the selected date\r\n    setNewEvent({\r\n      ...newEvent,\r\n      date: date,\r\n    })\r\n  }\r\n\r\n  // Handle adding a new event\r\n  const handleAddEvent = async () => {\r\n    if (!newEvent.title.trim()) return\r\n\r\n    try {\r\n      if (isEditing && editingEvent) {\r\n        await updateEvent(editingEvent.id, newEvent)\r\n      } else {\r\n        await addEvent(newEvent)\r\n      }\r\n      setNewEvent({\r\n        title: \"\",\r\n        date: selectedDate ? formatDate(selectedDate) : new Date().toISOString().split(\"T\")[0],\r\n        time: \"09:00 AM\",\r\n        type: \"meeting\",\r\n        relatedTo: null,\r\n      })\r\n      setShowAddEvent(false)\r\n      setIsEditing(false)\r\n      setEditingEvent(null)\r\n    } catch (error) {\r\n      console.error(\"Error adding event:\", error)\r\n    }\r\n  }\r\n\r\n  // Handle editing an event\r\n  const handleEditEvent = (event: Event) => {\r\n    setIsEditing(true)\r\n    setEditingEvent(event)\r\n    setNewEvent({\r\n      title: event.title,\r\n      date: event.date,\r\n      time: event.time,\r\n      type: event.type,\r\n      relatedTo: event.relatedTo,\r\n      description: event.description,\r\n    })\r\n    setShowAddEvent(true)\r\n  }\r\n\r\n  // Handle deleting an event\r\n  const handleDeleteEvent = async (eventId: string) => {\r\n    try {\r\n      await deleteEvent(eventId)\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error)\r\n    }\r\n  }\r\n\r\n  // Get month name and year for display\r\n  const monthName = currentMonth.toLocaleString(\"default\", { month: \"long\" })\r\n  const year = currentMonth.getFullYear()\r\n\r\n  // Get event type color with improved contrast\r\n  const getEventTypeColor = (type: string) => {\r\n    switch (type) {\r\n      case \"meeting\":\r\n        return \"bg-blue-50 text-blue-900 border-l-4 border-blue-500 hover:bg-blue-100\"\r\n      case \"call\":\r\n        return \"bg-emerald-50 text-emerald-900 border-l-4 border-emerald-500 hover:bg-emerald-100\"\r\n      case \"deadline\":\r\n        return \"bg-red-50 text-red-900 border-l-4 border-red-500 hover:bg-red-100\"\r\n      case \"internal\":\r\n        return \"bg-purple-50 text-purple-900 border-l-4 border-purple-500 hover:bg-purple-100\"\r\n      default:\r\n        return \"bg-gray-50 text-gray-900 border-l-4 border-gray-500 hover:bg-gray-100\"\r\n    }\r\n  }\r\n\r\n  // Get event type badge color\r\n  const getEventTypeBadge = (type: string) => {\r\n    switch (type) {\r\n      case \"meeting\":\r\n        return \"bg-blue-500 text-white\"\r\n      case \"call\":\r\n        return \"bg-emerald-500 text-white\"\r\n      case \"deadline\":\r\n        return \"bg-red-500 text-white\"\r\n      case \"internal\":\r\n        return \"bg-purple-500 text-white\"\r\n      default:\r\n        return \"bg-gray-500 text-white\"\r\n    }\r\n  }\r\n\r\n  // Format time for display\r\n  const formatTime = (time: string) => {\r\n    return time\r\n  }\r\n\r\n  // Get client name from ID\r\n  const getClientName = (clientId: string | number | undefined) => {\r\n    if (clientId === undefined || clientId === null) return \"N/A\"\r\n    const clientIdStr = String(clientId)\r\n    const client = clients.find((c) => String(c.id) === clientIdStr)\r\n    return client ? client.name : \"N/A\"\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-8 fade-in bg-gradient-to-br from-slate-50 to-blue-50 min-h-screen\">\r\n      <div className=\"flex justify-between items-center mb-8\">\r\n        <h2 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\r\n          Calendar\r\n        </h2>\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"flex rounded-xl overflow-hidden shadow-lg border border-white/20\">\r\n            <button\r\n              onClick={() => setViewMode(\"month\")}\r\n              className={`px-6 py-3 text-sm font-semibold transition-all duration-200 ${\r\n                viewMode === \"month\"\r\n                  ? \"bg-gradient-to-r from-blue-600 to-blue-700 text-white shadow-lg\"\r\n                  : \"bg-white text-gray-700 hover:bg-blue-50 hover:text-blue-600\"\r\n              }`}\r\n            >\r\n              Month\r\n            </button>\r\n            <button\r\n              onClick={() => setViewMode(\"week\")}\r\n              className={`px-6 py-3 text-sm font-semibold transition-all duration-200 ${\r\n                viewMode === \"week\"\r\n                  ? \"bg-gradient-to-r from-blue-600 to-blue-700 text-white shadow-lg\"\r\n                  : \"bg-white text-gray-700 hover:bg-blue-50 hover:text-blue-600\"\r\n              }`}\r\n            >\r\n              Week\r\n            </button>\r\n            <button\r\n              onClick={() => setViewMode(\"day\")}\r\n              className={`px-6 py-3 text-sm font-semibold transition-all duration-200 ${\r\n                viewMode === \"day\"\r\n                  ? \"bg-gradient-to-r from-blue-600 to-blue-700 text-white shadow-lg\"\r\n                  : \"bg-white text-gray-700 hover:bg-blue-50 hover:text-blue-600\"\r\n              }`}\r\n            >\r\n              Day\r\n            </button>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              setSelectedDate(new Date())\r\n              setShowAddEvent(true)\r\n            }}\r\n            className=\"bg-gradient-to-r from-green-600 to-green-700 text-white px-6 py-3 rounded-xl flex items-center gap-2 text-sm font-semibold shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200\"\r\n          >\r\n            <Plus size={18} />\r\n            Add Event\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {viewMode === \"month\" && (\r\n        <div className=\"bg-white rounded-2xl shadow-xl overflow-hidden border border-white/20\">\r\n          <div className=\"flex justify-between items-center p-6 bg-gradient-to-r from-blue-600 to-purple-600\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <button\r\n                onClick={prevMonth}\r\n                className=\"p-3 rounded-full bg-white/20 hover:bg-white/30 transition-all duration-200 hover:scale-110\"\r\n              >\r\n                <ChevronLeft size={24} className=\"text-white\" />\r\n              </button>\r\n              <h3 className=\"text-2xl font-bold text-white\">\r\n                {monthName} {year}\r\n              </h3>\r\n              <button\r\n                onClick={nextMonth}\r\n                className=\"p-3 rounded-full bg-white/20 hover:bg-white/30 transition-all duration-200 hover:scale-110\"\r\n              >\r\n                <ChevronRight size={24} className=\"text-white\" />\r\n              </button>\r\n            </div>\r\n            <button\r\n              onClick={goToToday}\r\n              className=\"px-6 py-3 text-sm font-semibold bg-white text-blue-600 rounded-xl shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200\"\r\n            >\r\n              Today\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-7 text-center font-semibold p-4 bg-gradient-to-r from-slate-50 to-blue-50 border-b\">\r\n            <div className=\"text-red-600 py-2\">Sun</div>\r\n            <div className=\"text-gray-700 py-2\">Mon</div>\r\n            <div className=\"text-gray-700 py-2\">Tue</div>\r\n            <div className=\"text-gray-700 py-2\">Wed</div>\r\n            <div className=\"text-gray-700 py-2\">Thu</div>\r\n            <div className=\"text-gray-700 py-2\">Fri</div>\r\n            <div className=\"text-blue-600 py-2\">Sat</div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-7 gap-1 p-3 bg-slate-50\">\r\n            {calendarDays.map((day, idx) => (\r\n              <div\r\n                key={idx}\r\n                className={`min-h-32 rounded-xl p-2 transition-all duration-200 cursor-pointer ${\r\n                  day.isCurrentMonth\r\n                    ? day.isToday\r\n                      ? \"bg-gradient-to-br from-blue-100 to-purple-100 shadow-lg ring-2 ring-blue-400 transform scale-105\"\r\n                      : day.isPast\r\n                        ? \"bg-white hover:bg-blue-50 hover:shadow-md\"\r\n                        : \"bg-white hover:bg-blue-50 hover:shadow-lg hover:scale-102\"\r\n                    : \"bg-gray-100/50 text-gray-400 hover:bg-gray-200/50\"\r\n                } border border-gray-200/50`}\r\n                onClick={() => handleDayClick(day.date, day.events)}\r\n              >\r\n                <div\r\n                  className={`text-sm font-semibold mb-2 ${\r\n                    day.isToday\r\n                      ? \"bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-full w-8 h-8 flex items-center justify-center mx-auto shadow-md\"\r\n                      : \"text-gray-800 text-center\"\r\n                  }`}\r\n                >\r\n                  {day.day}\r\n                </div>\r\n                <div className=\"space-y-1 max-h-20 overflow-hidden\">\r\n                  {day.events?.slice(0, 3).map((event, eIdx) => (\r\n                    <div\r\n                      key={eIdx}\r\n                      className={`text-xs p-1.5 rounded-lg truncate shadow-sm font-medium transition-all duration-200 ${getEventTypeColor(event.type)}`}\r\n                    >\r\n                      <div className=\"font-semibold\">{event.time.substring(0, 5)}</div>\r\n                      <div className=\"truncate\">\r\n                        {event.title.length > 12 ? event.title.substring(0, 12) + \"...\" : event.title}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  {day.events && day.events.length > 3 && (\r\n                    <div className=\"text-xs text-center text-blue-600 font-semibold bg-blue-50 rounded-lg py-1\">\r\n                      +{day.events.length - 3} more\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Day Detail Modal */}\r\n      {showDayDetail && (\r\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50 fade-in\">\r\n          <div className=\"bg-white rounded-2xl w-full max-w-3xl max-h-[90vh] overflow-y-auto shadow-2xl border border-white/20\">\r\n            <div className=\"p-6 border-b bg-gradient-to-r from-blue-600 to-purple-600 sticky top-0 z-10 rounded-t-2xl\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <h3 className=\"text-xl font-bold text-white\">\r\n                  {selectedDate?.toLocaleDateString(\"en-US\", {\r\n                    weekday: \"long\",\r\n                    month: \"long\",\r\n                    day: \"numeric\",\r\n                    year: \"numeric\",\r\n                  })}\r\n                </h3>\r\n                <div className=\"flex gap-3\">\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowAddEvent(true)\r\n                      setShowDayDetail(false)\r\n                    }}\r\n                    className=\"px-4 py-2 bg-white text-blue-600 rounded-xl text-sm font-semibold flex items-center gap-2 shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200\"\r\n                  >\r\n                    <Plus size={16} />\r\n                    Add Event\r\n                  </button>\r\n                  <button\r\n                    onClick={() => setShowDayDetail(false)}\r\n                    className=\"p-2 text-white hover:bg-white/20 rounded-full transition-all duration-200 hover:scale-110\"\r\n                  >\r\n                    <X size={20} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"p-6\">\r\n              {selectedDayEvents.length > 0 ? (\r\n                <div className=\"space-y-4\">\r\n                  {selectedDayEvents.map((event, idx) => (\r\n                    <div\r\n                      key={idx}\r\n                      className={`p-5 rounded-xl shadow-md hover:shadow-lg transition-all duration-200 ${getEventTypeColor(event.type)}`}\r\n                    >\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <div className=\"flex-1\">\r\n                          <h4 className=\"font-bold text-lg mb-2\">{event.title}</h4>\r\n                          <div className=\"flex flex-wrap gap-4 text-sm\">\r\n                            <div className=\"flex items-center gap-2 bg-white/50 px-3 py-1 rounded-lg\">\r\n                              <Clock size={16} />\r\n                              <span className=\"font-medium\">{formatTime(event.time)}</span>\r\n                            </div>\r\n                            {event.relatedTo?.type === \"client\" && (\r\n                              <div className=\"flex items-center gap-2 bg-white/50 px-3 py-1 rounded-lg\">\r\n                                <User size={16} />\r\n                                <span className=\"font-medium\">{getClientName(event.relatedTo.id)}</span>\r\n                              </div>\r\n                            )}\r\n                            <div\r\n                              className={`flex items-center gap-2 px-3 py-1 rounded-lg font-semibold ${getEventTypeBadge(event.type)}`}\r\n                            >\r\n                              <Tag size={16} />\r\n                              {event.type ? event.type.charAt(0).toUpperCase() + event.type.slice(1) : 'Unknown'}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"flex gap-2 ml-4\">\r\n                          <button\r\n                            onClick={() => handleEditEvent(event)}\r\n                            className=\"p-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-all duration-200 hover:scale-110 shadow-md\"\r\n                          >\r\n                            <Edit size={16} />\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleDeleteEvent(event.id)}\r\n                            className=\"p-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-all duration-200 hover:scale-110 shadow-md\"\r\n                          >\r\n                            <Trash2 size={16} />\r\n                          </button>\r\n                          <button className=\"p-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-all duration-200 hover:scale-110 shadow-md\">\r\n                            <Info size={16} />\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-16 px-4\">\r\n                  <div className=\"bg-gradient-to-br from-blue-100 to-purple-100 rounded-full w-20 h-20 flex items-center justify-center mx-auto mb-6\">\r\n                    <CalendarIcon size={40} className=\"text-blue-600\" />\r\n                  </div>\r\n                  <p className=\"text-gray-600 mb-4 text-lg\">No events scheduled for this day</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      setShowAddEvent(true)\r\n                      setShowDayDetail(false)\r\n                    }}\r\n                    className=\"px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-xl text-sm font-semibold shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200\"\r\n                  >\r\n                    Add an event\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Add Event Modal */}\r\n      {showAddEvent && (\r\n        <div className=\"fixed inset-0 bg-black/70 backdrop-blur-sm flex items-center justify-center z-50 fade-in\">\r\n          <div className=\"bg-white rounded-2xl w-full max-w-lg shadow-2xl border border-white/20 scale-in\">\r\n            <div className=\"p-6 border-b bg-gradient-to-r from-green-600 to-blue-600 rounded-t-2xl\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <h3 className=\"text-xl font-bold text-white\">{isEditing ? \"Edit Event\" : \"Add New Event\"}</h3>\r\n                <button\r\n                  onClick={() => {\r\n                    setShowAddEvent(false)\r\n                    setIsEditing(false)\r\n                    setEditingEvent(null)\r\n                  }}\r\n                  className=\"p-2 text-white hover:bg-white/20 rounded-full transition-all duration-200 hover:scale-110\"\r\n                >\r\n                  <X size={20} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"p-6 space-y-6\">\r\n              <div>\r\n                <label className=\"block text-sm font-semibold mb-2 text-gray-800\">Event Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={newEvent.title}\r\n                  onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}\r\n                  placeholder=\"Enter event title\"\r\n                  className=\"w-full rounded-xl border-2 border-gray-200 px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent shadow-sm transition-all duration-200\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-semibold mb-2 text-gray-800\">Date</label>\r\n                  <DatePicker\r\n                    date={selectedDate}\r\n                    setDate={(d) => {\r\n                      setSelectedDate(d)\r\n                      setNewEvent((ne) => ({\r\n                        ...ne,\r\n                        date: d ? formatDate(d) : new Date().toISOString().split(\"T\")[0],\r\n                      }))\r\n                    }}\r\n                    placeholder=\"Pick a date\"\r\n                    className=\"w-full\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-semibold mb-2 text-gray-800\">Time</label>\r\n                  <select\r\n                    value={newEvent.time}\r\n                    onChange={(e) => setNewEvent({ ...newEvent, time: e.target.value })}\r\n                    className=\"w-full rounded-xl border-2 border-gray-200 px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent shadow-sm transition-all duration-200\"\r\n                  >\r\n                    {Array.from({ length: 24 }).map((_, hour) => (\r\n                      <React.Fragment key={hour}>\r\n                        <option value={`${hour.toString().padStart(2, \"0\")}:00 ${hour < 12 ? \"AM\" : \"PM\"}`}>\r\n                          {hour === 0 ? \"12\" : hour > 12 ? hour - 12 : hour}:00 {hour < 12 ? \"AM\" : \"PM\"}\r\n                        </option>\r\n                        <option value={`${hour.toString().padStart(2, \"0\")}:30 ${hour < 12 ? \"AM\" : \"PM\"}`}>\r\n                          {hour === 0 ? \"12\" : hour > 12 ? hour - 12 : hour}:30 {hour < 12 ? \"AM\" : \"PM\"}\r\n                        </option>\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-semibold mb-3 text-gray-800\">Event Type</label>\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                  {[\"meeting\", \"call\", \"deadline\", \"internal\"].map((type) => (\r\n                    <button\r\n                      key={type}\r\n                      type=\"button\"\r\n                      onClick={() => setNewEvent({ ...newEvent, type: type as any })}\r\n                      className={`px-4 py-3 text-sm font-semibold rounded-xl shadow-md transition-all duration-200 hover:scale-105 ${\r\n                        newEvent.type === type\r\n                          ? getEventTypeBadge(type) + \" ring-2 ring-offset-2 ring-blue-400 shadow-lg\"\r\n                          : \"bg-gray-100 hover:bg-gray-200 text-gray-700\"\r\n                      }`}\r\n                    >\r\n                      {type ? type.charAt(0).toUpperCase() + type.slice(1) : 'Unknown'}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-semibold mb-2 text-gray-800\">Related To</label>\r\n                <select\r\n                  value={newEvent.relatedTo ? `${newEvent.relatedTo.type}-${newEvent.relatedTo.id}` : \"\"}\r\n                  onChange={(e) => {\r\n                    if (!e.target.value) {\r\n                      setNewEvent({ ...newEvent, relatedTo: null })\r\n                      return\r\n                    }\r\n\r\n                    const [type, id] = e.target.value.split(\"-\")\r\n                    setNewEvent({\r\n                      ...newEvent,\r\n                      relatedTo: { type: type as \"client\" | \"internal\", id },\r\n                    })\r\n                  }}\r\n                  className=\"w-full rounded-xl border-2 border-gray-200 px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent shadow-sm transition-all duration-200\"\r\n                >\r\n                  <option value=\"\">None</option>\r\n                  <optgroup label=\"Clients\">\r\n                    {clients.map((client) => (\r\n                      <option key={`client-${client.id}`} value={`client-${client.id}`}>\r\n                        {client.name}\r\n                      </option>\r\n                    ))}\r\n                  </optgroup>\r\n                  <option value=\"internal-0\">Internal Team</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-semibold mb-2 text-gray-800\">Description (Optional)</label>\r\n                <textarea\r\n                  className=\"w-full rounded-xl border-2 border-gray-200 px-4 py-3 bg-gray-50 focus:bg-white focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent shadow-sm h-24 resize-none transition-all duration-200\"\r\n                  placeholder=\"Add any additional details...\"\r\n                  value={newEvent.description || \"\"}\r\n                  onChange={(e) => setNewEvent({ ...newEvent, description: e.target.value })}\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end gap-4 pt-4\">\r\n                <button\r\n                  onClick={() => setShowAddEvent(false)}\r\n                  className=\"px-6 py-3 text-sm font-semibold bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-xl shadow-md hover:shadow-lg transition-all duration-200 hover:scale-105\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleAddEvent}\r\n                  className=\"px-6 py-3 text-sm font-semibold bg-gradient-to-r from-green-600 to-blue-600 text-white rounded-xl shadow-lg hover:shadow-xl hover:scale-105 transition-all duration-200\"\r\n                >\r\n                  {isEditing ? \"Update Event\" : \"Add Event\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Week View */}\r\n      {viewMode === \"week\" && (\r\n        <div className=\"bg-white rounded-2xl shadow-xl overflow-hidden border border-white/20\">\r\n          <div className=\"p-6 bg-gradient-to-r from-blue-600 to-purple-600\">\r\n            <div className=\"grid grid-cols-7 text-center\">\r\n              <div className=\"font-semibold text-white py-2\">Sunday</div>\r\n              <div className=\"font-semibold text-white py-2\">Monday</div>\r\n              <div className=\"font-semibold text-white py-2\">Tuesday</div>\r\n              <div className=\"font-semibold text-white py-2\">Wednesday</div>\r\n              <div className=\"font-semibold text-white py-2\">Thursday</div>\r\n              <div className=\"font-semibold text-white py-2\">Friday</div>\r\n              <div className=\"font-semibold text-white py-2\">Saturday</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex\">\r\n            <div className=\"w-20 pr-3 py-3 bg-gradient-to-b from-slate-50 to-blue-50\">\r\n              {Array.from({ length: 12 }).map((_, i) => (\r\n                <div\r\n                  key={i}\r\n                  className=\"h-16 text-sm text-gray-600 text-right pr-3 font-semibold flex items-center justify-end\"\r\n                >\r\n                  {i + 8}:00\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-7 flex-1\">\r\n              {Array.from({ length: 7 }).map((_, dayIdx) => (\r\n                <div key={dayIdx} className=\"border-l border-gray-200\">\r\n                  {Array.from({ length: 12 }).map((_, hourIdx) => (\r\n                    <div\r\n                      key={hourIdx}\r\n                      className=\"h-16 border-b border-gray-100 relative hover:bg-blue-50 transition-colors duration-200\"\r\n                    >\r\n                      {/* Placeholder for week events */}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Day View */}\r\n      {viewMode === \"day\" && (\r\n        <div className=\"bg-white rounded-2xl shadow-xl overflow-hidden border border-white/20\">\r\n          <div className=\"p-6 text-center bg-gradient-to-r from-blue-600 to-purple-600\">\r\n            <h3 className=\"font-bold text-white text-xl\">\r\n              {selectedDate?.toLocaleDateString(\"en-US\", {\r\n                weekday: \"long\",\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n                year: \"numeric\",\r\n              })}\r\n            </h3>\r\n          </div>\r\n\r\n          <div className=\"space-y-0\">\r\n            {Array.from({ length: 12 }).map((_, i) => (\r\n              <div\r\n                key={i}\r\n                className=\"flex h-20 hover:bg-blue-50 transition-colors duration-200 border-b border-gray-100\"\r\n              >\r\n                <div className=\"w-20 text-sm text-gray-600 pt-2 font-semibold pl-4 bg-gradient-to-r from-slate-50 to-blue-50\">\r\n                  {i + 8}:00 AM\r\n                </div>\r\n                <div className=\"flex-1 pl-4 relative border-l border-gray-200\">{/* Placeholder for day events */}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CalendarComponent\r\nexport { CalendarComponent as Calendar }"],"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","ignoreList":[]}