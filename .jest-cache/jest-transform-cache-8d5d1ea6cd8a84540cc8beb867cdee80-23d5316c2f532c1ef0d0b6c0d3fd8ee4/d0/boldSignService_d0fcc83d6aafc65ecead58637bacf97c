00871c791fe28319f3f81e10add0b79e
"use strict";

/* istanbul ignore next */
function cov_12ralo3lpu() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\boldSignService.ts";
  var hash = "e4260bc07123ef18c5fffaf52bd864d6169f0153";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\boldSignService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "9": {
        start: {
          line: 28,
          column: 29
        },
        end: {
          line: 28,
          column: 71
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 6
        }
      },
      "11": {
        start: {
          line: 35,
          column: 25
        },
        end: {
          line: 35,
          column: 71
        }
      },
      "12": {
        start: {
          line: 36,
          column: 26
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "13": {
        start: {
          line: 37,
          column: 29
        },
        end: {
          line: 37,
          column: 79
        }
      },
      "14": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 41,
          column: 1
        }
      },
      "15": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 41
        }
      },
      "17": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 42
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "20": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 60,
          column: 10
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 33
        }
      },
      "22": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "23": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 25
        }
      },
      "24": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "25": {
        start: {
          line: 72,
          column: 29
        },
        end: {
          line: 75,
          column: 14
        }
      },
      "26": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 43
        }
      },
      "27": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 25
        }
      },
      "28": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "29": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 75
        }
      },
      "30": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "31": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "32": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 42
        }
      },
      "33": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "34": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 54
        }
      },
      "35": {
        start: {
          line: 93,
          column: 29
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "36": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 102,
          column: 14
        }
      },
      "37": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 108
        }
      },
      "38": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "39": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 75
        }
      },
      "40": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "41": {
        start: {
          line: 114,
          column: 28
        },
        end: {
          line: 137,
          column: 13
        }
      },
      "42": {
        start: {
          line: 138,
          column: 29
        },
        end: {
          line: 141,
          column: 14
        }
      },
      "43": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 164,
          column: 14
        }
      },
      "44": {
        start: {
          line: 148,
          column: 56
        },
        end: {
          line: 156,
          column: 21
        }
      },
      "45": {
        start: {
          line: 157,
          column: 66
        },
        end: {
          line: 163,
          column: 21
        }
      },
      "46": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 117
        }
      },
      "47": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "48": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 75
        }
      },
      "49": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "50": {
        start: {
          line: 176,
          column: 29
        },
        end: {
          line: 179,
          column: 14
        }
      },
      "51": {
        start: {
          line: 180,
          column: 25
        },
        end: {
          line: 180,
          column: 38
        }
      },
      "52": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 191,
          column: 14
        }
      },
      "53": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 114
        }
      },
      "54": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "55": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 75
        }
      },
      "56": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "57": {
        start: {
          line: 203,
          column: 28
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "58": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 209,
          column: 15
        }
      },
      "59": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 117
        }
      },
      "60": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "61": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 75
        }
      },
      "62": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "63": {
        start: {
          line: 221,
          column: 28
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "64": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 228,
          column: 15
        }
      },
      "65": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 106
        }
      },
      "66": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "67": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 75
        }
      },
      "68": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "69": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 247,
          column: 14
        }
      },
      "70": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 33
        }
      },
      "71": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 110
        }
      },
      "72": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 258,
          column: 9
        }
      },
      "73": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 257,
          column: 75
        }
      },
      "74": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 268,
          column: 9
        }
      },
      "75": {
        start: {
          line: 260,
          column: 29
        },
        end: {
          line: 263,
          column: 14
        }
      },
      "76": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 50
        }
      },
      "77": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 108
        }
      },
      "78": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "79": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 75
        }
      },
      "80": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 294,
          column: 9
        }
      },
      "81": {
        start: {
          line: 276,
          column: 27
        },
        end: {
          line: 279,
          column: 13
        }
      },
      "82": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 280,
          column: 47
        }
      },
      "83": {
        start: {
          line: 280,
          column: 24
        },
        end: {
          line: 280,
          column: 47
        }
      },
      "84": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 281,
          column: 59
        }
      },
      "85": {
        start: {
          line: 281,
          column: 28
        },
        end: {
          line: 281,
          column: 59
        }
      },
      "86": {
        start: {
          line: 282,
          column: 29
        },
        end: {
          line: 286,
          column: 14
        }
      },
      "87": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 290,
          column: 14
        }
      },
      "88": {
        start: {
          line: 293,
          column: 12
        },
        end: {
          line: 293,
          column: 116
        }
      },
      "89": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "90": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 75
        }
      },
      "91": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 312,
          column: 9
        }
      },
      "92": {
        start: {
          line: 302,
          column: 28
        },
        end: {
          line: 304,
          column: 13
        }
      },
      "93": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 308,
          column: 15
        }
      },
      "94": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 311,
          column: 117
        }
      },
      "95": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "96": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 75
        }
      },
      "97": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "98": {
        start: {
          line: 320,
          column: 29
        },
        end: {
          line: 326,
          column: 14
        }
      },
      "99": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 44
        }
      },
      "100": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 108
        }
      },
      "101": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "102": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 338,
          column: 13
        }
      },
      "103": {
        start: {
          line: 337,
          column: 16
        },
        end: {
          line: 337,
          column: 28
        }
      },
      "104": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 345,
          column: 14
        }
      },
      "105": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 24
        }
      },
      "106": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 355,
          column: 9
        }
      },
      "107": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 354,
          column: 24
        }
      },
      "108": {
        start: {
          line: 356,
          column: 8
        },
        end: {
          line: 365,
          column: 9
        }
      },
      "109": {
        start: {
          line: 357,
          column: 29
        },
        end: {
          line: 360,
          column: 14
        }
      },
      "110": {
        start: {
          line: 361,
          column: 12
        },
        end: {
          line: 361,
          column: 33
        }
      },
      "111": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 364,
          column: 109
        }
      },
      "112": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 371,
          column: 9
        }
      },
      "113": {
        start: {
          line: 370,
          column: 12
        },
        end: {
          line: 370,
          column: 75
        }
      },
      "114": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 388,
          column: 9
        }
      },
      "115": {
        start: {
          line: 373,
          column: 28
        },
        end: {
          line: 377,
          column: 13
        }
      },
      "116": {
        start: {
          line: 378,
          column: 29
        },
        end: {
          line: 381,
          column: 14
        }
      },
      "117": {
        start: {
          line: 382,
          column: 12
        },
        end: {
          line: 384,
          column: 14
        }
      },
      "118": {
        start: {
          line: 387,
          column: 12
        },
        end: {
          line: 387,
          column: 108
        }
      },
      "119": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "120": {
        start: {
          line: 393,
          column: 12
        },
        end: {
          line: 393,
          column: 75
        }
      },
      "121": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 424,
          column: 9
        }
      },
      "122": {
        start: {
          line: 396,
          column: 28
        },
        end: {
          line: 400,
          column: 13
        }
      },
      "123": {
        start: {
          line: 401,
          column: 29
        },
        end: {
          line: 404,
          column: 14
        }
      },
      "124": {
        start: {
          line: 405,
          column: 12
        },
        end: {
          line: 420,
          column: 14
        }
      },
      "125": {
        start: {
          line: 410,
          column: 48
        },
        end: {
          line: 418,
          column: 21
        }
      },
      "126": {
        start: {
          line: 423,
          column: 12
        },
        end: {
          line: 423,
          column: 112
        }
      },
      "127": {
        start: {
          line: 429,
          column: 8
        },
        end: {
          line: 429,
          column: 105
        }
      },
      "128": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 36
        }
      },
      "129": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 435,
          column: 49
        }
      },
      "130": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 436,
          column: 49
        }
      },
      "131": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 11
        }
      },
      "132": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 444,
          column: 46
        }
      },
      "133": {
        start: {
          line: 447,
          column: 24
        },
        end: {
          line: 447,
          column: 45
        }
      },
      "134": {
        start: {
          line: 448,
          column: 17
        },
        end: {
          line: 448,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 27
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 19
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        loc: {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 43
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 51
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 26
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 57
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 14
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        loc: {
          start: {
            line: 67,
            column: 27
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 67
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 41
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 83
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 42
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 109
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 148,
            column: 45
          },
          end: {
            line: 148,
            column: 46
          }
        },
        loc: {
          start: {
            line: 148,
            column: 56
          },
          end: {
            line: 156,
            column: 21
          }
        },
        line: 148
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 157,
            column: 58
          },
          end: {
            line: 157,
            column: 59
          }
        },
        loc: {
          start: {
            line: 157,
            column: 66
          },
          end: {
            line: 163,
            column: 21
          }
        },
        line: 157
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 5
          }
        },
        loc: {
          start: {
            line: 171,
            column: 42
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 171
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 198,
            column: 4
          },
          end: {
            line: 198,
            column: 5
          }
        },
        loc: {
          start: {
            line: 198,
            column: 53
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 198
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        loc: {
          start: {
            line: 216,
            column: 57
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 216
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 5
          }
        },
        loc: {
          start: {
            line: 235,
            column: 55
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 235
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 255,
            column: 5
          }
        },
        loc: {
          start: {
            line: 255,
            column: 36
          },
          end: {
            line: 269,
            column: 5
          }
        },
        line: 255
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 271,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        loc: {
          start: {
            line: 271,
            column: 77
          },
          end: {
            line: 295,
            column: 5
          }
        },
        line: 271
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 58
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 297
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 5
          }
        },
        loc: {
          start: {
            line: 315,
            column: 49
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 315
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 334,
            column: 4
          },
          end: {
            line: 334,
            column: 5
          }
        },
        loc: {
          start: {
            line: 334,
            column: 31
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 334
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 352,
            column: 4
          },
          end: {
            line: 352,
            column: 5
          }
        },
        loc: {
          start: {
            line: 352,
            column: 27
          },
          end: {
            line: 366,
            column: 5
          }
        },
        line: 352
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 368,
            column: 4
          },
          end: {
            line: 368,
            column: 5
          }
        },
        loc: {
          start: {
            line: 368,
            column: 53
          },
          end: {
            line: 389,
            column: 5
          }
        },
        line: 368
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 391,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        },
        loc: {
          start: {
            line: 391,
            column: 56
          },
          end: {
            line: 425,
            column: 5
          }
        },
        line: 391
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 410,
            column: 37
          },
          end: {
            line: 410,
            column: 38
          }
        },
        loc: {
          start: {
            line: 410,
            column: 48
          },
          end: {
            line: 418,
            column: 21
          }
        },
        line: 410
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 428,
            column: 4
          },
          end: {
            line: 428,
            column: 5
          }
        },
        loc: {
          start: {
            line: 428,
            column: 56
          },
          end: {
            line: 431,
            column: 5
          }
        },
        line: 428
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 434,
            column: 4
          },
          end: {
            line: 434,
            column: 5
          }
        },
        loc: {
          start: {
            line: 434,
            column: 24
          },
          end: {
            line: 437,
            column: 5
          }
        },
        line: 434
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 31
          },
          end: {
            line: 445,
            column: 5
          }
        },
        line: 440
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 35
          },
          end: {
            line: 30,
            column: 38
          }
        }, {
          start: {
            line: 30,
            column: 41
          },
          end: {
            line: 32,
            column: 5
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 11
          },
          end: {
            line: 30,
            column: 14
          }
        }, {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 30,
            column: 32
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 65
          }
        }, {
          start: {
            line: 35,
            column: 69
          },
          end: {
            line: 35,
            column: 71
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 37,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 37,
            column: 73
          }
        }, {
          start: {
            line: 37,
            column: 77
          },
          end: {
            line: 37,
            column: 79
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 0
          },
          end: {
            line: 41,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 0
          },
          end: {
            line: 41,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 105,
            column: 58
          },
          end: {
            line: 105,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 58
          },
          end: {
            line: 105,
            column: 87
          }
        }, {
          start: {
            line: 105,
            column: 91
          },
          end: {
            line: 105,
            column: 104
          }
        }],
        line: 105
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 25
          },
          end: {
            line: 116,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 25
          },
          end: {
            line: 116,
            column: 40
          }
        }, {
          start: {
            line: 116,
            column: 44
          },
          end: {
            line: 116,
            column: 46
          }
        }],
        line: 116
      },
      "12": {
        loc: {
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 28
          },
          end: {
            line: 119,
            column: 46
          }
        }, {
          start: {
            line: 119,
            column: 50
          },
          end: {
            line: 119,
            column: 52
          }
        }],
        line: 119
      },
      "13": {
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 124,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 120,
            column: 58
          }
        }, {
          start: {
            line: 120,
            column: 62
          },
          end: {
            line: 124,
            column: 17
          }
        }],
        line: 120
      },
      "14": {
        loc: {
          start: {
            line: 126,
            column: 24
          },
          end: {
            line: 126,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 24
          },
          end: {
            line: 126,
            column: 38
          }
        }, {
          start: {
            line: 126,
            column: 42
          },
          end: {
            line: 126,
            column: 44
          }
        }],
        line: 126
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 31
          },
          end: {
            line: 127,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 31
          },
          end: {
            line: 127,
            column: 52
          }
        }, {
          start: {
            line: 127,
            column: 56
          },
          end: {
            line: 127,
            column: 61
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 128,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 28
          },
          end: {
            line: 128,
            column: 46
          }
        }, {
          start: {
            line: 128,
            column: 50
          },
          end: {
            line: 128,
            column: 55
          }
        }],
        line: 128
      },
      "17": {
        loc: {
          start: {
            line: 129,
            column: 36
          },
          end: {
            line: 129,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 129,
            column: 36
          },
          end: {
            line: 129,
            column: 62
          }
        }, {
          start: {
            line: 129,
            column: 66
          },
          end: {
            line: 129,
            column: 71
          }
        }],
        line: 129
      },
      "18": {
        loc: {
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 32
          },
          end: {
            line: 130,
            column: 54
          }
        }, {
          start: {
            line: 130,
            column: 58
          },
          end: {
            line: 130,
            column: 62
          }
        }],
        line: 130
      },
      "19": {
        loc: {
          start: {
            line: 131,
            column: 31
          },
          end: {
            line: 131,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 31
          },
          end: {
            line: 131,
            column: 52
          }
        }, {
          start: {
            line: 131,
            column: 56
          },
          end: {
            line: 131,
            column: 60
          }
        }],
        line: 131
      },
      "20": {
        loc: {
          start: {
            line: 132,
            column: 32
          },
          end: {
            line: 132,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 32
          },
          end: {
            line: 132,
            column: 54
          }
        }, {
          start: {
            line: 132,
            column: 58
          },
          end: {
            line: 132,
            column: 63
          }
        }],
        line: 132
      },
      "21": {
        loc: {
          start: {
            line: 133,
            column: 36
          },
          end: {
            line: 133,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 36
          },
          end: {
            line: 133,
            column: 62
          }
        }, {
          start: {
            line: 133,
            column: 66
          },
          end: {
            line: 133,
            column: 70
          }
        }],
        line: 133
      },
      "22": {
        loc: {
          start: {
            line: 134,
            column: 29
          },
          end: {
            line: 134,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 29
          },
          end: {
            line: 134,
            column: 48
          }
        }, {
          start: {
            line: 134,
            column: 52
          },
          end: {
            line: 134,
            column: 57
          }
        }],
        line: 134
      },
      "23": {
        loc: {
          start: {
            line: 147,
            column: 28
          },
          end: {
            line: 147,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 49
          },
          end: {
            line: 147,
            column: 126
          }
        }, {
          start: {
            line: 147,
            column: 129
          },
          end: {
            line: 147,
            column: 138
          }
        }],
        line: 147
      },
      "24": {
        loc: {
          start: {
            line: 167,
            column: 67
          },
          end: {
            line: 167,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 67
          },
          end: {
            line: 167,
            column: 96
          }
        }, {
          start: {
            line: 167,
            column: 100
          },
          end: {
            line: 167,
            column: 113
          }
        }],
        line: 167
      },
      "25": {
        loc: {
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 25
          },
          end: {
            line: 188,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 25
          },
          end: {
            line: 188,
            column: 37
          }
        }, {
          start: {
            line: 188,
            column: 41
          },
          end: {
            line: 188,
            column: 43
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 189,
            column: 33
          },
          end: {
            line: 189,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 33
          },
          end: {
            line: 189,
            column: 53
          }
        }, {
          start: {
            line: 189,
            column: 57
          },
          end: {
            line: 189,
            column: 59
          }
        }],
        line: 189
      },
      "28": {
        loc: {
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 190,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 28
          },
          end: {
            line: 190,
            column: 43
          }
        }, {
          start: {
            line: 190,
            column: 47
          },
          end: {
            line: 190,
            column: 49
          }
        }],
        line: 190
      },
      "29": {
        loc: {
          start: {
            line: 194,
            column: 64
          },
          end: {
            line: 194,
            column: 110
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 64
          },
          end: {
            line: 194,
            column: 93
          }
        }, {
          start: {
            line: 194,
            column: 97
          },
          end: {
            line: 194,
            column: 110
          }
        }],
        line: 194
      },
      "30": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 201,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "31": {
        loc: {
          start: {
            line: 204,
            column: 24
          },
          end: {
            line: 204,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 24
          },
          end: {
            line: 204,
            column: 30
          }
        }, {
          start: {
            line: 204,
            column: 34
          },
          end: {
            line: 204,
            column: 55
          }
        }],
        line: 204
      },
      "32": {
        loc: {
          start: {
            line: 212,
            column: 67
          },
          end: {
            line: 212,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 67
          },
          end: {
            line: 212,
            column: 96
          }
        }, {
          start: {
            line: 212,
            column: 100
          },
          end: {
            line: 212,
            column: 113
          }
        }],
        line: 212
      },
      "33": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "34": {
        loc: {
          start: {
            line: 223,
            column: 25
          },
          end: {
            line: 223,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 25
          },
          end: {
            line: 223,
            column: 32
          }
        }, {
          start: {
            line: 223,
            column: 36
          },
          end: {
            line: 223,
            column: 92
          }
        }],
        line: 223
      },
      "35": {
        loc: {
          start: {
            line: 231,
            column: 56
          },
          end: {
            line: 231,
            column: 102
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 56
          },
          end: {
            line: 231,
            column: 85
          }
        }, {
          start: {
            line: 231,
            column: 89
          },
          end: {
            line: 231,
            column: 102
          }
        }],
        line: 231
      },
      "36": {
        loc: {
          start: {
            line: 235,
            column: 39
          },
          end: {
            line: 235,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 48
          },
          end: {
            line: 235,
            column: 53
          }
        }],
        line: 235
      },
      "37": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "38": {
        loc: {
          start: {
            line: 251,
            column: 60
          },
          end: {
            line: 251,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 251,
            column: 60
          },
          end: {
            line: 251,
            column: 89
          }
        }, {
          start: {
            line: 251,
            column: 93
          },
          end: {
            line: 251,
            column: 106
          }
        }],
        line: 251
      },
      "39": {
        loc: {
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 8
          },
          end: {
            line: 258,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "40": {
        loc: {
          start: {
            line: 264,
            column: 19
          },
          end: {
            line: 264,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 19
          },
          end: {
            line: 264,
            column: 43
          }
        }, {
          start: {
            line: 264,
            column: 47
          },
          end: {
            line: 264,
            column: 49
          }
        }],
        line: 264
      },
      "41": {
        loc: {
          start: {
            line: 267,
            column: 58
          },
          end: {
            line: 267,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 58
          },
          end: {
            line: 267,
            column: 87
          }
        }, {
          start: {
            line: 267,
            column: 91
          },
          end: {
            line: 267,
            column: 104
          }
        }],
        line: 267
      },
      "42": {
        loc: {
          start: {
            line: 271,
            column: 32
          },
          end: {
            line: 271,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 271,
            column: 39
          },
          end: {
            line: 271,
            column: 40
          }
        }],
        line: 271
      },
      "43": {
        loc: {
          start: {
            line: 271,
            column: 42
          },
          end: {
            line: 271,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 271,
            column: 53
          },
          end: {
            line: 271,
            column: 55
          }
        }],
        line: 271
      },
      "44": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 274,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "45": {
        loc: {
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 280,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 12
          },
          end: {
            line: 280,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "46": {
        loc: {
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 281,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 281,
            column: 12
          },
          end: {
            line: 281,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 281
      },
      "47": {
        loc: {
          start: {
            line: 288,
            column: 26
          },
          end: {
            line: 288,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 26
          },
          end: {
            line: 288,
            column: 46
          }
        }, {
          start: {
            line: 288,
            column: 50
          },
          end: {
            line: 288,
            column: 52
          }
        }],
        line: 288
      },
      "48": {
        loc: {
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 52
          }
        }, {
          start: {
            line: 289,
            column: 56
          },
          end: {
            line: 289,
            column: 57
          }
        }],
        line: 289
      },
      "49": {
        loc: {
          start: {
            line: 293,
            column: 66
          },
          end: {
            line: 293,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 66
          },
          end: {
            line: 293,
            column: 95
          }
        }, {
          start: {
            line: 293,
            column: 99
          },
          end: {
            line: 293,
            column: 112
          }
        }],
        line: 293
      },
      "50": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 300,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "51": {
        loc: {
          start: {
            line: 311,
            column: 67
          },
          end: {
            line: 311,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 311,
            column: 67
          },
          end: {
            line: 311,
            column: 96
          }
        }, {
          start: {
            line: 311,
            column: 100
          },
          end: {
            line: 311,
            column: 113
          }
        }],
        line: 311
      },
      "52": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 318,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "53": {
        loc: {
          start: {
            line: 330,
            column: 58
          },
          end: {
            line: 330,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 330,
            column: 58
          },
          end: {
            line: 330,
            column: 87
          }
        }, {
          start: {
            line: 330,
            column: 91
          },
          end: {
            line: 330,
            column: 104
          }
        }],
        line: 330
      },
      "54": {
        loc: {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 338,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 338,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "55": {
        loc: {
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 336,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 336,
            column: 16
          },
          end: {
            line: 336,
            column: 22
          }
        }, {
          start: {
            line: 336,
            column: 26
          },
          end: {
            line: 336,
            column: 43
          }
        }, {
          start: {
            line: 336,
            column: 47
          },
          end: {
            line: 336,
            column: 63
          }
        }],
        line: 336
      },
      "56": {
        loc: {
          start: {
            line: 343,
            column: 24
          },
          end: {
            line: 343,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 343,
            column: 24
          },
          end: {
            line: 343,
            column: 36
          }
        }, {
          start: {
            line: 343,
            column: 40
          },
          end: {
            line: 343,
            column: 60
          }
        }],
        line: 343
      },
      "57": {
        loc: {
          start: {
            line: 344,
            column: 27
          },
          end: {
            line: 344,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 27
          },
          end: {
            line: 344,
            column: 42
          }
        }, {
          start: {
            line: 344,
            column: 46
          },
          end: {
            line: 344,
            column: 70
          }
        }],
        line: 344
      },
      "58": {
        loc: {
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 355,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 8
          },
          end: {
            line: 355,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "59": {
        loc: {
          start: {
            line: 364,
            column: 59
          },
          end: {
            line: 364,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 59
          },
          end: {
            line: 364,
            column: 88
          }
        }, {
          start: {
            line: 364,
            column: 92
          },
          end: {
            line: 364,
            column: 105
          }
        }],
        line: 364
      },
      "60": {
        loc: {
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 371,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 8
          },
          end: {
            line: 371,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "61": {
        loc: {
          start: {
            line: 387,
            column: 58
          },
          end: {
            line: 387,
            column: 104
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 387,
            column: 58
          },
          end: {
            line: 387,
            column: 87
          }
        }, {
          start: {
            line: 387,
            column: 91
          },
          end: {
            line: 387,
            column: 104
          }
        }],
        line: 387
      },
      "62": {
        loc: {
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "63": {
        loc: {
          start: {
            line: 423,
            column: 62
          },
          end: {
            line: 423,
            column: 108
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 423,
            column: 62
          },
          end: {
            line: 423,
            column: 91
          }
        }, {
          start: {
            line: 423,
            column: 95
          },
          end: {
            line: 423,
            column: 108
          }
        }],
        line: 423
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0],
      "43": [0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\boldSignService.ts"],
      sourcesContent: ["import axios from \"axios\"\n\n// Environment variables\nconst BOLDSIGN_API_KEY = process.env.NEXT_PUBLIC_BOLDSIGN_API_KEY || \"\"\nconst BOLDSIGN_BASE_URL = \"https://api.boldsign.com/v1\"\nconst BOLDSIGN_WEBHOOK_URL = process.env.NEXT_PUBLIC_BOLDSIGN_WEBHOOK_URL || \"\"\n\n// Validate configuration\nif (!BOLDSIGN_API_KEY) {\n  // Silent: BoldSign API key not configured. E-signature functionality will be limited.\n}\n\nexport interface Signer {\n  name: string\n  emailAddress: string\n  signerType: \"signer\" | \"approver\" | \"cc\" | \"viewer\"\n  signerOrder: number\n  enableEmailOTP?: boolean\n  enableSMSOTP?: boolean\n  phoneNumber?: string\n  deliveryMode: \"email\" | \"sms\" | \"both\"\n  locale?: string\n  redirectUrl?: string\n  formFields?: FormField[]\n}\n\nexport interface FormField {\n  id: string\n  type: \"signature\" | \"initial\" | \"date\" | \"textbox\" | \"checkbox\" | \"radiobutton\" | \"dropdown\" | \"image\"\n  pageNumber: number\n  bounds: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }\n  isRequired: boolean\n  placeholder?: string\n  value?: string\n  options?: string[]\n  fontSize?: number\n  fontColor?: string\n  backgroundColor?: string\n}\n\nexport interface DocumentInfo {\n  documentId: string\n  documentName: string\n  documentOrder: number\n}\n\nexport interface SignatureRequestOptions {\n  title: string\n  message?: string\n  signers: Signer[]\n  documentInfo: DocumentInfo[]\n  expiryDays?: number\n  reminderSettings?: {\n    enableAutoReminder: boolean\n    reminderDays: number\n    reminderCount: number\n  }\n  brandId?: string\n  labels?: string[]\n  disableEmails?: boolean\n  disableSMS?: boolean\n  enablePrintAndSign?: boolean\n  enableReassign?: boolean\n  allowReassign?: boolean\n  hideDocumentId?: boolean\n  enableSigningOrder?: boolean\n  useTextTags?: boolean\n  sendLinkValidTill?: string\n  onBehalfOf?: string\n}\n\nexport interface SignatureRequest {\n  id: string\n  title: string\n  status: \"draft\" | \"inProgress\" | \"completed\" | \"declined\" | \"expired\" | \"cancelled\" | \"revoked\"\n  createdDate: string\n  expiryDate?: string\n  completedDate?: string\n  signers: SignerInfo[]\n  documentDetails: DocumentDetail[]\n  auditTrail?: AuditEvent[]\n}\n\nexport interface SignerInfo {\n  signerEmail: string\n  signerName: string\n  signerType: string\n  signerOrder: number\n  status: \"awaiting\" | \"completed\" | \"declined\" | \"expired\" | \"reassigned\"\n  signedDate?: string\n  declineReason?: string\n  deliveryMode: string\n  language?: string\n}\n\nexport interface DocumentDetail {\n  documentId: string\n  documentName: string\n  documentOrder: number\n  documentSize: number\n  documentPages: number\n}\n\nexport interface AuditEvent {\n  eventType: string\n  eventDate: string\n  eventBy: string\n  eventDescription: string\n  ipAddress?: string\n  userAgent?: string\n}\n\nexport interface WebhookEvent {\n  eventType: string\n  documentId: string\n  signerEmail?: string\n  signerName?: string\n  eventTime: string\n  status?: string\n  declineReason?: string\n  reassignReason?: string\n}\n\nexport interface UploadedDocument {\n  documentId: string\n  documentName: string\n  documentSize: number\n  documentPages: number\n}\n\nclass BoldSignService {\n  private apiKey: string\n  private baseURL: string\n  private isConfigured: boolean\n\n  constructor() {\n    this.apiKey = BOLDSIGN_API_KEY\n    this.baseURL = BOLDSIGN_BASE_URL\n    this.isConfigured = !!this.apiKey\n\n    if (!this.isConfigured) {\n      // Silent: BoldSign service not properly configured. Please check your API key.\n    }\n  }\n\n  private getHeaders() {\n    return {\n      \"X-API-KEY\": this.apiKey,\n      \"Content-Type\": \"application/json\",\n    }\n  }\n\n  private getMultipartHeaders() {\n    return {\n      \"X-API-KEY\": this.apiKey,\n    }\n  }\n\n  // Check if service is properly configured\n  public isReady(): boolean {\n    return this.isConfigured\n  }\n\n  // Test API connection\n  async testConnection(): Promise<boolean> {\n    if (!this.isConfigured) {\n      return false\n    }\n\n    try {\n      const response = await axios.get(`${this.baseURL}/account`, {\n        headers: this.getHeaders(),\n        timeout: 10000,\n      })\n      return response.status === 200\n    } catch (error) {\n      // Silent: BoldSign connection test failed\n      return false\n    }\n  }\n\n  // Upload document\n  async uploadDocument(file: File, fileName?: string): Promise<UploadedDocument> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const formData = new FormData()\n      formData.append(\"file\", file)\n      if (fileName) {\n        formData.append(\"fileName\", fileName)\n      }\n\n      const response = await axios.post(`${this.baseURL}/document/upload`, formData, {\n        headers: this.getMultipartHeaders(),\n        timeout: 60000, // 60 seconds for file upload\n      })\n\n      return {\n        documentId: response.data.documentId,\n        documentName: response.data.documentName,\n        documentSize: response.data.documentSize,\n        documentPages: response.data.documentPages,\n      }\n    } catch (error: any) {\n      // Silent: BoldSign document upload error\n      throw new Error(`Failed to upload document: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Create signature request\n  async createSignatureRequest(options: SignatureRequestOptions): Promise<SignatureRequest> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const payload = {\n        title: options.title,\n        message: options.message || \"\",\n        signers: options.signers,\n        files: options.documentInfo,\n        expiryDays: options.expiryDays || 30,\n        reminderSettings: options.reminderSettings || {\n          enableAutoReminder: true,\n          reminderDays: 3,\n          reminderCount: 3,\n        },\n        brandId: options.brandId,\n        labels: options.labels || [],\n        disableEmails: options.disableEmails || false,\n        disableSMS: options.disableSMS || false,\n        enablePrintAndSign: options.enablePrintAndSign || false,\n        enableReassign: options.enableReassign || true,\n        allowReassign: options.allowReassign || true,\n        hideDocumentId: options.hideDocumentId || false,\n        enableSigningOrder: options.enableSigningOrder || true,\n        useTextTags: options.useTextTags || false,\n        sendLinkValidTill: options.sendLinkValidTill,\n        onBehalfOf: options.onBehalfOf,\n      }\n\n      const response = await axios.post(`${this.baseURL}/document/send`, payload, {\n        headers: this.getHeaders(),\n        timeout: 30000,\n      })\n\n      return {\n        id: response.data.documentId,\n        title: options.title,\n        status: \"inProgress\",\n        createdDate: new Date().toISOString(),\n        expiryDate: options.expiryDays\n          ? new Date(Date.now() + options.expiryDays * 24 * 60 * 60 * 1000).toISOString()\n          : undefined,\n        signers: options.signers.map((signer) => ({\n          signerEmail: signer.emailAddress,\n          signerName: signer.name,\n          signerType: signer.signerType,\n          signerOrder: signer.signerOrder,\n          status: \"awaiting\",\n          deliveryMode: signer.deliveryMode,\n          language: signer.locale,\n        })),\n        documentDetails: options.documentInfo.map((doc) => ({\n          documentId: doc.documentId,\n          documentName: doc.documentName,\n          documentOrder: doc.documentOrder,\n          documentSize: 0, // Will be populated by API\n          documentPages: 0, // Will be populated by API\n        })),\n      }\n    } catch (error: any) {\n      // Silent: BoldSign create signature request error\n      throw new Error(`Failed to create signature request: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Get signature request details\n  async getSignatureRequest(documentId: string): Promise<SignatureRequest> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const response = await axios.get(`${this.baseURL}/document/${documentId}`, {\n        headers: this.getHeaders(),\n        timeout: 15000,\n      })\n\n      const data = response.data\n      return {\n        id: data.documentId,\n        title: data.title,\n        status: data.status,\n        createdDate: data.createdDate,\n        expiryDate: data.expiryDate,\n        completedDate: data.completedDate,\n        signers: data.signers || [],\n        documentDetails: data.documentDetails || [],\n        auditTrail: data.auditTrail || [],\n      }\n    } catch (error: any) {\n      // Silent: BoldSign get signature request error\n      throw new Error(`Failed to get signature request: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Cancel signature request\n  async cancelSignatureRequest(documentId: string, reason?: string): Promise<void> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const payload = {\n        reason: reason || \"Cancelled by sender\",\n      }\n\n      await axios.post(`${this.baseURL}/document/${documentId}/cancel`, payload, {\n        headers: this.getHeaders(),\n        timeout: 15000,\n      })\n    } catch (error: any) {\n      // Silent: BoldSign cancel signature request error\n      throw new Error(`Failed to cancel signature request: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Send reminder\n  async sendReminder(documentId: string, signerEmail: string, message?: string): Promise<void> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const payload = {\n        signerEmail,\n        message: message || \"Please sign the document at your earliest convenience.\",\n      }\n\n      await axios.post(`${this.baseURL}/document/${documentId}/reminder`, payload, {\n        headers: this.getHeaders(),\n        timeout: 15000,\n      })\n    } catch (error: any) {\n      // Silent: BoldSign send reminder error\n      throw new Error(`Failed to send reminder: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Download signed document\n  async downloadDocument(documentId: string, format: \"pdf\" | \"zip\" = \"pdf\"): Promise<Blob> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const response = await axios.get(`${this.baseURL}/document/${documentId}/download`, {\n        headers: this.getHeaders(),\n        params: { format },\n        responseType: \"blob\",\n        timeout: 60000,\n      })\n\n      return response.data\n    } catch (error: any) {\n      // Silent: BoldSign download document error\n      throw new Error(`Failed to download document: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Get audit trail\n  async getAuditTrail(documentId: string): Promise<AuditEvent[]> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const response = await axios.get(`${this.baseURL}/document/${documentId}/auditTrail`, {\n        headers: this.getHeaders(),\n        timeout: 15000,\n      })\n\n      return response.data.auditTrail || []\n    } catch (error: any) {\n      // Silent: BoldSign get audit trail error\n      throw new Error(`Failed to get audit trail: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // List signature requests\n  async listSignatureRequests(\n    page = 1,\n    pageSize = 25,\n    status?: string,\n    searchText?: string,\n  ): Promise<{ requests: SignatureRequest[]; totalCount: number }> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const params: any = {\n        page,\n        pageSize,\n      }\n      if (status) params.status = status\n      if (searchText) params.searchText = searchText\n\n      const response = await axios.get(`${this.baseURL}/document/list`, {\n        headers: this.getHeaders(),\n        params,\n        timeout: 15000,\n      })\n\n      return {\n        requests: response.data.result || [],\n        totalCount: response.data.totalCount || 0,\n      }\n    } catch (error: any) {\n      // Silent: BoldSign list signature requests error\n      throw new Error(`Failed to list signature requests: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Resend signature request\n  async resendSignatureRequest(documentId: string, signerEmail: string): Promise<void> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const payload = {\n        signerEmail,\n      }\n\n      await axios.post(`${this.baseURL}/document/${documentId}/resend`, payload, {\n        headers: this.getHeaders(),\n        timeout: 15000,\n      })\n    } catch (error: any) {\n      // Silent: BoldSign resend signature request error\n      throw new Error(`Failed to resend signature request: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Get signing URL (for embedded signing)\n  async getSigningUrl(documentId: string, signerEmail: string): Promise<string> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const response = await axios.get(`${this.baseURL}/document/${documentId}/signingUrl`, {\n        headers: this.getHeaders(),\n        params: { signerEmail },\n        timeout: 15000,\n      })\n\n      return response.data.signingUrl\n    } catch (error: any) {\n      // Silent: BoldSign get signing URL error\n      throw new Error(`Failed to get signing URL: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Process webhook event\n  processWebhookEvent(event: any): {\n    documentId: string\n    eventType: string\n    signerEmail?: string\n    status: string\n    timestamp: string\n  } | null {\n    try {\n      if (!event || !event.documentId || !event.eventType) {\n        return null\n      }\n\n      return {\n        documentId: event.documentId,\n        eventType: event.eventType,\n        signerEmail: event.signerEmail,\n        status: event.status || event.documentStatus,\n        timestamp: event.eventTime || new Date().toISOString(),\n      }\n    } catch (error) {\n      // Silent: Error processing BoldSign webhook event\n      return null\n    }\n  }\n\n  // Get account information\n  async getAccountInfo(): Promise<any> {\n    if (!this.isConfigured) {\n      return null\n    }\n\n    try {\n      const response = await axios.get(`${this.baseURL}/account`, {\n        headers: this.getHeaders(),\n        timeout: 15000,\n      })\n      return response.data\n    } catch (error: any) {\n      // Silent: BoldSign get account info error\n      throw new Error(`Failed to get account info: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Create template\n  async createTemplate(title: string, documentId: string, signers: Signer[]): Promise<{ templateId: string }> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const payload = {\n        title,\n        documentId,\n        signers,\n      }\n\n      const response = await axios.post(`${this.baseURL}/template/create`, payload, {\n        headers: this.getHeaders(),\n        timeout: 30000,\n      })\n\n      return {\n        templateId: response.data.templateId,\n      }\n    } catch (error: any) {\n      // Silent: BoldSign create template error\n      throw new Error(`Failed to create template: ${error.response?.data?.message || error.message}`)\n    }\n  }\n\n  // Send document using template\n  async sendUsingTemplate(\n    templateId: string,\n    title: string,\n    signers: Omit<Signer, \"formFields\">[],\n  ): Promise<SignatureRequest> {\n    if (!this.isConfigured) {\n      throw new Error(\"BoldSign service is not properly configured\")\n    }\n\n    try {\n      const payload = {\n        templateId,\n        title,\n        signers,\n      }\n\n      const response = await axios.post(`${this.baseURL}/template/send`, payload, {\n        headers: this.getHeaders(),\n        timeout: 30000,\n      })\n\n      return {\n        id: response.data.documentId,\n        title,\n        status: \"inProgress\",\n        createdDate: new Date().toISOString(),\n        signers: signers.map((signer) => ({\n          signerEmail: signer.emailAddress,\n          signerName: signer.name,\n          signerType: signer.signerType,\n          signerOrder: signer.signerOrder,\n          status: \"awaiting\",\n          deliveryMode: signer.deliveryMode,\n          language: signer.locale,\n        })),\n        documentDetails: [],\n      }\n    } catch (error: any) {\n      // Silent: BoldSign send using template error\n      throw new Error(`Failed to send using template: ${error.response?.data?.message || error.message}`)\n    }\n  }\n}\n\n// Enhanced error types\nexport class BoldSignError extends Error {\n  constructor(\n    message: string,\n    public statusCode?: number,\n    public errorCode?: string,\n    public details?: any,\n  ) {\n    super(message)\n    this.name = \"BoldSignError\"\n  }\n}\n\nexport class BoldSignConfigurationError extends BoldSignError {\n  constructor(message: string) {\n    super(message, 0, \"CONFIGURATION_ERROR\")\n    this.name = \"BoldSignConfigurationError\"\n  }\n}\n\nexport class BoldSignValidationError extends BoldSignError {\n  constructor(message: string, field?: string) {\n    super(message, 400, \"VALIDATION_ERROR\", { field })\n    this.name = \"BoldSignValidationError\"\n  }\n}\n\nexport const boldSignService = new BoldSignService()\nexport default boldSignService\n"],
      names: ["BoldSignConfigurationError", "BoldSignError", "BoldSignValidationError", "boldSignService", "BOLDSIGN_API_KEY", "process", "env", "NEXT_PUBLIC_BOLDSIGN_API_KEY", "BOLDSIGN_BASE_URL", "BOLDSIGN_WEBHOOK_URL", "NEXT_PUBLIC_BOLDSIGN_WEBHOOK_URL", "BoldSignService", "apiKey", "baseURL", "isConfigured", "getHeaders", "getMultipartHeaders", "isReady", "testConnection", "response", "axios", "get", "headers", "timeout", "status", "error", "uploadDocument", "file", "fileName", "Error", "formData", "FormData", "append", "post", "documentId", "data", "documentName", "documentSize", "documentPages", "message", "createSignatureRequest", "options", "payload", "title", "signers", "files", "documentInfo", "expiryDays", "reminderSettings", "enableAutoReminder", "reminderDays", "reminderCount", "brandId", "labels", "disableEmails", "disableSMS", "enablePrintAndSign", "enableReassign", "allowReassign", "hideDocumentId", "enableSigningOrder", "useTextTags", "sendLinkValidTill", "onBehalfOf", "id", "createdDate", "Date", "toISOString", "expiryDate", "now", "undefined", "map", "signer", "signerEmail", "emailAddress", "signerName", "name", "signerType", "signerOrder", "deliveryMode", "language", "locale", "documentDetails", "doc", "documentOrder", "getSignatureRequest", "completedDate", "auditTrail", "cancelSignatureRequest", "reason", "sendReminder", "downloadDocument", "format", "params", "responseType", "getAuditTrail", "listSignatureRequests", "page", "pageSize", "searchText", "requests", "result", "totalCount", "resendSignatureRequest", "getSigningUrl", "signingUrl", "processWebhookEvent", "event", "eventType", "documentStatus", "timestamp", "eventTime", "getAccountInfo", "createTemplate", "templateId", "sendUsingTemplate", "statusCode", "errorCode", "details", "field"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e4260bc07123ef18c5fffaf52bd864d6169f0153"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12ralo3lpu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12ralo3lpu();
cov_12ralo3lpu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_12ralo3lpu().f[0]++;
  cov_12ralo3lpu().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_12ralo3lpu().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_12ralo3lpu().s[3]++;
_export(exports, {
  get BoldSignConfigurationError() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[1]++;
    cov_12ralo3lpu().s[4]++;
    return BoldSignConfigurationError;
  },
  get BoldSignError() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[2]++;
    cov_12ralo3lpu().s[5]++;
    return BoldSignError;
  },
  get BoldSignValidationError() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[3]++;
    cov_12ralo3lpu().s[6]++;
    return BoldSignValidationError;
  },
  get boldSignService() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[4]++;
    cov_12ralo3lpu().s[7]++;
    return boldSignService;
  },
  get default() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[5]++;
    cov_12ralo3lpu().s[8]++;
    return _default;
  }
});
const _axios =
/* istanbul ignore next */
(/*#__PURE__*/cov_12ralo3lpu().s[9]++, _interop_require_default(require("axios")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_12ralo3lpu().f[6]++;
  cov_12ralo3lpu().s[10]++;
  return /* istanbul ignore next */(cov_12ralo3lpu().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_12ralo3lpu().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_12ralo3lpu().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_12ralo3lpu().b[0][1]++, {
    default: obj
  });
}
// Environment variables
const BOLDSIGN_API_KEY =
/* istanbul ignore next */
(cov_12ralo3lpu().s[11]++,
/* istanbul ignore next */
(cov_12ralo3lpu().b[2][0]++, process.env.NEXT_PUBLIC_BOLDSIGN_API_KEY) ||
/* istanbul ignore next */
(cov_12ralo3lpu().b[2][1]++, ""));
const BOLDSIGN_BASE_URL =
/* istanbul ignore next */
(cov_12ralo3lpu().s[12]++, "https://api.boldsign.com/v1");
const BOLDSIGN_WEBHOOK_URL =
/* istanbul ignore next */
(cov_12ralo3lpu().s[13]++,
/* istanbul ignore next */
(cov_12ralo3lpu().b[3][0]++, process.env.NEXT_PUBLIC_BOLDSIGN_WEBHOOK_URL) ||
/* istanbul ignore next */
(cov_12ralo3lpu().b[3][1]++, ""));
// Validate configuration
/* istanbul ignore next */
cov_12ralo3lpu().s[14]++;
if (!BOLDSIGN_API_KEY) {
  /* istanbul ignore next */
  cov_12ralo3lpu().b[4][0]++;
} // Silent: BoldSign API key not configured. E-signature functionality will be limited.
else
/* istanbul ignore next */
{
  cov_12ralo3lpu().b[4][1]++;
}
class BoldSignService {
  constructor() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[7]++;
    cov_12ralo3lpu().s[15]++;
    this.apiKey = BOLDSIGN_API_KEY;
    /* istanbul ignore next */
    cov_12ralo3lpu().s[16]++;
    this.baseURL = BOLDSIGN_BASE_URL;
    /* istanbul ignore next */
    cov_12ralo3lpu().s[17]++;
    this.isConfigured = !!this.apiKey;
    /* istanbul ignore next */
    cov_12ralo3lpu().s[18]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[5][0]++;
    } // Silent: BoldSign service not properly configured. Please check your API key.
    else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[5][1]++;
    }
  }
  getHeaders() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[8]++;
    cov_12ralo3lpu().s[19]++;
    return {
      "X-API-KEY": this.apiKey,
      "Content-Type": "application/json"
    };
  }
  getMultipartHeaders() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[9]++;
    cov_12ralo3lpu().s[20]++;
    return {
      "X-API-KEY": this.apiKey
    };
  }
  // Check if service is properly configured
  isReady() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[10]++;
    cov_12ralo3lpu().s[21]++;
    return this.isConfigured;
  }
  // Test API connection
  async testConnection() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[11]++;
    cov_12ralo3lpu().s[22]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[6][0]++;
      cov_12ralo3lpu().s[23]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[6][1]++;
    }
    cov_12ralo3lpu().s[24]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[25]++, await _axios.default.get(`${this.baseURL}/account`, {
        headers: this.getHeaders(),
        timeout: 10000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[26]++;
      return response.status === 200;
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[27]++;
      // Silent: BoldSign connection test failed
      return false;
    }
  }
  // Upload document
  async uploadDocument(file, fileName) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[12]++;
    cov_12ralo3lpu().s[28]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[7][0]++;
      cov_12ralo3lpu().s[29]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[7][1]++;
    }
    cov_12ralo3lpu().s[30]++;
    try {
      const formData =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[31]++, new FormData());
      /* istanbul ignore next */
      cov_12ralo3lpu().s[32]++;
      formData.append("file", file);
      /* istanbul ignore next */
      cov_12ralo3lpu().s[33]++;
      if (fileName) {
        /* istanbul ignore next */
        cov_12ralo3lpu().b[8][0]++;
        cov_12ralo3lpu().s[34]++;
        formData.append("fileName", fileName);
      } else
      /* istanbul ignore next */
      {
        cov_12ralo3lpu().b[8][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[35]++, await _axios.default.post(`${this.baseURL}/document/upload`, formData, {
        headers: this.getMultipartHeaders(),
        timeout: 60000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[36]++;
      return {
        documentId: response.data.documentId,
        documentName: response.data.documentName,
        documentSize: response.data.documentSize,
        documentPages: response.data.documentPages
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[37]++;
      // Silent: BoldSign document upload error
      throw new Error(`Failed to upload document: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[9][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[9][1]++, error.message)}`);
    }
  }
  // Create signature request
  async createSignatureRequest(options) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[13]++;
    cov_12ralo3lpu().s[38]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[10][0]++;
      cov_12ralo3lpu().s[39]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[10][1]++;
    }
    cov_12ralo3lpu().s[40]++;
    try {
      const payload =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[41]++, {
        title: options.title,
        message:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[11][0]++, options.message) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[11][1]++, ""),
        signers: options.signers,
        files: options.documentInfo,
        expiryDays:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[12][0]++, options.expiryDays) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[12][1]++, 30),
        reminderSettings:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[13][0]++, options.reminderSettings) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[13][1]++, {
          enableAutoReminder: true,
          reminderDays: 3,
          reminderCount: 3
        }),
        brandId: options.brandId,
        labels:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[14][0]++, options.labels) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[14][1]++, []),
        disableEmails:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[15][0]++, options.disableEmails) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[15][1]++, false),
        disableSMS:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[16][0]++, options.disableSMS) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[16][1]++, false),
        enablePrintAndSign:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[17][0]++, options.enablePrintAndSign) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[17][1]++, false),
        enableReassign:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[18][0]++, options.enableReassign) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[18][1]++, true),
        allowReassign:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[19][0]++, options.allowReassign) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[19][1]++, true),
        hideDocumentId:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[20][0]++, options.hideDocumentId) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[20][1]++, false),
        enableSigningOrder:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[21][0]++, options.enableSigningOrder) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[21][1]++, true),
        useTextTags:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[22][0]++, options.useTextTags) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[22][1]++, false),
        sendLinkValidTill: options.sendLinkValidTill,
        onBehalfOf: options.onBehalfOf
      });
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[42]++, await _axios.default.post(`${this.baseURL}/document/send`, payload, {
        headers: this.getHeaders(),
        timeout: 30000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[43]++;
      return {
        id: response.data.documentId,
        title: options.title,
        status: "inProgress",
        createdDate: new Date().toISOString(),
        expiryDate: options.expiryDays ?
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[23][0]++, new Date(Date.now() + options.expiryDays * 24 * 60 * 60 * 1000).toISOString()) :
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[23][1]++, undefined),
        signers: options.signers.map(signer => {
          /* istanbul ignore next */
          cov_12ralo3lpu().f[14]++;
          cov_12ralo3lpu().s[44]++;
          return {
            signerEmail: signer.emailAddress,
            signerName: signer.name,
            signerType: signer.signerType,
            signerOrder: signer.signerOrder,
            status: "awaiting",
            deliveryMode: signer.deliveryMode,
            language: signer.locale
          };
        }),
        documentDetails: options.documentInfo.map(doc => {
          /* istanbul ignore next */
          cov_12ralo3lpu().f[15]++;
          cov_12ralo3lpu().s[45]++;
          return {
            documentId: doc.documentId,
            documentName: doc.documentName,
            documentOrder: doc.documentOrder,
            documentSize: 0,
            documentPages: 0
          };
        })
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[46]++;
      // Silent: BoldSign create signature request error
      throw new Error(`Failed to create signature request: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[24][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[24][1]++, error.message)}`);
    }
  }
  // Get signature request details
  async getSignatureRequest(documentId) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[16]++;
    cov_12ralo3lpu().s[47]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[25][0]++;
      cov_12ralo3lpu().s[48]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[25][1]++;
    }
    cov_12ralo3lpu().s[49]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[50]++, await _axios.default.get(`${this.baseURL}/document/${documentId}`, {
        headers: this.getHeaders(),
        timeout: 15000
      }));
      const data =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[51]++, response.data);
      /* istanbul ignore next */
      cov_12ralo3lpu().s[52]++;
      return {
        id: data.documentId,
        title: data.title,
        status: data.status,
        createdDate: data.createdDate,
        expiryDate: data.expiryDate,
        completedDate: data.completedDate,
        signers:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[26][0]++, data.signers) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[26][1]++, []),
        documentDetails:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[27][0]++, data.documentDetails) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[27][1]++, []),
        auditTrail:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[28][0]++, data.auditTrail) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[28][1]++, [])
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[53]++;
      // Silent: BoldSign get signature request error
      throw new Error(`Failed to get signature request: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[29][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[29][1]++, error.message)}`);
    }
  }
  // Cancel signature request
  async cancelSignatureRequest(documentId, reason) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[17]++;
    cov_12ralo3lpu().s[54]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[30][0]++;
      cov_12ralo3lpu().s[55]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[30][1]++;
    }
    cov_12ralo3lpu().s[56]++;
    try {
      const payload =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[57]++, {
        reason:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[31][0]++, reason) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[31][1]++, "Cancelled by sender")
      });
      /* istanbul ignore next */
      cov_12ralo3lpu().s[58]++;
      await _axios.default.post(`${this.baseURL}/document/${documentId}/cancel`, payload, {
        headers: this.getHeaders(),
        timeout: 15000
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[59]++;
      // Silent: BoldSign cancel signature request error
      throw new Error(`Failed to cancel signature request: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[32][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[32][1]++, error.message)}`);
    }
  }
  // Send reminder
  async sendReminder(documentId, signerEmail, message) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[18]++;
    cov_12ralo3lpu().s[60]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[33][0]++;
      cov_12ralo3lpu().s[61]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[33][1]++;
    }
    cov_12ralo3lpu().s[62]++;
    try {
      const payload =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[63]++, {
        signerEmail,
        message:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[34][0]++, message) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[34][1]++, "Please sign the document at your earliest convenience.")
      });
      /* istanbul ignore next */
      cov_12ralo3lpu().s[64]++;
      await _axios.default.post(`${this.baseURL}/document/${documentId}/reminder`, payload, {
        headers: this.getHeaders(),
        timeout: 15000
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[65]++;
      // Silent: BoldSign send reminder error
      throw new Error(`Failed to send reminder: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[35][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[35][1]++, error.message)}`);
    }
  }
  // Download signed document
  async downloadDocument(documentId, format =
  /* istanbul ignore next */
  (cov_12ralo3lpu().b[36][0]++, "pdf")) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[19]++;
    cov_12ralo3lpu().s[66]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[37][0]++;
      cov_12ralo3lpu().s[67]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[37][1]++;
    }
    cov_12ralo3lpu().s[68]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[69]++, await _axios.default.get(`${this.baseURL}/document/${documentId}/download`, {
        headers: this.getHeaders(),
        params: {
          format
        },
        responseType: "blob",
        timeout: 60000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[70]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[71]++;
      // Silent: BoldSign download document error
      throw new Error(`Failed to download document: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[38][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[38][1]++, error.message)}`);
    }
  }
  // Get audit trail
  async getAuditTrail(documentId) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[20]++;
    cov_12ralo3lpu().s[72]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[39][0]++;
      cov_12ralo3lpu().s[73]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[39][1]++;
    }
    cov_12ralo3lpu().s[74]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[75]++, await _axios.default.get(`${this.baseURL}/document/${documentId}/auditTrail`, {
        headers: this.getHeaders(),
        timeout: 15000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[76]++;
      return /* istanbul ignore next */(cov_12ralo3lpu().b[40][0]++, response.data.auditTrail) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[40][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[77]++;
      // Silent: BoldSign get audit trail error
      throw new Error(`Failed to get audit trail: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[41][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[41][1]++, error.message)}`);
    }
  }
  // List signature requests
  async listSignatureRequests(page =
  /* istanbul ignore next */
  (cov_12ralo3lpu().b[42][0]++, 1), pageSize =
  /* istanbul ignore next */
  (cov_12ralo3lpu().b[43][0]++, 25), status, searchText) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[21]++;
    cov_12ralo3lpu().s[78]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[44][0]++;
      cov_12ralo3lpu().s[79]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[44][1]++;
    }
    cov_12ralo3lpu().s[80]++;
    try {
      const params =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[81]++, {
        page,
        pageSize
      });
      /* istanbul ignore next */
      cov_12ralo3lpu().s[82]++;
      if (status) {
        /* istanbul ignore next */
        cov_12ralo3lpu().b[45][0]++;
        cov_12ralo3lpu().s[83]++;
        params.status = status;
      } else
      /* istanbul ignore next */
      {
        cov_12ralo3lpu().b[45][1]++;
      }
      cov_12ralo3lpu().s[84]++;
      if (searchText) {
        /* istanbul ignore next */
        cov_12ralo3lpu().b[46][0]++;
        cov_12ralo3lpu().s[85]++;
        params.searchText = searchText;
      } else
      /* istanbul ignore next */
      {
        cov_12ralo3lpu().b[46][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[86]++, await _axios.default.get(`${this.baseURL}/document/list`, {
        headers: this.getHeaders(),
        params,
        timeout: 15000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[87]++;
      return {
        requests:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[47][0]++, response.data.result) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[47][1]++, []),
        totalCount:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[48][0]++, response.data.totalCount) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[48][1]++, 0)
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[88]++;
      // Silent: BoldSign list signature requests error
      throw new Error(`Failed to list signature requests: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[49][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[49][1]++, error.message)}`);
    }
  }
  // Resend signature request
  async resendSignatureRequest(documentId, signerEmail) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[22]++;
    cov_12ralo3lpu().s[89]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[50][0]++;
      cov_12ralo3lpu().s[90]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[50][1]++;
    }
    cov_12ralo3lpu().s[91]++;
    try {
      const payload =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[92]++, {
        signerEmail
      });
      /* istanbul ignore next */
      cov_12ralo3lpu().s[93]++;
      await _axios.default.post(`${this.baseURL}/document/${documentId}/resend`, payload, {
        headers: this.getHeaders(),
        timeout: 15000
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[94]++;
      // Silent: BoldSign resend signature request error
      throw new Error(`Failed to resend signature request: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[51][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[51][1]++, error.message)}`);
    }
  }
  // Get signing URL (for embedded signing)
  async getSigningUrl(documentId, signerEmail) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[23]++;
    cov_12ralo3lpu().s[95]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[52][0]++;
      cov_12ralo3lpu().s[96]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[52][1]++;
    }
    cov_12ralo3lpu().s[97]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[98]++, await _axios.default.get(`${this.baseURL}/document/${documentId}/signingUrl`, {
        headers: this.getHeaders(),
        params: {
          signerEmail
        },
        timeout: 15000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[99]++;
      return response.data.signingUrl;
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[100]++;
      // Silent: BoldSign get signing URL error
      throw new Error(`Failed to get signing URL: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[53][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[53][1]++, error.message)}`);
    }
  }
  // Process webhook event
  processWebhookEvent(event) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[24]++;
    cov_12ralo3lpu().s[101]++;
    try {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[102]++;
      if (
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[55][0]++, !event) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[55][1]++, !event.documentId) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[55][2]++, !event.eventType)) {
        /* istanbul ignore next */
        cov_12ralo3lpu().b[54][0]++;
        cov_12ralo3lpu().s[103]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_12ralo3lpu().b[54][1]++;
      }
      cov_12ralo3lpu().s[104]++;
      return {
        documentId: event.documentId,
        eventType: event.eventType,
        signerEmail: event.signerEmail,
        status:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[56][0]++, event.status) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[56][1]++, event.documentStatus),
        timestamp:
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[57][0]++, event.eventTime) ||
        /* istanbul ignore next */
        (cov_12ralo3lpu().b[57][1]++, new Date().toISOString())
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[105]++;
      // Silent: Error processing BoldSign webhook event
      return null;
    }
  }
  // Get account information
  async getAccountInfo() {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[25]++;
    cov_12ralo3lpu().s[106]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[58][0]++;
      cov_12ralo3lpu().s[107]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[58][1]++;
    }
    cov_12ralo3lpu().s[108]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[109]++, await _axios.default.get(`${this.baseURL}/account`, {
        headers: this.getHeaders(),
        timeout: 15000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[110]++;
      return response.data;
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[111]++;
      // Silent: BoldSign get account info error
      throw new Error(`Failed to get account info: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[59][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[59][1]++, error.message)}`);
    }
  }
  // Create template
  async createTemplate(title, documentId, signers) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[26]++;
    cov_12ralo3lpu().s[112]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[60][0]++;
      cov_12ralo3lpu().s[113]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[60][1]++;
    }
    cov_12ralo3lpu().s[114]++;
    try {
      const payload =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[115]++, {
        title,
        documentId,
        signers
      });
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[116]++, await _axios.default.post(`${this.baseURL}/template/create`, payload, {
        headers: this.getHeaders(),
        timeout: 30000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[117]++;
      return {
        templateId: response.data.templateId
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[118]++;
      // Silent: BoldSign create template error
      throw new Error(`Failed to create template: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[61][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[61][1]++, error.message)}`);
    }
  }
  // Send document using template
  async sendUsingTemplate(templateId, title, signers) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[27]++;
    cov_12ralo3lpu().s[119]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_12ralo3lpu().b[62][0]++;
      cov_12ralo3lpu().s[120]++;
      throw new Error("BoldSign service is not properly configured");
    } else
    /* istanbul ignore next */
    {
      cov_12ralo3lpu().b[62][1]++;
    }
    cov_12ralo3lpu().s[121]++;
    try {
      const payload =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[122]++, {
        templateId,
        title,
        signers
      });
      const response =
      /* istanbul ignore next */
      (cov_12ralo3lpu().s[123]++, await _axios.default.post(`${this.baseURL}/template/send`, payload, {
        headers: this.getHeaders(),
        timeout: 30000
      }));
      /* istanbul ignore next */
      cov_12ralo3lpu().s[124]++;
      return {
        id: response.data.documentId,
        title,
        status: "inProgress",
        createdDate: new Date().toISOString(),
        signers: signers.map(signer => {
          /* istanbul ignore next */
          cov_12ralo3lpu().f[28]++;
          cov_12ralo3lpu().s[125]++;
          return {
            signerEmail: signer.emailAddress,
            signerName: signer.name,
            signerType: signer.signerType,
            signerOrder: signer.signerOrder,
            status: "awaiting",
            deliveryMode: signer.deliveryMode,
            language: signer.locale
          };
        }),
        documentDetails: []
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_12ralo3lpu().s[126]++;
      // Silent: BoldSign send using template error
      throw new Error(`Failed to send using template: ${
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[63][0]++, error.response?.data?.message) ||
      /* istanbul ignore next */
      (cov_12ralo3lpu().b[63][1]++, error.message)}`);
    }
  }
}
class BoldSignError extends Error {
  constructor(message, statusCode, errorCode, details) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[29]++;
    cov_12ralo3lpu().s[127]++;
    super(message), this.statusCode = statusCode, this.errorCode = errorCode, this.details = details;
    /* istanbul ignore next */
    cov_12ralo3lpu().s[128]++;
    this.name = "BoldSignError";
  }
}
class BoldSignConfigurationError extends BoldSignError {
  constructor(message) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[30]++;
    cov_12ralo3lpu().s[129]++;
    super(message, 0, "CONFIGURATION_ERROR");
    /* istanbul ignore next */
    cov_12ralo3lpu().s[130]++;
    this.name = "BoldSignConfigurationError";
  }
}
class BoldSignValidationError extends BoldSignError {
  constructor(message, field) {
    /* istanbul ignore next */
    cov_12ralo3lpu().f[31]++;
    cov_12ralo3lpu().s[131]++;
    super(message, 400, "VALIDATION_ERROR", {
      field
    });
    /* istanbul ignore next */
    cov_12ralo3lpu().s[132]++;
    this.name = "BoldSignValidationError";
  }
}
const boldSignService =
/* istanbul ignore next */
(cov_12ralo3lpu().s[133]++, new BoldSignService());
const _default =
/* istanbul ignore next */
(cov_12ralo3lpu().s[134]++, boldSignService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCb2xkU2lnbkNvbmZpZ3VyYXRpb25FcnJvciIsImNvdl8xMnJhbG8zbHB1IiwiZiIsInMiLCJCb2xkU2lnbkVycm9yIiwiQm9sZFNpZ25WYWxpZGF0aW9uRXJyb3IiLCJib2xkU2lnblNlcnZpY2UiLCJkZWZhdWx0IiwiX2RlZmF1bHQiLCJCT0xEU0lHTl9BUElfS0VZIiwiYiIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19CT0xEU0lHTl9BUElfS0VZIiwiQk9MRFNJR05fQkFTRV9VUkwiLCJCT0xEU0lHTl9XRUJIT09LX1VSTCIsIk5FWFRfUFVCTElDX0JPTERTSUdOX1dFQkhPT0tfVVJMIiwiQm9sZFNpZ25TZXJ2aWNlIiwiY29uc3RydWN0b3IiLCJhcGlLZXkiLCJiYXNlVVJMIiwiaXNDb25maWd1cmVkIiwiZ2V0SGVhZGVycyIsImdldE11bHRpcGFydEhlYWRlcnMiLCJpc1JlYWR5IiwidGVzdENvbm5lY3Rpb24iLCJyZXNwb25zZSIsIl9heGlvcyIsImdldCIsImhlYWRlcnMiLCJ0aW1lb3V0Iiwic3RhdHVzIiwiZXJyb3IiLCJ1cGxvYWREb2N1bWVudCIsImZpbGUiLCJmaWxlTmFtZSIsIkVycm9yIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsInBvc3QiLCJkb2N1bWVudElkIiwiZGF0YSIsImRvY3VtZW50TmFtZSIsImRvY3VtZW50U2l6ZSIsImRvY3VtZW50UGFnZXMiLCJtZXNzYWdlIiwiY3JlYXRlU2lnbmF0dXJlUmVxdWVzdCIsIm9wdGlvbnMiLCJwYXlsb2FkIiwidGl0bGUiLCJzaWduZXJzIiwiZmlsZXMiLCJkb2N1bWVudEluZm8iLCJleHBpcnlEYXlzIiwicmVtaW5kZXJTZXR0aW5ncyIsImVuYWJsZUF1dG9SZW1pbmRlciIsInJlbWluZGVyRGF5cyIsInJlbWluZGVyQ291bnQiLCJicmFuZElkIiwibGFiZWxzIiwiZGlzYWJsZUVtYWlscyIsImRpc2FibGVTTVMiLCJlbmFibGVQcmludEFuZFNpZ24iLCJlbmFibGVSZWFzc2lnbiIsImFsbG93UmVhc3NpZ24iLCJoaWRlRG9jdW1lbnRJZCIsImVuYWJsZVNpZ25pbmdPcmRlciIsInVzZVRleHRUYWdzIiwic2VuZExpbmtWYWxpZFRpbGwiLCJvbkJlaGFsZk9mIiwiaWQiLCJjcmVhdGVkRGF0ZSIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImV4cGlyeURhdGUiLCJub3ciLCJ1bmRlZmluZWQiLCJtYXAiLCJzaWduZXIiLCJzaWduZXJFbWFpbCIsImVtYWlsQWRkcmVzcyIsInNpZ25lck5hbWUiLCJuYW1lIiwic2lnbmVyVHlwZSIsInNpZ25lck9yZGVyIiwiZGVsaXZlcnlNb2RlIiwibGFuZ3VhZ2UiLCJsb2NhbGUiLCJkb2N1bWVudERldGFpbHMiLCJkb2MiLCJkb2N1bWVudE9yZGVyIiwiZ2V0U2lnbmF0dXJlUmVxdWVzdCIsImNvbXBsZXRlZERhdGUiLCJhdWRpdFRyYWlsIiwiY2FuY2VsU2lnbmF0dXJlUmVxdWVzdCIsInJlYXNvbiIsInNlbmRSZW1pbmRlciIsImRvd25sb2FkRG9jdW1lbnQiLCJmb3JtYXQiLCJwYXJhbXMiLCJyZXNwb25zZVR5cGUiLCJnZXRBdWRpdFRyYWlsIiwibGlzdFNpZ25hdHVyZVJlcXVlc3RzIiwicGFnZSIsInBhZ2VTaXplIiwic2VhcmNoVGV4dCIsInJlcXVlc3RzIiwicmVzdWx0IiwidG90YWxDb3VudCIsInJlc2VuZFNpZ25hdHVyZVJlcXVlc3QiLCJnZXRTaWduaW5nVXJsIiwic2lnbmluZ1VybCIsInByb2Nlc3NXZWJob29rRXZlbnQiLCJldmVudCIsImV2ZW50VHlwZSIsImRvY3VtZW50U3RhdHVzIiwidGltZXN0YW1wIiwiZXZlbnRUaW1lIiwiZ2V0QWNjb3VudEluZm8iLCJjcmVhdGVUZW1wbGF0ZSIsInRlbXBsYXRlSWQiLCJzZW5kVXNpbmdUZW1wbGF0ZSIsInN0YXR1c0NvZGUiLCJlcnJvckNvZGUiLCJkZXRhaWxzIiwiZmllbGQiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGNoYXNlXFxEb3dubG9hZHNcXGNybSAoMzIpXFxzcmNcXHNlcnZpY2VzXFxib2xkU2lnblNlcnZpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGF4aW9zIGZyb20gXCJheGlvc1wiXG5cbi8vIEVudmlyb25tZW50IHZhcmlhYmxlc1xuY29uc3QgQk9MRFNJR05fQVBJX0tFWSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0JPTERTSUdOX0FQSV9LRVkgfHwgXCJcIlxuY29uc3QgQk9MRFNJR05fQkFTRV9VUkwgPSBcImh0dHBzOi8vYXBpLmJvbGRzaWduLmNvbS92MVwiXG5jb25zdCBCT0xEU0lHTl9XRUJIT09LX1VSTCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0JPTERTSUdOX1dFQkhPT0tfVVJMIHx8IFwiXCJcblxuLy8gVmFsaWRhdGUgY29uZmlndXJhdGlvblxuaWYgKCFCT0xEU0lHTl9BUElfS0VZKSB7XG4gIC8vIFNpbGVudDogQm9sZFNpZ24gQVBJIGtleSBub3QgY29uZmlndXJlZC4gRS1zaWduYXR1cmUgZnVuY3Rpb25hbGl0eSB3aWxsIGJlIGxpbWl0ZWQuXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2lnbmVyIHtcbiAgbmFtZTogc3RyaW5nXG4gIGVtYWlsQWRkcmVzczogc3RyaW5nXG4gIHNpZ25lclR5cGU6IFwic2lnbmVyXCIgfCBcImFwcHJvdmVyXCIgfCBcImNjXCIgfCBcInZpZXdlclwiXG4gIHNpZ25lck9yZGVyOiBudW1iZXJcbiAgZW5hYmxlRW1haWxPVFA/OiBib29sZWFuXG4gIGVuYWJsZVNNU09UUD86IGJvb2xlYW5cbiAgcGhvbmVOdW1iZXI/OiBzdHJpbmdcbiAgZGVsaXZlcnlNb2RlOiBcImVtYWlsXCIgfCBcInNtc1wiIHwgXCJib3RoXCJcbiAgbG9jYWxlPzogc3RyaW5nXG4gIHJlZGlyZWN0VXJsPzogc3RyaW5nXG4gIGZvcm1GaWVsZHM/OiBGb3JtRmllbGRbXVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1GaWVsZCB7XG4gIGlkOiBzdHJpbmdcbiAgdHlwZTogXCJzaWduYXR1cmVcIiB8IFwiaW5pdGlhbFwiIHwgXCJkYXRlXCIgfCBcInRleHRib3hcIiB8IFwiY2hlY2tib3hcIiB8IFwicmFkaW9idXR0b25cIiB8IFwiZHJvcGRvd25cIiB8IFwiaW1hZ2VcIlxuICBwYWdlTnVtYmVyOiBudW1iZXJcbiAgYm91bmRzOiB7XG4gICAgeDogbnVtYmVyXG4gICAgeTogbnVtYmVyXG4gICAgd2lkdGg6IG51bWJlclxuICAgIGhlaWdodDogbnVtYmVyXG4gIH1cbiAgaXNSZXF1aXJlZDogYm9vbGVhblxuICBwbGFjZWhvbGRlcj86IHN0cmluZ1xuICB2YWx1ZT86IHN0cmluZ1xuICBvcHRpb25zPzogc3RyaW5nW11cbiAgZm9udFNpemU/OiBudW1iZXJcbiAgZm9udENvbG9yPzogc3RyaW5nXG4gIGJhY2tncm91bmRDb2xvcj86IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERvY3VtZW50SW5mbyB7XG4gIGRvY3VtZW50SWQ6IHN0cmluZ1xuICBkb2N1bWVudE5hbWU6IHN0cmluZ1xuICBkb2N1bWVudE9yZGVyOiBudW1iZXJcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTaWduYXR1cmVSZXF1ZXN0T3B0aW9ucyB7XG4gIHRpdGxlOiBzdHJpbmdcbiAgbWVzc2FnZT86IHN0cmluZ1xuICBzaWduZXJzOiBTaWduZXJbXVxuICBkb2N1bWVudEluZm86IERvY3VtZW50SW5mb1tdXG4gIGV4cGlyeURheXM/OiBudW1iZXJcbiAgcmVtaW5kZXJTZXR0aW5ncz86IHtcbiAgICBlbmFibGVBdXRvUmVtaW5kZXI6IGJvb2xlYW5cbiAgICByZW1pbmRlckRheXM6IG51bWJlclxuICAgIHJlbWluZGVyQ291bnQ6IG51bWJlclxuICB9XG4gIGJyYW5kSWQ/OiBzdHJpbmdcbiAgbGFiZWxzPzogc3RyaW5nW11cbiAgZGlzYWJsZUVtYWlscz86IGJvb2xlYW5cbiAgZGlzYWJsZVNNUz86IGJvb2xlYW5cbiAgZW5hYmxlUHJpbnRBbmRTaWduPzogYm9vbGVhblxuICBlbmFibGVSZWFzc2lnbj86IGJvb2xlYW5cbiAgYWxsb3dSZWFzc2lnbj86IGJvb2xlYW5cbiAgaGlkZURvY3VtZW50SWQ/OiBib29sZWFuXG4gIGVuYWJsZVNpZ25pbmdPcmRlcj86IGJvb2xlYW5cbiAgdXNlVGV4dFRhZ3M/OiBib29sZWFuXG4gIHNlbmRMaW5rVmFsaWRUaWxsPzogc3RyaW5nXG4gIG9uQmVoYWxmT2Y/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTaWduYXR1cmVSZXF1ZXN0IHtcbiAgaWQ6IHN0cmluZ1xuICB0aXRsZTogc3RyaW5nXG4gIHN0YXR1czogXCJkcmFmdFwiIHwgXCJpblByb2dyZXNzXCIgfCBcImNvbXBsZXRlZFwiIHwgXCJkZWNsaW5lZFwiIHwgXCJleHBpcmVkXCIgfCBcImNhbmNlbGxlZFwiIHwgXCJyZXZva2VkXCJcbiAgY3JlYXRlZERhdGU6IHN0cmluZ1xuICBleHBpcnlEYXRlPzogc3RyaW5nXG4gIGNvbXBsZXRlZERhdGU/OiBzdHJpbmdcbiAgc2lnbmVyczogU2lnbmVySW5mb1tdXG4gIGRvY3VtZW50RGV0YWlsczogRG9jdW1lbnREZXRhaWxbXVxuICBhdWRpdFRyYWlsPzogQXVkaXRFdmVudFtdXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2lnbmVySW5mbyB7XG4gIHNpZ25lckVtYWlsOiBzdHJpbmdcbiAgc2lnbmVyTmFtZTogc3RyaW5nXG4gIHNpZ25lclR5cGU6IHN0cmluZ1xuICBzaWduZXJPcmRlcjogbnVtYmVyXG4gIHN0YXR1czogXCJhd2FpdGluZ1wiIHwgXCJjb21wbGV0ZWRcIiB8IFwiZGVjbGluZWRcIiB8IFwiZXhwaXJlZFwiIHwgXCJyZWFzc2lnbmVkXCJcbiAgc2lnbmVkRGF0ZT86IHN0cmluZ1xuICBkZWNsaW5lUmVhc29uPzogc3RyaW5nXG4gIGRlbGl2ZXJ5TW9kZTogc3RyaW5nXG4gIGxhbmd1YWdlPzogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRG9jdW1lbnREZXRhaWwge1xuICBkb2N1bWVudElkOiBzdHJpbmdcbiAgZG9jdW1lbnROYW1lOiBzdHJpbmdcbiAgZG9jdW1lbnRPcmRlcjogbnVtYmVyXG4gIGRvY3VtZW50U2l6ZTogbnVtYmVyXG4gIGRvY3VtZW50UGFnZXM6IG51bWJlclxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEF1ZGl0RXZlbnQge1xuICBldmVudFR5cGU6IHN0cmluZ1xuICBldmVudERhdGU6IHN0cmluZ1xuICBldmVudEJ5OiBzdHJpbmdcbiAgZXZlbnREZXNjcmlwdGlvbjogc3RyaW5nXG4gIGlwQWRkcmVzcz86IHN0cmluZ1xuICB1c2VyQWdlbnQ/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXZWJob29rRXZlbnQge1xuICBldmVudFR5cGU6IHN0cmluZ1xuICBkb2N1bWVudElkOiBzdHJpbmdcbiAgc2lnbmVyRW1haWw/OiBzdHJpbmdcbiAgc2lnbmVyTmFtZT86IHN0cmluZ1xuICBldmVudFRpbWU6IHN0cmluZ1xuICBzdGF0dXM/OiBzdHJpbmdcbiAgZGVjbGluZVJlYXNvbj86IHN0cmluZ1xuICByZWFzc2lnblJlYXNvbj86IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFVwbG9hZGVkRG9jdW1lbnQge1xuICBkb2N1bWVudElkOiBzdHJpbmdcbiAgZG9jdW1lbnROYW1lOiBzdHJpbmdcbiAgZG9jdW1lbnRTaXplOiBudW1iZXJcbiAgZG9jdW1lbnRQYWdlczogbnVtYmVyXG59XG5cbmNsYXNzIEJvbGRTaWduU2VydmljZSB7XG4gIHByaXZhdGUgYXBpS2V5OiBzdHJpbmdcbiAgcHJpdmF0ZSBiYXNlVVJMOiBzdHJpbmdcbiAgcHJpdmF0ZSBpc0NvbmZpZ3VyZWQ6IGJvb2xlYW5cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmFwaUtleSA9IEJPTERTSUdOX0FQSV9LRVlcbiAgICB0aGlzLmJhc2VVUkwgPSBCT0xEU0lHTl9CQVNFX1VSTFxuICAgIHRoaXMuaXNDb25maWd1cmVkID0gISF0aGlzLmFwaUtleVxuXG4gICAgaWYgKCF0aGlzLmlzQ29uZmlndXJlZCkge1xuICAgICAgLy8gU2lsZW50OiBCb2xkU2lnbiBzZXJ2aWNlIG5vdCBwcm9wZXJseSBjb25maWd1cmVkLiBQbGVhc2UgY2hlY2sgeW91ciBBUEkga2V5LlxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgZ2V0SGVhZGVycygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgXCJYLUFQSS1LRVlcIjogdGhpcy5hcGlLZXksXG4gICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldE11bHRpcGFydEhlYWRlcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFwiWC1BUEktS0VZXCI6IHRoaXMuYXBpS2V5LFxuICAgIH1cbiAgfVxuXG4gIC8vIENoZWNrIGlmIHNlcnZpY2UgaXMgcHJvcGVybHkgY29uZmlndXJlZFxuICBwdWJsaWMgaXNSZWFkeSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5pc0NvbmZpZ3VyZWRcbiAgfVxuXG4gIC8vIFRlc3QgQVBJIGNvbm5lY3Rpb25cbiAgYXN5bmMgdGVzdENvbm5lY3Rpb24oKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgaWYgKCF0aGlzLmlzQ29uZmlndXJlZCkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MuZ2V0KGAke3RoaXMuYmFzZVVSTH0vYWNjb3VudGAsIHtcbiAgICAgICAgaGVhZGVyczogdGhpcy5nZXRIZWFkZXJzKCksXG4gICAgICAgIHRpbWVvdXQ6IDEwMDAwLFxuICAgICAgfSlcbiAgICAgIHJldHVybiByZXNwb25zZS5zdGF0dXMgPT09IDIwMFxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBTaWxlbnQ6IEJvbGRTaWduIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWRcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfVxuXG4gIC8vIFVwbG9hZCBkb2N1bWVudFxuICBhc3luYyB1cGxvYWREb2N1bWVudChmaWxlOiBGaWxlLCBmaWxlTmFtZT86IHN0cmluZyk6IFByb21pc2U8VXBsb2FkZWREb2N1bWVudD4ge1xuICAgIGlmICghdGhpcy5pc0NvbmZpZ3VyZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkJvbGRTaWduIHNlcnZpY2UgaXMgbm90IHByb3Blcmx5IGNvbmZpZ3VyZWRcIilcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKVxuICAgICAgZm9ybURhdGEuYXBwZW5kKFwiZmlsZVwiLCBmaWxlKVxuICAgICAgaWYgKGZpbGVOYW1lKSB7XG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZChcImZpbGVOYW1lXCIsIGZpbGVOYW1lKVxuICAgICAgfVxuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoYCR7dGhpcy5iYXNlVVJMfS9kb2N1bWVudC91cGxvYWRgLCBmb3JtRGF0YSwge1xuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldE11bHRpcGFydEhlYWRlcnMoKSxcbiAgICAgICAgdGltZW91dDogNjAwMDAsIC8vIDYwIHNlY29uZHMgZm9yIGZpbGUgdXBsb2FkXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkb2N1bWVudElkOiByZXNwb25zZS5kYXRhLmRvY3VtZW50SWQsXG4gICAgICAgIGRvY3VtZW50TmFtZTogcmVzcG9uc2UuZGF0YS5kb2N1bWVudE5hbWUsXG4gICAgICAgIGRvY3VtZW50U2l6ZTogcmVzcG9uc2UuZGF0YS5kb2N1bWVudFNpemUsXG4gICAgICAgIGRvY3VtZW50UGFnZXM6IHJlc3BvbnNlLmRhdGEuZG9jdW1lbnRQYWdlcyxcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAvLyBTaWxlbnQ6IEJvbGRTaWduIGRvY3VtZW50IHVwbG9hZCBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gdXBsb2FkIGRvY3VtZW50OiAke2Vycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IGVycm9yLm1lc3NhZ2V9YClcbiAgICB9XG4gIH1cblxuICAvLyBDcmVhdGUgc2lnbmF0dXJlIHJlcXVlc3RcbiAgYXN5bmMgY3JlYXRlU2lnbmF0dXJlUmVxdWVzdChvcHRpb25zOiBTaWduYXR1cmVSZXF1ZXN0T3B0aW9ucyk6IFByb21pc2U8U2lnbmF0dXJlUmVxdWVzdD4ge1xuICAgIGlmICghdGhpcy5pc0NvbmZpZ3VyZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkJvbGRTaWduIHNlcnZpY2UgaXMgbm90IHByb3Blcmx5IGNvbmZpZ3VyZWRcIilcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgICAgdGl0bGU6IG9wdGlvbnMudGl0bGUsXG4gICAgICAgIG1lc3NhZ2U6IG9wdGlvbnMubWVzc2FnZSB8fCBcIlwiLFxuICAgICAgICBzaWduZXJzOiBvcHRpb25zLnNpZ25lcnMsXG4gICAgICAgIGZpbGVzOiBvcHRpb25zLmRvY3VtZW50SW5mbyxcbiAgICAgICAgZXhwaXJ5RGF5czogb3B0aW9ucy5leHBpcnlEYXlzIHx8IDMwLFxuICAgICAgICByZW1pbmRlclNldHRpbmdzOiBvcHRpb25zLnJlbWluZGVyU2V0dGluZ3MgfHwge1xuICAgICAgICAgIGVuYWJsZUF1dG9SZW1pbmRlcjogdHJ1ZSxcbiAgICAgICAgICByZW1pbmRlckRheXM6IDMsXG4gICAgICAgICAgcmVtaW5kZXJDb3VudDogMyxcbiAgICAgICAgfSxcbiAgICAgICAgYnJhbmRJZDogb3B0aW9ucy5icmFuZElkLFxuICAgICAgICBsYWJlbHM6IG9wdGlvbnMubGFiZWxzIHx8IFtdLFxuICAgICAgICBkaXNhYmxlRW1haWxzOiBvcHRpb25zLmRpc2FibGVFbWFpbHMgfHwgZmFsc2UsXG4gICAgICAgIGRpc2FibGVTTVM6IG9wdGlvbnMuZGlzYWJsZVNNUyB8fCBmYWxzZSxcbiAgICAgICAgZW5hYmxlUHJpbnRBbmRTaWduOiBvcHRpb25zLmVuYWJsZVByaW50QW5kU2lnbiB8fCBmYWxzZSxcbiAgICAgICAgZW5hYmxlUmVhc3NpZ246IG9wdGlvbnMuZW5hYmxlUmVhc3NpZ24gfHwgdHJ1ZSxcbiAgICAgICAgYWxsb3dSZWFzc2lnbjogb3B0aW9ucy5hbGxvd1JlYXNzaWduIHx8IHRydWUsXG4gICAgICAgIGhpZGVEb2N1bWVudElkOiBvcHRpb25zLmhpZGVEb2N1bWVudElkIHx8IGZhbHNlLFxuICAgICAgICBlbmFibGVTaWduaW5nT3JkZXI6IG9wdGlvbnMuZW5hYmxlU2lnbmluZ09yZGVyIHx8IHRydWUsXG4gICAgICAgIHVzZVRleHRUYWdzOiBvcHRpb25zLnVzZVRleHRUYWdzIHx8IGZhbHNlLFxuICAgICAgICBzZW5kTGlua1ZhbGlkVGlsbDogb3B0aW9ucy5zZW5kTGlua1ZhbGlkVGlsbCxcbiAgICAgICAgb25CZWhhbGZPZjogb3B0aW9ucy5vbkJlaGFsZk9mLFxuICAgICAgfVxuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QoYCR7dGhpcy5iYXNlVVJMfS9kb2N1bWVudC9zZW5kYCwgcGF5bG9hZCwge1xuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlcnMoKSxcbiAgICAgICAgdGltZW91dDogMzAwMDAsXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZDogcmVzcG9uc2UuZGF0YS5kb2N1bWVudElkLFxuICAgICAgICB0aXRsZTogb3B0aW9ucy50aXRsZSxcbiAgICAgICAgc3RhdHVzOiBcImluUHJvZ3Jlc3NcIixcbiAgICAgICAgY3JlYXRlZERhdGU6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgICAgZXhwaXJ5RGF0ZTogb3B0aW9ucy5leHBpcnlEYXlzXG4gICAgICAgICAgPyBuZXcgRGF0ZShEYXRlLm5vdygpICsgb3B0aW9ucy5leHBpcnlEYXlzICogMjQgKiA2MCAqIDYwICogMTAwMCkudG9JU09TdHJpbmcoKVxuICAgICAgICAgIDogdW5kZWZpbmVkLFxuICAgICAgICBzaWduZXJzOiBvcHRpb25zLnNpZ25lcnMubWFwKChzaWduZXIpID0+ICh7XG4gICAgICAgICAgc2lnbmVyRW1haWw6IHNpZ25lci5lbWFpbEFkZHJlc3MsXG4gICAgICAgICAgc2lnbmVyTmFtZTogc2lnbmVyLm5hbWUsXG4gICAgICAgICAgc2lnbmVyVHlwZTogc2lnbmVyLnNpZ25lclR5cGUsXG4gICAgICAgICAgc2lnbmVyT3JkZXI6IHNpZ25lci5zaWduZXJPcmRlcixcbiAgICAgICAgICBzdGF0dXM6IFwiYXdhaXRpbmdcIixcbiAgICAgICAgICBkZWxpdmVyeU1vZGU6IHNpZ25lci5kZWxpdmVyeU1vZGUsXG4gICAgICAgICAgbGFuZ3VhZ2U6IHNpZ25lci5sb2NhbGUsXG4gICAgICAgIH0pKSxcbiAgICAgICAgZG9jdW1lbnREZXRhaWxzOiBvcHRpb25zLmRvY3VtZW50SW5mby5tYXAoKGRvYykgPT4gKHtcbiAgICAgICAgICBkb2N1bWVudElkOiBkb2MuZG9jdW1lbnRJZCxcbiAgICAgICAgICBkb2N1bWVudE5hbWU6IGRvYy5kb2N1bWVudE5hbWUsXG4gICAgICAgICAgZG9jdW1lbnRPcmRlcjogZG9jLmRvY3VtZW50T3JkZXIsXG4gICAgICAgICAgZG9jdW1lbnRTaXplOiAwLCAvLyBXaWxsIGJlIHBvcHVsYXRlZCBieSBBUElcbiAgICAgICAgICBkb2N1bWVudFBhZ2VzOiAwLCAvLyBXaWxsIGJlIHBvcHVsYXRlZCBieSBBUElcbiAgICAgICAgfSkpLFxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIC8vIFNpbGVudDogQm9sZFNpZ24gY3JlYXRlIHNpZ25hdHVyZSByZXF1ZXN0IGVycm9yXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBjcmVhdGUgc2lnbmF0dXJlIHJlcXVlc3Q6ICR7ZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2UgfHwgZXJyb3IubWVzc2FnZX1gKVxuICAgIH1cbiAgfVxuXG4gIC8vIEdldCBzaWduYXR1cmUgcmVxdWVzdCBkZXRhaWxzXG4gIGFzeW5jIGdldFNpZ25hdHVyZVJlcXVlc3QoZG9jdW1lbnRJZDogc3RyaW5nKTogUHJvbWlzZTxTaWduYXR1cmVSZXF1ZXN0PiB7XG4gICAgaWYgKCF0aGlzLmlzQ29uZmlndXJlZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQm9sZFNpZ24gc2VydmljZSBpcyBub3QgcHJvcGVybHkgY29uZmlndXJlZFwiKVxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgJHt0aGlzLmJhc2VVUkx9L2RvY3VtZW50LyR7ZG9jdW1lbnRJZH1gLCB7XG4gICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0SGVhZGVycygpLFxuICAgICAgICB0aW1lb3V0OiAxNTAwMCxcbiAgICAgIH0pXG5cbiAgICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhXG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZDogZGF0YS5kb2N1bWVudElkLFxuICAgICAgICB0aXRsZTogZGF0YS50aXRsZSxcbiAgICAgICAgc3RhdHVzOiBkYXRhLnN0YXR1cyxcbiAgICAgICAgY3JlYXRlZERhdGU6IGRhdGEuY3JlYXRlZERhdGUsXG4gICAgICAgIGV4cGlyeURhdGU6IGRhdGEuZXhwaXJ5RGF0ZSxcbiAgICAgICAgY29tcGxldGVkRGF0ZTogZGF0YS5jb21wbGV0ZWREYXRlLFxuICAgICAgICBzaWduZXJzOiBkYXRhLnNpZ25lcnMgfHwgW10sXG4gICAgICAgIGRvY3VtZW50RGV0YWlsczogZGF0YS5kb2N1bWVudERldGFpbHMgfHwgW10sXG4gICAgICAgIGF1ZGl0VHJhaWw6IGRhdGEuYXVkaXRUcmFpbCB8fCBbXSxcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAvLyBTaWxlbnQ6IEJvbGRTaWduIGdldCBzaWduYXR1cmUgcmVxdWVzdCBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZ2V0IHNpZ25hdHVyZSByZXF1ZXN0OiAke2Vycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IGVycm9yLm1lc3NhZ2V9YClcbiAgICB9XG4gIH1cblxuICAvLyBDYW5jZWwgc2lnbmF0dXJlIHJlcXVlc3RcbiAgYXN5bmMgY2FuY2VsU2lnbmF0dXJlUmVxdWVzdChkb2N1bWVudElkOiBzdHJpbmcsIHJlYXNvbj86IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGlmICghdGhpcy5pc0NvbmZpZ3VyZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkJvbGRTaWduIHNlcnZpY2UgaXMgbm90IHByb3Blcmx5IGNvbmZpZ3VyZWRcIilcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgICAgcmVhc29uOiByZWFzb24gfHwgXCJDYW5jZWxsZWQgYnkgc2VuZGVyXCIsXG4gICAgICB9XG5cbiAgICAgIGF3YWl0IGF4aW9zLnBvc3QoYCR7dGhpcy5iYXNlVVJMfS9kb2N1bWVudC8ke2RvY3VtZW50SWR9L2NhbmNlbGAsIHBheWxvYWQsIHtcbiAgICAgICAgaGVhZGVyczogdGhpcy5nZXRIZWFkZXJzKCksXG4gICAgICAgIHRpbWVvdXQ6IDE1MDAwLFxuICAgICAgfSlcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAvLyBTaWxlbnQ6IEJvbGRTaWduIGNhbmNlbCBzaWduYXR1cmUgcmVxdWVzdCBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gY2FuY2VsIHNpZ25hdHVyZSByZXF1ZXN0OiAke2Vycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IGVycm9yLm1lc3NhZ2V9YClcbiAgICB9XG4gIH1cblxuICAvLyBTZW5kIHJlbWluZGVyXG4gIGFzeW5jIHNlbmRSZW1pbmRlcihkb2N1bWVudElkOiBzdHJpbmcsIHNpZ25lckVtYWlsOiBzdHJpbmcsIG1lc3NhZ2U/OiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBpZiAoIXRoaXMuaXNDb25maWd1cmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCb2xkU2lnbiBzZXJ2aWNlIGlzIG5vdCBwcm9wZXJseSBjb25maWd1cmVkXCIpXG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBheWxvYWQgPSB7XG4gICAgICAgIHNpZ25lckVtYWlsLFxuICAgICAgICBtZXNzYWdlOiBtZXNzYWdlIHx8IFwiUGxlYXNlIHNpZ24gdGhlIGRvY3VtZW50IGF0IHlvdXIgZWFybGllc3QgY29udmVuaWVuY2UuXCIsXG4gICAgICB9XG5cbiAgICAgIGF3YWl0IGF4aW9zLnBvc3QoYCR7dGhpcy5iYXNlVVJMfS9kb2N1bWVudC8ke2RvY3VtZW50SWR9L3JlbWluZGVyYCwgcGF5bG9hZCwge1xuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlcnMoKSxcbiAgICAgICAgdGltZW91dDogMTUwMDAsXG4gICAgICB9KVxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIC8vIFNpbGVudDogQm9sZFNpZ24gc2VuZCByZW1pbmRlciBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gc2VuZCByZW1pbmRlcjogJHtlcnJvci5yZXNwb25zZT8uZGF0YT8ubWVzc2FnZSB8fCBlcnJvci5tZXNzYWdlfWApXG4gICAgfVxuICB9XG5cbiAgLy8gRG93bmxvYWQgc2lnbmVkIGRvY3VtZW50XG4gIGFzeW5jIGRvd25sb2FkRG9jdW1lbnQoZG9jdW1lbnRJZDogc3RyaW5nLCBmb3JtYXQ6IFwicGRmXCIgfCBcInppcFwiID0gXCJwZGZcIik6IFByb21pc2U8QmxvYj4ge1xuICAgIGlmICghdGhpcy5pc0NvbmZpZ3VyZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkJvbGRTaWduIHNlcnZpY2UgaXMgbm90IHByb3Blcmx5IGNvbmZpZ3VyZWRcIilcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYCR7dGhpcy5iYXNlVVJMfS9kb2N1bWVudC8ke2RvY3VtZW50SWR9L2Rvd25sb2FkYCwge1xuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlcnMoKSxcbiAgICAgICAgcGFyYW1zOiB7IGZvcm1hdCB9LFxuICAgICAgICByZXNwb25zZVR5cGU6IFwiYmxvYlwiLFxuICAgICAgICB0aW1lb3V0OiA2MDAwMCxcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhXG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgLy8gU2lsZW50OiBCb2xkU2lnbiBkb3dubG9hZCBkb2N1bWVudCBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZG93bmxvYWQgZG9jdW1lbnQ6ICR7ZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2UgfHwgZXJyb3IubWVzc2FnZX1gKVxuICAgIH1cbiAgfVxuXG4gIC8vIEdldCBhdWRpdCB0cmFpbFxuICBhc3luYyBnZXRBdWRpdFRyYWlsKGRvY3VtZW50SWQ6IHN0cmluZyk6IFByb21pc2U8QXVkaXRFdmVudFtdPiB7XG4gICAgaWYgKCF0aGlzLmlzQ29uZmlndXJlZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQm9sZFNpZ24gc2VydmljZSBpcyBub3QgcHJvcGVybHkgY29uZmlndXJlZFwiKVxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgJHt0aGlzLmJhc2VVUkx9L2RvY3VtZW50LyR7ZG9jdW1lbnRJZH0vYXVkaXRUcmFpbGAsIHtcbiAgICAgICAgaGVhZGVyczogdGhpcy5nZXRIZWFkZXJzKCksXG4gICAgICAgIHRpbWVvdXQ6IDE1MDAwLFxuICAgICAgfSlcblxuICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGEuYXVkaXRUcmFpbCB8fCBbXVxuICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICAgIC8vIFNpbGVudDogQm9sZFNpZ24gZ2V0IGF1ZGl0IHRyYWlsIGVycm9yXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBnZXQgYXVkaXQgdHJhaWw6ICR7ZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2UgfHwgZXJyb3IubWVzc2FnZX1gKVxuICAgIH1cbiAgfVxuXG4gIC8vIExpc3Qgc2lnbmF0dXJlIHJlcXVlc3RzXG4gIGFzeW5jIGxpc3RTaWduYXR1cmVSZXF1ZXN0cyhcbiAgICBwYWdlID0gMSxcbiAgICBwYWdlU2l6ZSA9IDI1LFxuICAgIHN0YXR1cz86IHN0cmluZyxcbiAgICBzZWFyY2hUZXh0Pzogc3RyaW5nLFxuICApOiBQcm9taXNlPHsgcmVxdWVzdHM6IFNpZ25hdHVyZVJlcXVlc3RbXTsgdG90YWxDb3VudDogbnVtYmVyIH0+IHtcbiAgICBpZiAoIXRoaXMuaXNDb25maWd1cmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJCb2xkU2lnbiBzZXJ2aWNlIGlzIG5vdCBwcm9wZXJseSBjb25maWd1cmVkXCIpXG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBhcmFtczogYW55ID0ge1xuICAgICAgICBwYWdlLFxuICAgICAgICBwYWdlU2l6ZSxcbiAgICAgIH1cbiAgICAgIGlmIChzdGF0dXMpIHBhcmFtcy5zdGF0dXMgPSBzdGF0dXNcbiAgICAgIGlmIChzZWFyY2hUZXh0KSBwYXJhbXMuc2VhcmNoVGV4dCA9IHNlYXJjaFRleHRcblxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYCR7dGhpcy5iYXNlVVJMfS9kb2N1bWVudC9saXN0YCwge1xuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlcnMoKSxcbiAgICAgICAgcGFyYW1zLFxuICAgICAgICB0aW1lb3V0OiAxNTAwMCxcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHJlcXVlc3RzOiByZXNwb25zZS5kYXRhLnJlc3VsdCB8fCBbXSxcbiAgICAgICAgdG90YWxDb3VudDogcmVzcG9uc2UuZGF0YS50b3RhbENvdW50IHx8IDAsXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgLy8gU2lsZW50OiBCb2xkU2lnbiBsaXN0IHNpZ25hdHVyZSByZXF1ZXN0cyBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gbGlzdCBzaWduYXR1cmUgcmVxdWVzdHM6ICR7ZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2UgfHwgZXJyb3IubWVzc2FnZX1gKVxuICAgIH1cbiAgfVxuXG4gIC8vIFJlc2VuZCBzaWduYXR1cmUgcmVxdWVzdFxuICBhc3luYyByZXNlbmRTaWduYXR1cmVSZXF1ZXN0KGRvY3VtZW50SWQ6IHN0cmluZywgc2lnbmVyRW1haWw6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgIGlmICghdGhpcy5pc0NvbmZpZ3VyZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkJvbGRTaWduIHNlcnZpY2UgaXMgbm90IHByb3Blcmx5IGNvbmZpZ3VyZWRcIilcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgICAgc2lnbmVyRW1haWwsXG4gICAgICB9XG5cbiAgICAgIGF3YWl0IGF4aW9zLnBvc3QoYCR7dGhpcy5iYXNlVVJMfS9kb2N1bWVudC8ke2RvY3VtZW50SWR9L3Jlc2VuZGAsIHBheWxvYWQsIHtcbiAgICAgICAgaGVhZGVyczogdGhpcy5nZXRIZWFkZXJzKCksXG4gICAgICAgIHRpbWVvdXQ6IDE1MDAwLFxuICAgICAgfSlcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAvLyBTaWxlbnQ6IEJvbGRTaWduIHJlc2VuZCBzaWduYXR1cmUgcmVxdWVzdCBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gcmVzZW5kIHNpZ25hdHVyZSByZXF1ZXN0OiAke2Vycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IGVycm9yLm1lc3NhZ2V9YClcbiAgICB9XG4gIH1cblxuICAvLyBHZXQgc2lnbmluZyBVUkwgKGZvciBlbWJlZGRlZCBzaWduaW5nKVxuICBhc3luYyBnZXRTaWduaW5nVXJsKGRvY3VtZW50SWQ6IHN0cmluZywgc2lnbmVyRW1haWw6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgaWYgKCF0aGlzLmlzQ29uZmlndXJlZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQm9sZFNpZ24gc2VydmljZSBpcyBub3QgcHJvcGVybHkgY29uZmlndXJlZFwiKVxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgJHt0aGlzLmJhc2VVUkx9L2RvY3VtZW50LyR7ZG9jdW1lbnRJZH0vc2lnbmluZ1VybGAsIHtcbiAgICAgICAgaGVhZGVyczogdGhpcy5nZXRIZWFkZXJzKCksXG4gICAgICAgIHBhcmFtczogeyBzaWduZXJFbWFpbCB9LFxuICAgICAgICB0aW1lb3V0OiAxNTAwMCxcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiByZXNwb25zZS5kYXRhLnNpZ25pbmdVcmxcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAvLyBTaWxlbnQ6IEJvbGRTaWduIGdldCBzaWduaW5nIFVSTCBlcnJvclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gZ2V0IHNpZ25pbmcgVVJMOiAke2Vycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IGVycm9yLm1lc3NhZ2V9YClcbiAgICB9XG4gIH1cblxuICAvLyBQcm9jZXNzIHdlYmhvb2sgZXZlbnRcbiAgcHJvY2Vzc1dlYmhvb2tFdmVudChldmVudDogYW55KToge1xuICAgIGRvY3VtZW50SWQ6IHN0cmluZ1xuICAgIGV2ZW50VHlwZTogc3RyaW5nXG4gICAgc2lnbmVyRW1haWw/OiBzdHJpbmdcbiAgICBzdGF0dXM6IHN0cmluZ1xuICAgIHRpbWVzdGFtcDogc3RyaW5nXG4gIH0gfCBudWxsIHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFldmVudCB8fCAhZXZlbnQuZG9jdW1lbnRJZCB8fCAhZXZlbnQuZXZlbnRUeXBlKSB7XG4gICAgICAgIHJldHVybiBudWxsXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGRvY3VtZW50SWQ6IGV2ZW50LmRvY3VtZW50SWQsXG4gICAgICAgIGV2ZW50VHlwZTogZXZlbnQuZXZlbnRUeXBlLFxuICAgICAgICBzaWduZXJFbWFpbDogZXZlbnQuc2lnbmVyRW1haWwsXG4gICAgICAgIHN0YXR1czogZXZlbnQuc3RhdHVzIHx8IGV2ZW50LmRvY3VtZW50U3RhdHVzLFxuICAgICAgICB0aW1lc3RhbXA6IGV2ZW50LmV2ZW50VGltZSB8fCBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIC8vIFNpbGVudDogRXJyb3IgcHJvY2Vzc2luZyBCb2xkU2lnbiB3ZWJob29rIGV2ZW50XG4gICAgICByZXR1cm4gbnVsbFxuICAgIH1cbiAgfVxuXG4gIC8vIEdldCBhY2NvdW50IGluZm9ybWF0aW9uXG4gIGFzeW5jIGdldEFjY291bnRJbmZvKCk6IFByb21pc2U8YW55PiB7XG4gICAgaWYgKCF0aGlzLmlzQ29uZmlndXJlZCkge1xuICAgICAgcmV0dXJuIG51bGxcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoYCR7dGhpcy5iYXNlVVJMfS9hY2NvdW50YCwge1xuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlcnMoKSxcbiAgICAgICAgdGltZW91dDogMTUwMDAsXG4gICAgICB9KVxuICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICAvLyBTaWxlbnQ6IEJvbGRTaWduIGdldCBhY2NvdW50IGluZm8gZXJyb3JcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGdldCBhY2NvdW50IGluZm86ICR7ZXJyb3IucmVzcG9uc2U/LmRhdGE/Lm1lc3NhZ2UgfHwgZXJyb3IubWVzc2FnZX1gKVxuICAgIH1cbiAgfVxuXG4gIC8vIENyZWF0ZSB0ZW1wbGF0ZVxuICBhc3luYyBjcmVhdGVUZW1wbGF0ZSh0aXRsZTogc3RyaW5nLCBkb2N1bWVudElkOiBzdHJpbmcsIHNpZ25lcnM6IFNpZ25lcltdKTogUHJvbWlzZTx7IHRlbXBsYXRlSWQ6IHN0cmluZyB9PiB7XG4gICAgaWYgKCF0aGlzLmlzQ29uZmlndXJlZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQm9sZFNpZ24gc2VydmljZSBpcyBub3QgcHJvcGVybHkgY29uZmlndXJlZFwiKVxuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zdCBwYXlsb2FkID0ge1xuICAgICAgICB0aXRsZSxcbiAgICAgICAgZG9jdW1lbnRJZCxcbiAgICAgICAgc2lnbmVycyxcbiAgICAgIH1cblxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5wb3N0KGAke3RoaXMuYmFzZVVSTH0vdGVtcGxhdGUvY3JlYXRlYCwgcGF5bG9hZCwge1xuICAgICAgICBoZWFkZXJzOiB0aGlzLmdldEhlYWRlcnMoKSxcbiAgICAgICAgdGltZW91dDogMzAwMDAsXG4gICAgICB9KVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICB0ZW1wbGF0ZUlkOiByZXNwb25zZS5kYXRhLnRlbXBsYXRlSWQsXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgLy8gU2lsZW50OiBCb2xkU2lnbiBjcmVhdGUgdGVtcGxhdGUgZXJyb3JcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGNyZWF0ZSB0ZW1wbGF0ZTogJHtlcnJvci5yZXNwb25zZT8uZGF0YT8ubWVzc2FnZSB8fCBlcnJvci5tZXNzYWdlfWApXG4gICAgfVxuICB9XG5cbiAgLy8gU2VuZCBkb2N1bWVudCB1c2luZyB0ZW1wbGF0ZVxuICBhc3luYyBzZW5kVXNpbmdUZW1wbGF0ZShcbiAgICB0ZW1wbGF0ZUlkOiBzdHJpbmcsXG4gICAgdGl0bGU6IHN0cmluZyxcbiAgICBzaWduZXJzOiBPbWl0PFNpZ25lciwgXCJmb3JtRmllbGRzXCI+W10sXG4gICk6IFByb21pc2U8U2lnbmF0dXJlUmVxdWVzdD4ge1xuICAgIGlmICghdGhpcy5pc0NvbmZpZ3VyZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkJvbGRTaWduIHNlcnZpY2UgaXMgbm90IHByb3Blcmx5IGNvbmZpZ3VyZWRcIilcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcGF5bG9hZCA9IHtcbiAgICAgICAgdGVtcGxhdGVJZCxcbiAgICAgICAgdGl0bGUsXG4gICAgICAgIHNpZ25lcnMsXG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdChgJHt0aGlzLmJhc2VVUkx9L3RlbXBsYXRlL3NlbmRgLCBwYXlsb2FkLCB7XG4gICAgICAgIGhlYWRlcnM6IHRoaXMuZ2V0SGVhZGVycygpLFxuICAgICAgICB0aW1lb3V0OiAzMDAwMCxcbiAgICAgIH0pXG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlkOiByZXNwb25zZS5kYXRhLmRvY3VtZW50SWQsXG4gICAgICAgIHRpdGxlLFxuICAgICAgICBzdGF0dXM6IFwiaW5Qcm9ncmVzc1wiLFxuICAgICAgICBjcmVhdGVkRGF0ZTogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICBzaWduZXJzOiBzaWduZXJzLm1hcCgoc2lnbmVyKSA9PiAoe1xuICAgICAgICAgIHNpZ25lckVtYWlsOiBzaWduZXIuZW1haWxBZGRyZXNzLFxuICAgICAgICAgIHNpZ25lck5hbWU6IHNpZ25lci5uYW1lLFxuICAgICAgICAgIHNpZ25lclR5cGU6IHNpZ25lci5zaWduZXJUeXBlLFxuICAgICAgICAgIHNpZ25lck9yZGVyOiBzaWduZXIuc2lnbmVyT3JkZXIsXG4gICAgICAgICAgc3RhdHVzOiBcImF3YWl0aW5nXCIsXG4gICAgICAgICAgZGVsaXZlcnlNb2RlOiBzaWduZXIuZGVsaXZlcnlNb2RlLFxuICAgICAgICAgIGxhbmd1YWdlOiBzaWduZXIubG9jYWxlLFxuICAgICAgICB9KSksXG4gICAgICAgIGRvY3VtZW50RGV0YWlsczogW10sXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgLy8gU2lsZW50OiBCb2xkU2lnbiBzZW5kIHVzaW5nIHRlbXBsYXRlIGVycm9yXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEZhaWxlZCB0byBzZW5kIHVzaW5nIHRlbXBsYXRlOiAke2Vycm9yLnJlc3BvbnNlPy5kYXRhPy5tZXNzYWdlIHx8IGVycm9yLm1lc3NhZ2V9YClcbiAgICB9XG4gIH1cbn1cblxuLy8gRW5oYW5jZWQgZXJyb3IgdHlwZXNcbmV4cG9ydCBjbGFzcyBCb2xkU2lnbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihcbiAgICBtZXNzYWdlOiBzdHJpbmcsXG4gICAgcHVibGljIHN0YXR1c0NvZGU/OiBudW1iZXIsXG4gICAgcHVibGljIGVycm9yQ29kZT86IHN0cmluZyxcbiAgICBwdWJsaWMgZGV0YWlscz86IGFueSxcbiAgKSB7XG4gICAgc3VwZXIobWVzc2FnZSlcbiAgICB0aGlzLm5hbWUgPSBcIkJvbGRTaWduRXJyb3JcIlxuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBCb2xkU2lnbkNvbmZpZ3VyYXRpb25FcnJvciBleHRlbmRzIEJvbGRTaWduRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICBzdXBlcihtZXNzYWdlLCAwLCBcIkNPTkZJR1VSQVRJT05fRVJST1JcIilcbiAgICB0aGlzLm5hbWUgPSBcIkJvbGRTaWduQ29uZmlndXJhdGlvbkVycm9yXCJcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQm9sZFNpZ25WYWxpZGF0aW9uRXJyb3IgZXh0ZW5kcyBCb2xkU2lnbkVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nLCBmaWVsZD86IHN0cmluZykge1xuICAgIHN1cGVyKG1lc3NhZ2UsIDQwMCwgXCJWQUxJREFUSU9OX0VSUk9SXCIsIHsgZmllbGQgfSlcbiAgICB0aGlzLm5hbWUgPSBcIkJvbGRTaWduVmFsaWRhdGlvbkVycm9yXCJcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgYm9sZFNpZ25TZXJ2aWNlID0gbmV3IEJvbGRTaWduU2VydmljZSgpXG5leHBvcnQgZGVmYXVsdCBib2xkU2lnblNlcnZpY2VcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BMGxCYUEsMkJBQUE7SUFBQTtJQUFBQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQUFILDBCQUFBOztNQVpBSSxjQUFBO0lBQUE7SUFBQUgsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtXQUFBQyxhQUFBOztNQW1CQUMsd0JBQUE7SUFBQTtJQUFBSixjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO1dBQUFFLHVCQUFBOztNQU9BQyxnQkFBQTtJQUFBO0lBQUFMLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUcsZUFBQTs7TUFDYkMsUUFBQTtJQUFBO0lBQUFOLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUssUUFBQTs7Ozs7d0VBem1Ca0I7Ozs7Ozs7Ozs7Ozs7OztBQUVsQjtBQUNBLE1BQU1DLGdCQUFBO0FBQUE7QUFBQSxDQUFBUixjQUFBLEdBQUFFLENBQUE7QUFBbUI7QUFBQSxDQUFBRixjQUFBLEdBQUFTLENBQUEsVUFBQUMsT0FBQSxDQUFRQyxHQUFHLENBQUNDLDRCQUE0QjtBQUFBO0FBQUEsQ0FBQVosY0FBQSxHQUFBUyxDQUFBLFVBQUk7QUFDckUsTUFBTUksaUJBQUE7QUFBQTtBQUFBLENBQUFiLGNBQUEsR0FBQUUsQ0FBQSxRQUFvQjtBQUMxQixNQUFNWSxvQkFBQTtBQUFBO0FBQUEsQ0FBQWQsY0FBQSxHQUFBRSxDQUFBO0FBQXVCO0FBQUEsQ0FBQUYsY0FBQSxHQUFBUyxDQUFBLFVBQUFDLE9BQUEsQ0FBUUMsR0FBRyxDQUFDSSxnQ0FBZ0M7QUFBQTtBQUFBLENBQUFmLGNBQUEsR0FBQVMsQ0FBQSxVQUFJO0FBRTdFO0FBQUE7QUFBQVQsY0FBQSxHQUFBRSxDQUFBO0FBQ0EsSUFBSSxDQUFDTSxnQkFBQSxFQUFrQjtFQUFBO0VBQUFSLGNBQUEsR0FBQVMsQ0FBQTtBQUV2QixFQURFO0FBQUE7QUFBQTtBQUFBO0VBQUFULGNBQUEsR0FBQVMsQ0FBQTtBQUFBO0FBOEhGLE1BQU1PLGVBQUE7RUFLSkMsWUFBQSxFQUFjO0lBQUE7SUFBQWpCLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDWixJQUFJLENBQUNnQixNQUFNLEdBQUdWLGdCQUFBO0lBQUE7SUFBQVIsY0FBQSxHQUFBRSxDQUFBO0lBQ2QsSUFBSSxDQUFDaUIsT0FBTyxHQUFHTixpQkFBQTtJQUFBO0lBQUFiLGNBQUEsR0FBQUUsQ0FBQTtJQUNmLElBQUksQ0FBQ2tCLFlBQVksR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDRixNQUFNO0lBQUE7SUFBQWxCLGNBQUEsR0FBQUUsQ0FBQTtJQUVqQyxJQUFJLENBQUMsSUFBSSxDQUFDa0IsWUFBWSxFQUFFO01BQUE7TUFBQXBCLGNBQUEsR0FBQVMsQ0FBQTtJQUV4QixFQURFO0lBQUE7SUFBQTtJQUFBO01BQUFULGNBQUEsR0FBQVMsQ0FBQTtJQUFBO0VBRUo7RUFFUVksV0FBQSxFQUFhO0lBQUE7SUFBQXJCLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDbkIsT0FBTztNQUNMLGFBQWEsSUFBSSxDQUFDZ0IsTUFBTTtNQUN4QixnQkFBZ0I7SUFDbEI7RUFDRjtFQUVRSSxvQkFBQSxFQUFzQjtJQUFBO0lBQUF0QixjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQzVCLE9BQU87TUFDTCxhQUFhLElBQUksQ0FBQ2dCO0lBQ3BCO0VBQ0Y7RUFFQTtFQUNPSyxRQUFBLEVBQW1CO0lBQUE7SUFBQXZCLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDeEIsT0FBTyxJQUFJLENBQUNrQixZQUFZO0VBQzFCO0VBRUE7RUFDQSxNQUFNSSxlQUFBLEVBQW1DO0lBQUE7SUFBQXhCLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQ2tCLFlBQVksRUFBRTtNQUFBO01BQUFwQixjQUFBLEdBQUFTLENBQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BQ3RCLE9BQU87SUFDVDtJQUFBO0lBQUE7TUFBQUYsY0FBQSxHQUFBUyxDQUFBO0lBQUE7SUFBQVQsY0FBQSxHQUFBRSxDQUFBO0lBRUEsSUFBSTtNQUNGLE1BQU11QixRQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBRSxDQUFBLFFBQVcsTUFBTXdCLE1BQUEsQ0FBQXBCLE9BQUssQ0FBQ3FCLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQ1IsT0FBTyxVQUFVLEVBQUU7UUFDMURTLE9BQUEsRUFBUyxJQUFJLENBQUNQLFVBQVU7UUFDeEJRLE9BQUEsRUFBUztNQUNYO01BQUE7TUFBQTdCLGNBQUEsR0FBQUUsQ0FBQTtNQUNBLE9BQU91QixRQUFBLENBQVNLLE1BQU0sS0FBSztJQUM3QixFQUFFLE9BQU9DLEtBQUEsRUFBTztNQUFBO01BQUEvQixjQUFBLEdBQUFFLENBQUE7TUFDZDtNQUNBLE9BQU87SUFDVDtFQUNGO0VBRUE7RUFDQSxNQUFNOEIsZUFBZUMsSUFBVSxFQUFFQyxRQUFpQixFQUE2QjtJQUFBO0lBQUFsQyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQzdFLElBQUksQ0FBQyxJQUFJLENBQUNrQixZQUFZLEVBQUU7TUFBQTtNQUFBcEIsY0FBQSxHQUFBUyxDQUFBO01BQUFULGNBQUEsR0FBQUUsQ0FBQTtNQUN0QixNQUFNLElBQUlpQyxLQUFBLENBQU07SUFDbEI7SUFBQTtJQUFBO01BQUFuQyxjQUFBLEdBQUFTLENBQUE7SUFBQTtJQUFBVCxjQUFBLEdBQUFFLENBQUE7SUFFQSxJQUFJO01BQ0YsTUFBTWtDLFFBQUE7TUFBQTtNQUFBLENBQUFwQyxjQUFBLEdBQUFFLENBQUEsUUFBVyxJQUFJbUMsUUFBQTtNQUFBO01BQUFyQyxjQUFBLEdBQUFFLENBQUE7TUFDckJrQyxRQUFBLENBQVNFLE1BQU0sQ0FBQyxRQUFRTCxJQUFBO01BQUE7TUFBQWpDLGNBQUEsR0FBQUUsQ0FBQTtNQUN4QixJQUFJZ0MsUUFBQSxFQUFVO1FBQUE7UUFBQWxDLGNBQUEsR0FBQVMsQ0FBQTtRQUFBVCxjQUFBLEdBQUFFLENBQUE7UUFDWmtDLFFBQUEsQ0FBU0UsTUFBTSxDQUFDLFlBQVlKLFFBQUE7TUFDOUI7TUFBQTtNQUFBO1FBQUFsQyxjQUFBLEdBQUFTLENBQUE7TUFBQTtNQUVBLE1BQU1nQixRQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBRSxDQUFBLFFBQVcsTUFBTXdCLE1BQUEsQ0FBQXBCLE9BQUssQ0FBQ2lDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQ3BCLE9BQU8sa0JBQWtCLEVBQUVpQixRQUFBLEVBQVU7UUFDN0VSLE9BQUEsRUFBUyxJQUFJLENBQUNOLG1CQUFtQjtRQUNqQ08sT0FBQSxFQUFTO01BQ1g7TUFBQTtNQUFBN0IsY0FBQSxHQUFBRSxDQUFBO01BRUEsT0FBTztRQUNMc0MsVUFBQSxFQUFZZixRQUFBLENBQVNnQixJQUFJLENBQUNELFVBQVU7UUFDcENFLFlBQUEsRUFBY2pCLFFBQUEsQ0FBU2dCLElBQUksQ0FBQ0MsWUFBWTtRQUN4Q0MsWUFBQSxFQUFjbEIsUUFBQSxDQUFTZ0IsSUFBSSxDQUFDRSxZQUFZO1FBQ3hDQyxhQUFBLEVBQWVuQixRQUFBLENBQVNnQixJQUFJLENBQUNHO01BQy9CO0lBQ0YsRUFBRSxPQUFPYixLQUFBLEVBQVk7TUFBQTtNQUFBL0IsY0FBQSxHQUFBRSxDQUFBO01BQ25CO01BQ0EsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO01BQThCO01BQUEsQ0FBQW5DLGNBQUEsR0FBQVMsQ0FBQSxVQUFBc0IsS0FBQSxDQUFNTixRQUFRLEVBQUVnQixJQUFBLEVBQU1JLE9BQUE7TUFBQTtNQUFBLENBQUE3QyxjQUFBLEdBQUFTLENBQUEsVUFBV3NCLEtBQUEsQ0FBTWMsT0FBTyxHQUFFO0lBQ2hHO0VBQ0Y7RUFFQTtFQUNBLE1BQU1DLHVCQUF1QkMsT0FBZ0MsRUFBNkI7SUFBQTtJQUFBL0MsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtJQUN4RixJQUFJLENBQUMsSUFBSSxDQUFDa0IsWUFBWSxFQUFFO01BQUE7TUFBQXBCLGNBQUEsR0FBQVMsQ0FBQTtNQUFBVCxjQUFBLEdBQUFFLENBQUE7TUFDdEIsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO0lBQ2xCO0lBQUE7SUFBQTtNQUFBbkMsY0FBQSxHQUFBUyxDQUFBO0lBQUE7SUFBQVQsY0FBQSxHQUFBRSxDQUFBO0lBRUEsSUFBSTtNQUNGLE1BQU04QyxPQUFBO01BQUE7TUFBQSxDQUFBaEQsY0FBQSxHQUFBRSxDQUFBLFFBQVU7UUFDZCtDLEtBQUEsRUFBT0YsT0FBQSxDQUFRRSxLQUFLO1FBQ3BCSixPQUFBO1FBQVM7UUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQUFzQyxPQUFBLENBQVFGLE9BQU87UUFBQTtRQUFBLENBQUE3QyxjQUFBLEdBQUFTLENBQUEsV0FBSTtRQUM1QnlDLE9BQUEsRUFBU0gsT0FBQSxDQUFRRyxPQUFPO1FBQ3hCQyxLQUFBLEVBQU9KLE9BQUEsQ0FBUUssWUFBWTtRQUMzQkMsVUFBQTtRQUFZO1FBQUEsQ0FBQXJELGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0MsT0FBQSxDQUFRTSxVQUFVO1FBQUE7UUFBQSxDQUFBckQsY0FBQSxHQUFBUyxDQUFBLFdBQUk7UUFDbEM2QyxnQkFBQTtRQUFrQjtRQUFBLENBQUF0RCxjQUFBLEdBQUFTLENBQUEsV0FBQXNDLE9BQUEsQ0FBUU8sZ0JBQWdCO1FBQUE7UUFBQSxDQUFBdEQsY0FBQSxHQUFBUyxDQUFBLFdBQUk7VUFDNUM4QyxrQkFBQSxFQUFvQjtVQUNwQkMsWUFBQSxFQUFjO1VBQ2RDLGFBQUEsRUFBZTtRQUNqQjtRQUNBQyxPQUFBLEVBQVNYLE9BQUEsQ0FBUVcsT0FBTztRQUN4QkMsTUFBQTtRQUFRO1FBQUEsQ0FBQTNELGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0MsT0FBQSxDQUFRWSxNQUFNO1FBQUE7UUFBQSxDQUFBM0QsY0FBQSxHQUFBUyxDQUFBLFdBQUksRUFBRTtRQUM1Qm1ELGFBQUE7UUFBZTtRQUFBLENBQUE1RCxjQUFBLEdBQUFTLENBQUEsV0FBQXNDLE9BQUEsQ0FBUWEsYUFBYTtRQUFBO1FBQUEsQ0FBQTVELGNBQUEsR0FBQVMsQ0FBQSxXQUFJO1FBQ3hDb0QsVUFBQTtRQUFZO1FBQUEsQ0FBQTdELGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0MsT0FBQSxDQUFRYyxVQUFVO1FBQUE7UUFBQSxDQUFBN0QsY0FBQSxHQUFBUyxDQUFBLFdBQUk7UUFDbENxRCxrQkFBQTtRQUFvQjtRQUFBLENBQUE5RCxjQUFBLEdBQUFTLENBQUEsV0FBQXNDLE9BQUEsQ0FBUWUsa0JBQWtCO1FBQUE7UUFBQSxDQUFBOUQsY0FBQSxHQUFBUyxDQUFBLFdBQUk7UUFDbERzRCxjQUFBO1FBQWdCO1FBQUEsQ0FBQS9ELGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0MsT0FBQSxDQUFRZ0IsY0FBYztRQUFBO1FBQUEsQ0FBQS9ELGNBQUEsR0FBQVMsQ0FBQSxXQUFJO1FBQzFDdUQsYUFBQTtRQUFlO1FBQUEsQ0FBQWhFLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0MsT0FBQSxDQUFRaUIsYUFBYTtRQUFBO1FBQUEsQ0FBQWhFLGNBQUEsR0FBQVMsQ0FBQSxXQUFJO1FBQ3hDd0QsY0FBQTtRQUFnQjtRQUFBLENBQUFqRSxjQUFBLEdBQUFTLENBQUEsV0FBQXNDLE9BQUEsQ0FBUWtCLGNBQWM7UUFBQTtRQUFBLENBQUFqRSxjQUFBLEdBQUFTLENBQUEsV0FBSTtRQUMxQ3lELGtCQUFBO1FBQW9CO1FBQUEsQ0FBQWxFLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0MsT0FBQSxDQUFRbUIsa0JBQWtCO1FBQUE7UUFBQSxDQUFBbEUsY0FBQSxHQUFBUyxDQUFBLFdBQUk7UUFDbEQwRCxXQUFBO1FBQWE7UUFBQSxDQUFBbkUsY0FBQSxHQUFBUyxDQUFBLFdBQUFzQyxPQUFBLENBQVFvQixXQUFXO1FBQUE7UUFBQSxDQUFBbkUsY0FBQSxHQUFBUyxDQUFBLFdBQUk7UUFDcEMyRCxpQkFBQSxFQUFtQnJCLE9BQUEsQ0FBUXFCLGlCQUFpQjtRQUM1Q0MsVUFBQSxFQUFZdEIsT0FBQSxDQUFRc0I7TUFDdEI7TUFFQSxNQUFNNUMsUUFBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQUUsQ0FBQSxRQUFXLE1BQU13QixNQUFBLENBQUFwQixPQUFLLENBQUNpQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUNwQixPQUFPLGdCQUFnQixFQUFFNkIsT0FBQSxFQUFTO1FBQzFFcEIsT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QlEsT0FBQSxFQUFTO01BQ1g7TUFBQTtNQUFBN0IsY0FBQSxHQUFBRSxDQUFBO01BRUEsT0FBTztRQUNMb0UsRUFBQSxFQUFJN0MsUUFBQSxDQUFTZ0IsSUFBSSxDQUFDRCxVQUFVO1FBQzVCUyxLQUFBLEVBQU9GLE9BQUEsQ0FBUUUsS0FBSztRQUNwQm5CLE1BQUEsRUFBUTtRQUNSeUMsV0FBQSxFQUFhLElBQUlDLElBQUEsR0FBT0MsV0FBVztRQUNuQ0MsVUFBQSxFQUFZM0IsT0FBQSxDQUFRTSxVQUFVO1FBQUE7UUFBQSxDQUFBckQsY0FBQSxHQUFBUyxDQUFBLFdBQzFCLElBQUkrRCxJQUFBLENBQUtBLElBQUEsQ0FBS0csR0FBRyxLQUFLNUIsT0FBQSxDQUFRTSxVQUFVLEdBQUcsS0FBSyxLQUFLLEtBQUssTUFBTW9CLFdBQVc7UUFBQTtRQUFBLENBQUF6RSxjQUFBLEdBQUFTLENBQUEsV0FDM0VtRSxTQUFBO1FBQ0oxQixPQUFBLEVBQVNILE9BQUEsQ0FBUUcsT0FBTyxDQUFDMkIsR0FBRyxDQUFFQyxNQUFBLElBQVk7VUFBQTtVQUFBOUUsY0FBQSxHQUFBQyxDQUFBO1VBQUFELGNBQUEsR0FBQUUsQ0FBQTtVQUFBO1lBQ3hDNkUsV0FBQSxFQUFhRCxNQUFBLENBQU9FLFlBQVk7WUFDaENDLFVBQUEsRUFBWUgsTUFBQSxDQUFPSSxJQUFJO1lBQ3ZCQyxVQUFBLEVBQVlMLE1BQUEsQ0FBT0ssVUFBVTtZQUM3QkMsV0FBQSxFQUFhTixNQUFBLENBQU9NLFdBQVc7WUFDL0J0RCxNQUFBLEVBQVE7WUFDUnVELFlBQUEsRUFBY1AsTUFBQSxDQUFPTyxZQUFZO1lBQ2pDQyxRQUFBLEVBQVVSLE1BQUEsQ0FBT1M7VUFDbkI7UUFBQTtRQUNBQyxlQUFBLEVBQWlCekMsT0FBQSxDQUFRSyxZQUFZLENBQUN5QixHQUFHLENBQUVZLEdBQUEsSUFBUztVQUFBO1VBQUF6RixjQUFBLEdBQUFDLENBQUE7VUFBQUQsY0FBQSxHQUFBRSxDQUFBO1VBQUE7WUFDbERzQyxVQUFBLEVBQVlpRCxHQUFBLENBQUlqRCxVQUFVO1lBQzFCRSxZQUFBLEVBQWMrQyxHQUFBLENBQUkvQyxZQUFZO1lBQzlCZ0QsYUFBQSxFQUFlRCxHQUFBLENBQUlDLGFBQWE7WUFDaEMvQyxZQUFBLEVBQWM7WUFDZEMsYUFBQSxFQUFlO1VBQ2pCO1FBQUE7TUFDRjtJQUNGLEVBQUUsT0FBT2IsS0FBQSxFQUFZO01BQUE7TUFBQS9CLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQjtNQUNBLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtNQUF1QztNQUFBLENBQUFuQyxjQUFBLEdBQUFTLENBQUEsV0FBQXNCLEtBQUEsQ0FBTU4sUUFBUSxFQUFFZ0IsSUFBQSxFQUFNSSxPQUFBO01BQUE7TUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQVdzQixLQUFBLENBQU1jLE9BQU8sR0FBRTtJQUN6RztFQUNGO0VBRUE7RUFDQSxNQUFNOEMsb0JBQW9CbkQsVUFBa0IsRUFBNkI7SUFBQTtJQUFBeEMsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtJQUN2RSxJQUFJLENBQUMsSUFBSSxDQUFDa0IsWUFBWSxFQUFFO01BQUE7TUFBQXBCLGNBQUEsR0FBQVMsQ0FBQTtNQUFBVCxjQUFBLEdBQUFFLENBQUE7TUFDdEIsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO0lBQ2xCO0lBQUE7SUFBQTtNQUFBbkMsY0FBQSxHQUFBUyxDQUFBO0lBQUE7SUFBQVQsY0FBQSxHQUFBRSxDQUFBO0lBRUEsSUFBSTtNQUNGLE1BQU11QixRQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBRSxDQUFBLFFBQVcsTUFBTXdCLE1BQUEsQ0FBQXBCLE9BQUssQ0FBQ3FCLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQ1IsT0FBTyxhQUFhcUIsVUFBQSxFQUFZLEVBQUU7UUFDekVaLE9BQUEsRUFBUyxJQUFJLENBQUNQLFVBQVU7UUFDeEJRLE9BQUEsRUFBUztNQUNYO01BRUEsTUFBTVksSUFBQTtNQUFBO01BQUEsQ0FBQXpDLGNBQUEsR0FBQUUsQ0FBQSxRQUFPdUIsUUFBQSxDQUFTZ0IsSUFBSTtNQUFBO01BQUF6QyxjQUFBLEdBQUFFLENBQUE7TUFDMUIsT0FBTztRQUNMb0UsRUFBQSxFQUFJN0IsSUFBQSxDQUFLRCxVQUFVO1FBQ25CUyxLQUFBLEVBQU9SLElBQUEsQ0FBS1EsS0FBSztRQUNqQm5CLE1BQUEsRUFBUVcsSUFBQSxDQUFLWCxNQUFNO1FBQ25CeUMsV0FBQSxFQUFhOUIsSUFBQSxDQUFLOEIsV0FBVztRQUM3QkcsVUFBQSxFQUFZakMsSUFBQSxDQUFLaUMsVUFBVTtRQUMzQmtCLGFBQUEsRUFBZW5ELElBQUEsQ0FBS21ELGFBQWE7UUFDakMxQyxPQUFBO1FBQVM7UUFBQSxDQUFBbEQsY0FBQSxHQUFBUyxDQUFBLFdBQUFnQyxJQUFBLENBQUtTLE9BQU87UUFBQTtRQUFBLENBQUFsRCxjQUFBLEdBQUFTLENBQUEsV0FBSSxFQUFFO1FBQzNCK0UsZUFBQTtRQUFpQjtRQUFBLENBQUF4RixjQUFBLEdBQUFTLENBQUEsV0FBQWdDLElBQUEsQ0FBSytDLGVBQWU7UUFBQTtRQUFBLENBQUF4RixjQUFBLEdBQUFTLENBQUEsV0FBSSxFQUFFO1FBQzNDb0YsVUFBQTtRQUFZO1FBQUEsQ0FBQTdGLGNBQUEsR0FBQVMsQ0FBQSxXQUFBZ0MsSUFBQSxDQUFLb0QsVUFBVTtRQUFBO1FBQUEsQ0FBQTdGLGNBQUEsR0FBQVMsQ0FBQSxXQUFJLEVBQUU7TUFDbkM7SUFDRixFQUFFLE9BQU9zQixLQUFBLEVBQVk7TUFBQTtNQUFBL0IsY0FBQSxHQUFBRSxDQUFBO01BQ25CO01BQ0EsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO01BQW9DO01BQUEsQ0FBQW5DLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0IsS0FBQSxDQUFNTixRQUFRLEVBQUVnQixJQUFBLEVBQU1JLE9BQUE7TUFBQTtNQUFBLENBQUE3QyxjQUFBLEdBQUFTLENBQUEsV0FBV3NCLEtBQUEsQ0FBTWMsT0FBTyxHQUFFO0lBQ3RHO0VBQ0Y7RUFFQTtFQUNBLE1BQU1pRCx1QkFBdUJ0RCxVQUFrQixFQUFFdUQsTUFBZSxFQUFpQjtJQUFBO0lBQUEvRixjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQy9FLElBQUksQ0FBQyxJQUFJLENBQUNrQixZQUFZLEVBQUU7TUFBQTtNQUFBcEIsY0FBQSxHQUFBUyxDQUFBO01BQUFULGNBQUEsR0FBQUUsQ0FBQTtNQUN0QixNQUFNLElBQUlpQyxLQUFBLENBQU07SUFDbEI7SUFBQTtJQUFBO01BQUFuQyxjQUFBLEdBQUFTLENBQUE7SUFBQTtJQUFBVCxjQUFBLEdBQUFFLENBQUE7SUFFQSxJQUFJO01BQ0YsTUFBTThDLE9BQUE7TUFBQTtNQUFBLENBQUFoRCxjQUFBLEdBQUFFLENBQUEsUUFBVTtRQUNkNkYsTUFBQTtRQUFRO1FBQUEsQ0FBQS9GLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0YsTUFBQTtRQUFBO1FBQUEsQ0FBQS9GLGNBQUEsR0FBQVMsQ0FBQSxXQUFVO01BQ3BCO01BQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BRUEsTUFBTXdCLE1BQUEsQ0FBQXBCLE9BQUssQ0FBQ2lDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQ3BCLE9BQU8sYUFBYXFCLFVBQUEsU0FBbUIsRUFBRVEsT0FBQSxFQUFTO1FBQ3pFcEIsT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QlEsT0FBQSxFQUFTO01BQ1g7SUFDRixFQUFFLE9BQU9FLEtBQUEsRUFBWTtNQUFBO01BQUEvQixjQUFBLEdBQUFFLENBQUE7TUFDbkI7TUFDQSxNQUFNLElBQUlpQyxLQUFBLENBQU07TUFBdUM7TUFBQSxDQUFBbkMsY0FBQSxHQUFBUyxDQUFBLFdBQUFzQixLQUFBLENBQU1OLFFBQVEsRUFBRWdCLElBQUEsRUFBTUksT0FBQTtNQUFBO01BQUEsQ0FBQTdDLGNBQUEsR0FBQVMsQ0FBQSxXQUFXc0IsS0FBQSxDQUFNYyxPQUFPLEdBQUU7SUFDekc7RUFDRjtFQUVBO0VBQ0EsTUFBTW1ELGFBQWF4RCxVQUFrQixFQUFFdUMsV0FBbUIsRUFBRWxDLE9BQWdCLEVBQWlCO0lBQUE7SUFBQTdDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDM0YsSUFBSSxDQUFDLElBQUksQ0FBQ2tCLFlBQVksRUFBRTtNQUFBO01BQUFwQixjQUFBLEdBQUFTLENBQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BQ3RCLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtJQUNsQjtJQUFBO0lBQUE7TUFBQW5DLGNBQUEsR0FBQVMsQ0FBQTtJQUFBO0lBQUFULGNBQUEsR0FBQUUsQ0FBQTtJQUVBLElBQUk7TUFDRixNQUFNOEMsT0FBQTtNQUFBO01BQUEsQ0FBQWhELGNBQUEsR0FBQUUsQ0FBQSxRQUFVO1FBQ2Q2RSxXQUFBO1FBQ0FsQyxPQUFBO1FBQVM7UUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQUFvQyxPQUFBO1FBQUE7UUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQVc7TUFDdEI7TUFBQTtNQUFBVCxjQUFBLEdBQUFFLENBQUE7TUFFQSxNQUFNd0IsTUFBQSxDQUFBcEIsT0FBSyxDQUFDaUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDcEIsT0FBTyxhQUFhcUIsVUFBQSxXQUFxQixFQUFFUSxPQUFBLEVBQVM7UUFDM0VwQixPQUFBLEVBQVMsSUFBSSxDQUFDUCxVQUFVO1FBQ3hCUSxPQUFBLEVBQVM7TUFDWDtJQUNGLEVBQUUsT0FBT0UsS0FBQSxFQUFZO01BQUE7TUFBQS9CLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQjtNQUNBLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtNQUE0QjtNQUFBLENBQUFuQyxjQUFBLEdBQUFTLENBQUEsV0FBQXNCLEtBQUEsQ0FBTU4sUUFBUSxFQUFFZ0IsSUFBQSxFQUFNSSxPQUFBO01BQUE7TUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQVdzQixLQUFBLENBQU1jLE9BQU8sR0FBRTtJQUM5RjtFQUNGO0VBRUE7RUFDQSxNQUFNb0QsaUJBQWlCekQsVUFBa0IsRUFBRTBELE1BQUE7RUFBQTtFQUFBLENBQUFsRyxjQUFBLEdBQUFTLENBQUEsV0FBd0IsS0FBSyxHQUFpQjtJQUFBO0lBQUFULGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDdkYsSUFBSSxDQUFDLElBQUksQ0FBQ2tCLFlBQVksRUFBRTtNQUFBO01BQUFwQixjQUFBLEdBQUFTLENBQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BQ3RCLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtJQUNsQjtJQUFBO0lBQUE7TUFBQW5DLGNBQUEsR0FBQVMsQ0FBQTtJQUFBO0lBQUFULGNBQUEsR0FBQUUsQ0FBQTtJQUVBLElBQUk7TUFDRixNQUFNdUIsUUFBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQUUsQ0FBQSxRQUFXLE1BQU13QixNQUFBLENBQUFwQixPQUFLLENBQUNxQixHQUFHLENBQUMsR0FBRyxJQUFJLENBQUNSLE9BQU8sYUFBYXFCLFVBQUEsV0FBcUIsRUFBRTtRQUNsRlosT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QjhFLE1BQUEsRUFBUTtVQUFFRDtRQUFPO1FBQ2pCRSxZQUFBLEVBQWM7UUFDZHZFLE9BQUEsRUFBUztNQUNYO01BQUE7TUFBQTdCLGNBQUEsR0FBQUUsQ0FBQTtNQUVBLE9BQU91QixRQUFBLENBQVNnQixJQUFJO0lBQ3RCLEVBQUUsT0FBT1YsS0FBQSxFQUFZO01BQUE7TUFBQS9CLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQjtNQUNBLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtNQUFnQztNQUFBLENBQUFuQyxjQUFBLEdBQUFTLENBQUEsV0FBQXNCLEtBQUEsQ0FBTU4sUUFBUSxFQUFFZ0IsSUFBQSxFQUFNSSxPQUFBO01BQUE7TUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQVdzQixLQUFBLENBQU1jLE9BQU8sR0FBRTtJQUNsRztFQUNGO0VBRUE7RUFDQSxNQUFNd0QsY0FBYzdELFVBQWtCLEVBQXlCO0lBQUE7SUFBQXhDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDN0QsSUFBSSxDQUFDLElBQUksQ0FBQ2tCLFlBQVksRUFBRTtNQUFBO01BQUFwQixjQUFBLEdBQUFTLENBQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BQ3RCLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtJQUNsQjtJQUFBO0lBQUE7TUFBQW5DLGNBQUEsR0FBQVMsQ0FBQTtJQUFBO0lBQUFULGNBQUEsR0FBQUUsQ0FBQTtJQUVBLElBQUk7TUFDRixNQUFNdUIsUUFBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQUUsQ0FBQSxRQUFXLE1BQU13QixNQUFBLENBQUFwQixPQUFLLENBQUNxQixHQUFHLENBQUMsR0FBRyxJQUFJLENBQUNSLE9BQU8sYUFBYXFCLFVBQUEsYUFBdUIsRUFBRTtRQUNwRlosT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QlEsT0FBQSxFQUFTO01BQ1g7TUFBQTtNQUFBN0IsY0FBQSxHQUFBRSxDQUFBO01BRUEsT0FBTywyQkFBQUYsY0FBQSxHQUFBUyxDQUFBLFdBQUFnQixRQUFBLENBQVNnQixJQUFJLENBQUNvRCxVQUFVO01BQUE7TUFBQSxDQUFBN0YsY0FBQSxHQUFBUyxDQUFBLFdBQUksRUFBRTtJQUN2QyxFQUFFLE9BQU9zQixLQUFBLEVBQVk7TUFBQTtNQUFBL0IsY0FBQSxHQUFBRSxDQUFBO01BQ25CO01BQ0EsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO01BQThCO01BQUEsQ0FBQW5DLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0IsS0FBQSxDQUFNTixRQUFRLEVBQUVnQixJQUFBLEVBQU1JLE9BQUE7TUFBQTtNQUFBLENBQUE3QyxjQUFBLEdBQUFTLENBQUEsV0FBV3NCLEtBQUEsQ0FBTWMsT0FBTyxHQUFFO0lBQ2hHO0VBQ0Y7RUFFQTtFQUNBLE1BQU15RCxzQkFDSkMsSUFBQTtFQUFBO0VBQUEsQ0FBQXZHLGNBQUEsR0FBQVMsQ0FBQSxXQUFPLENBQUMsR0FDUitGLFFBQUE7RUFBQTtFQUFBLENBQUF4RyxjQUFBLEdBQUFTLENBQUEsV0FBVyxFQUFFLEdBQ2JxQixNQUFlLEVBQ2YyRSxVQUFtQixFQUM0QztJQUFBO0lBQUF6RyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQy9ELElBQUksQ0FBQyxJQUFJLENBQUNrQixZQUFZLEVBQUU7TUFBQTtNQUFBcEIsY0FBQSxHQUFBUyxDQUFBO01BQUFULGNBQUEsR0FBQUUsQ0FBQTtNQUN0QixNQUFNLElBQUlpQyxLQUFBLENBQU07SUFDbEI7SUFBQTtJQUFBO01BQUFuQyxjQUFBLEdBQUFTLENBQUE7SUFBQTtJQUFBVCxjQUFBLEdBQUFFLENBQUE7SUFFQSxJQUFJO01BQ0YsTUFBTWlHLE1BQUE7TUFBQTtNQUFBLENBQUFuRyxjQUFBLEdBQUFFLENBQUEsUUFBYztRQUNsQnFHLElBQUE7UUFDQUM7TUFDRjtNQUFBO01BQUF4RyxjQUFBLEdBQUFFLENBQUE7TUFDQSxJQUFJNEIsTUFBQSxFQUFRO1FBQUE7UUFBQTlCLGNBQUEsR0FBQVMsQ0FBQTtRQUFBVCxjQUFBLEdBQUFFLENBQUE7UUFBQWlHLE1BQUEsQ0FBT3JFLE1BQU0sR0FBR0EsTUFBQTtNQUFBO01BQUE7TUFBQTtRQUFBOUIsY0FBQSxHQUFBUyxDQUFBO01BQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BQzVCLElBQUl1RyxVQUFBLEVBQVk7UUFBQTtRQUFBekcsY0FBQSxHQUFBUyxDQUFBO1FBQUFULGNBQUEsR0FBQUUsQ0FBQTtRQUFBaUcsTUFBQSxDQUFPTSxVQUFVLEdBQUdBLFVBQUE7TUFBQTtNQUFBO01BQUE7UUFBQXpHLGNBQUEsR0FBQVMsQ0FBQTtNQUFBO01BRXBDLE1BQU1nQixRQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBRSxDQUFBLFFBQVcsTUFBTXdCLE1BQUEsQ0FBQXBCLE9BQUssQ0FBQ3FCLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQ1IsT0FBTyxnQkFBZ0IsRUFBRTtRQUNoRVMsT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QjhFLE1BQUE7UUFDQXRFLE9BQUEsRUFBUztNQUNYO01BQUE7TUFBQTdCLGNBQUEsR0FBQUUsQ0FBQTtNQUVBLE9BQU87UUFDTHdHLFFBQUE7UUFBVTtRQUFBLENBQUExRyxjQUFBLEdBQUFTLENBQUEsV0FBQWdCLFFBQUEsQ0FBU2dCLElBQUksQ0FBQ2tFLE1BQU07UUFBQTtRQUFBLENBQUEzRyxjQUFBLEdBQUFTLENBQUEsV0FBSSxFQUFFO1FBQ3BDbUcsVUFBQTtRQUFZO1FBQUEsQ0FBQTVHLGNBQUEsR0FBQVMsQ0FBQSxXQUFBZ0IsUUFBQSxDQUFTZ0IsSUFBSSxDQUFDbUUsVUFBVTtRQUFBO1FBQUEsQ0FBQTVHLGNBQUEsR0FBQVMsQ0FBQSxXQUFJO01BQzFDO0lBQ0YsRUFBRSxPQUFPc0IsS0FBQSxFQUFZO01BQUE7TUFBQS9CLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQjtNQUNBLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtNQUFzQztNQUFBLENBQUFuQyxjQUFBLEdBQUFTLENBQUEsV0FBQXNCLEtBQUEsQ0FBTU4sUUFBUSxFQUFFZ0IsSUFBQSxFQUFNSSxPQUFBO01BQUE7TUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQVdzQixLQUFBLENBQU1jLE9BQU8sR0FBRTtJQUN4RztFQUNGO0VBRUE7RUFDQSxNQUFNZ0UsdUJBQXVCckUsVUFBa0IsRUFBRXVDLFdBQW1CLEVBQWlCO0lBQUE7SUFBQS9FLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDbkYsSUFBSSxDQUFDLElBQUksQ0FBQ2tCLFlBQVksRUFBRTtNQUFBO01BQUFwQixjQUFBLEdBQUFTLENBQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BQ3RCLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtJQUNsQjtJQUFBO0lBQUE7TUFBQW5DLGNBQUEsR0FBQVMsQ0FBQTtJQUFBO0lBQUFULGNBQUEsR0FBQUUsQ0FBQTtJQUVBLElBQUk7TUFDRixNQUFNOEMsT0FBQTtNQUFBO01BQUEsQ0FBQWhELGNBQUEsR0FBQUUsQ0FBQSxRQUFVO1FBQ2Q2RTtNQUNGO01BQUE7TUFBQS9FLGNBQUEsR0FBQUUsQ0FBQTtNQUVBLE1BQU13QixNQUFBLENBQUFwQixPQUFLLENBQUNpQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUNwQixPQUFPLGFBQWFxQixVQUFBLFNBQW1CLEVBQUVRLE9BQUEsRUFBUztRQUN6RXBCLE9BQUEsRUFBUyxJQUFJLENBQUNQLFVBQVU7UUFDeEJRLE9BQUEsRUFBUztNQUNYO0lBQ0YsRUFBRSxPQUFPRSxLQUFBLEVBQVk7TUFBQTtNQUFBL0IsY0FBQSxHQUFBRSxDQUFBO01BQ25CO01BQ0EsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO01BQXVDO01BQUEsQ0FBQW5DLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0IsS0FBQSxDQUFNTixRQUFRLEVBQUVnQixJQUFBLEVBQU1JLE9BQUE7TUFBQTtNQUFBLENBQUE3QyxjQUFBLEdBQUFTLENBQUEsV0FBV3NCLEtBQUEsQ0FBTWMsT0FBTyxHQUFFO0lBQ3pHO0VBQ0Y7RUFFQTtFQUNBLE1BQU1pRSxjQUFjdEUsVUFBa0IsRUFBRXVDLFdBQW1CLEVBQW1CO0lBQUE7SUFBQS9FLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDNUUsSUFBSSxDQUFDLElBQUksQ0FBQ2tCLFlBQVksRUFBRTtNQUFBO01BQUFwQixjQUFBLEdBQUFTLENBQUE7TUFBQVQsY0FBQSxHQUFBRSxDQUFBO01BQ3RCLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtJQUNsQjtJQUFBO0lBQUE7TUFBQW5DLGNBQUEsR0FBQVMsQ0FBQTtJQUFBO0lBQUFULGNBQUEsR0FBQUUsQ0FBQTtJQUVBLElBQUk7TUFDRixNQUFNdUIsUUFBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQUUsQ0FBQSxRQUFXLE1BQU13QixNQUFBLENBQUFwQixPQUFLLENBQUNxQixHQUFHLENBQUMsR0FBRyxJQUFJLENBQUNSLE9BQU8sYUFBYXFCLFVBQUEsYUFBdUIsRUFBRTtRQUNwRlosT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QjhFLE1BQUEsRUFBUTtVQUFFcEI7UUFBWTtRQUN0QmxELE9BQUEsRUFBUztNQUNYO01BQUE7TUFBQTdCLGNBQUEsR0FBQUUsQ0FBQTtNQUVBLE9BQU91QixRQUFBLENBQVNnQixJQUFJLENBQUNzRSxVQUFVO0lBQ2pDLEVBQUUsT0FBT2hGLEtBQUEsRUFBWTtNQUFBO01BQUEvQixjQUFBLEdBQUFFLENBQUE7TUFDbkI7TUFDQSxNQUFNLElBQUlpQyxLQUFBLENBQU07TUFBOEI7TUFBQSxDQUFBbkMsY0FBQSxHQUFBUyxDQUFBLFdBQUFzQixLQUFBLENBQU1OLFFBQVEsRUFBRWdCLElBQUEsRUFBTUksT0FBQTtNQUFBO01BQUEsQ0FBQTdDLGNBQUEsR0FBQVMsQ0FBQSxXQUFXc0IsS0FBQSxDQUFNYyxPQUFPLEdBQUU7SUFDaEc7RUFDRjtFQUVBO0VBQ0FtRSxvQkFBb0JDLEtBQVUsRUFNckI7SUFBQTtJQUFBakgsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtJQUNQLElBQUk7TUFBQTtNQUFBRixjQUFBLEdBQUFFLENBQUE7TUFDRjtNQUFJO01BQUEsQ0FBQUYsY0FBQSxHQUFBUyxDQUFBLFlBQUN3RyxLQUFBO01BQUE7TUFBQSxDQUFBakgsY0FBQSxHQUFBUyxDQUFBLFdBQVMsQ0FBQ3dHLEtBQUEsQ0FBTXpFLFVBQVU7TUFBQTtNQUFBLENBQUF4QyxjQUFBLEdBQUFTLENBQUEsV0FBSSxDQUFDd0csS0FBQSxDQUFNQyxTQUFTLEdBQUU7UUFBQTtRQUFBbEgsY0FBQSxHQUFBUyxDQUFBO1FBQUFULGNBQUEsR0FBQUUsQ0FBQTtRQUNuRCxPQUFPO01BQ1Q7TUFBQTtNQUFBO1FBQUFGLGNBQUEsR0FBQVMsQ0FBQTtNQUFBO01BQUFULGNBQUEsR0FBQUUsQ0FBQTtNQUVBLE9BQU87UUFDTHNDLFVBQUEsRUFBWXlFLEtBQUEsQ0FBTXpFLFVBQVU7UUFDNUIwRSxTQUFBLEVBQVdELEtBQUEsQ0FBTUMsU0FBUztRQUMxQm5DLFdBQUEsRUFBYWtDLEtBQUEsQ0FBTWxDLFdBQVc7UUFDOUJqRCxNQUFBO1FBQVE7UUFBQSxDQUFBOUIsY0FBQSxHQUFBUyxDQUFBLFdBQUF3RyxLQUFBLENBQU1uRixNQUFNO1FBQUE7UUFBQSxDQUFBOUIsY0FBQSxHQUFBUyxDQUFBLFdBQUl3RyxLQUFBLENBQU1FLGNBQWM7UUFDNUNDLFNBQUE7UUFBVztRQUFBLENBQUFwSCxjQUFBLEdBQUFTLENBQUEsV0FBQXdHLEtBQUEsQ0FBTUksU0FBUztRQUFBO1FBQUEsQ0FBQXJILGNBQUEsR0FBQVMsQ0FBQSxXQUFJLElBQUkrRCxJQUFBLEdBQU9DLFdBQVc7TUFDdEQ7SUFDRixFQUFFLE9BQU8xQyxLQUFBLEVBQU87TUFBQTtNQUFBL0IsY0FBQSxHQUFBRSxDQUFBO01BQ2Q7TUFDQSxPQUFPO0lBQ1Q7RUFDRjtFQUVBO0VBQ0EsTUFBTW9ILGVBQUEsRUFBK0I7SUFBQTtJQUFBdEgsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtJQUNuQyxJQUFJLENBQUMsSUFBSSxDQUFDa0IsWUFBWSxFQUFFO01BQUE7TUFBQXBCLGNBQUEsR0FBQVMsQ0FBQTtNQUFBVCxjQUFBLEdBQUFFLENBQUE7TUFDdEIsT0FBTztJQUNUO0lBQUE7SUFBQTtNQUFBRixjQUFBLEdBQUFTLENBQUE7SUFBQTtJQUFBVCxjQUFBLEdBQUFFLENBQUE7SUFFQSxJQUFJO01BQ0YsTUFBTXVCLFFBQUE7TUFBQTtNQUFBLENBQUF6QixjQUFBLEdBQUFFLENBQUEsU0FBVyxNQUFNd0IsTUFBQSxDQUFBcEIsT0FBSyxDQUFDcUIsR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDUixPQUFPLFVBQVUsRUFBRTtRQUMxRFMsT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QlEsT0FBQSxFQUFTO01BQ1g7TUFBQTtNQUFBN0IsY0FBQSxHQUFBRSxDQUFBO01BQ0EsT0FBT3VCLFFBQUEsQ0FBU2dCLElBQUk7SUFDdEIsRUFBRSxPQUFPVixLQUFBLEVBQVk7TUFBQTtNQUFBL0IsY0FBQSxHQUFBRSxDQUFBO01BQ25CO01BQ0EsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO01BQStCO01BQUEsQ0FBQW5DLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0IsS0FBQSxDQUFNTixRQUFRLEVBQUVnQixJQUFBLEVBQU1JLE9BQUE7TUFBQTtNQUFBLENBQUE3QyxjQUFBLEdBQUFTLENBQUEsV0FBV3NCLEtBQUEsQ0FBTWMsT0FBTyxHQUFFO0lBQ2pHO0VBQ0Y7RUFFQTtFQUNBLE1BQU0wRSxlQUFldEUsS0FBYSxFQUFFVCxVQUFrQixFQUFFVSxPQUFpQixFQUFtQztJQUFBO0lBQUFsRCxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQzFHLElBQUksQ0FBQyxJQUFJLENBQUNrQixZQUFZLEVBQUU7TUFBQTtNQUFBcEIsY0FBQSxHQUFBUyxDQUFBO01BQUFULGNBQUEsR0FBQUUsQ0FBQTtNQUN0QixNQUFNLElBQUlpQyxLQUFBLENBQU07SUFDbEI7SUFBQTtJQUFBO01BQUFuQyxjQUFBLEdBQUFTLENBQUE7SUFBQTtJQUFBVCxjQUFBLEdBQUFFLENBQUE7SUFFQSxJQUFJO01BQ0YsTUFBTThDLE9BQUE7TUFBQTtNQUFBLENBQUFoRCxjQUFBLEdBQUFFLENBQUEsU0FBVTtRQUNkK0MsS0FBQTtRQUNBVCxVQUFBO1FBQ0FVO01BQ0Y7TUFFQSxNQUFNekIsUUFBQTtNQUFBO01BQUEsQ0FBQXpCLGNBQUEsR0FBQUUsQ0FBQSxTQUFXLE1BQU13QixNQUFBLENBQUFwQixPQUFLLENBQUNpQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUNwQixPQUFPLGtCQUFrQixFQUFFNkIsT0FBQSxFQUFTO1FBQzVFcEIsT0FBQSxFQUFTLElBQUksQ0FBQ1AsVUFBVTtRQUN4QlEsT0FBQSxFQUFTO01BQ1g7TUFBQTtNQUFBN0IsY0FBQSxHQUFBRSxDQUFBO01BRUEsT0FBTztRQUNMc0gsVUFBQSxFQUFZL0YsUUFBQSxDQUFTZ0IsSUFBSSxDQUFDK0U7TUFDNUI7SUFDRixFQUFFLE9BQU96RixLQUFBLEVBQVk7TUFBQTtNQUFBL0IsY0FBQSxHQUFBRSxDQUFBO01BQ25CO01BQ0EsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO01BQThCO01BQUEsQ0FBQW5DLGNBQUEsR0FBQVMsQ0FBQSxXQUFBc0IsS0FBQSxDQUFNTixRQUFRLEVBQUVnQixJQUFBLEVBQU1JLE9BQUE7TUFBQTtNQUFBLENBQUE3QyxjQUFBLEdBQUFTLENBQUEsV0FBV3NCLEtBQUEsQ0FBTWMsT0FBTyxHQUFFO0lBQ2hHO0VBQ0Y7RUFFQTtFQUNBLE1BQU00RSxrQkFDSkQsVUFBa0IsRUFDbEJ2RSxLQUFhLEVBQ2JDLE9BQXFDLEVBQ1Y7SUFBQTtJQUFBbEQsY0FBQSxHQUFBQyxDQUFBO0lBQUFELGNBQUEsR0FBQUUsQ0FBQTtJQUMzQixJQUFJLENBQUMsSUFBSSxDQUFDa0IsWUFBWSxFQUFFO01BQUE7TUFBQXBCLGNBQUEsR0FBQVMsQ0FBQTtNQUFBVCxjQUFBLEdBQUFFLENBQUE7TUFDdEIsTUFBTSxJQUFJaUMsS0FBQSxDQUFNO0lBQ2xCO0lBQUE7SUFBQTtNQUFBbkMsY0FBQSxHQUFBUyxDQUFBO0lBQUE7SUFBQVQsY0FBQSxHQUFBRSxDQUFBO0lBRUEsSUFBSTtNQUNGLE1BQU04QyxPQUFBO01BQUE7TUFBQSxDQUFBaEQsY0FBQSxHQUFBRSxDQUFBLFNBQVU7UUFDZHNILFVBQUE7UUFDQXZFLEtBQUE7UUFDQUM7TUFDRjtNQUVBLE1BQU16QixRQUFBO01BQUE7TUFBQSxDQUFBekIsY0FBQSxHQUFBRSxDQUFBLFNBQVcsTUFBTXdCLE1BQUEsQ0FBQXBCLE9BQUssQ0FBQ2lDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQ3BCLE9BQU8sZ0JBQWdCLEVBQUU2QixPQUFBLEVBQVM7UUFDMUVwQixPQUFBLEVBQVMsSUFBSSxDQUFDUCxVQUFVO1FBQ3hCUSxPQUFBLEVBQVM7TUFDWDtNQUFBO01BQUE3QixjQUFBLEdBQUFFLENBQUE7TUFFQSxPQUFPO1FBQ0xvRSxFQUFBLEVBQUk3QyxRQUFBLENBQVNnQixJQUFJLENBQUNELFVBQVU7UUFDNUJTLEtBQUE7UUFDQW5CLE1BQUEsRUFBUTtRQUNSeUMsV0FBQSxFQUFhLElBQUlDLElBQUEsR0FBT0MsV0FBVztRQUNuQ3ZCLE9BQUEsRUFBU0EsT0FBQSxDQUFRMkIsR0FBRyxDQUFFQyxNQUFBLElBQVk7VUFBQTtVQUFBOUUsY0FBQSxHQUFBQyxDQUFBO1VBQUFELGNBQUEsR0FBQUUsQ0FBQTtVQUFBO1lBQ2hDNkUsV0FBQSxFQUFhRCxNQUFBLENBQU9FLFlBQVk7WUFDaENDLFVBQUEsRUFBWUgsTUFBQSxDQUFPSSxJQUFJO1lBQ3ZCQyxVQUFBLEVBQVlMLE1BQUEsQ0FBT0ssVUFBVTtZQUM3QkMsV0FBQSxFQUFhTixNQUFBLENBQU9NLFdBQVc7WUFDL0J0RCxNQUFBLEVBQVE7WUFDUnVELFlBQUEsRUFBY1AsTUFBQSxDQUFPTyxZQUFZO1lBQ2pDQyxRQUFBLEVBQVVSLE1BQUEsQ0FBT1M7VUFDbkI7UUFBQTtRQUNBQyxlQUFBLEVBQWlCO01BQ25CO0lBQ0YsRUFBRSxPQUFPekQsS0FBQSxFQUFZO01BQUE7TUFBQS9CLGNBQUEsR0FBQUUsQ0FBQTtNQUNuQjtNQUNBLE1BQU0sSUFBSWlDLEtBQUEsQ0FBTTtNQUFrQztNQUFBLENBQUFuQyxjQUFBLEdBQUFTLENBQUEsV0FBQXNCLEtBQUEsQ0FBTU4sUUFBUSxFQUFFZ0IsSUFBQSxFQUFNSSxPQUFBO01BQUE7TUFBQSxDQUFBN0MsY0FBQSxHQUFBUyxDQUFBLFdBQVdzQixLQUFBLENBQU1jLE9BQU8sR0FBRTtJQUNwRztFQUNGO0FBQ0Y7QUFHTyxNQUFNMUMsYUFBQSxTQUFzQmdDLEtBQUE7RUFDakNsQixZQUNFNEIsT0FBZSxFQUNmNkUsVUFBMEIsRUFDMUJDLFNBQXlCLEVBQ3pCQyxPQUFvQixFQUNwQjtJQUFBO0lBQUE1SCxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQ0EsS0FBSyxDQUFDMkMsT0FBQSxRQUpDNkUsVUFBQSxHQUFBQSxVQUFBLE9BQ0FDLFNBQUEsR0FBQUEsU0FBQSxPQUNBQyxPQUFBLEdBQUFBLE9BQUE7SUFBQTtJQUFBNUgsY0FBQSxHQUFBRSxDQUFBO0lBR1AsSUFBSSxDQUFDZ0YsSUFBSSxHQUFHO0VBQ2Q7QUFDRjtBQUVPLE1BQU1uRiwwQkFBQSxTQUFtQ0ksYUFBQTtFQUM5Q2MsWUFBWTRCLE9BQWUsRUFBRTtJQUFBO0lBQUE3QyxjQUFBLEdBQUFDLENBQUE7SUFBQUQsY0FBQSxHQUFBRSxDQUFBO0lBQzNCLEtBQUssQ0FBQzJDLE9BQUEsRUFBUyxHQUFHO0lBQUE7SUFBQTdDLGNBQUEsR0FBQUUsQ0FBQTtJQUNsQixJQUFJLENBQUNnRixJQUFJLEdBQUc7RUFDZDtBQUNGO0FBRU8sTUFBTTlFLHVCQUFBLFNBQWdDRCxhQUFBO0VBQzNDYyxZQUFZNEIsT0FBZSxFQUFFZ0YsS0FBYyxFQUFFO0lBQUE7SUFBQTdILGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7SUFDM0MsS0FBSyxDQUFDMkMsT0FBQSxFQUFTLEtBQUssb0JBQW9CO01BQUVnRjtJQUFNO0lBQUE7SUFBQTdILGNBQUEsR0FBQUUsQ0FBQTtJQUNoRCxJQUFJLENBQUNnRixJQUFJLEdBQUc7RUFDZDtBQUNGO0FBRU8sTUFBTTdFLGVBQUE7QUFBQTtBQUFBLENBQUFMLGNBQUEsR0FBQUUsQ0FBQSxTQUFrQixJQUFJYyxlQUFBO01BQ25DVCxRQUFBO0FBQUE7QUFBQSxDQUFBUCxjQUFBLEdBQUFFLENBQUEsU0FBZUcsZUFBQSIsImlnbm9yZUxpc3QiOltdfQ==