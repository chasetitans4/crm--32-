{"version":3,"names":["cov_eho37rpwg","actualCoverage","s","default","f","_default","useRoleAccess","requiredRole","user","hasRole","_AuthContext","useAuth","permissionMappings","allowedRoles","hasAccess","b","some","role","userRole"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useRoleAccess.ts"],"sourcesContent":["\"use client\"\n\nimport { useAuth } from '../context/AuthContext'\n\n/**\n * Hook for role-based access control\n * @param requiredRole - The role required to access a feature\n * @returns Object with hasAccess boolean and userRole\n */\nexport const useRoleAccess = (requiredRole: string) => {\n  const { user, hasRole } = useAuth()\n  \n  // Define permission mappings for specific actions\n  const permissionMappings: Record<string, string[]> = {\n    'contracts:write': ['admin', 'agent'],\n    'invoices:write': ['admin', 'agent'],\n    'contracts:read': ['admin', 'agent', 'user'],\n    'invoices:read': ['admin', 'agent', 'user'],\n  }\n  \n  // Check if the required role is a specific permission\n  const allowedRoles = permissionMappings[requiredRole]\n  const hasAccess = allowedRoles \n    ? allowedRoles.some(role => hasRole(role))\n    : hasRole(requiredRole)\n  \n  const userRole = user?.role || null\n  \n  return {\n    hasAccess,\n    userRole\n  }\n}\n\nexport default useRoleAccess\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASa;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAyBbC,QAAA;IAAA;IAAAH,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAG,QAAA;;MAzBaC,cAAA;IAAA;IAAAN,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAI,aAAA;;;;;iCAPW;AAAA;AAAAN,aAAA,GAAAE,CAAA;AAOjB,MAAMI,aAAA,GAAiBC,YAAA;EAAA;EAAAP,aAAA,GAAAI,CAAA;EAC5B,MAAM;IAAEI,IAAI;IAAEC;EAAO,CAAE;EAAA;EAAA,CAAAT,aAAA,GAAAE,CAAA,OAAG,IAAAQ,YAAA,CAAAC,OAAO;EAEjC;EACA,MAAMC,kBAAA;EAAA;EAAA,CAAAZ,aAAA,GAAAE,CAAA,OAA+C;IACnD,mBAAmB,CAAC,SAAS,QAAQ;IACrC,kBAAkB,CAAC,SAAS,QAAQ;IACpC,kBAAkB,CAAC,SAAS,SAAS,OAAO;IAC5C,iBAAiB,CAAC,SAAS,SAAS;EACtC;EAEA;EACA,MAAMW,YAAA;EAAA;EAAA,CAAAb,aAAA,GAAAE,CAAA,QAAeU,kBAAkB,CAACL,YAAA,CAAa;EACrD,MAAMO,SAAA;EAAA;EAAA,CAAAd,aAAA,GAAAE,CAAA,QAAYW,YAAA;EAAA;EAAA,CAAAb,aAAA,GAAAe,CAAA,UACdF,YAAA,CAAaG,IAAI,CAACC,IAAA,IAAQ;IAAA;IAAAjB,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAAA,OAAAO,OAAA,CAAQQ,IAAA;EAAA;EAAA;EAAA,CAAAjB,aAAA,GAAAe,CAAA,UAClCN,OAAA,CAAQF,YAAA;EAEZ,MAAMW,QAAA;EAAA;EAAA,CAAAlB,aAAA,GAAAE,CAAA;EAAW;EAAA,CAAAF,aAAA,GAAAe,CAAA,UAAAP,IAAA,EAAMS,IAAA;EAAA;EAAA,CAAAjB,aAAA,GAAAe,CAAA,UAAQ;EAAA;EAAAf,aAAA,GAAAE,CAAA;EAE/B,OAAO;IACLY,SAAA;IACAI;EACF;AACF;MAEAb,QAAA;AAAA;AAAA,CAAAL,aAAA,GAAAE,CAAA,QAAeI,aAAA","ignoreList":[]}