{"version":3,"names":["cov_gaz3hrgwy","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","formatStartupReport","validateStartup","checks","envCheck","simulateCheck","Math","random","push","apiCheck","dbCheck","thirdPartyCheck","overallStatus","some","check","status","timestamp","Date","toISOString","message","Promise","resolve","setTimeout","report","summary","toLocaleString","toUpperCase","forEach","index"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\startupValidator.ts"],"sourcesContent":["// src/utils/startupValidator.ts\n\n/**\n * This utility file provides functions for validating application startup conditions.\n * This can include checking environment variables, database connections, API availability, etc.\n */\n\n/**\n * Represents the result of a single startup check.\n */\nexport interface StartupCheckResult {\n  name: string\n  status: \"success\" | \"failure\" | \"warning\"\n  message: string\n}\n\n/**\n * Represents the overall report of startup validation.\n */\nexport interface StartupValidationReport {\n  overallStatus: \"success\" | \"failure\" | \"warning\"\n  checks: StartupCheckResult[]\n  timestamp: string\n}\n\n/**\n * Performs a series of simulated startup checks.\n * @returns A promise that resolves with a StartupValidationReport.\n */\nexport async function validateStartup(): Promise<StartupValidationReport> {\n  const checks: StartupCheckResult[] = []\n\n  // Simulate environment variable check\n  const envCheck = await simulateCheck(\n    \"Environment Variables Loaded\",\n    Math.random() > 0.1 ? \"success\" : \"failure\",\n    \"Required environment variables are present.\",\n  )\n  checks.push(envCheck)\n\n  // Simulate API connectivity check\n  const apiCheck = await simulateCheck(\n    \"API Connectivity\",\n    Math.random() > 0.05 ? \"success\" : \"failure\",\n    \"Backend API is reachable.\",\n  )\n  checks.push(apiCheck)\n\n  // Simulate database connection check\n  const dbCheck = await simulateCheck(\n    \"Database Connection\",\n    Math.random() > 0.02 ? \"success\" : \"failure\",\n    \"Database connection established.\",\n  )\n  checks.push(dbCheck)\n\n  // Simulate third-party service integration check\n  const thirdPartyCheck = await simulateCheck(\n    \"Third-Party Service (e.g., Stripe)\",\n    Math.random() > 0.15 ? \"success\" : \"warning\",\n    \"Stripe API keys are configured, but connection might be slow.\",\n  )\n  checks.push(thirdPartyCheck)\n\n  // Determine overall status\n  let overallStatus: StartupValidationReport[\"overallStatus\"] = \"success\"\n  if (checks.some((check) => check.status === \"failure\")) {\n    overallStatus = \"failure\"\n  } else if (checks.some((check) => check.status === \"warning\")) {\n    overallStatus = \"warning\"\n  }\n\n  return {\n    overallStatus,\n    checks,\n    timestamp: new Date().toISOString(),\n  }\n}\n\n/**\n * Helper function to simulate an asynchronous check.\n * @param name The name of the check.\n * @param status The simulated status (\"success\", \"failure\", \"warning\").\n * @param message The message for the check result.\n * @returns A promise that resolves with a StartupCheckResult.\n */\nasync function simulateCheck(\n  name: string,\n  status: StartupCheckResult[\"status\"],\n  message: string,\n): Promise<StartupCheckResult> {\n  return new Promise((resolve) => {\n    setTimeout(\n      () => {\n        resolve({ name, status, message })\n      },\n      Math.random() * 300 + 50,\n    ) // Simulate varying check times\n  })\n}\n\n/**\n * Formats a startup validation report into a human-readable string.\n * @param report The StartupValidationReport to format.\n * @returns A formatted string summary of the report.\n */\nexport function formatStartupReport(report: StartupValidationReport): string {\n  let summary = `Application Startup Validation Report (Generated: ${new Date(report.timestamp).toLocaleString()}):\\n`\n  summary += `Overall Status: ${report.overallStatus.toUpperCase()}\\n\\n`\n\n  summary += \"Individual Checks:\\n\"\n  report.checks.forEach((check, index) => {\n    summary += `${index + 1}. [${check.status.toUpperCase()}] ${check.name}: ${check.message}\\n`\n  })\n\n  if (report.overallStatus === \"failure\") {\n    summary +=\n      \"\\nAction Required: Critical failures detected. Please review the logs and resolve the issues before proceeding.\"\n  } else if (report.overallStatus === \"warning\") {\n    summary +=\n      \"\\nReview Recommended: Warnings detected. The application may function, but some features might be impacted or require attention.\"\n  } else {\n    summary += \"\\nAll essential services are running correctly. Application is ready.\"\n  }\n\n  return summary\n}\n"],"mappings":"AAAA;AAEA;;;GAAA,CAKA;;MAEC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;M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","ignoreList":[]}