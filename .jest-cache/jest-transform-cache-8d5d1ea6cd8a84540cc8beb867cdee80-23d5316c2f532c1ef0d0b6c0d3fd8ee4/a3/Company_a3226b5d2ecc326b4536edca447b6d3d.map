{"version":3,"names":["_default","Company","setActiveTab","cov_1qwh4jt2fe","f","activeSection","setActiveSection","s","_react","useState","loading","setLoading","hasError","error","setError","clearError","_standardErrorHandling","useErrorState","componentErrors","setComponentErrors","user","_AuthContext","useAuth","useEffect","initializeComponent","result","handleAsyncOperation","b","createStandardError","type","code","role","includes","Promise","resolve","setTimeout","success","handleSectionChange","sectionId","validSections","prev","message","handleComponentError","componentName","errorMessage","handleRetry","window","location","reload","sections","id","label","icon","_jsxruntime","jsx","_lucidereact","DollarSign","size","component","jsxs","className","commission","AlertCircle","_CommissionDashboard","default","currentUser","onError","FileText","contracts","_Contracts","Loader2","DefaultErrorFallback","retry","onClick","Building2","name","charAt","toUpperCase","email","split","map","section","find"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Company.tsx"],"sourcesContent":["\"use client\";\n\nimport type React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport { FileText, DollarSign, Building2, AlertCircle, Loader2 } from \"lucide-react\"\nimport { useAuth } from \"../context/AuthContext\"\nimport { useErrorState, handleAsyncOperation, DefaultErrorFallback, createStandardError } from \"../utils/standardErrorHandling\"\nimport CommissionDashboard from \"./CommissionDashboard\"\nimport Contracts from \"./Contracts\"\n\ninterface CompanyProps {\n  setActiveTab?: (tab: string) => void\n}\n\nconst Company: React.FC<CompanyProps> = ({ setActiveTab }) => {\n  const [activeSection, setActiveSection] = useState(\"commission\")\n  const [loading, setLoading] = useState(true)\n  const { hasError, error, setError, clearError } = useErrorState()\n  const [componentErrors, setComponentErrors] = useState<Record<string, string>>({})\n  const { user } = useAuth()\n\n  // Initialize component and handle authentication\n  useEffect(() => {\n    const initializeComponent = async () => {\n      setLoading(true)\n      clearError()\n      \n      const result = await handleAsyncOperation(async () => {\n        // Check if user is authenticated\n        if (!user) {\n          throw createStandardError(\n            'You must be logged in to access company information.',\n            {\n              type: 'authentication',\n              code: 'AUTH_REQUIRED'\n            }\n          )\n        }\n\n        // Validate user permissions\n        if (!user.role || !['admin', 'agent', 'manager'].includes(user.role)) {\n          throw createStandardError(\n            'You do not have permission to access company information.',\n            {\n              type: 'authorization',\n              code: 'INSUFFICIENT_PERMISSIONS'\n            }\n          )\n        }\n\n        // Simulate component initialization delay\n        await new Promise(resolve => setTimeout(resolve, 500))\n        \n        return { success: true }\n      }, 'Company component initialization')\n      \n      if (result.error) {\n        setError(result.error)\n      }\n      \n      setLoading(false)\n    }\n\n    initializeComponent()\n  }, [user, setError, clearError])\n\n  // Handle section changes with validation\n  const handleSectionChange = async (sectionId: string) => {\n    const result = await handleAsyncOperation(async () => {\n      if (!sectionId || typeof sectionId !== 'string') {\n        throw createStandardError('Invalid section ID', {\n          type: 'validation',\n          code: 'INVALID_SECTION_ID'\n        })\n      }\n      \n      const validSections = ['commission', 'contracts']\n      if (!validSections.includes(sectionId)) {\n        throw createStandardError('Invalid section selected', {\n          type: 'validation',\n          code: 'INVALID_SECTION'\n        })\n      }\n      \n      setActiveSection(sectionId)\n      setComponentErrors(prev => ({ ...prev, [sectionId]: '' }))\n      \n      return { success: true }\n    }, `Section change to ${sectionId}`)\n    \n    if (result.error) {\n      setComponentErrors(prev => ({ \n        ...prev, \n        [sectionId]: result.error?.message || 'Failed to load section. Please try again.' \n      }))\n    }\n  }\n\n  // Handle component errors from child components\n  const handleComponentError = (componentName: string, errorMessage: string) => {\n    setComponentErrors(prev => ({ ...prev, [componentName]: errorMessage }))\n  }\n\n  // Retry function for failed operations\n  const handleRetry = () => {\n    clearError()\n    setComponentErrors({})\n    setLoading(true)\n    // Re-trigger useEffect\n    window.location.reload()\n  }\n\n  const sections = [\n    {\n      id: \"commission\",\n      label: \"Commission Dashboard\",\n      icon: <DollarSign size={18} />,\n      component: (\n        <div className=\"relative\">\n          {componentErrors.commission && (\n            <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center gap-2\">\n                <AlertCircle className=\"text-red-500\" size={16} />\n                <span className=\"text-red-700 text-sm\">{componentErrors.commission}</span>\n              </div>\n            </div>\n          )}\n          <CommissionDashboard \n            currentUser={user} \n            onError={(error) => handleComponentError('commission', error)}\n          />\n        </div>\n      ),\n    },\n    {\n      id: \"contracts\",\n      label: \"Contracts\",\n      icon: <FileText size={18} />,\n      component: (\n        <div className=\"relative\">\n          {componentErrors.contracts && (\n            <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\n              <div className=\"flex items-center gap-2\">\n                <AlertCircle className=\"text-red-500\" size={16} />\n                <span className=\"text-red-700 text-sm\">{componentErrors.contracts}</span>\n              </div>\n            </div>\n          )}\n          <Contracts \n            currentUser={user} \n            onError={(error) => handleComponentError('contracts', error)}\n          />\n        </div>\n      ),\n    },\n  ]\n\n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"flex items-center justify-center min-h-[400px]\">\n          <div className=\"text-center\">\n            <Loader2 className=\"animate-spin text-blue-600 mx-auto mb-4\" size={48} />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Loading Company Dashboard</h3>\n            <p className=\"text-gray-600\">Please wait while we prepare your information...</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  // Error state\n  if (hasError && error) {\n    return (\n      <div className=\"p-6\">\n        <div className=\"max-w-md mx-auto\">\n          <DefaultErrorFallback\n            error={error}\n            retry={handleRetry}\n          />\n          {(error.type === 'authentication' || error.type === 'authorization') && setActiveTab && (\n            <div className=\"mt-4 text-center\">\n              <button\n                onClick={() => setActiveTab('login')}\n                className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors\"\n              >\n                Go to Login\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"p-6\">\n      {/* Header */}\n      <div className=\"mb-6\">\n        <div className=\"flex items-center gap-3 mb-2\">\n          <Building2 className=\"text-blue-600\" size={32} />\n          <h1 className=\"text-3xl font-bold text-gray-800\">Company</h1>\n        </div>\n        <p className=\"text-gray-600\">Manage company information, documents, and contractor resources</p>\n        \n        {/* User Info */}\n        {user && (\n          <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                <span className=\"text-blue-600 font-semibold text-sm\">\n                  {user.name?.charAt(0).toUpperCase() || user.email.charAt(0).toUpperCase()}\n                </span>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-blue-900\">\n                  {user.name || user.email.split('@')[0]}\n                </p>\n                <p className=\"text-xs text-blue-700 capitalize\">{user.role}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Navigation Tabs */}\n      <div className=\"border-b border-gray-200 mb-6\">\n        <nav className=\"flex space-x-8\" role=\"tablist\">\n          {sections.map((section) => (\n            <button\n              key={section.id}\n              onClick={() => handleSectionChange(section.id)}\n              role=\"tab\"\n              aria-selected={activeSection === section.id}\n              aria-controls={`panel-${section.id}`}\n              className={`flex items-center gap-2 py-2 px-1 border-b-2 font-medium text-base transition-colors group focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 ${\n                activeSection === section.id\n                  ? \"border-blue-700 text-blue-700\"\n                  : \"border-transparent text-gray-600 hover:text-blue-600 hover:border-blue-400\"\n              }`}\n            >\n              <span className={activeSection === section.id ? \"animate-bounce-subtle\" : \"\"}>\n                {section.icon}\n              </span>\n              {section.label}\n            </button>\n          ))}\n        </nav>\n      </div>\n\n      {/* Active Section Content */}\n      <div \n        className=\"bg-white rounded-lg min-h-[400px]\"\n        role=\"tabpanel\"\n        id={`panel-${activeSection}`}\n        aria-labelledby={`tab-${activeSection}`}\n      >\n        {sections.find((section) => section.id === activeSection)?.component}\n      </div>\n    </div>\n  )\n}\n\nexport default Company\n"],"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","ignoreList":[]}