40290ba88384c2410c5d47d361aaef59
"use client";
"use strict";

/* istanbul ignore next */
function cov_v1d9so03r() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useDataFetching.ts";
  var hash = "f56614efeaa8487445aaaf15330a8d67c8b6a722";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useDataFetching.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 26
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 35
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 32
        }
      },
      "9": {
        start: {
          line: 29,
          column: 15
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 31,
          column: 14
        },
        end: {
          line: 31,
          column: 23
        }
      },
      "11": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 33
        }
      },
      "12": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "13": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "14": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 35,
          column: 69
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "16": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 26
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 20
        }
      },
      "18": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 23
        }
      },
      "19": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 47,
          column: 7
        }
      },
      "20": {
        start: {
          line: 50,
          column: 174
        },
        end: {
          line: 50,
          column: 181
        }
      },
      "21": {
        start: {
          line: 51,
          column: 28
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "23": {
        start: {
          line: 53,
          column: 27
        },
        end: {
          line: 53,
          column: 50
        }
      },
      "24": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "25": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "26": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 27
        }
      },
      "27": {
        start: {
          line: 58,
          column: 34
        },
        end: {
          line: 58,
          column: 61
        }
      },
      "28": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "29": {
        start: {
          line: 60,
          column: 40
        },
        end: {
          line: 60,
          column: 67
        }
      },
      "30": {
        start: {
          line: 61,
          column: 40
        },
        end: {
          line: 61,
          column: 63
        }
      },
      "31": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 62,
          column: 62
        }
      },
      "32": {
        start: {
          line: 63,
          column: 23
        },
        end: {
          line: 63,
          column: 47
        }
      },
      "33": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 69,
          column: 7
        }
      },
      "34": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 49
        }
      },
      "35": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 75,
          column: 11
        }
      },
      "36": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 74,
          column: 10
        }
      },
      "37": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 39
        }
      },
      "38": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 106,
          column: 6
        }
      },
      "39": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "40": {
        start: {
          line: 78,
          column: 26
        },
        end: {
          line: 78,
          column: 27
        }
      },
      "41": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 100,
          column: 13
        }
      },
      "42": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 84,
          column: 17
        }
      },
      "43": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 40
        }
      },
      "44": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 82,
          column: 43
        }
      },
      "45": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 92
        }
      },
      "46": {
        start: {
          line: 83,
          column: 49
        },
        end: {
          line: 83,
          column: 90
        }
      },
      "47": {
        start: {
          line: 85,
          column: 31
        },
        end: {
          line: 85,
          column: 48
        }
      },
      "48": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 89,
          column: 17
        }
      },
      "49": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 87,
          column: 41
        }
      },
      "50": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 37
        }
      },
      "51": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 30
        }
      },
      "52": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 80
        }
      },
      "53": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 99,
          column: 17
        }
      },
      "54": {
        start: {
          line: 94,
          column: 20
        },
        end: {
          line: 97,
          column: 21
        }
      },
      "55": {
        start: {
          line: 95,
          column: 24
        },
        end: {
          line: 95,
          column: 45
        }
      },
      "56": {
        start: {
          line: 96,
          column: 24
        },
        end: {
          line: 96,
          column: 41
        }
      },
      "57": {
        start: {
          line: 98,
          column: 20
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "58": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 24
        }
      },
      "59": {
        start: {
          line: 107,
          column: 22
        },
        end: {
          line: 136,
          column: 6
        }
      },
      "60": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 40
        }
      },
      "61": {
        start: {
          line: 108,
          column: 33
        },
        end: {
          line: 108,
          column: 40
        }
      },
      "62": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "63": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 29
        }
      },
      "64": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 27
        }
      },
      "65": {
        start: {
          line: 112,
          column: 27
        },
        end: {
          line: 112,
          column: 75
        }
      },
      "66": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 44
        }
      },
      "67": {
        start: {
          line: 113,
          column: 37
        },
        end: {
          line: 113,
          column: 44
        }
      },
      "68": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 28
        }
      },
      "69": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "70": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 63
        }
      },
      "71": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 32
        }
      },
      "72": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 44
        }
      },
      "73": {
        start: {
          line: 121,
          column: 37
        },
        end: {
          line: 121,
          column: 44
        }
      },
      "74": {
        start: {
          line: 122,
          column: 26
        },
        end: {
          line: 122,
          column: 77
        }
      },
      "75": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 28
        }
      },
      "76": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 29
        }
      },
      "77": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "78": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 34
        }
      },
      "79": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 146,
          column: 6
        }
      },
      "80": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 141,
          column: 9
        }
      },
      "81": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 35
        }
      },
      "82": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 26
        }
      },
      "83": {
        start: {
          line: 147,
          column: 19
        },
        end: {
          line: 158,
          column: 6
        }
      },
      "84": {
        start: {
          line: 148,
          column: 28
        },
        end: {
          line: 148,
          column: 83
        }
      },
      "85": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "86": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "87": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 64
        }
      },
      "88": {
        start: {
          line: 159,
          column: 18
        },
        end: {
          line: 172,
          column: 6
        }
      },
      "89": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 29
        }
      },
      "90": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 23
        }
      },
      "91": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 26
        }
      },
      "92": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 29
        }
      },
      "93": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 164,
          column: 25
        }
      },
      "94": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "95": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 35
        }
      },
      "96": {
        start: {
          line: 173,
          column: 18
        },
        end: {
          line: 180,
          column: 6
        }
      },
      "97": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "98": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 30
        }
      },
      "99": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 189,
          column: 7
        }
      },
      "100": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "101": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 24
        }
      },
      "102": {
        start: {
          line: 190,
          column: 4
        },
        end: {
          line: 200,
          column: 6
        }
      },
      "103": {
        start: {
          line: 203,
          column: 26
        },
        end: {
          line: 218,
          column: 6
        }
      },
      "104": {
        start: {
          line: 204,
          column: 25
        },
        end: {
          line: 210,
          column: 10
        }
      },
      "105": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "106": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 79
        }
      },
      "107": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 31
        }
      },
      "108": {
        start: {
          line: 219,
          column: 4
        },
        end: {
          line: 222,
          column: 7
        }
      },
      "109": {
        start: {
          line: 225,
          column: 26
        },
        end: {
          line: 236,
          column: 6
        }
      },
      "110": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 232,
          column: 9
        }
      },
      "111": {
        start: {
          line: 227,
          column: 25
        },
        end: {
          line: 227,
          column: 50
        }
      },
      "112": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 58
        }
      },
      "113": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 79
        }
      },
      "114": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 32
        }
      },
      "115": {
        start: {
          line: 237,
          column: 19
        },
        end: {
          line: 240,
          column: 6
        }
      },
      "116": {
        start: {
          line: 242,
          column: 27
        },
        end: {
          line: 242,
          column: 40
        }
      },
      "117": {
        start: {
          line: 243,
          column: 19
        },
        end: {
          line: 255,
          column: 6
        }
      },
      "118": {
        start: {
          line: 244,
          column: 28
        },
        end: {
          line: 244,
          column: 90
        }
      },
      "119": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "120": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 67
        }
      },
      "121": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 76
        }
      },
      "122": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 32
        }
      },
      "123": {
        start: {
          line: 256,
          column: 4
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "124": {
        start: {
          line: 262,
          column: 80
        },
        end: {
          line: 262,
          column: 87
        }
      },
      "125": {
        start: {
          line: 263,
          column: 42
        },
        end: {
          line: 263,
          column: 75
        }
      },
      "126": {
        start: {
          line: 264,
          column: 36
        },
        end: {
          line: 264,
          column: 73
        }
      },
      "127": {
        start: {
          line: 265,
          column: 40
        },
        end: {
          line: 265,
          column: 63
        }
      },
      "128": {
        start: {
          line: 266,
          column: 35
        },
        end: {
          line: 274,
          column: 6
        }
      },
      "129": {
        start: {
          line: 267,
          column: 23
        },
        end: {
          line: 267,
          column: 65
        }
      },
      "130": {
        start: {
          line: 268,
          column: 8
        },
        end: {
          line: 268,
          column: 36
        }
      },
      "131": {
        start: {
          line: 269,
          column: 8
        },
        end: {
          line: 269,
          column: 27
        }
      },
      "132": {
        start: {
          line: 275,
          column: 23
        },
        end: {
          line: 282,
          column: 6
        }
      },
      "133": {
        start: {
          line: 283,
          column: 23
        },
        end: {
          line: 283,
          column: 55
        }
      },
      "134": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 48
        }
      },
      "135": {
        start: {
          line: 285,
          column: 28
        },
        end: {
          line: 285,
          column: 43
        }
      },
      "136": {
        start: {
          line: 286,
          column: 21
        },
        end: {
          line: 292,
          column: 6
        }
      },
      "137": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 289,
          column: 9
        }
      },
      "138": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 288,
          column: 45
        }
      },
      "139": {
        start: {
          line: 288,
          column: 35
        },
        end: {
          line: 288,
          column: 43
        }
      },
      "140": {
        start: {
          line: 293,
          column: 25
        },
        end: {
          line: 299,
          column: 6
        }
      },
      "141": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 296,
          column: 9
        }
      },
      "142": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 295,
          column: 45
        }
      },
      "143": {
        start: {
          line: 295,
          column: 35
        },
        end: {
          line: 295,
          column: 43
        }
      },
      "144": {
        start: {
          line: 300,
          column: 21
        },
        end: {
          line: 306,
          column: 6
        }
      },
      "145": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 303,
          column: 9
        }
      },
      "146": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 33
        }
      },
      "147": {
        start: {
          line: 307,
          column: 30
        },
        end: {
          line: 310,
          column: 10
        }
      },
      "148": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 308,
          column: 26
        }
      },
      "149": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 309,
          column: 26
        }
      },
      "150": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 323,
          column: 6
        }
      },
      "151": {
        start: {
          line: 325,
          column: 17
        },
        end: {
          line: 325,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 22
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 27
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 28
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "getCachedData",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 22
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 41,
            column: 1
          }
        },
        line: 32
      },
      "7": {
        name: "setCachedData",
        decl: {
          start: {
            line: 42,
            column: 9
          },
          end: {
            line: 42,
            column: 22
          }
        },
        loc: {
          start: {
            line: 42,
            column: 44
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 42
      },
      "8": {
        name: "useDataFetching",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 24
          }
        },
        loc: {
          start: {
            line: 49,
            column: 54
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 49
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 51,
            column: 49
          },
          end: {
            line: 51,
            column: 50
          }
        },
        loc: {
          start: {
            line: 51,
            column: 53
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 51
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 65,
            column: 27
          }
        },
        loc: {
          start: {
            line: 65,
            column: 30
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 27
          }
        },
        loc: {
          start: {
            line: 71,
            column: 30
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 71
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 72,
            column: 16
          }
        },
        loc: {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 72
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 76,
            column: 53
          },
          end: {
            line: 76,
            column: 54
          }
        },
        loc: {
          start: {
            line: 76,
            column: 98
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 76
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 83,
            column: 38
          },
          end: {
            line: 83,
            column: 39
          }
        },
        loc: {
          start: {
            line: 83,
            column: 49
          },
          end: {
            line: 83,
            column: 90
          }
        },
        line: 83
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 107,
            column: 46
          },
          end: {
            line: 107,
            column: 47
          }
        },
        loc: {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 130,
            column: 5
          }
        },
        line: 107
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 137,
            column: 44
          },
          end: {
            line: 137,
            column: 45
          }
        },
        loc: {
          start: {
            line: 137,
            column: 54
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 137
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 147,
            column: 43
          },
          end: {
            line: 147,
            column: 44
          }
        },
        loc: {
          start: {
            line: 147,
            column: 54
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 147
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 159,
            column: 42
          },
          end: {
            line: 159,
            column: 43
          }
        },
        loc: {
          start: {
            line: 159,
            column: 46
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 159
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 173,
            column: 42
          },
          end: {
            line: 173,
            column: 43
          }
        },
        loc: {
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 173
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 182,
            column: 26
          },
          end: {
            line: 182,
            column: 27
          }
        },
        loc: {
          start: {
            line: 182,
            column: 30
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 182
      },
      "21": {
        name: "useApiCall",
        decl: {
          start: {
            line: 202,
            column: 9
          },
          end: {
            line: 202,
            column: 19
          }
        },
        loc: {
          start: {
            line: 202,
            column: 57
          },
          end: {
            line: 223,
            column: 1
          }
        },
        line: 202
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 203,
            column: 50
          },
          end: {
            line: 203,
            column: 51
          }
        },
        loc: {
          start: {
            line: 203,
            column: 60
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 203
      },
      "23": {
        name: "useLocalStorageData",
        decl: {
          start: {
            line: 224,
            column: 9
          },
          end: {
            line: 224,
            column: 28
          }
        },
        loc: {
          start: {
            line: 224,
            column: 66
          },
          end: {
            line: 260,
            column: 1
          }
        },
        line: 224
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 225,
            column: 50
          },
          end: {
            line: 225,
            column: 51
          }
        },
        loc: {
          start: {
            line: 225,
            column: 60
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 225
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 243,
            column: 43
          },
          end: {
            line: 243,
            column: 44
          }
        },
        loc: {
          start: {
            line: 243,
            column: 54
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 243
      },
      "26": {
        name: "usePaginatedData",
        decl: {
          start: {
            line: 261,
            column: 9
          },
          end: {
            line: 261,
            column: 25
          }
        },
        loc: {
          start: {
            line: 261,
            column: 55
          },
          end: {
            line: 324,
            column: 1
          }
        },
        line: 261
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 266,
            column: 59
          },
          end: {
            line: 266,
            column: 60
          }
        },
        loc: {
          start: {
            line: 266,
            column: 69
          },
          end: {
            line: 270,
            column: 5
          }
        },
        line: 266
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 286,
            column: 45
          },
          end: {
            line: 286,
            column: 46
          }
        },
        loc: {
          start: {
            line: 286,
            column: 49
          },
          end: {
            line: 290,
            column: 5
          }
        },
        line: 286
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 288,
            column: 27
          },
          end: {
            line: 288,
            column: 28
          }
        },
        loc: {
          start: {
            line: 288,
            column: 35
          },
          end: {
            line: 288,
            column: 43
          }
        },
        line: 288
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 293,
            column: 49
          },
          end: {
            line: 293,
            column: 50
          }
        },
        loc: {
          start: {
            line: 293,
            column: 53
          },
          end: {
            line: 297,
            column: 5
          }
        },
        line: 293
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 295,
            column: 27
          },
          end: {
            line: 295,
            column: 28
          }
        },
        loc: {
          start: {
            line: 295,
            column: 35
          },
          end: {
            line: 295,
            column: 43
          }
        },
        line: 295
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 300,
            column: 45
          },
          end: {
            line: 300,
            column: 46
          }
        },
        loc: {
          start: {
            line: 300,
            column: 53
          },
          end: {
            line: 304,
            column: 5
          }
        },
        line: 300
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 307,
            column: 54
          },
          end: {
            line: 307,
            column: 55
          }
        },
        loc: {
          start: {
            line: 307,
            column: 62
          },
          end: {
            line: 310,
            column: 5
          }
        },
        line: 307
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 40
          },
          end: {
            line: 49,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 49,
            column: 50
          },
          end: {
            line: 49,
            column: 52
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 50,
            column: 30
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 51
          }
        }],
        line: 50
      },
      "5": {
        loc: {
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 50,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 69
          },
          end: {
            line: 50,
            column: 70
          }
        }],
        line: 50
      },
      "6": {
        loc: {
          start: {
            line: 50,
            column: 72
          },
          end: {
            line: 50,
            column: 89
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 85
          },
          end: {
            line: 50,
            column: 89
          }
        }],
        line: 50
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 101
          },
          end: {
            line: 50,
            column: 130
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 117
          },
          end: {
            line: 50,
            column: 130
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 152
          },
          end: {
            line: 50,
            column: 169
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 167
          },
          end: {
            line: 50,
            column: 169
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 76,
            column: 71
          },
          end: {
            line: 76,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 82
          },
          end: {
            line: 76,
            column: 95
          }
        }],
        line: 76
      },
      "12": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "13": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 89,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "14": {
        loc: {
          start: {
            line: 92,
            column: 28
          },
          end: {
            line: 92,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 51
          },
          end: {
            line: 92,
            column: 54
          }
        }, {
          start: {
            line: 92,
            column: 57
          },
          end: {
            line: 92,
            column: 79
          }
        }],
        line: 92
      },
      "15": {
        loc: {
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 16
          },
          end: {
            line: 99,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "16": {
        loc: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 97,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 97,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "17": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 108,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "18": {
        loc: {
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 12
          },
          end: {
            line: 113,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "19": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "20": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 122,
            column: 49
          },
          end: {
            line: 122,
            column: 52
          }
        }, {
          start: {
            line: 122,
            column: 55
          },
          end: {
            line: 122,
            column: 77
          }
        }],
        line: 122
      },
      "22": {
        loc: {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "23": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 141,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "24": {
        loc: {
          start: {
            line: 148,
            column: 28
          },
          end: {
            line: 148,
            column: 83
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 60
          },
          end: {
            line: 148,
            column: 73
          }
        }, {
          start: {
            line: 148,
            column: 76
          },
          end: {
            line: 148,
            column: 83
          }
        }],
        line: 148
      },
      "25": {
        loc: {
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 8
          },
          end: {
            line: 153,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "26": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "27": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "28": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "29": {
        loc: {
          start: {
            line: 202,
            column: 25
          },
          end: {
            line: 202,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 35
          },
          end: {
            line: 202,
            column: 37
          }
        }],
        line: 202
      },
      "30": {
        loc: {
          start: {
            line: 202,
            column: 39
          },
          end: {
            line: 202,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 53
          },
          end: {
            line: 202,
            column: 55
          }
        }],
        line: 202
      },
      "31": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "32": {
        loc: {
          start: {
            line: 224,
            column: 48
          },
          end: {
            line: 224,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 224,
            column: 62
          },
          end: {
            line: 224,
            column: 64
          }
        }],
        line: 224
      },
      "33": {
        loc: {
          start: {
            line: 228,
            column: 19
          },
          end: {
            line: 228,
            column: 57
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 26
          },
          end: {
            line: 228,
            column: 42
          }
        }, {
          start: {
            line: 228,
            column: 45
          },
          end: {
            line: 228,
            column: 57
          }
        }],
        line: 228
      },
      "34": {
        loc: {
          start: {
            line: 244,
            column: 28
          },
          end: {
            line: 244,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 60
          },
          end: {
            line: 244,
            column: 80
          }
        }, {
          start: {
            line: 244,
            column: 83
          },
          end: {
            line: 244,
            column: 90
          }
        }],
        line: 244
      },
      "35": {
        loc: {
          start: {
            line: 261,
            column: 41
          },
          end: {
            line: 261,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 261,
            column: 51
          },
          end: {
            line: 261,
            column: 53
          }
        }],
        line: 261
      },
      "36": {
        loc: {
          start: {
            line: 262,
            column: 22
          },
          end: {
            line: 262,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 40
          },
          end: {
            line: 262,
            column: 42
          }
        }],
        line: 262
      },
      "37": {
        loc: {
          start: {
            line: 262,
            column: 44
          },
          end: {
            line: 262,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 262,
            column: 58
          },
          end: {
            line: 262,
            column: 59
          }
        }],
        line: 262
      },
      "38": {
        loc: {
          start: {
            line: 280,
            column: 15
          },
          end: {
            line: 280,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 280,
            column: 15
          },
          end: {
            line: 280,
            column: 39
          }
        }, {
          start: {
            line: 280,
            column: 43
          },
          end: {
            line: 280,
            column: 45
          }
        }],
        line: 280
      },
      "39": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 289,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "40": {
        loc: {
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 8
          },
          end: {
            line: 296,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "41": {
        loc: {
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 8
          },
          end: {
            line: 303,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "42": {
        loc: {
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 301,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 301,
            column: 21
          }
        }, {
          start: {
            line: 301,
            column: 25
          },
          end: {
            line: 301,
            column: 43
          }
        }],
        line: 301
      },
      "43": {
        loc: {
          start: {
            line: 313,
            column: 14
          },
          end: {
            line: 313,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 313,
            column: 14
          },
          end: {
            line: 313,
            column: 29
          }
        }, {
          start: {
            line: 313,
            column: 33
          },
          end: {
            line: 313,
            column: 35
          }
        }],
        line: 313
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0],
      "30": [0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useDataFetching.ts"],
      sourcesContent: ["\"use client\"\n\nimport { useState, useEffect, useCallback, useRef } from \"react\"\n\nexport interface UseDataFetchingOptions<T> {\n  initialData?: T\n  fetchOnMount?: boolean\n  retryAttempts?: number\n  retryDelay?: number\n  cacheKey?: string\n  cacheDuration?: number\n  onSuccess?: (data: T) => void\n  onError?: (error: Error) => void\n  dependencies?: any[]\n}\n\nexport interface UseDataFetchingReturn<T> {\n  data: T | null\n  loading: boolean\n  error: Error | null\n  refetch: () => Promise<void>\n  mutate: (newData: T | ((prevData: T | null) => T)) => void\n  reset: () => void\n  retry: () => Promise<void>\n  isRetrying: boolean\n  retryCount: number\n}\n\n// Simple in-memory cache\nconst cache = new Map<string, { data: any; timestamp: number; duration: number }>()\n\nfunction getCachedData<T>(key: string): T | null {\n  const cached = cache.get(key)\n  if (!cached) return null\n  \n  const isExpired = Date.now() - cached.timestamp > cached.duration\n  if (isExpired) {\n    cache.delete(key)\n    return null\n  }\n  \n  return cached.data\n}\n\nfunction setCachedData<T>(key: string, data: T, duration: number): void {\n  cache.set(key, {\n    data,\n    timestamp: Date.now(),\n    duration\n  })\n}\n\nexport function useDataFetching<T>(\n  fetchFunction: () => Promise<T>,\n  options: UseDataFetchingOptions<T> = {}\n): UseDataFetchingReturn<T> {\n  const {\n    initialData = null,\n    fetchOnMount = true,\n    retryAttempts = 3,\n    retryDelay = 1000,\n    cacheKey,\n    cacheDuration = 5 * 60 * 1000, // 5 minutes default\n    onSuccess,\n    onError,\n    dependencies = []\n  } = options\n\n  const [data, setData] = useState<T | null>(() => {\n    if (cacheKey) {\n      const cached = getCachedData<T>(cacheKey)\n      if (cached) return cached\n    }\n    return initialData\n  })\n  \n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n  const [isRetrying, setIsRetrying] = useState(false)\n  const [retryCount, setRetryCount] = useState(0)\n  \n  const fetchFunctionRef = useRef(fetchFunction)\n  const mountedRef = useRef(true)\n  \n  // Update function ref when it changes\n  useEffect(() => {\n    fetchFunctionRef.current = fetchFunction\n  }, [fetchFunction])\n  \n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  const executeWithRetry = useCallback(async (\n    operation: () => Promise<T>,\n    attempts: number = retryAttempts\n  ): Promise<T> => {\n    let lastError: Error\n    \n    for (let attempt = 0; attempt <= attempts; attempt++) {\n      try {\n        if (attempt > 0) {\n          setIsRetrying(true)\n          setRetryCount(attempt)\n          await new Promise(resolve => setTimeout(resolve, retryDelay * attempt))\n        }\n        \n        const result = await operation()\n        \n        if (mountedRef.current) {\n          setIsRetrying(false)\n          setRetryCount(0)\n        }\n        \n        return result\n      } catch (err) {\n        lastError = err instanceof Error ? err : new Error(String(err))\n        \n        if (attempt === attempts) {\n          if (mountedRef.current) {\n            setIsRetrying(false)\n            setRetryCount(0)\n          }\n          throw lastError\n        }\n      }\n    }\n    \n    throw lastError!\n  }, [retryAttempts, retryDelay])\n\n  const fetchData = useCallback(async () => {\n    if (!mountedRef.current) return\n    \n    try {\n      setLoading(true)\n      setError(null)\n      \n      const result = await executeWithRetry(fetchFunctionRef.current)\n      \n      if (!mountedRef.current) return\n      \n      setData(result)\n      \n      // Cache the result if cacheKey is provided\n      if (cacheKey) {\n        setCachedData(cacheKey, result, cacheDuration)\n      }\n      \n      onSuccess?.(result)\n    } catch (err) {\n      if (!mountedRef.current) return\n      \n      const error = err instanceof Error ? err : new Error(String(err))\n      setError(error)\n      onError?.(error)\n    } finally {\n      if (mountedRef.current) {\n        setLoading(false)\n      }\n    }\n  }, [cacheKey, cacheDuration, onSuccess, onError, executeWithRetry])\n\n  const refetch = useCallback(async () => {\n    // Clear cache before refetching\n    if (cacheKey) {\n      cache.delete(cacheKey)\n    }\n    await fetchData()\n  }, [fetchData, cacheKey])\n\n  const mutate = useCallback((newData: T | ((prevData: T | null) => T)) => {\n    const updatedData = typeof newData === 'function' \n      ? (newData as (prevData: T | null) => T)(data)\n      : newData\n    \n    setData(updatedData)\n    \n    // Update cache\n    if (cacheKey) {\n      setCachedData(cacheKey, updatedData, cacheDuration)\n    }\n  }, [data, cacheKey, cacheDuration])\n\n  const reset = useCallback(() => {\n    setData(initialData)\n    setError(null)\n    setLoading(false)\n    setIsRetrying(false)\n    setRetryCount(0)\n    \n    // Clear cache\n    if (cacheKey) {\n      cache.delete(cacheKey)\n    }\n  }, [initialData, cacheKey])\n\n  const retry = useCallback(async () => {\n    if (error) {\n      await fetchData()\n    }\n  }, [error, fetchData])\n\n  // Fetch data on mount or when dependencies change\n  useEffect(() => {\n    if (fetchOnMount) {\n      fetchData()\n    }\n  }, [fetchOnMount, ...dependencies])\n\n  return {\n    data,\n    loading,\n    error,\n    refetch,\n    mutate,\n    reset,\n    retry,\n    isRetrying,\n    retryCount\n  }\n}\n\n// Specialized hooks for common patterns\nexport function useApiCall<T>(\n  url: string,\n  options: RequestInit = {},\n  hookOptions: UseDataFetchingOptions<T> = {}\n) {\n  const fetchFunction = useCallback(async (): Promise<T> => {\n    const response = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    })\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`)\n    }\n    \n    return response.json()\n  }, [url, options])\n\n  return useDataFetching(fetchFunction, {\n    cacheKey: `api-${url}-${JSON.stringify(options)}`,\n    ...hookOptions\n  })\n}\n\nexport function useLocalStorageData<T>(\n  key: string,\n  defaultValue: T,\n  hookOptions: Omit<UseDataFetchingOptions<T>, 'fetchOnMount'> = {}\n) {\n  const fetchFunction = useCallback(async (): Promise<T> => {\n    try {\n      const item = localStorage.getItem(key)\n      return item ? JSON.parse(item) : defaultValue\n    } catch (error) {\n      console.warn(`Failed to parse localStorage item '${key}':`, error)\n      return defaultValue\n    }\n  }, [key, defaultValue])\n\n  const result = useDataFetching(fetchFunction, {\n    fetchOnMount: true,\n    ...hookOptions\n  })\n\n  // Override mutate to also update localStorage\n  const originalMutate = result.mutate\n  const mutate = useCallback((newData: T | ((prevData: T | null) => T)) => {\n    const updatedData = typeof newData === 'function' \n      ? (newData as (prevData: T | null) => T)(result.data)\n      : newData\n    \n    try {\n      localStorage.setItem(key, JSON.stringify(updatedData))\n    } catch (error) {\n      console.warn(`Failed to save to localStorage '${key}':`, error)\n    }\n    \n    originalMutate(newData)\n  }, [key, result.data, originalMutate])\n\n  return {\n    ...result,\n    mutate\n  }\n}\n\n// Hook for paginated data\nexport interface UsePaginatedDataOptions<T> extends UseDataFetchingOptions<T[]> {\n  pageSize?: number\n  initialPage?: number\n}\n\nexport interface UsePaginatedDataReturn<T> extends Omit<UseDataFetchingReturn<T[]>, 'data'> {\n  data: T[]\n  currentPage: number\n  totalPages: number\n  hasNextPage: boolean\n  hasPreviousPage: boolean\n  nextPage: () => void\n  previousPage: () => void\n  goToPage: (page: number) => void\n  pageSize: number\n  setPageSize: (size: number) => void\n}\n\nexport function usePaginatedData<T>(\n  fetchFunction: (page: number, pageSize: number) => Promise<{ data: T[]; total: number }>,\n  options: UsePaginatedDataOptions<T> = {}\n): UsePaginatedDataReturn<T> {\n  const {\n    pageSize: initialPageSize = 10,\n    initialPage = 1,\n    ...hookOptions\n  } = options\n\n  const [currentPage, setCurrentPage] = useState(initialPage)\n  const [pageSize, setPageSize] = useState(initialPageSize)\n  const [totalItems, setTotalItems] = useState(0)\n\n  const paginatedFetchFunction = useCallback(async (): Promise<T[]> => {\n    const result = await fetchFunction(currentPage, pageSize)\n    setTotalItems(result.total)\n    return result.data\n  }, [fetchFunction, currentPage, pageSize])\n\n  const dataResult = useDataFetching(paginatedFetchFunction, {\n    ...hookOptions,\n    dependencies: [currentPage, pageSize, ...(hookOptions.dependencies || [])]\n  })\n\n  const totalPages = Math.ceil(totalItems / pageSize)\n  const hasNextPage = currentPage < totalPages\n  const hasPreviousPage = currentPage > 1\n\n  const nextPage = useCallback(() => {\n    if (hasNextPage) {\n      setCurrentPage(prev => prev + 1)\n    }\n  }, [hasNextPage])\n\n  const previousPage = useCallback(() => {\n    if (hasPreviousPage) {\n      setCurrentPage(prev => prev - 1)\n    }\n  }, [hasPreviousPage])\n\n  const goToPage = useCallback((page: number) => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page)\n    }\n  }, [totalPages])\n\n  const handleSetPageSize = useCallback((size: number) => {\n    setPageSize(size)\n    setCurrentPage(1) // Reset to first page when changing page size\n  }, [])\n\n  return {\n    ...dataResult,\n    data: dataResult.data || [],\n    currentPage,\n    totalPages,\n    hasNextPage,\n    hasPreviousPage,\n    nextPage,\n    previousPage,\n    goToPage,\n    pageSize,\n    setPageSize: handleSetPageSize\n  }\n}\n\nexport default useDataFetching"],
      names: ["useApiCall", "useDataFetching", "useLocalStorageData", "usePaginatedData", "cache", "Map", "getCachedData", "key", "cached", "get", "isExpired", "Date", "now", "timestamp", "duration", "delete", "data", "setCachedData", "set", "fetchFunction", "options", "initialData", "fetchOnMount", "retryAttempts", "retryDelay", "cacheKey", "cacheDuration", "onSuccess", "onError", "dependencies", "setData", "useState", "loading", "setLoading", "error", "setError", "isRetrying", "setIsRetrying", "retryCount", "setRetryCount", "fetchFunctionRef", "useRef", "mountedRef", "useEffect", "current", "executeWithRetry", "useCallback", "operation", "attempts", "lastError", "attempt", "Promise", "resolve", "setTimeout", "result", "err", "Error", "String", "fetchData", "refetch", "mutate", "newData", "updatedData", "reset", "retry", "url", "hookOptions", "response", "fetch", "headers", "ok", "status", "statusText", "json", "JSON", "stringify", "defaultValue", "item", "localStorage", "getItem", "parse", "console", "warn", "originalMutate", "setItem", "pageSize", "initialPageSize", "initialPage", "currentPage", "setCurrentPage", "setPageSize", "totalItems", "setTotalItems", "paginatedFetchFunction", "total", "dataResult", "totalPages", "Math", "ceil", "hasNextPage", "hasPreviousPage", "nextPage", "prev", "previousPage", "goToPage", "page", "handleSetPageSize", "size"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f56614efeaa8487445aaaf15330a8d67c8b6a722"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_v1d9so03r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_v1d9so03r();
cov_v1d9so03r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_v1d9so03r().f[0]++;
  cov_v1d9so03r().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_v1d9so03r().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_v1d9so03r().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_v1d9so03r().f[1]++;
    cov_v1d9so03r().s[4]++;
    return _default;
  },
  get useApiCall() {
    /* istanbul ignore next */
    cov_v1d9so03r().f[2]++;
    cov_v1d9so03r().s[5]++;
    return useApiCall;
  },
  get useDataFetching() {
    /* istanbul ignore next */
    cov_v1d9so03r().f[3]++;
    cov_v1d9so03r().s[6]++;
    return useDataFetching;
  },
  get useLocalStorageData() {
    /* istanbul ignore next */
    cov_v1d9so03r().f[4]++;
    cov_v1d9so03r().s[7]++;
    return useLocalStorageData;
  },
  get usePaginatedData() {
    /* istanbul ignore next */
    cov_v1d9so03r().f[5]++;
    cov_v1d9so03r().s[8]++;
    return usePaginatedData;
  }
});
const _react =
/* istanbul ignore next */
(cov_v1d9so03r().s[9]++, require("react"));
// Simple in-memory cache
const cache =
/* istanbul ignore next */
(cov_v1d9so03r().s[10]++, new Map());
function getCachedData(key) {
  /* istanbul ignore next */
  cov_v1d9so03r().f[6]++;
  const cached =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[11]++, cache.get(key));
  /* istanbul ignore next */
  cov_v1d9so03r().s[12]++;
  if (!cached) {
    /* istanbul ignore next */
    cov_v1d9so03r().b[0][0]++;
    cov_v1d9so03r().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_v1d9so03r().b[0][1]++;
  }
  const isExpired =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[14]++, Date.now() - cached.timestamp > cached.duration);
  /* istanbul ignore next */
  cov_v1d9so03r().s[15]++;
  if (isExpired) {
    /* istanbul ignore next */
    cov_v1d9so03r().b[1][0]++;
    cov_v1d9so03r().s[16]++;
    cache.delete(key);
    /* istanbul ignore next */
    cov_v1d9so03r().s[17]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_v1d9so03r().b[1][1]++;
  }
  cov_v1d9so03r().s[18]++;
  return cached.data;
}
function setCachedData(key, data, duration) {
  /* istanbul ignore next */
  cov_v1d9so03r().f[7]++;
  cov_v1d9so03r().s[19]++;
  cache.set(key, {
    data,
    timestamp: Date.now(),
    duration
  });
}
function useDataFetching(fetchFunction, options =
/* istanbul ignore next */
(cov_v1d9so03r().b[2][0]++, {})) {
  /* istanbul ignore next */
  cov_v1d9so03r().f[8]++;
  const {
    initialData =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[3][0]++, null),
    fetchOnMount =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[4][0]++, true),
    retryAttempts =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[5][0]++, 3),
    retryDelay =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[6][0]++, 1000),
    cacheKey,
    cacheDuration =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[7][0]++, 5 * 60 * 1000),
    onSuccess,
    onError,
    dependencies =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[8][0]++, [])
  } =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[20]++, options);
  const [data, setData] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[21]++, (0, _react.useState)(() => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[9]++;
    cov_v1d9so03r().s[22]++;
    if (cacheKey) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[9][0]++;
      const cached =
      /* istanbul ignore next */
      (cov_v1d9so03r().s[23]++, getCachedData(cacheKey));
      /* istanbul ignore next */
      cov_v1d9so03r().s[24]++;
      if (cached) {
        /* istanbul ignore next */
        cov_v1d9so03r().b[10][0]++;
        cov_v1d9so03r().s[25]++;
        return cached;
      } else
      /* istanbul ignore next */
      {
        cov_v1d9so03r().b[10][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[9][1]++;
    }
    cov_v1d9so03r().s[26]++;
    return initialData;
  }));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[27]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[28]++, (0, _react.useState)(null));
  const [isRetrying, setIsRetrying] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[29]++, (0, _react.useState)(false));
  const [retryCount, setRetryCount] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[30]++, (0, _react.useState)(0));
  const fetchFunctionRef =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[31]++, (0, _react.useRef)(fetchFunction));
  const mountedRef =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[32]++, (0, _react.useRef)(true));
  // Update function ref when it changes
  /* istanbul ignore next */
  cov_v1d9so03r().s[33]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[10]++;
    cov_v1d9so03r().s[34]++;
    fetchFunctionRef.current = fetchFunction;
  }, [fetchFunction]);
  // Cleanup on unmount
  /* istanbul ignore next */
  cov_v1d9so03r().s[35]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[11]++;
    cov_v1d9so03r().s[36]++;
    return () => {
      /* istanbul ignore next */
      cov_v1d9so03r().f[12]++;
      cov_v1d9so03r().s[37]++;
      mountedRef.current = false;
    };
  }, []);
  const executeWithRetry =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[38]++, (0, _react.useCallback)(async (operation, attempts =
  /* istanbul ignore next */
  (cov_v1d9so03r().b[11][0]++, retryAttempts)) => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[13]++;
    let lastError;
    /* istanbul ignore next */
    cov_v1d9so03r().s[39]++;
    for (let attempt =
    /* istanbul ignore next */
    (cov_v1d9so03r().s[40]++, 0); attempt <= attempts; attempt++) {
      /* istanbul ignore next */
      cov_v1d9so03r().s[41]++;
      try {
        /* istanbul ignore next */
        cov_v1d9so03r().s[42]++;
        if (attempt > 0) {
          /* istanbul ignore next */
          cov_v1d9so03r().b[12][0]++;
          cov_v1d9so03r().s[43]++;
          setIsRetrying(true);
          /* istanbul ignore next */
          cov_v1d9so03r().s[44]++;
          setRetryCount(attempt);
          /* istanbul ignore next */
          cov_v1d9so03r().s[45]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_v1d9so03r().f[14]++;
            cov_v1d9so03r().s[46]++;
            return setTimeout(resolve, retryDelay * attempt);
          });
        } else
        /* istanbul ignore next */
        {
          cov_v1d9so03r().b[12][1]++;
        }
        const result =
        /* istanbul ignore next */
        (cov_v1d9so03r().s[47]++, await operation());
        /* istanbul ignore next */
        cov_v1d9so03r().s[48]++;
        if (mountedRef.current) {
          /* istanbul ignore next */
          cov_v1d9so03r().b[13][0]++;
          cov_v1d9so03r().s[49]++;
          setIsRetrying(false);
          /* istanbul ignore next */
          cov_v1d9so03r().s[50]++;
          setRetryCount(0);
        } else
        /* istanbul ignore next */
        {
          cov_v1d9so03r().b[13][1]++;
        }
        cov_v1d9so03r().s[51]++;
        return result;
      } catch (err) {
        /* istanbul ignore next */
        cov_v1d9so03r().s[52]++;
        lastError = err instanceof Error ?
        /* istanbul ignore next */
        (cov_v1d9so03r().b[14][0]++, err) :
        /* istanbul ignore next */
        (cov_v1d9so03r().b[14][1]++, new Error(String(err)));
        /* istanbul ignore next */
        cov_v1d9so03r().s[53]++;
        if (attempt === attempts) {
          /* istanbul ignore next */
          cov_v1d9so03r().b[15][0]++;
          cov_v1d9so03r().s[54]++;
          if (mountedRef.current) {
            /* istanbul ignore next */
            cov_v1d9so03r().b[16][0]++;
            cov_v1d9so03r().s[55]++;
            setIsRetrying(false);
            /* istanbul ignore next */
            cov_v1d9so03r().s[56]++;
            setRetryCount(0);
          } else
          /* istanbul ignore next */
          {
            cov_v1d9so03r().b[16][1]++;
          }
          cov_v1d9so03r().s[57]++;
          throw lastError;
        } else
        /* istanbul ignore next */
        {
          cov_v1d9so03r().b[15][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_v1d9so03r().s[58]++;
    throw lastError;
  }, [retryAttempts, retryDelay]));
  const fetchData =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[59]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[15]++;
    cov_v1d9so03r().s[60]++;
    if (!mountedRef.current) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[17][0]++;
      cov_v1d9so03r().s[61]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[17][1]++;
    }
    cov_v1d9so03r().s[62]++;
    try {
      /* istanbul ignore next */
      cov_v1d9so03r().s[63]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_v1d9so03r().s[64]++;
      setError(null);
      const result =
      /* istanbul ignore next */
      (cov_v1d9so03r().s[65]++, await executeWithRetry(fetchFunctionRef.current));
      /* istanbul ignore next */
      cov_v1d9so03r().s[66]++;
      if (!mountedRef.current) {
        /* istanbul ignore next */
        cov_v1d9so03r().b[18][0]++;
        cov_v1d9so03r().s[67]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_v1d9so03r().b[18][1]++;
      }
      cov_v1d9so03r().s[68]++;
      setData(result);
      // Cache the result if cacheKey is provided
      /* istanbul ignore next */
      cov_v1d9so03r().s[69]++;
      if (cacheKey) {
        /* istanbul ignore next */
        cov_v1d9so03r().b[19][0]++;
        cov_v1d9so03r().s[70]++;
        setCachedData(cacheKey, result, cacheDuration);
      } else
      /* istanbul ignore next */
      {
        cov_v1d9so03r().b[19][1]++;
      }
      cov_v1d9so03r().s[71]++;
      onSuccess?.(result);
    } catch (err) {
      /* istanbul ignore next */
      cov_v1d9so03r().s[72]++;
      if (!mountedRef.current) {
        /* istanbul ignore next */
        cov_v1d9so03r().b[20][0]++;
        cov_v1d9so03r().s[73]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_v1d9so03r().b[20][1]++;
      }
      const error =
      /* istanbul ignore next */
      (cov_v1d9so03r().s[74]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_v1d9so03r().b[21][0]++, err) :
      /* istanbul ignore next */
      (cov_v1d9so03r().b[21][1]++, new Error(String(err))));
      /* istanbul ignore next */
      cov_v1d9so03r().s[75]++;
      setError(error);
      /* istanbul ignore next */
      cov_v1d9so03r().s[76]++;
      onError?.(error);
    } finally {
      /* istanbul ignore next */
      cov_v1d9so03r().s[77]++;
      if (mountedRef.current) {
        /* istanbul ignore next */
        cov_v1d9so03r().b[22][0]++;
        cov_v1d9so03r().s[78]++;
        setLoading(false);
      } else
      /* istanbul ignore next */
      {
        cov_v1d9so03r().b[22][1]++;
      }
    }
  }, [cacheKey, cacheDuration, onSuccess, onError, executeWithRetry]));
  const refetch =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[79]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[16]++;
    cov_v1d9so03r().s[80]++;
    // Clear cache before refetching
    if (cacheKey) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[23][0]++;
      cov_v1d9so03r().s[81]++;
      cache.delete(cacheKey);
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[23][1]++;
    }
    cov_v1d9so03r().s[82]++;
    await fetchData();
  }, [fetchData, cacheKey]));
  const mutate =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[83]++, (0, _react.useCallback)(newData => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[17]++;
    const updatedData =
    /* istanbul ignore next */
    (cov_v1d9so03r().s[84]++, typeof newData === 'function' ?
    /* istanbul ignore next */
    (cov_v1d9so03r().b[24][0]++, newData(data)) :
    /* istanbul ignore next */
    (cov_v1d9so03r().b[24][1]++, newData));
    /* istanbul ignore next */
    cov_v1d9so03r().s[85]++;
    setData(updatedData);
    // Update cache
    /* istanbul ignore next */
    cov_v1d9so03r().s[86]++;
    if (cacheKey) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[25][0]++;
      cov_v1d9so03r().s[87]++;
      setCachedData(cacheKey, updatedData, cacheDuration);
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[25][1]++;
    }
  }, [data, cacheKey, cacheDuration]));
  const reset =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[88]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[18]++;
    cov_v1d9so03r().s[89]++;
    setData(initialData);
    /* istanbul ignore next */
    cov_v1d9so03r().s[90]++;
    setError(null);
    /* istanbul ignore next */
    cov_v1d9so03r().s[91]++;
    setLoading(false);
    /* istanbul ignore next */
    cov_v1d9so03r().s[92]++;
    setIsRetrying(false);
    /* istanbul ignore next */
    cov_v1d9so03r().s[93]++;
    setRetryCount(0);
    // Clear cache
    /* istanbul ignore next */
    cov_v1d9so03r().s[94]++;
    if (cacheKey) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[26][0]++;
      cov_v1d9so03r().s[95]++;
      cache.delete(cacheKey);
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[26][1]++;
    }
  }, [initialData, cacheKey]));
  const retry =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[96]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[19]++;
    cov_v1d9so03r().s[97]++;
    if (error) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[27][0]++;
      cov_v1d9so03r().s[98]++;
      await fetchData();
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[27][1]++;
    }
  }, [error, fetchData]));
  // Fetch data on mount or when dependencies change
  /* istanbul ignore next */
  cov_v1d9so03r().s[99]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[20]++;
    cov_v1d9so03r().s[100]++;
    if (fetchOnMount) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[28][0]++;
      cov_v1d9so03r().s[101]++;
      fetchData();
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[28][1]++;
    }
  }, [fetchOnMount, ...dependencies]);
  /* istanbul ignore next */
  cov_v1d9so03r().s[102]++;
  return {
    data,
    loading,
    error,
    refetch,
    mutate,
    reset,
    retry,
    isRetrying,
    retryCount
  };
}
function useApiCall(url, options =
/* istanbul ignore next */
(cov_v1d9so03r().b[29][0]++, {}), hookOptions =
/* istanbul ignore next */
(cov_v1d9so03r().b[30][0]++, {})) {
  /* istanbul ignore next */
  cov_v1d9so03r().f[21]++;
  const fetchFunction =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[103]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[22]++;
    const response =
    /* istanbul ignore next */
    (cov_v1d9so03r().s[104]++, await fetch(url, {
      headers: {
        'Content-Type': 'application/json',
        ...options.headers
      },
      ...options
    }));
    /* istanbul ignore next */
    cov_v1d9so03r().s[105]++;
    if (!response.ok) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[31][0]++;
      cov_v1d9so03r().s[106]++;
      throw new Error(`HTTP ${response.status}: ${response.statusText}`);
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[31][1]++;
    }
    cov_v1d9so03r().s[107]++;
    return response.json();
  }, [url, options]));
  /* istanbul ignore next */
  cov_v1d9so03r().s[108]++;
  return useDataFetching(fetchFunction, {
    cacheKey: `api-${url}-${JSON.stringify(options)}`,
    ...hookOptions
  });
}
function useLocalStorageData(key, defaultValue, hookOptions =
/* istanbul ignore next */
(cov_v1d9so03r().b[32][0]++, {})) {
  /* istanbul ignore next */
  cov_v1d9so03r().f[23]++;
  const fetchFunction =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[109]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[24]++;
    cov_v1d9so03r().s[110]++;
    try {
      const item =
      /* istanbul ignore next */
      (cov_v1d9so03r().s[111]++, localStorage.getItem(key));
      /* istanbul ignore next */
      cov_v1d9so03r().s[112]++;
      return item ?
      /* istanbul ignore next */
      (cov_v1d9so03r().b[33][0]++, JSON.parse(item)) :
      /* istanbul ignore next */
      (cov_v1d9so03r().b[33][1]++, defaultValue);
    } catch (error) {
      /* istanbul ignore next */
      cov_v1d9so03r().s[113]++;
      console.warn(`Failed to parse localStorage item '${key}':`, error);
      /* istanbul ignore next */
      cov_v1d9so03r().s[114]++;
      return defaultValue;
    }
  }, [key, defaultValue]));
  const result =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[115]++, useDataFetching(fetchFunction, {
    fetchOnMount: true,
    ...hookOptions
  }));
  // Override mutate to also update localStorage
  const originalMutate =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[116]++, result.mutate);
  const mutate =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[117]++, (0, _react.useCallback)(newData => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[25]++;
    const updatedData =
    /* istanbul ignore next */
    (cov_v1d9so03r().s[118]++, typeof newData === 'function' ?
    /* istanbul ignore next */
    (cov_v1d9so03r().b[34][0]++, newData(result.data)) :
    /* istanbul ignore next */
    (cov_v1d9so03r().b[34][1]++, newData));
    /* istanbul ignore next */
    cov_v1d9so03r().s[119]++;
    try {
      /* istanbul ignore next */
      cov_v1d9so03r().s[120]++;
      localStorage.setItem(key, JSON.stringify(updatedData));
    } catch (error) {
      /* istanbul ignore next */
      cov_v1d9so03r().s[121]++;
      console.warn(`Failed to save to localStorage '${key}':`, error);
    }
    /* istanbul ignore next */
    cov_v1d9so03r().s[122]++;
    originalMutate(newData);
  }, [key, result.data, originalMutate]));
  /* istanbul ignore next */
  cov_v1d9so03r().s[123]++;
  return {
    ...result,
    mutate
  };
}
function usePaginatedData(fetchFunction, options =
/* istanbul ignore next */
(cov_v1d9so03r().b[35][0]++, {})) {
  /* istanbul ignore next */
  cov_v1d9so03r().f[26]++;
  const {
    pageSize: initialPageSize =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[36][0]++, 10),
    initialPage =
    /* istanbul ignore next */
    (cov_v1d9so03r().b[37][0]++, 1),
    ...hookOptions
  } =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[124]++, options);
  const [currentPage, setCurrentPage] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[125]++, (0, _react.useState)(initialPage));
  const [pageSize, setPageSize] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[126]++, (0, _react.useState)(initialPageSize));
  const [totalItems, setTotalItems] =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[127]++, (0, _react.useState)(0));
  const paginatedFetchFunction =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[128]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[27]++;
    const result =
    /* istanbul ignore next */
    (cov_v1d9so03r().s[129]++, await fetchFunction(currentPage, pageSize));
    /* istanbul ignore next */
    cov_v1d9so03r().s[130]++;
    setTotalItems(result.total);
    /* istanbul ignore next */
    cov_v1d9so03r().s[131]++;
    return result.data;
  }, [fetchFunction, currentPage, pageSize]));
  const dataResult =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[132]++, useDataFetching(paginatedFetchFunction, {
    ...hookOptions,
    dependencies: [currentPage, pageSize, ...(
    /* istanbul ignore next */
    (cov_v1d9so03r().b[38][0]++, hookOptions.dependencies) ||
    /* istanbul ignore next */
    (cov_v1d9so03r().b[38][1]++, []))]
  }));
  const totalPages =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[133]++, Math.ceil(totalItems / pageSize));
  const hasNextPage =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[134]++, currentPage < totalPages);
  const hasPreviousPage =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[135]++, currentPage > 1);
  const nextPage =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[136]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[28]++;
    cov_v1d9so03r().s[137]++;
    if (hasNextPage) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[39][0]++;
      cov_v1d9so03r().s[138]++;
      setCurrentPage(prev => {
        /* istanbul ignore next */
        cov_v1d9so03r().f[29]++;
        cov_v1d9so03r().s[139]++;
        return prev + 1;
      });
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[39][1]++;
    }
  }, [hasNextPage]));
  const previousPage =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[140]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[30]++;
    cov_v1d9so03r().s[141]++;
    if (hasPreviousPage) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[40][0]++;
      cov_v1d9so03r().s[142]++;
      setCurrentPage(prev => {
        /* istanbul ignore next */
        cov_v1d9so03r().f[31]++;
        cov_v1d9so03r().s[143]++;
        return prev - 1;
      });
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[40][1]++;
    }
  }, [hasPreviousPage]));
  const goToPage =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[144]++, (0, _react.useCallback)(page => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[32]++;
    cov_v1d9so03r().s[145]++;
    if (
    /* istanbul ignore next */
    (cov_v1d9so03r().b[42][0]++, page >= 1) &&
    /* istanbul ignore next */
    (cov_v1d9so03r().b[42][1]++, page <= totalPages)) {
      /* istanbul ignore next */
      cov_v1d9so03r().b[41][0]++;
      cov_v1d9so03r().s[146]++;
      setCurrentPage(page);
    } else
    /* istanbul ignore next */
    {
      cov_v1d9so03r().b[41][1]++;
    }
  }, [totalPages]));
  const handleSetPageSize =
  /* istanbul ignore next */
  (cov_v1d9so03r().s[147]++, (0, _react.useCallback)(size => {
    /* istanbul ignore next */
    cov_v1d9so03r().f[33]++;
    cov_v1d9so03r().s[148]++;
    setPageSize(size);
    /* istanbul ignore next */
    cov_v1d9so03r().s[149]++;
    setCurrentPage(1); // Reset to first page when changing page size
  }, []));
  /* istanbul ignore next */
  cov_v1d9so03r().s[150]++;
  return {
    ...dataResult,
    data:
    /* istanbul ignore next */
    (cov_v1d9so03r().b[43][0]++, dataResult.data) ||
    /* istanbul ignore next */
    (cov_v1d9so03r().b[43][1]++, []),
    currentPage,
    totalPages,
    hasNextPage,
    hasPreviousPage,
    nextPage,
    previousPage,
    goToPage,
    pageSize,
    setPageSize: handleSetPageSize
  };
}
const _default =
/* istanbul ignore next */
(cov_v1d9so03r().s[151]++, useDataFetching);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,