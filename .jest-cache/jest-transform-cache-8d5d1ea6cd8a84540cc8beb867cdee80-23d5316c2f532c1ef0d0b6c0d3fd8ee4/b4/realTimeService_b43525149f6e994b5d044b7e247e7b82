ed9e35a95b494a80a279c9554e053272
"use strict";

/* istanbul ignore next */
function cov_1ov1lgfgm0() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\realTimeService.ts";
  var hash = "3736283231fcf33dfb62fa4226c3d010e0ec5b3d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\realTimeService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 24
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "6": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 32
        }
      },
      "8": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 30
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 64
        }
      },
      "10": {
        start: {
          line: 28,
          column: 41
        },
        end: {
          line: 28,
          column: 62
        }
      },
      "11": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 30
        }
      },
      "12": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 36
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 34
        }
      },
      "14": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 32
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 50
        }
      },
      "17": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 42
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 78
        }
      },
      "21": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "22": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "23": {
        start: {
          line: 47,
          column: 28
        },
        end: {
          line: 47,
          column: 48
        }
      },
      "24": {
        start: {
          line: 48,
          column: 22
        },
        end: {
          line: 48,
          column: 52
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "26": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "27": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 75,
          column: 13
        }
      },
      "28": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "29": {
        start: {
          line: 62,
          column: 20
        },
        end: {
          line: 62,
          column: 41
        }
      },
      "30": {
        start: {
          line: 62,
          column: 34
        },
        end: {
          line: 62,
          column: 41
        }
      },
      "31": {
        start: {
          line: 63,
          column: 42
        },
        end: {
          line: 63,
          column: 65
        }
      },
      "32": {
        start: {
          line: 64,
          column: 34
        },
        end: {
          line: 64,
          column: 95
        }
      },
      "33": {
        start: {
          line: 64,
          column: 86
        },
        end: {
          line: 64,
          column: 94
        }
      },
      "34": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 80
        }
      },
      "35": {
        start: {
          line: 65,
          column: 63
        },
        end: {
          line: 65,
          column: 78
        }
      },
      "36": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 52
        }
      },
      "37": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "38": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "39": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 90,
          column: 17
        }
      },
      "40": {
        start: {
          line: 82,
          column: 20
        },
        end: {
          line: 89,
          column: 23
        }
      },
      "41": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "42": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 97,
          column: 13
        }
      },
      "43": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 38
        }
      },
      "44": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 50
        }
      },
      "45": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 38
        }
      },
      "46": {
        start: {
          line: 102,
          column: 31
        },
        end: {
          line: 102,
          column: 38
        }
      },
      "47": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 48
        }
      },
      "48": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 54
        }
      },
      "49": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "50": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "51": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 46
        }
      },
      "52": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "53": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 88
        }
      },
      "54": {
        start: {
          line: 120,
          column: 72
        },
        end: {
          line: 120,
          column: 86
        }
      },
      "55": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 125,
          column: 38
        }
      },
      "56": {
        start: {
          line: 125,
          column: 31
        },
        end: {
          line: 125,
          column: 38
        }
      },
      "57": {
        start: {
          line: 126,
          column: 21
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "58": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 47
        }
      },
      "59": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 11
        }
      },
      "60": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 38
        }
      },
      "61": {
        start: {
          line: 142,
          column: 31
        },
        end: {
          line: 142,
          column: 38
        }
      },
      "62": {
        start: {
          line: 143,
          column: 21
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "63": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 47
        }
      },
      "64": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 156,
          column: 11
        }
      },
      "65": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "66": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 66
        }
      },
      "67": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 45
        }
      },
      "68": {
        start: {
          line: 163,
          column: 22
        },
        end: {
          line: 163,
          column: 52
        }
      },
      "69": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "70": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 62
        }
      },
      "71": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 170,
          column: 15
        }
      },
      "72": {
        start: {
          line: 169,
          column: 16
        },
        end: {
          line: 169,
          column: 82
        }
      },
      "73": {
        start: {
          line: 169,
          column: 55
        },
        end: {
          line: 169,
          column: 80
        }
      },
      "74": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 38
        }
      },
      "75": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 52
        }
      },
      "76": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "77": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 179,
          column: 15
        }
      },
      "78": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 184,
          column: 42
        }
      },
      "79": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "80": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 80
        }
      },
      "81": {
        start: {
          line: 186,
          column: 64
        },
        end: {
          line: 186,
          column: 78
        }
      },
      "82": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "83": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 66
        }
      },
      "84": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 194,
          column: 46
        }
      },
      "85": {
        start: {
          line: 195,
          column: 22
        },
        end: {
          line: 195,
          column: 52
        }
      },
      "86": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "87": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 62
        }
      },
      "88": {
        start: {
          line: 198,
          column: 27
        },
        end: {
          line: 202,
          column: 13
        }
      },
      "89": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "90": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 39
        }
      },
      "91": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "92": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 46
        }
      },
      "93": {
        start: {
          line: 207,
          column: 39
        },
        end: {
          line: 207,
          column: 46
        }
      },
      "94": {
        start: {
          line: 208,
          column: 33
        },
        end: {
          line: 208,
          column: 80
        }
      },
      "95": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 222,
          column: 17
        }
      },
      "96": {
        start: {
          line: 212,
          column: 24
        },
        end: {
          line: 212,
          column: 46
        }
      },
      "97": {
        start: {
          line: 213,
          column: 24
        },
        end: {
          line: 213,
          column: 30
        }
      },
      "98": {
        start: {
          line: 215,
          column: 24
        },
        end: {
          line: 215,
          column: 46
        }
      },
      "99": {
        start: {
          line: 216,
          column: 24
        },
        end: {
          line: 216,
          column: 30
        }
      },
      "100": {
        start: {
          line: 218,
          column: 24
        },
        end: {
          line: 218,
          column: 46
        }
      },
      "101": {
        start: {
          line: 219,
          column: 24
        },
        end: {
          line: 219,
          column: 30
        }
      },
      "102": {
        start: {
          line: 221,
          column: 24
        },
        end: {
          line: 221,
          column: 31
        }
      },
      "103": {
        start: {
          line: 223,
          column: 31
        },
        end: {
          line: 232,
          column: 17
        }
      },
      "104": {
        start: {
          line: 233,
          column: 16
        },
        end: {
          line: 233,
          column: 75
        }
      },
      "105": {
        start: {
          line: 233,
          column: 57
        },
        end: {
          line: 233,
          column: 73
        }
      },
      "106": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 33
        }
      },
      "107": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 32
        }
      },
      "108": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 52
        }
      },
      "109": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 242,
          column: 10
        }
      },
      "110": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 35
        }
      },
      "111": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 46
        }
      },
      "112": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 44
        }
      },
      "113": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 249,
          column: 10
        }
      },
      "114": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 84
        }
      },
      "115": {
        start: {
          line: 248,
          column: 68
        },
        end: {
          line: 248,
          column: 82
        }
      },
      "116": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 259,
          column: 18
        }
      },
      "117": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 258,
          column: 13
        }
      },
      "118": {
        start: {
          line: 255,
          column: 16
        },
        end: {
          line: 257,
          column: 19
        }
      },
      "119": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 32
        }
      },
      "120": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 48
        }
      },
      "121": {
        start: {
          line: 269,
          column: 33
        },
        end: {
          line: 269,
          column: 103
        }
      },
      "122": {
        start: {
          line: 269,
          column: 81
        },
        end: {
          line: 269,
          column: 102
        }
      },
      "123": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 276,
          column: 9
        }
      },
      "124": {
        start: {
          line: 271,
          column: 28
        },
        end: {
          line: 271,
          column: 58
        }
      },
      "125": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "126": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 44
        }
      },
      "127": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 50
        }
      },
      "128": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 34
        }
      },
      "129": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 36
        }
      },
      "130": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 34
        }
      },
      "131": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 32
        }
      },
      "132": {
        start: {
          line: 283,
          column: 8
        },
        end: {
          line: 283,
          column: 32
        }
      },
      "133": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 38
        }
      },
      "134": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 287,
          column: 45
        }
      },
      "135": {
        start: {
          line: 288,
          column: 17
        },
        end: {
          line: 288,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 19
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 14
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 30
          },
          end: {
            line: 28,
            column: 31
          }
        },
        loc: {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 28,
            column: 62
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 61,
            column: 20
          }
        },
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 66,
            column: 17
          }
        },
        line: 61
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 64,
            column: 74
          },
          end: {
            line: 64,
            column: 75
          }
        },
        loc: {
          start: {
            line: 64,
            column: 86
          },
          end: {
            line: 64,
            column: 94
          }
        },
        line: 64
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 65,
            column: 52
          }
        },
        loc: {
          start: {
            line: 65,
            column: 63
          },
          end: {
            line: 65,
            column: 78
          }
        },
        line: 65
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 68,
            column: 19
          },
          end: {
            line: 68,
            column: 20
          }
        },
        loc: {
          start: {
            line: 68,
            column: 44
          },
          end: {
            line: 70,
            column: 17
          }
        },
        line: 68
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 72,
            column: 19
          },
          end: {
            line: 72,
            column: 20
          }
        },
        loc: {
          start: {
            line: 72,
            column: 45
          },
          end: {
            line: 74,
            column: 17
          }
        },
        line: 72
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 80,
            column: 36
          },
          end: {
            line: 80,
            column: 37
          }
        },
        loc: {
          start: {
            line: 80,
            column: 52
          },
          end: {
            line: 91,
            column: 13
          }
        },
        line: 80
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 93,
            column: 15
          },
          end: {
            line: 93,
            column: 16
          }
        },
        loc: {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 98,
            column: 9
          }
        },
        line: 93
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 5
          }
        },
        loc: {
          start: {
            line: 101,
            column: 53
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 101
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        loc: {
          start: {
            line: 117,
            column: 34
          },
          end: {
            line: 122,
            column: 5
          }
        },
        line: 117
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 16
          }
        },
        loc: {
          start: {
            line: 119,
            column: 19
          },
          end: {
            line: 121,
            column: 9
          }
        },
        line: 119
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 120,
            column: 67
          },
          end: {
            line: 120,
            column: 68
          }
        },
        loc: {
          start: {
            line: 120,
            column: 72
          },
          end: {
            line: 120,
            column: 86
          }
        },
        line: 120
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 75
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 124
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 73
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 141
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 38
          },
          end: {
            line: 181,
            column: 5
          }
        },
        line: 158
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 168,
            column: 15
          },
          end: {
            line: 168,
            column: 16
          }
        },
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 170,
            column: 13
          }
        },
        line: 168
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 169,
            column: 43
          },
          end: {
            line: 169,
            column: 44
          }
        },
        loc: {
          start: {
            line: 169,
            column: 55
          },
          end: {
            line: 169,
            column: 80
          }
        },
        line: 169
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 5
          }
        },
        loc: {
          start: {
            line: 183,
            column: 31
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 183
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 185,
            column: 15
          },
          end: {
            line: 185,
            column: 16
          }
        },
        loc: {
          start: {
            line: 185,
            column: 19
          },
          end: {
            line: 187,
            column: 9
          }
        },
        line: 185
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 186,
            column: 59
          },
          end: {
            line: 186,
            column: 60
          }
        },
        loc: {
          start: {
            line: 186,
            column: 64
          },
          end: {
            line: 186,
            column: 78
          }
        },
        line: 186
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 53
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 190
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 206,
            column: 51
          },
          end: {
            line: 206,
            column: 52
          }
        },
        loc: {
          start: {
            line: 206,
            column: 62
          },
          end: {
            line: 235,
            column: 13
          }
        },
        line: 206
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 233,
            column: 45
          },
          end: {
            line: 233,
            column: 46
          }
        },
        loc: {
          start: {
            line: 233,
            column: 57
          },
          end: {
            line: 233,
            column: 73
          }
        },
        line: 233
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 239,
            column: 15
          },
          end: {
            line: 239,
            column: 16
          }
        },
        loc: {
          start: {
            line: 239,
            column: 19
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 239
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        loc: {
          start: {
            line: 245,
            column: 33
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 245
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 247,
            column: 15
          },
          end: {
            line: 247,
            column: 16
          }
        },
        loc: {
          start: {
            line: 247,
            column: 19
          },
          end: {
            line: 249,
            column: 9
          }
        },
        line: 247
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 248,
            column: 63
          },
          end: {
            line: 248,
            column: 64
          }
        },
        loc: {
          start: {
            line: 248,
            column: 68
          },
          end: {
            line: 248,
            column: 82
          }
        },
        line: 248
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        loc: {
          start: {
            line: 252,
            column: 21
          },
          end: {
            line: 260,
            column: 5
          }
        },
        line: 252
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 253,
            column: 45
          },
          end: {
            line: 253,
            column: 46
          }
        },
        loc: {
          start: {
            line: 253,
            column: 55
          },
          end: {
            line: 259,
            column: 9
          }
        },
        line: 253
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 262,
            column: 4
          },
          end: {
            line: 262,
            column: 5
          }
        },
        loc: {
          start: {
            line: 262,
            column: 21
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 262
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        loc: {
          start: {
            line: 265,
            column: 24
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 265
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 268,
            column: 5
          }
        },
        loc: {
          start: {
            line: 268,
            column: 28
          },
          end: {
            line: 277,
            column: 5
          }
        },
        line: 268
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 269,
            column: 73
          },
          end: {
            line: 269,
            column: 74
          }
        },
        loc: {
          start: {
            line: 269,
            column: 81
          },
          end: {
            line: 269,
            column: 102
          }
        },
        line: 269
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 5
          }
        },
        loc: {
          start: {
            line: 278,
            column: 17
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 278
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 40
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "5": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 75,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 90,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 90,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 97,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "10": {
        loc: {
          start: {
            line: 101,
            column: 25
          },
          end: {
            line: 101,
            column: 42
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 101,
            column: 34
          },
          end: {
            line: 101,
            column: 42
          }
        }],
        line: 101
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "13": {
        loc: {
          start: {
            line: 124,
            column: 56
          },
          end: {
            line: 124,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 65
          },
          end: {
            line: 124,
            column: 73
          }
        }],
        line: 124
      },
      "14": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 125,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "15": {
        loc: {
          start: {
            line: 141,
            column: 54
          },
          end: {
            line: 141,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 141,
            column: 63
          },
          end: {
            line: 141,
            column: 71
          }
        }],
        line: 141
      },
      "16": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "17": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "18": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 173,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "19": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "20": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 193,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "21": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "22": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "23": {
        loc: {
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 207,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 207,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "24": {
        loc: {
          start: {
            line: 208,
            column: 33
          },
          end: {
            line: 208,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 208,
            column: 33
          },
          end: {
            line: 208,
            column: 48
          }
        }, {
          start: {
            line: 208,
            column: 52
          },
          end: {
            line: 208,
            column: 67
          }
        }, {
          start: {
            line: 208,
            column: 71
          },
          end: {
            line: 208,
            column: 80
          }
        }],
        line: 208
      },
      "25": {
        loc: {
          start: {
            line: 210,
            column: 16
          },
          end: {
            line: 222,
            column: 17
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 211,
            column: 20
          },
          end: {
            line: 213,
            column: 30
          }
        }, {
          start: {
            line: 214,
            column: 20
          },
          end: {
            line: 216,
            column: 30
          }
        }, {
          start: {
            line: 217,
            column: 20
          },
          end: {
            line: 219,
            column: 30
          }
        }, {
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 221,
            column: 31
          }
        }],
        line: 210
      },
      "26": {
        loc: {
          start: {
            line: 230,
            column: 29
          },
          end: {
            line: 230,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 62
          },
          end: {
            line: 230,
            column: 73
          }
        }, {
          start: {
            line: 230,
            column: 76
          },
          end: {
            line: 230,
            column: 87
          }
        }],
        line: 230
      },
      "27": {
        loc: {
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 258,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "28": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0, 0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\realTimeService.ts"],
      sourcesContent: ["import { supabase } from \"../lib/supabase\"\r\nimport type { RealtimeChannel } from \"@supabase/supabase-js\"\r\n\r\nexport interface UserPresence {\r\n  user_id: string\r\n  user_name: string\r\n  avatar_url?: string\r\n  status: \"online\" | \"away\" | \"busy\" | \"offline\"\r\n  current_page?: string\r\n  last_seen: string\r\n  cursor_position?: { x: number; y: number }\r\n  editing_field?: string\r\n}\r\n\r\nexport interface CollaborativeEdit {\r\n  id: string\r\n  user_id: string\r\n  user_name: string\r\n  entity_type: \"client\" | \"task\" | \"event\" | \"project\"\r\n  entity_id: string\r\n  field_name: string\r\n  action: \"start_edit\" | \"end_edit\" | \"typing\"\r\n  timestamp: string\r\n}\r\n\r\nexport interface RealTimeUpdate {\r\n  id: string\r\n  type: \"create\" | \"update\" | \"delete\"\r\n  table: string\r\n  record_id: string\r\n  user_id: string\r\n  user_name: string\r\n  changes?: Record<string, any>\r\n  timestamp: string\r\n}\r\n\r\nclass RealTimeService {\r\n  private channels: Map<string, RealtimeChannel> = new Map()\r\n  private presenceListeners: Array<(presence: UserPresence[]) => void> = []\r\n  private updateListeners: Array<(update: RealTimeUpdate) => void> = []\r\n  private editListeners: Array<(edit: CollaborativeEdit) => void> = []\r\n  private currentUser: { id: string; name: string; avatar_url?: string } | null = null\r\n  private heartbeatInterval: NodeJS.Timeout | null = null\r\n\r\n  // Initialize the service with current user\r\n  initialize(user: { id: string; name: string; avatar_url?: string }) {\r\n    this.currentUser = user\r\n    this.startHeartbeat()\r\n  }\r\n\r\n  // Cleanup when user logs out\r\n  cleanup() {\r\n    this.channels.forEach((channel) => channel.unsubscribe())\r\n    this.channels.clear()\r\n    this.presenceListeners = []\r\n    this.updateListeners = []\r\n    this.editListeners = []\r\n    if (this.heartbeatInterval) {\r\n      clearInterval(this.heartbeatInterval)\r\n      this.heartbeatInterval = null\r\n    }\r\n    this.currentUser = null\r\n  }\r\n\r\n  // Presence management\r\n  async joinPresence(roomId = \"global\"): Promise<() => void> {\r\n    if (!this.currentUser) {\r\n      throw new Error(\"User not initialized. Call initialize() first.\")\r\n    }\r\n\r\n    if (!supabase) {\r\n      throw new Error('Supabase client is not initialized');\r\n    }\r\n\r\n    const channelName = `presence:${roomId}`\r\n    let channel = this.channels.get(channelName)\r\n\r\n    if (!channel) {\r\n      channel = supabase.channel(channelName, {\r\n        config: {\r\n          presence: {\r\n            key: this.currentUser.id,\r\n          },\r\n        },\r\n      })\r\n\r\n      // Track presence changes\r\n      if (channel) {\r\n        channel\r\n          .on(\"presence\", { event: \"sync\" }, () => {\r\n            if (!channel) return;\r\n            const presenceState = channel.presenceState()\r\n            const users: UserPresence[] = Object.values(presenceState)\r\n              .flat()\r\n              .map((presence: any) => presence as UserPresence)\r\n\r\n            this.presenceListeners.forEach((listener) => listener(users))\r\n          })\r\n          .on(\"presence\", { event: \"join\" }, ({ key, newPresences }) => {\r\n            // Silent logging: User joined\r\n          })\r\n          .on(\"presence\", { event: \"leave\" }, ({ key, leftPresences }) => {\r\n            // Silent logging: User left\r\n          })\r\n      }\r\n\r\n      this.channels.set(channelName, channel)\r\n    }\r\n\r\n    // Join with current user presence\r\n    if (channel) {\r\n      await channel.subscribe(async (status) => {\r\n        if (status === \"SUBSCRIBED\") {\r\n          await channel.track({\r\n            user_id: this.currentUser!.id,\r\n            user_name: this.currentUser!.name,\r\n            avatar_url: this.currentUser!.avatar_url,\r\n            status: \"online\",\r\n            current_page: window.location.pathname,\r\n            last_seen: new Date().toISOString(),\r\n          })\r\n        }\r\n      })\r\n    }\r\n\r\n    return () => {\r\n      if (channel) {\r\n        channel.unsubscribe()\r\n        this.channels.delete(channelName)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Update user presence\r\n  async updatePresence(\r\n    roomId = \"global\",\r\n    updates: Partial<Pick<UserPresence, \"status\" | \"current_page\" | \"cursor_position\" | \"editing_field\" | \"last_seen\">>,\r\n  ) {\r\n    if (!this.currentUser) return\r\n\r\n    const channelName = `presence:${roomId}`\r\n    const channel = this.channels.get(channelName)\r\n\r\n    if (channel) {\r\n      await channel.track({\r\n        user_id: this.currentUser.id,\r\n        user_name: this.currentUser.name,\r\n        avatar_url: this.currentUser.avatar_url,\r\n        status: \"online\",\r\n        last_seen: new Date().toISOString(),\r\n        ...updates,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Subscribe to presence changes\r\n  subscribeToPresence(callback: (presence: UserPresence[]) => void): () => void {\r\n    this.presenceListeners.push(callback)\r\n    return () => {\r\n      this.presenceListeners = this.presenceListeners.filter((l) => l !== callback)\r\n    }\r\n  }\r\n\r\n  // Collaborative editing\r\n  async startEditing(\r\n    entityType: CollaborativeEdit[\"entity_type\"],\r\n    entityId: string,\r\n    fieldName: string,\r\n    roomId = \"global\",\r\n  ) {\r\n    if (!this.currentUser) return\r\n\r\n    const edit: CollaborativeEdit = {\r\n      id: `${this.currentUser.id}-${entityId}-${fieldName}`,\r\n      user_id: this.currentUser.id,\r\n      user_name: this.currentUser.name,\r\n      entity_type: entityType,\r\n      entity_id: entityId,\r\n      field_name: fieldName,\r\n      action: \"start_edit\",\r\n      timestamp: new Date().toISOString(),\r\n    }\r\n\r\n    await this.broadcastEdit(edit, roomId)\r\n    await this.updatePresence(roomId, { editing_field: `${entityType}:${entityId}:${fieldName}` })\r\n  }\r\n\r\n  async endEditing(\r\n    entityType: CollaborativeEdit[\"entity_type\"],\r\n    entityId: string,\r\n    fieldName: string,\r\n    roomId = \"global\",\r\n  ) {\r\n    if (!this.currentUser) return\r\n\r\n    const edit: CollaborativeEdit = {\r\n      id: `${this.currentUser.id}-${entityId}-${fieldName}`,\r\n      user_id: this.currentUser.id,\r\n      user_name: this.currentUser.name,\r\n      entity_type: entityType,\r\n      entity_id: entityId,\r\n      field_name: fieldName,\r\n      action: \"end_edit\",\r\n      timestamp: new Date().toISOString(),\r\n    }\r\n\r\n    await this.broadcastEdit(edit, roomId)\r\n    await this.updatePresence(roomId, { editing_field: undefined })\r\n  }\r\n\r\n  private async broadcastEdit(edit: CollaborativeEdit, roomId: string) {\r\n    if (!supabase) {\r\n      throw new Error('Supabase client is not initialized');\r\n    }\r\n\r\n    const channelName = `edits:${roomId}`\r\n    let channel = this.channels.get(channelName)\r\n\r\n    if (!channel) {\r\n      channel = supabase.channel(channelName)\r\n\r\n      channel.on(\"broadcast\", { event: \"edit\" }, (payload) => {\r\n        this.editListeners.forEach((listener) => listener(payload.payload as CollaborativeEdit))\r\n      })\r\n\r\n      await channel.subscribe()\r\n      this.channels.set(channelName, channel)\r\n    }\r\n\r\n    if (channel) {\r\n      await channel.send({\r\n        type: \"broadcast\",\r\n        event: \"edit\",\r\n        payload: edit,\r\n      })\r\n    }\r\n  }\r\n\r\n  // Subscribe to collaborative edits\r\n  subscribeToEdits(callback: (edit: CollaborativeEdit) => void): () => void {\r\n    this.editListeners.push(callback)\r\n    return () => {\r\n      this.editListeners = this.editListeners.filter((l) => l !== callback)\r\n    }\r\n  }\r\n\r\n  // Real-time data updates\r\n  subscribeToTableUpdates(table: string, callback: (update: RealTimeUpdate) => void, filter?: string): () => void {\r\n    if (!supabase) {\r\n      throw new Error('Supabase client is not initialized');\r\n    }\r\n\r\n    const channelName = `updates:${table}`\r\n    let channel = this.channels.get(channelName)\r\n\r\n    if (!channel) {\r\n      channel = supabase.channel(channelName)\r\n  \r\n      const config: any = {\r\n        event: \"*\",\r\n        schema: \"public\",\r\n        table: table,\r\n      }\r\n  \r\n      if (filter) {\r\n        config.filter = filter\r\n      }\r\n  \r\n      channel!.on(\"postgres_changes\", config, (payload) => {\r\n        if (!this.currentUser) return\r\n  \r\n        const recordId = (payload.new as any)?.id || (payload.old as any)?.id || 'unknown'\r\n        let updateType: \"create\" | \"update\" | \"delete\";\r\n        switch (payload.eventType) {\r\n          case \"INSERT\":\r\n            updateType = \"create\";\r\n            break;\r\n          case \"UPDATE\":\r\n            updateType = \"update\";\r\n            break;\r\n          case \"DELETE\":\r\n            updateType = \"delete\";\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n        const update: RealTimeUpdate = {\r\n          id: `${payload.eventType}-${payload.table}-${recordId}`,\r\n          type: updateType,\r\n          table: payload.table,\r\n          record_id: recordId,\r\n          user_id: this.currentUser.id,\r\n          user_name: this.currentUser.name,\r\n          changes: payload.eventType !== \"DELETE\" ? payload.new : payload.old,\r\n          timestamp: new Date().toISOString(),\r\n        }\r\n  \r\n        this.updateListeners.forEach((listener) => listener(update))\r\n        callback(update)\r\n      })\r\n  \r\n      channel!.subscribe()\r\n      this.channels.set(channelName, channel!)\r\n    }\r\n  \r\n    return () => {\r\n      channel?.unsubscribe()\r\n      this.channels.delete(channelName)\r\n    }\r\n  }\r\n\r\n  // Subscribe to all updates\r\n  subscribeToUpdates(callback: (update: RealTimeUpdate) => void): () => void {\r\n    this.updateListeners.push(callback)\r\n    return () => {\r\n      this.updateListeners = this.updateListeners.filter((l) => l !== callback)\r\n    }\r\n  }\r\n\r\n  // Heartbeat to maintain connection\r\n  private startHeartbeat() {\r\n    this.heartbeatInterval = setInterval(async () => {\r\n      if (this.currentUser) {\r\n        await this.updatePresence(\"global\", {\r\n          last_seen: new Date().toISOString(),\r\n        })\r\n      }\r\n    }, 30000) // Every 30 seconds\r\n  }\r\n\r\n  // Utility methods\r\n  getCurrentUser() {\r\n    return this.currentUser\r\n  }\r\n\r\n  getActiveChannels() {\r\n    return Array.from(this.channels.keys())\r\n  }\r\n\r\n  async leaveRoom(roomId: string) {\r\n    const channelsToRemove = Array.from(this.channels.keys()).filter((name) => name.includes(roomId))\r\n\r\n    for (const channelName of channelsToRemove) {\r\n      const channel = this.channels.get(channelName)\r\n      if (channel) {\r\n        await channel.unsubscribe()\r\n        this.channels.delete(channelName)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const realTimeService = new RealTimeService()\r\nexport default realTimeService\r\n"],
      names: ["realTimeService", "RealTimeService", "initialize", "user", "currentUser", "startHeartbeat", "cleanup", "channels", "forEach", "channel", "unsubscribe", "clear", "presenceListeners", "updateListeners", "editListeners", "heartbeatInterval", "clearInterval", "joinPresence", "roomId", "Error", "supabase", "channelName", "get", "config", "presence", "key", "id", "on", "event", "presenceState", "users", "Object", "values", "flat", "map", "listener", "newPresences", "leftPresences", "set", "subscribe", "status", "track", "user_id", "user_name", "name", "avatar_url", "current_page", "window", "location", "pathname", "last_seen", "Date", "toISOString", "delete", "updatePresence", "updates", "subscribeToPresence", "callback", "push", "filter", "l", "startEditing", "entityType", "entityId", "fieldName", "edit", "entity_type", "entity_id", "field_name", "action", "timestamp", "broadcastEdit", "editing_field", "endEditing", "undefined", "payload", "send", "type", "subscribeToEdits", "subscribeToTableUpdates", "table", "schema", "recordId", "new", "old", "updateType", "eventType", "update", "record_id", "changes", "subscribeToUpdates", "setInterval", "getCurrentUser", "getActiveChannels", "Array", "from", "keys", "leaveRoom", "channelsToRemove", "includes", "Map"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3736283231fcf33dfb62fa4226c3d010e0ec5b3d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ov1lgfgm0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ov1lgfgm0();
cov_1ov1lgfgm0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1ov1lgfgm0().f[0]++;
  cov_1ov1lgfgm0().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1ov1lgfgm0().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[1]++;
    cov_1ov1lgfgm0().s[4]++;
    return _default;
  },
  get realTimeService() {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[2]++;
    cov_1ov1lgfgm0().s[5]++;
    return realTimeService;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_1ov1lgfgm0().s[6]++, require("../lib/supabase"));
class RealTimeService {
  // Initialize the service with current user
  initialize(user) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[3]++;
    cov_1ov1lgfgm0().s[7]++;
    this.currentUser = user;
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[8]++;
    this.startHeartbeat();
  }
  // Cleanup when user logs out
  cleanup() {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[4]++;
    cov_1ov1lgfgm0().s[9]++;
    this.channels.forEach(channel => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[5]++;
      cov_1ov1lgfgm0().s[10]++;
      return channel.unsubscribe();
    });
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[11]++;
    this.channels.clear();
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[12]++;
    this.presenceListeners = [];
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[13]++;
    this.updateListeners = [];
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[14]++;
    this.editListeners = [];
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[15]++;
    if (this.heartbeatInterval) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[0][0]++;
      cov_1ov1lgfgm0().s[16]++;
      clearInterval(this.heartbeatInterval);
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[17]++;
      this.heartbeatInterval = null;
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[0][1]++;
    }
    cov_1ov1lgfgm0().s[18]++;
    this.currentUser = null;
  }
  // Presence management
  async joinPresence(roomId =
  /* istanbul ignore next */
  (cov_1ov1lgfgm0().b[1][0]++, "global")) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[6]++;
    cov_1ov1lgfgm0().s[19]++;
    if (!this.currentUser) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[2][0]++;
      cov_1ov1lgfgm0().s[20]++;
      throw new Error("User not initialized. Call initialize() first.");
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[2][1]++;
    }
    cov_1ov1lgfgm0().s[21]++;
    if (!_supabase.supabase) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[3][0]++;
      cov_1ov1lgfgm0().s[22]++;
      throw new Error('Supabase client is not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[3][1]++;
    }
    const channelName =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[23]++, `presence:${roomId}`);
    let channel =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[24]++, this.channels.get(channelName));
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[25]++;
    if (!channel) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[4][0]++;
      cov_1ov1lgfgm0().s[26]++;
      channel = _supabase.supabase.channel(channelName, {
        config: {
          presence: {
            key: this.currentUser.id
          }
        }
      });
      // Track presence changes
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[27]++;
      if (channel) {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().b[5][0]++;
        cov_1ov1lgfgm0().s[28]++;
        channel.on("presence", {
          event: "sync"
        }, () => {
          /* istanbul ignore next */
          cov_1ov1lgfgm0().f[7]++;
          cov_1ov1lgfgm0().s[29]++;
          if (!channel) {
            /* istanbul ignore next */
            cov_1ov1lgfgm0().b[6][0]++;
            cov_1ov1lgfgm0().s[30]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1ov1lgfgm0().b[6][1]++;
          }
          const presenceState =
          /* istanbul ignore next */
          (cov_1ov1lgfgm0().s[31]++, channel.presenceState());
          const users =
          /* istanbul ignore next */
          (cov_1ov1lgfgm0().s[32]++, Object.values(presenceState).flat().map(presence => {
            /* istanbul ignore next */
            cov_1ov1lgfgm0().f[8]++;
            cov_1ov1lgfgm0().s[33]++;
            return presence;
          }));
          /* istanbul ignore next */
          cov_1ov1lgfgm0().s[34]++;
          this.presenceListeners.forEach(listener => {
            /* istanbul ignore next */
            cov_1ov1lgfgm0().f[9]++;
            cov_1ov1lgfgm0().s[35]++;
            return listener(users);
          });
        }).on("presence", {
          event: "join"
        }, ({
          key,
          newPresences
        }) => {
          /* istanbul ignore next */
          cov_1ov1lgfgm0().f[10]++;
        } // Silent logging: User joined
        ).on("presence", {
          event: "leave"
        }, ({
          key,
          leftPresences
        }) => {
          /* istanbul ignore next */
          cov_1ov1lgfgm0().f[11]++;
        } // Silent logging: User left
        );
      } else
      /* istanbul ignore next */
      {
        cov_1ov1lgfgm0().b[5][1]++;
      }
      cov_1ov1lgfgm0().s[36]++;
      this.channels.set(channelName, channel);
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[4][1]++;
    }
    // Join with current user presence
    cov_1ov1lgfgm0().s[37]++;
    if (channel) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[7][0]++;
      cov_1ov1lgfgm0().s[38]++;
      await channel.subscribe(async status => {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().f[12]++;
        cov_1ov1lgfgm0().s[39]++;
        if (status === "SUBSCRIBED") {
          /* istanbul ignore next */
          cov_1ov1lgfgm0().b[8][0]++;
          cov_1ov1lgfgm0().s[40]++;
          await channel.track({
            user_id: this.currentUser.id,
            user_name: this.currentUser.name,
            avatar_url: this.currentUser.avatar_url,
            status: "online",
            current_page: window.location.pathname,
            last_seen: new Date().toISOString()
          });
        } else
        /* istanbul ignore next */
        {
          cov_1ov1lgfgm0().b[8][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[7][1]++;
    }
    cov_1ov1lgfgm0().s[41]++;
    return () => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[13]++;
      cov_1ov1lgfgm0().s[42]++;
      if (channel) {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().b[9][0]++;
        cov_1ov1lgfgm0().s[43]++;
        channel.unsubscribe();
        /* istanbul ignore next */
        cov_1ov1lgfgm0().s[44]++;
        this.channels.delete(channelName);
      } else
      /* istanbul ignore next */
      {
        cov_1ov1lgfgm0().b[9][1]++;
      }
    };
  }
  // Update user presence
  async updatePresence(roomId =
  /* istanbul ignore next */
  (cov_1ov1lgfgm0().b[10][0]++, "global"), updates) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[14]++;
    cov_1ov1lgfgm0().s[45]++;
    if (!this.currentUser) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[11][0]++;
      cov_1ov1lgfgm0().s[46]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[11][1]++;
    }
    const channelName =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[47]++, `presence:${roomId}`);
    const channel =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[48]++, this.channels.get(channelName));
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[49]++;
    if (channel) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[12][0]++;
      cov_1ov1lgfgm0().s[50]++;
      await channel.track({
        user_id: this.currentUser.id,
        user_name: this.currentUser.name,
        avatar_url: this.currentUser.avatar_url,
        status: "online",
        last_seen: new Date().toISOString(),
        ...updates
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[12][1]++;
    }
  }
  // Subscribe to presence changes
  subscribeToPresence(callback) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[15]++;
    cov_1ov1lgfgm0().s[51]++;
    this.presenceListeners.push(callback);
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[52]++;
    return () => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[16]++;
      cov_1ov1lgfgm0().s[53]++;
      this.presenceListeners = this.presenceListeners.filter(l => {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().f[17]++;
        cov_1ov1lgfgm0().s[54]++;
        return l !== callback;
      });
    };
  }
  // Collaborative editing
  async startEditing(entityType, entityId, fieldName, roomId =
  /* istanbul ignore next */
  (cov_1ov1lgfgm0().b[13][0]++, "global")) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[18]++;
    cov_1ov1lgfgm0().s[55]++;
    if (!this.currentUser) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[14][0]++;
      cov_1ov1lgfgm0().s[56]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[14][1]++;
    }
    const edit =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[57]++, {
      id: `${this.currentUser.id}-${entityId}-${fieldName}`,
      user_id: this.currentUser.id,
      user_name: this.currentUser.name,
      entity_type: entityType,
      entity_id: entityId,
      field_name: fieldName,
      action: "start_edit",
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[58]++;
    await this.broadcastEdit(edit, roomId);
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[59]++;
    await this.updatePresence(roomId, {
      editing_field: `${entityType}:${entityId}:${fieldName}`
    });
  }
  async endEditing(entityType, entityId, fieldName, roomId =
  /* istanbul ignore next */
  (cov_1ov1lgfgm0().b[15][0]++, "global")) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[19]++;
    cov_1ov1lgfgm0().s[60]++;
    if (!this.currentUser) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[16][0]++;
      cov_1ov1lgfgm0().s[61]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[16][1]++;
    }
    const edit =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[62]++, {
      id: `${this.currentUser.id}-${entityId}-${fieldName}`,
      user_id: this.currentUser.id,
      user_name: this.currentUser.name,
      entity_type: entityType,
      entity_id: entityId,
      field_name: fieldName,
      action: "end_edit",
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[63]++;
    await this.broadcastEdit(edit, roomId);
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[64]++;
    await this.updatePresence(roomId, {
      editing_field: undefined
    });
  }
  async broadcastEdit(edit, roomId) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[20]++;
    cov_1ov1lgfgm0().s[65]++;
    if (!_supabase.supabase) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[17][0]++;
      cov_1ov1lgfgm0().s[66]++;
      throw new Error('Supabase client is not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[17][1]++;
    }
    const channelName =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[67]++, `edits:${roomId}`);
    let channel =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[68]++, this.channels.get(channelName));
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[69]++;
    if (!channel) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[18][0]++;
      cov_1ov1lgfgm0().s[70]++;
      channel = _supabase.supabase.channel(channelName);
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[71]++;
      channel.on("broadcast", {
        event: "edit"
      }, payload => {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().f[21]++;
        cov_1ov1lgfgm0().s[72]++;
        this.editListeners.forEach(listener => {
          /* istanbul ignore next */
          cov_1ov1lgfgm0().f[22]++;
          cov_1ov1lgfgm0().s[73]++;
          return listener(payload.payload);
        });
      });
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[74]++;
      await channel.subscribe();
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[75]++;
      this.channels.set(channelName, channel);
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[18][1]++;
    }
    cov_1ov1lgfgm0().s[76]++;
    if (channel) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[19][0]++;
      cov_1ov1lgfgm0().s[77]++;
      await channel.send({
        type: "broadcast",
        event: "edit",
        payload: edit
      });
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[19][1]++;
    }
  }
  // Subscribe to collaborative edits
  subscribeToEdits(callback) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[23]++;
    cov_1ov1lgfgm0().s[78]++;
    this.editListeners.push(callback);
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[79]++;
    return () => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[24]++;
      cov_1ov1lgfgm0().s[80]++;
      this.editListeners = this.editListeners.filter(l => {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().f[25]++;
        cov_1ov1lgfgm0().s[81]++;
        return l !== callback;
      });
    };
  }
  // Real-time data updates
  subscribeToTableUpdates(table, callback, filter) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[26]++;
    cov_1ov1lgfgm0().s[82]++;
    if (!_supabase.supabase) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[20][0]++;
      cov_1ov1lgfgm0().s[83]++;
      throw new Error('Supabase client is not initialized');
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[20][1]++;
    }
    const channelName =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[84]++, `updates:${table}`);
    let channel =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[85]++, this.channels.get(channelName));
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[86]++;
    if (!channel) {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().b[21][0]++;
      cov_1ov1lgfgm0().s[87]++;
      channel = _supabase.supabase.channel(channelName);
      const config =
      /* istanbul ignore next */
      (cov_1ov1lgfgm0().s[88]++, {
        event: "*",
        schema: "public",
        table: table
      });
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[89]++;
      if (filter) {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().b[22][0]++;
        cov_1ov1lgfgm0().s[90]++;
        config.filter = filter;
      } else
      /* istanbul ignore next */
      {
        cov_1ov1lgfgm0().b[22][1]++;
      }
      cov_1ov1lgfgm0().s[91]++;
      channel.on("postgres_changes", config, payload => {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().f[27]++;
        cov_1ov1lgfgm0().s[92]++;
        if (!this.currentUser) {
          /* istanbul ignore next */
          cov_1ov1lgfgm0().b[23][0]++;
          cov_1ov1lgfgm0().s[93]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1ov1lgfgm0().b[23][1]++;
        }
        const recordId =
        /* istanbul ignore next */
        (cov_1ov1lgfgm0().s[94]++,
        /* istanbul ignore next */
        (cov_1ov1lgfgm0().b[24][0]++, payload.new?.id) ||
        /* istanbul ignore next */
        (cov_1ov1lgfgm0().b[24][1]++, payload.old?.id) ||
        /* istanbul ignore next */
        (cov_1ov1lgfgm0().b[24][2]++, 'unknown'));
        let updateType;
        /* istanbul ignore next */
        cov_1ov1lgfgm0().s[95]++;
        switch (payload.eventType) {
          case "INSERT":
            /* istanbul ignore next */
            cov_1ov1lgfgm0().b[25][0]++;
            cov_1ov1lgfgm0().s[96]++;
            updateType = "create";
            /* istanbul ignore next */
            cov_1ov1lgfgm0().s[97]++;
            break;
          case "UPDATE":
            /* istanbul ignore next */
            cov_1ov1lgfgm0().b[25][1]++;
            cov_1ov1lgfgm0().s[98]++;
            updateType = "update";
            /* istanbul ignore next */
            cov_1ov1lgfgm0().s[99]++;
            break;
          case "DELETE":
            /* istanbul ignore next */
            cov_1ov1lgfgm0().b[25][2]++;
            cov_1ov1lgfgm0().s[100]++;
            updateType = "delete";
            /* istanbul ignore next */
            cov_1ov1lgfgm0().s[101]++;
            break;
          default:
            /* istanbul ignore next */
            cov_1ov1lgfgm0().b[25][3]++;
            cov_1ov1lgfgm0().s[102]++;
            return;
        }
        const update =
        /* istanbul ignore next */
        (cov_1ov1lgfgm0().s[103]++, {
          id: `${payload.eventType}-${payload.table}-${recordId}`,
          type: updateType,
          table: payload.table,
          record_id: recordId,
          user_id: this.currentUser.id,
          user_name: this.currentUser.name,
          changes: payload.eventType !== "DELETE" ?
          /* istanbul ignore next */
          (cov_1ov1lgfgm0().b[26][0]++, payload.new) :
          /* istanbul ignore next */
          (cov_1ov1lgfgm0().b[26][1]++, payload.old),
          timestamp: new Date().toISOString()
        });
        /* istanbul ignore next */
        cov_1ov1lgfgm0().s[104]++;
        this.updateListeners.forEach(listener => {
          /* istanbul ignore next */
          cov_1ov1lgfgm0().f[28]++;
          cov_1ov1lgfgm0().s[105]++;
          return listener(update);
        });
        /* istanbul ignore next */
        cov_1ov1lgfgm0().s[106]++;
        callback(update);
      });
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[107]++;
      channel.subscribe();
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[108]++;
      this.channels.set(channelName, channel);
    } else
    /* istanbul ignore next */
    {
      cov_1ov1lgfgm0().b[21][1]++;
    }
    cov_1ov1lgfgm0().s[109]++;
    return () => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[29]++;
      cov_1ov1lgfgm0().s[110]++;
      channel?.unsubscribe();
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[111]++;
      this.channels.delete(channelName);
    };
  }
  // Subscribe to all updates
  subscribeToUpdates(callback) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[30]++;
    cov_1ov1lgfgm0().s[112]++;
    this.updateListeners.push(callback);
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[113]++;
    return () => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[31]++;
      cov_1ov1lgfgm0().s[114]++;
      this.updateListeners = this.updateListeners.filter(l => {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().f[32]++;
        cov_1ov1lgfgm0().s[115]++;
        return l !== callback;
      });
    };
  }
  // Heartbeat to maintain connection
  startHeartbeat() {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[33]++;
    cov_1ov1lgfgm0().s[116]++;
    this.heartbeatInterval = setInterval(async () => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[34]++;
      cov_1ov1lgfgm0().s[117]++;
      if (this.currentUser) {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().b[27][0]++;
        cov_1ov1lgfgm0().s[118]++;
        await this.updatePresence("global", {
          last_seen: new Date().toISOString()
        });
      } else
      /* istanbul ignore next */
      {
        cov_1ov1lgfgm0().b[27][1]++;
      }
    }, 30000); // Every 30 seconds
  }
  // Utility methods
  getCurrentUser() {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[35]++;
    cov_1ov1lgfgm0().s[119]++;
    return this.currentUser;
  }
  getActiveChannels() {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[36]++;
    cov_1ov1lgfgm0().s[120]++;
    return Array.from(this.channels.keys());
  }
  async leaveRoom(roomId) {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[37]++;
    const channelsToRemove =
    /* istanbul ignore next */
    (cov_1ov1lgfgm0().s[121]++, Array.from(this.channels.keys()).filter(name => {
      /* istanbul ignore next */
      cov_1ov1lgfgm0().f[38]++;
      cov_1ov1lgfgm0().s[122]++;
      return name.includes(roomId);
    }));
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[123]++;
    for (const channelName of channelsToRemove) {
      const channel =
      /* istanbul ignore next */
      (cov_1ov1lgfgm0().s[124]++, this.channels.get(channelName));
      /* istanbul ignore next */
      cov_1ov1lgfgm0().s[125]++;
      if (channel) {
        /* istanbul ignore next */
        cov_1ov1lgfgm0().b[28][0]++;
        cov_1ov1lgfgm0().s[126]++;
        await channel.unsubscribe();
        /* istanbul ignore next */
        cov_1ov1lgfgm0().s[127]++;
        this.channels.delete(channelName);
      } else
      /* istanbul ignore next */
      {
        cov_1ov1lgfgm0().b[28][1]++;
      }
    }
  }
  constructor() {
    /* istanbul ignore next */
    cov_1ov1lgfgm0().f[39]++;
    cov_1ov1lgfgm0().s[128]++;
    this.channels = new Map();
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[129]++;
    this.presenceListeners = [];
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[130]++;
    this.updateListeners = [];
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[131]++;
    this.editListeners = [];
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[132]++;
    this.currentUser = null;
    /* istanbul ignore next */
    cov_1ov1lgfgm0().s[133]++;
    this.heartbeatInterval = null;
  }
}
const realTimeService =
/* istanbul ignore next */
(cov_1ov1lgfgm0().s[134]++, new RealTimeService());
const _default =
/* istanbul ignore next */
(cov_1ov1lgfgm0().s[135]++, realTimeService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,