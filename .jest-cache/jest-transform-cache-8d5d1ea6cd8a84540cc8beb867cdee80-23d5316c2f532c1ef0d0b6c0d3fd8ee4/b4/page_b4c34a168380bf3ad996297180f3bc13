9e4b8907a89410156e6fb8ffa3ea31e2
"use client";
"use strict";

/* istanbul ignore next */
function cov_1jmi9goccv() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\app\\reports\\page.tsx";
  var hash = "75a471e1a6ea5a1f35790b59a176974802051dfe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\app\\reports\\page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 53
        }
      },
      "6": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 49
        }
      },
      "7": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 16,
          column: 44
        }
      },
      "8": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "9": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 57
        }
      },
      "10": {
        start: {
          line: 19,
          column: 17
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "11": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 37
        }
      },
      "12": {
        start: {
          line: 21,
          column: 31
        },
        end: {
          line: 21,
          column: 80
        }
      },
      "13": {
        start: {
          line: 22,
          column: 20
        },
        end: {
          line: 22,
          column: 55
        }
      },
      "14": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 57
        }
      },
      "15": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "16": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "17": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "18": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "21": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "22": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "23": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "24": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "25": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "26": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "27": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "28": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "29": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "30": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "31": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "32": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "33": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "34": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "35": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "36": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "37": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "38": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "39": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "40": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 212,
          column: 1
        }
      },
      "41": {
        start: {
          line: 66,
          column: 34
        },
        end: {
          line: 66,
          column: 58
        }
      },
      "42": {
        start: {
          line: 67,
          column: 28
        },
        end: {
          line: 70,
          column: 6
        }
      },
      "43": {
        start: {
          line: 71,
          column: 27
        },
        end: {
          line: 96,
          column: 6
        }
      },
      "44": {
        start: {
          line: 72,
          column: 21
        },
        end: {
          line: 72,
          column: 45
        }
      },
      "45": {
        start: {
          line: 73,
          column: 19
        },
        end: {
          line: 73,
          column: 41
        }
      },
      "46": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "47": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "48": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "49": {
        start: {
          line: 98,
          column: 37
        },
        end: {
          line: 139,
          column: 22
        }
      },
      "50": {
        start: {
          line: 98,
          column: 82
        },
        end: {
          line: 139,
          column: 21
        }
      },
      "51": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 211,
          column: 7
        }
      },
      "52": {
        start: {
          line: 206,
          column: 62
        },
        end: {
          line: 208,
          column: 33
        }
      },
      "53": {
        start: {
          line: 214,
          column: 33
        },
        end: {
          line: 222,
          column: 1
        }
      },
      "54": {
        start: {
          line: 215,
          column: 4
        },
        end: {
          line: 221,
          column: 7
        }
      },
      "55": {
        start: {
          line: 223,
          column: 17
        },
        end: {
          line: 223,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 20
          },
          end: {
            line: 65,
            column: 21
          }
        },
        loc: {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 71,
            column: 51
          },
          end: {
            line: 71,
            column: 52
          }
        },
        loc: {
          start: {
            line: 71,
            column: 55
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 71
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 84,
            column: 15
          },
          end: {
            line: 84,
            column: 16
          }
        },
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 87,
            column: 17
          }
        },
        line: 84
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 98,
            column: 54
          },
          end: {
            line: 98,
            column: 55
          }
        },
        loc: {
          start: {
            line: 98,
            column: 82
          },
          end: {
            line: 139,
            column: 21
          }
        },
        line: 98
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 206,
            column: 38
          },
          end: {
            line: 206,
            column: 39
          }
        },
        loc: {
          start: {
            line: 206,
            column: 62
          },
          end: {
            line: 208,
            column: 33
          }
        },
        line: 206
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 214,
            column: 33
          },
          end: {
            line: 214,
            column: 34
          }
        },
        loc: {
          start: {
            line: 214,
            column: 37
          },
          end: {
            line: 222,
            column: 1
          }
        },
        line: 214
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 72,
            column: 21
          },
          end: {
            line: 72,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 21
          },
          end: {
            line: 72,
            column: 31
          }
        }, {
          start: {
            line: 72,
            column: 35
          },
          end: {
            line: 72,
            column: 45
          }
        }],
        line: 72
      },
      "16": {
        loc: {
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 73,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 19
          },
          end: {
            line: 73,
            column: 27
          }
        }, {
          start: {
            line: 73,
            column: 31
          },
          end: {
            line: 73,
            column: 41
          }
        }],
        line: 73
      },
      "17": {
        loc: {
          start: {
            line: 165,
            column: 48
          },
          end: {
            line: 173,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 61
          },
          end: {
            line: 171,
            column: 97
          }
        }, {
          start: {
            line: 171,
            column: 114
          },
          end: {
            line: 173,
            column: 50
          }
        }],
        line: 165
      },
      "18": {
        loc: {
          start: {
            line: 165,
            column: 61
          },
          end: {
            line: 171,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 165,
            column: 85
          },
          end: {
            line: 171,
            column: 50
          }
        }, {
          start: {
            line: 171,
            column: 53
          },
          end: {
            line: 171,
            column: 97
          }
        }],
        line: 165
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\app\\reports\\page.tsx"],
      sourcesContent: ["\"use client\";\n\nimport React, { useState, useMemo, useCallback, memo } from 'react';\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { PlusCircle, Calendar as CalendarIcon } from 'lucide-react';\nimport { DateRange } from \"react-day-picker\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { format } from \"date-fns\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { EnhancedErrorBoundary } from '@/components/EnhancedErrorBoundary';\nimport { AppProvider } from '@/context/AppContext';\nimport { AuthProvider } from '@/context/AuthContext';\n\ninterface Report {\n  id: string;\n  name: string;\n  createdAt: string;\n  dateRange: DateRange;\n  data: any[];\n}\n\nconst ReportsPage: React.FC = () => {\n  const [reports, setReports] = useState<Report[]>([]);\n  const [date, setDate] = React.useState<DateRange | undefined>({\n    from: new Date(2024, 0, 20),\n    to: new Date(2024, 0, 20),\n  });\n\n  const generateReport = useCallback(() => {\n    const from = date?.from || new Date();\n    const to = date?.to || new Date();\n    const newReport: Report = {\n      id: new Date().toISOString(),\n      name: `Report - ${from.toLocaleDateString()} to ${to.toLocaleDateString()}`,\n      createdAt: new Date().toLocaleDateString(),\n      dateRange: { from, to },\n      data: Array.from({ length: 12 }, (_, i) => ({\n        name: `Month ${i + 1}`,\n        sales: Math.floor(Math.random() * 5000) + 1000,\n      })),\n    };\n    setReports([...reports, newReport]);\n  }, [reports, date]);\n\n  // Memoized ReportCard component to prevent unnecessary re-renders\n  const ReportCard = memo(({ report }: { report: any }) => (\n    <Card key={report.id}>\n      <CardHeader>\n        <CardTitle>{report.name}</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <p className=\"mb-4\">Created on: {report.createdAt}</p>\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={report.data}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"sales\" fill=\"#8884d8\" />\n          </BarChart>\n        </ResponsiveContainer>\n      </CardContent>\n    </Card>\n  ));\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">Reports</h1>\n        <div className=\"flex items-center gap-2\">\n          <Popover>\n            <PopoverTrigger asChild>\n              <Button\n                id=\"date\"\n                variant={\"outline\"}\n                className=\"w-[300px] justify-start text-left font-normal\"\n              >\n                <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                {date?.from ? (\n                  date.to ? (\n                    <>\n                      {format(date.from, \"LLL dd, y\")} - {format(date.to, \"LLL dd, y\")}\n                    </>\n                  ) : (\n                    format(date.from, \"LLL dd, y\")\n                  )\n                ) : (\n                  <span>Pick a date</span>\n                )}\n              </Button>\n            </PopoverTrigger>\n            <PopoverContent className=\"w-auto p-0\" align=\"end\">\n              <Calendar\n                initialFocus\n                mode=\"range\"\n                defaultMonth={date?.from}\n                selected={date}\n                onSelect={setDate}\n                numberOfMonths={2}\n              />\n            </PopoverContent>\n          </Popover>\n          <Button onClick={generateReport}>\n            <PlusCircle className=\"mr-2 h-4 w-4\" />\n            Generate Report\n          </Button>\n        </div>\n      </div>\n      <div className=\"grid gap-4 md:grid-cols-1 lg:grid-cols-2\">\n        {reports.map((report) => (\n          <ReportCard key={report.id} report={report} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// Wrap the component with error boundary and providers\nconst ReportsPageWithProviders = () => {\n  return (\n    <EnhancedErrorBoundary>\n      <AuthProvider>\n        <AppProvider>\n          <ReportsPage />\n        </AppProvider>\n      </AuthProvider>\n    </EnhancedErrorBoundary>\n  );\n};\n\nexport default ReportsPageWithProviders;"],
      names: ["ReportsPage", "reports", "setReports", "useState", "date", "setDate", "React", "from", "Date", "to", "generateReport", "useCallback", "newReport", "id", "toISOString", "name", "toLocaleDateString", "createdAt", "dateRange", "data", "Array", "length", "_", "i", "sales", "Math", "floor", "random", "ReportCard", "memo", "report", "Card", "CardHeader", "CardTitle", "CardContent", "p", "className", "ResponsiveContainer", "width", "height", "BarChart", "CartesianGrid", "strokeDasharray", "XAxis", "dataKey", "YAxis", "Tooltip", "Legend", "Bar", "fill", "div", "h1", "Popover", "PopoverTrigger", "asChild", "Button", "variant", "CalendarIcon", "format", "span", "PopoverContent", "align", "Calendar", "initialFocus", "mode", "defaultMonth", "selected", "onSelect", "numberOfMonths", "onClick", "PlusCircle", "map", "ReportsPageWithProviders", "EnhancedErrorBoundary", "AuthProvider", "AppProvider"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "75a471e1a6ea5a1f35790b59a176974802051dfe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1jmi9goccv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jmi9goccv();
cov_1jmi9goccv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1jmi9goccv().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1jmi9goccv().f[0]++;
    cov_1jmi9goccv().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1jmi9goccv().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1jmi9goccv().s[4]++, _interop_require_wildcard(require("react")));
const _button =
/* istanbul ignore next */
(cov_1jmi9goccv().s[5]++, require("../../components/ui/button"));
const _card =
/* istanbul ignore next */
(cov_1jmi9goccv().s[6]++, require("../../components/ui/card"));
const _lucidereact =
/* istanbul ignore next */
(cov_1jmi9goccv().s[7]++, require("lucide-react"));
const _popover =
/* istanbul ignore next */
(cov_1jmi9goccv().s[8]++, require("../../components/ui/popover"));
const _calendar =
/* istanbul ignore next */
(cov_1jmi9goccv().s[9]++, require("../../components/ui/calendar"));
const _datefns =
/* istanbul ignore next */
(cov_1jmi9goccv().s[10]++, require("date-fns"));
const _recharts =
/* istanbul ignore next */
(cov_1jmi9goccv().s[11]++, require("recharts"));
const _EnhancedErrorBoundary =
/* istanbul ignore next */
(cov_1jmi9goccv().s[12]++, require("../../components/EnhancedErrorBoundary"));
const _AppContext =
/* istanbul ignore next */
(cov_1jmi9goccv().s[13]++, require("../../context/AppContext"));
const _AuthContext =
/* istanbul ignore next */
(cov_1jmi9goccv().s[14]++, require("../../context/AuthContext"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1jmi9goccv().f[1]++;
  cov_1jmi9goccv().s[15]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1jmi9goccv().b[0][0]++;
    cov_1jmi9goccv().s[16]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1jmi9goccv().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[17]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[18]++, new WeakMap());
  /* istanbul ignore next */
  cov_1jmi9goccv().s[19]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1jmi9goccv().f[2]++;
    cov_1jmi9goccv().s[20]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1jmi9goccv().f[3]++;
  cov_1jmi9goccv().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1jmi9goccv().b[2][0]++;
    cov_1jmi9goccv().s[22]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1jmi9goccv().b[2][1]++;
  }
  cov_1jmi9goccv().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1jmi9goccv().b[4][0]++;
    cov_1jmi9goccv().s[24]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1jmi9goccv().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[25]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1jmi9goccv().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1jmi9goccv().b[6][0]++;
    cov_1jmi9goccv().s[27]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1jmi9goccv().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[28]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[29]++,
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1jmi9goccv().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1jmi9goccv().s[30]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1jmi9goccv().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1jmi9goccv().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1jmi9goccv().s[32]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1jmi9goccv().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1jmi9goccv().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1jmi9goccv().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_1jmi9goccv().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1jmi9goccv().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1jmi9goccv().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1jmi9goccv().b[12][0]++;
        cov_1jmi9goccv().s[34]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1jmi9goccv().b[12][1]++;
        cov_1jmi9goccv().s[35]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1jmi9goccv().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1jmi9goccv().s[36]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1jmi9goccv().s[37]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1jmi9goccv().b[14][0]++;
    cov_1jmi9goccv().s[38]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1jmi9goccv().b[14][1]++;
  }
  cov_1jmi9goccv().s[39]++;
  return newObj;
}
/* istanbul ignore next */
cov_1jmi9goccv().s[40]++;
const ReportsPage = () => {
  /* istanbul ignore next */
  cov_1jmi9goccv().f[4]++;
  const [reports, setReports] =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[41]++, (0, _react.useState)([]));
  const [date, setDate] =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[42]++, _react.default.useState({
    from: new Date(2024, 0, 20),
    to: new Date(2024, 0, 20)
  }));
  const generateReport =
  /* istanbul ignore next */
  (cov_1jmi9goccv().s[43]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1jmi9goccv().f[5]++;
    const from =
    /* istanbul ignore next */
    (cov_1jmi9goccv().s[44]++,
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[15][0]++, date?.from) ||
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[15][1]++, new Date()));
    const to =
    /* istanbul ignore next */
    (cov_1jmi9goccv().s[45]++,
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[16][0]++, date?.to) ||
    /* istanbul ignore next */
    (cov_1jmi9goccv().b[16][1]++, new Date()));
    const newReport =
    /* istanbul ignore next */
    (cov_1jmi9goccv().s[46]++, {
      id: new Date().toISOString(),
      name: `Report - ${from.toLocaleDateString()} to ${to.toLocaleDateString()}`,
      createdAt: new Date().toLocaleDateString(),
      dateRange: {
        from,
        to
      },
      data: Array.from({
        length: 12
      }, (_, i) => {
        /* istanbul ignore next */
        cov_1jmi9goccv().f[6]++;
        cov_1jmi9goccv().s[47]++;
        return {
          name: `Month ${i + 1}`,
          sales: Math.floor(Math.random() * 5000) + 1000
        };
      })
    });
    /* istanbul ignore next */
    cov_1jmi9goccv().s[48]++;
    setReports([...reports, newReport]);
  }, [reports, date]));
  // Memoized ReportCard component to prevent unnecessary re-renders
  const ReportCard =
  /* istanbul ignore next */
  (/*#__PURE__*/cov_1jmi9goccv().s[49]++, (0, _react.memo)(({
    report
  }) => {
    /* istanbul ignore next */
    cov_1jmi9goccv().f[7]++;
    cov_1jmi9goccv().s[50]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
          children: report.name
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardContent, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          className: "mb-4",
          children: ["Created on: ", report.createdAt]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
          width: "100%",
          height: 300,
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.BarChart, {
            data: report.data,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
              strokeDasharray: "3 3"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
              dataKey: "name"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
              dataKey: "sales",
              fill: "#8884d8"
            })]
          })
        })]
      })]
    }, report.id);
  }));
  /* istanbul ignore next */
  cov_1jmi9goccv().s[51]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "p-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
        className: "text-2xl font-bold",
        children: "Reports"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_popover.Popover, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_popover.PopoverTrigger, {
            asChild: true,
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
              id: "date",
              variant: "outline",
              className: "w-[300px] justify-start text-left font-normal",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Calendar, {
                className: "mr-2 h-4 w-4"
              }), date?.from ?
              /* istanbul ignore next */
              (cov_1jmi9goccv().b[17][0]++, date.to ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1jmi9goccv().b[18][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                children: [(0, _datefns.format)(date.from, "LLL dd, y"), " - ", (0, _datefns.format)(date.to, "LLL dd, y")]
              })) :
              /* istanbul ignore next */
              (cov_1jmi9goccv().b[18][1]++, (0, _datefns.format)(date.from, "LLL dd, y"))) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1jmi9goccv().b[17][1]++, (0, _jsxruntime.jsx)("span", {
                children: "Pick a date"
              }))]
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_popover.PopoverContent, {
            className: "w-auto p-0",
            align: "end",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_calendar.Calendar, {
              initialFocus: true,
              mode: "range",
              defaultMonth: date?.from,
              selected: date,
              onSelect: setDate,
              numberOfMonths: 2
            })
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          onClick: generateReport,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.PlusCircle, {
            className: "mr-2 h-4 w-4"
          }), "Generate Report"]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "grid gap-4 md:grid-cols-1 lg:grid-cols-2",
      children: reports.map(report => {
        /* istanbul ignore next */
        cov_1jmi9goccv().f[8]++;
        cov_1jmi9goccv().s[52]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(ReportCard, {
          report: report
        }, report.id);
      })
    })]
  });
};
// Wrap the component with error boundary and providers
/* istanbul ignore next */
cov_1jmi9goccv().s[53]++;
const ReportsPageWithProviders = () => {
  /* istanbul ignore next */
  cov_1jmi9goccv().f[9]++;
  cov_1jmi9goccv().s[54]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_EnhancedErrorBoundary.EnhancedErrorBoundary, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_AuthContext.AuthProvider, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_AppContext.AppProvider, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(ReportsPage, {})
      })
    })
  });
};
const _default =
/* istanbul ignore next */
(cov_1jmi9goccv().s[55]++, ReportsPageWithProviders);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,