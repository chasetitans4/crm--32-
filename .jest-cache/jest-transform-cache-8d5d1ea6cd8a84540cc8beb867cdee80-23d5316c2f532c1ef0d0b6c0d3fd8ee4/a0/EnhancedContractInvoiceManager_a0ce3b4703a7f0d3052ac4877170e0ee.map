{"version":3,"names":["_default","mockQuotes","cov_19e07xgwe4","s","id","quoteNumber","clientName","clientEmail","businessName","industry","pageCount","features","timeline","budget","finalPrice","totalHours","requirements","additionalNotes","status","createdAt","updatedAt","mockContracts","quoteId","clientId","contractNumber","contractTitle","startDate","endDate","terms","totalAmount","paymentSchedule","scopeOfWork","clientInfo","name","email","phone","company","address","projectDetails","title","description","priority","mockInvoices","invoiceNumber","clientAddress","issueDate","Date","dueDate","items","quantity","price","total","subtotal","tax","notes","mockAppState","quotes","contracts","invoices","useAppContext","f","state","setState","_react","useState","dispatch","useCallback","action","prevState","type","b","payload","useAuth","user","role","useRoleAccess","hasAccess","useToast","showSuccess","message","console","log","showError","error","EnhancedContractTemplateService","getTemplate","content","EnhancedQuoteConverter","convertQuoteToContractAndInvoices","quote","options","contract","now","getFullYear","String","Math","floor","random","padStart","contractTerms","serviceDescription","clientResponsibilities","providerResponsibilities","intellectualProperty","confidentiality","termination","disputeResolution","governingLaw","paymentTerms","scope","deliverables","toISOString","paymentStructure","currency","schedule","percentage","amount","contractId","invoiceType","unitPrice","taxRate","amountPaid","amountDue","success","errors","EnhancedContractInvoiceManager","isAdmin","activeTab","setActiveTab","searchTerm","setSearchTerm","statusFilter","setStatusFilter","dateFilter","setDateFilter","isLoading","setIsLoading","setErrors","showConversionModal","setShowConversionModal","showQuoteModal","setShowQuoteModal","showContractModal","setShowContractModal","showInvoiceModal","setShowInvoiceModal","conversionFlow","setConversionFlow","step","conversionOptions","includeDetailedItems","autoGenerateInvoices","userId","selectedQuote","setSelectedQuote","selectedContract","setSelectedContract","selectedInvoice","setSelectedInvoice","enhancedContracts","setEnhancedContracts","unifiedInvoices","setUnifiedInvoices","newQuoteForm","setNewQuoteForm","clientPhone","formErrors","setFormErrors","isFormValid","setIsFormValid","isSubmittingQuote","setIsSubmittingQuote","validateEmail","emailRegex","test","validateForm","formData","trim","handleNewQuoteFormChange","field","value","updatedForm","Object","keys","length","handleNewQuote","handleCloseQuoteModal","hasFormData","values","some","Array","isArray","confirmClose","window","confirm","handleQuoteSubmit","e","preventDefault","Promise","resolve","setTimeout","newQuote","toLocaleString","errorMessage","Error","includes","dashboardStats","useMemo","totalQuotes","totalContracts","totalInvoices","totalRevenue","filter","inv","reduce","acc","pendingPayments","activeProjects","conversionRate","averageProjectValue","handleConversion","prev","result","convertedContract","join","forEach","invoice","standardInvoice","map","item","generatePreview","previewResult","StatusBadge","getStatusConfig","configs","draft","color","icon","_lucidereact","Clock","sent","Send","accepted","CheckCircle","rejected","X","active","completed","cancelled","Draft","Sent","Paid","Overdue","AlertCircle","config","Icon","_jsxruntime","jsxs","className","jsx","charAt","toUpperCase","slice","replace","renderDashboard","FileText","Receipt","DollarSign","TrendingUp","toFixed","toLocaleDateString","renderConversionFlow","q","onClick","onChange","target","index","disabled","tabs","label","BarChart3","ArrowRight","Plus","tab","onSubmit","placeholder","min","parseInt","rows","split","parseFloat","RefreshCw"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\EnhancedContractInvoiceManager.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\"\nimport {\n  Plus,\n  Search,\n  Filter,\n  Download,\n  Send,\n  Eye,\n  Edit,\n  Trash2,\n  FileText,\n  Receipt,\n  Calendar,\n  DollarSign,\n  CheckCircle,\n  Clock,\n  AlertCircle,\n  ArrowRight,\n  Link,\n  RefreshCw,\n  Settings,\n  BarChart3,\n  TrendingUp,\n  Users,\n  X\n} from \"lucide-react\"\n\n// ===== TYPE DEFINITIONS =====\ninterface Quote {\n  id: string\n  quoteNumber: string\n  clientName: string\n  clientEmail: string\n  clientPhone?: string\n  businessName: string\n  industry: string\n  pageCount: number\n  features: string[]\n  timeline: string\n  budget: string\n  finalPrice: number\n  totalHours: number\n  requirements: string\n  additionalNotes: string\n  status: 'draft' | 'sent' | 'accepted' | 'rejected'\n  createdAt: string\n  updatedAt: string\n}\n\ninterface Contract {\n  id: string\n  quoteId?: string\n  clientId: string\n  contractNumber: string\n  contractTitle: string\n  clientName: string\n  clientEmail: string\n  startDate: string\n  endDate: string\n  terms: string\n  totalAmount: number\n  paymentSchedule: string\n  scopeOfWork: string\n  clientInfo: {\n    name: string\n    email: string\n    phone: string\n    company: string\n    address: string\n  }\n  projectDetails: {\n    title: string\n    description: string\n  }\n  status: 'draft' | 'active' | 'completed' | 'cancelled'\n  priority: 'low' | 'medium' | 'high'\n  createdAt: string\n  updatedAt: string\n}\n\ninterface Invoice {\n  id: string\n  invoiceNumber: string\n  clientId: string\n  clientName: string\n  clientEmail: string\n  clientAddress: string\n  issueDate: Date\n  dueDate: Date\n  items: {\n    id: string\n    description: string\n    quantity: number\n    price: number\n    total: number\n  }[]\n  subtotal: number\n  tax: number\n  totalAmount: number\n  notes?: string\n  status: 'Draft' | 'Sent' | 'Paid' | 'Overdue'\n}\n\ninterface EnhancedContract {\n  id: string\n  contractNumber: string\n  quoteId?: string\n  clientId?: string\n  clientName: string\n  clientEmail: string\n  contractTitle: string\n  startDate: Date\n  endDate: Date\n  contractTerms: {\n    serviceDescription: string\n    clientResponsibilities: string[]\n    providerResponsibilities: string[]\n    intellectualProperty: string\n    confidentiality: string\n    termination: string\n    disputeResolution: string\n    governingLaw: string\n  }\n  totalAmount: number\n  paymentSchedule: string\n  scopeOfWork: string\n  projectDetails: {\n    title: string\n    description: string\n    scope: string[]\n    deliverables: string[]\n    timeline: string\n    startDate: string\n    endDate: string\n  }\n  paymentStructure: {\n    type: 'single' | 'deposit_final' | 'milestone' | 'progress'\n    totalAmount: number\n    currency: string\n    schedule: PaymentMilestone[]\n  }\n  createdAt?: string\n  updatedAt?: string\n}\n\ninterface PaymentMilestone {\n  id: string\n  name: string\n  percentage: number\n  amount: number\n  dueDate: string\n  status: 'pending' | 'paid' | 'invoiced'\n  invoiceId?: string\n}\n\ninterface UnifiedInvoice {\n  id: string\n  invoiceNumber: string\n  contractId?: string\n  quoteId?: string\n  clientId?: string\n  clientName: string\n  clientEmail: string\n  clientAddress: string\n  invoiceType: 'deposit' | 'milestone' | 'final' | 'progress' | 'custom'\n  items: {\n    id: string\n    description: string\n    quantity: number\n    unitPrice: number\n    total: number\n  }[]\n  subtotal: number\n  tax: number\n  totalAmount: number\n  amountPaid: number\n  amountDue: number\n  status: 'draft' | 'sent' | 'viewed' | 'paid' | 'overdue' | 'cancelled'\n  issueDate: Date\n  dueDate: Date\n  notes?: string\n}\n\ninterface ConversionOptions {\n  paymentStructure: 'single' | 'deposit_final' | 'milestone' | 'progress'\n  taxRate: number\n  paymentTerms: string\n  includeDetailedItems: boolean\n  autoGenerateInvoices: boolean\n  userId?: string\n}\n\ninterface ConversionResult {\n  contract: EnhancedContract\n  invoices: UnifiedInvoice[]\n  success: boolean\n  errors: string[]\n}\n\ninterface DashboardStats {\n  totalQuotes: number\n  totalContracts: number\n  totalInvoices: number\n  totalRevenue: number\n  pendingPayments: number\n  activeProjects: number\n  conversionRate: number\n  averageProjectValue: number\n}\n\ninterface ConversionFlow {\n  step: 'select_quote' | 'configure_contract' | 'setup_payments' | 'review' | 'complete'\n  selectedQuote?: Quote\n  conversionOptions: ConversionOptions\n  previewResult?: ConversionResult\n  errors: string[]\n}\n\n// ===== MOCK DATA =====\nconst mockQuotes: Quote[] = [\n  {\n    id: '1',\n    quoteNumber: 'Q-2024-001',\n    clientName: 'John Doe',\n    clientEmail: 'john@example.com',\n    businessName: 'Doe Enterprises',\n    industry: 'Technology',\n    pageCount: 5,\n    features: ['Responsive Design', 'E-commerce', 'SEO'],\n    timeline: '6 weeks',\n    budget: '$5000-$10000',\n    finalPrice: 7500,\n    totalHours: 150,\n    requirements: 'Modern website with e-commerce functionality',\n    additionalNotes: 'Client prefers blue color scheme',\n    status: 'accepted',\n    createdAt: '2024-01-15T10:00:00Z',\n    updatedAt: '2024-01-20T15:30:00Z'\n  },\n  {\n    id: '2',\n    quoteNumber: 'Q-2024-002',\n    clientName: 'Jane Smith',\n    clientEmail: 'jane@company.com',\n    businessName: 'Smith Corp',\n    industry: 'Healthcare',\n    pageCount: 8,\n    features: ['Patient Portal', 'Appointment Booking', 'HIPAA Compliance'],\n    timeline: '8 weeks',\n    budget: '$10000-$15000',\n    finalPrice: 12000,\n    totalHours: 200,\n    requirements: 'Healthcare website with patient management',\n    additionalNotes: 'Must be HIPAA compliant',\n    status: 'sent',\n    createdAt: '2024-01-20T09:00:00Z',\n    updatedAt: '2024-01-22T11:15:00Z'\n  }\n]\n\nconst mockContracts: Contract[] = [\n  {\n    id: '1',\n    quoteId: '1',\n    clientId: 'client-1',\n    contractNumber: 'C-2024-001',\n    contractTitle: 'Website Development for Doe Enterprises',\n    clientName: 'John Doe',\n    clientEmail: 'john@example.com',\n    startDate: '2024-02-01',\n    endDate: '2024-03-15',\n    terms: 'Standard web development terms and conditions',\n    totalAmount: 7500,\n    paymentSchedule: '50% upfront, 50% on completion',\n    scopeOfWork: 'Responsive website with e-commerce functionality',\n    clientInfo: {\n      name: 'John Doe',\n      email: 'john@example.com',\n      phone: '+1-555-0123',\n      company: 'Doe Enterprises',\n      address: '123 Business St, City, State 12345'\n    },\n    projectDetails: {\n      title: 'E-commerce Website',\n      description: 'Modern responsive website with shopping cart'\n    },\n    status: 'active',\n    priority: 'high',\n    createdAt: '2024-01-25T10:00:00Z',\n    updatedAt: '2024-01-25T10:00:00Z'\n  }\n]\n\nconst mockInvoices: Invoice[] = [\n  {\n    id: '1',\n    invoiceNumber: 'INV-2024-001',\n    clientId: 'client-1',\n    clientName: 'John Doe',\n    clientEmail: 'john@example.com',\n    clientAddress: '123 Business St, City, State 12345',\n    issueDate: new Date('2024-02-01'),\n    dueDate: new Date('2024-02-15'),\n    items: [\n      {\n        id: '1',\n        description: 'Website Development - Deposit',\n        quantity: 1,\n        price: 3750,\n        total: 3750\n      }\n    ],\n    subtotal: 3750,\n    tax: 328.13,\n    totalAmount: 4078.13,\n    notes: 'Deposit payment for website development project',\n    status: 'Paid'\n  }\n]\n\n// ===== MOCK CONTEXT AND HOOKS =====\nconst mockAppState = {\n  quotes: mockQuotes,\n  contracts: mockContracts,\n  invoices: mockInvoices\n}\n\nconst useAppContext = () => {\n  const [state, setState] = useState(mockAppState)\n  \n  const dispatch = useCallback((action: { type: string; payload: any }) => {\n    setState(prevState => {\n      switch (action.type) {\n        case 'ADD_CONTRACT':\n          return {\n            ...prevState,\n            contracts: [...prevState.contracts, action.payload]\n          }\n        case 'ADD_INVOICE':\n          return {\n            ...prevState,\n            invoices: [...prevState.invoices, action.payload]\n          }\n        default:\n          return prevState\n      }\n    })\n  }, [])\n  \n  return { state, dispatch }\n}\n\nconst useAuth = () => {\n  return {\n    user: {\n      id: 'user-1',\n      name: 'Admin User',\n      email: 'admin@company.com',\n      role: 'admin'\n    }\n  }\n}\n\nconst useRoleAccess = (role: string) => {\n  return {\n    hasAccess: true\n  }\n}\n\nconst useToast = () => {\n  return {\n    showSuccess: (message: string) => {\n      console.log('Success:', message)\n    },\n    showError: (message: string) => {\n      console.error('Error:', message)\n    }\n  }\n}\n\n// ===== MOCK SERVICES =====\nconst EnhancedContractTemplateService = {\n  getTemplate: (id: string) => ({\n    id,\n    name: 'Standard Web Development Contract',\n    content: 'This is a standard contract template.'\n  })\n}\n\nconst EnhancedQuoteConverter = {\n  convertQuoteToContractAndInvoices: (quote: Quote, options: ConversionOptions): ConversionResult => {\n    const contract: EnhancedContract = {\n      id: `contract-${Date.now()}`,\n      contractNumber: `C-${new Date().getFullYear()}-${String(Math.floor(Math.random() * 1000)).padStart(3, '0')}`,\n      quoteId: quote.id,\n      clientId: `client-${quote.id}`,\n      clientName: quote.clientName,\n      clientEmail: quote.clientEmail,\n      contractTitle: `${quote.businessName} - ${quote.requirements}`,\n      startDate: new Date(),\n      endDate: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000), // 60 days from now\n      contractTerms: {\n        serviceDescription: quote.requirements,\n        clientResponsibilities: ['Provide content', 'Review deliverables'],\n        providerResponsibilities: ['Develop website', 'Provide support'],\n        intellectualProperty: 'Standard IP terms',\n        confidentiality: 'Standard confidentiality terms',\n        termination: 'Standard termination clause',\n        disputeResolution: 'Mediation and arbitration',\n        governingLaw: 'State law'\n      },\n      totalAmount: quote.finalPrice,\n      paymentSchedule: options.paymentTerms,\n      scopeOfWork: quote.requirements,\n      projectDetails: {\n        title: quote.businessName,\n        description: quote.requirements,\n        scope: quote.features,\n        deliverables: ['Website', 'Documentation'],\n        timeline: quote.timeline,\n        startDate: new Date().toISOString(),\n        endDate: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000).toISOString()\n      },\n      paymentStructure: {\n        type: options.paymentStructure,\n        totalAmount: quote.finalPrice,\n        currency: 'USD',\n        schedule: [\n          {\n            id: '1',\n            name: 'Deposit',\n            percentage: 50,\n            amount: quote.finalPrice * 0.5,\n            dueDate: new Date().toISOString(),\n            status: 'pending'\n          },\n          {\n            id: '2',\n            name: 'Final Payment',\n            percentage: 50,\n            amount: quote.finalPrice * 0.5,\n            dueDate: new Date(Date.now() + 60 * 24 * 60 * 60 * 1000).toISOString(),\n            status: 'pending'\n          }\n        ]\n      },\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    }\n\n    const invoices: UnifiedInvoice[] = [\n      {\n        id: `invoice-${Date.now()}`,\n        invoiceNumber: `INV-${new Date().getFullYear()}-${String(Math.floor(Math.random() * 1000)).padStart(3, '0')}`,\n        contractId: contract.id,\n        quoteId: quote.id,\n        clientId: contract.clientId,\n        clientName: quote.clientName,\n        clientEmail: quote.clientEmail,\n        clientAddress: '',\n        invoiceType: 'deposit',\n        items: [\n          {\n            id: '1',\n            description: 'Project Deposit',\n            quantity: 1,\n            unitPrice: quote.finalPrice * 0.5,\n            total: quote.finalPrice * 0.5\n          }\n        ],\n        subtotal: quote.finalPrice * 0.5,\n        tax: quote.finalPrice * 0.5 * options.taxRate,\n        totalAmount: quote.finalPrice * 0.5 * (1 + options.taxRate),\n        amountPaid: 0,\n        amountDue: quote.finalPrice * 0.5 * (1 + options.taxRate),\n        status: 'draft',\n        issueDate: new Date(),\n        dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000),\n        notes: 'Deposit payment for project'\n      }\n    ]\n\n    return {\n      contract,\n      invoices,\n      success: true,\n      errors: []\n    }\n  }\n}\n\n// ===== MOCK UNIFIED INVOICE SYSTEM =====\n// UnifiedInvoiceSystem component removed - functionality integrated into main component\n\n// ===== MAIN COMPONENT =====\nconst EnhancedContractInvoiceManager: React.FC = () => {\n  const { state, dispatch } = useAppContext()\n  const { user } = useAuth()\n  const { hasAccess: isAdmin } = useRoleAccess(\"Admin\")\n  const { showSuccess, showError } = useToast()\n  \n  // State management\n  const [activeTab, setActiveTab] = useState<'dashboard' | 'quotes' | 'contracts' | 'invoices' | 'conversion'>('dashboard')\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  const [statusFilter, setStatusFilter] = useState<string>(\"all\")\n  const [dateFilter, setDateFilter] = useState<string>(\"all\")\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<Record<string, string>>({})\n  \n  // Modal states\n  const [showConversionModal, setShowConversionModal] = useState(false)\n  const [showQuoteModal, setShowQuoteModal] = useState(false)\n  const [showContractModal, setShowContractModal] = useState(false)\n  const [showInvoiceModal, setShowInvoiceModal] = useState(false)\n  \n  // Conversion flow state\n  const [conversionFlow, setConversionFlow] = useState<ConversionFlow>({\n    step: 'select_quote',\n    conversionOptions: {\n      paymentStructure: 'milestone',\n      taxRate: 0.0875,\n      paymentTerms: 'Net 30',\n      includeDetailedItems: true,\n      autoGenerateInvoices: true,\n      userId: user?.id\n    },\n    errors: []\n  })\n  \n  // Selected items\n  const [selectedQuote, setSelectedQuote] = useState<Quote | null>(null)\n  const [selectedContract, setSelectedContract] = useState<Contract | null>(null)\n  const [selectedInvoice, setSelectedInvoice] = useState<Invoice | null>(null)\n  \n  // Enhanced data with conversion tracking\n  const [enhancedContracts, setEnhancedContracts] = useState<EnhancedContract[]>([])\n  const [unifiedInvoices, setUnifiedInvoices] = useState<UnifiedInvoice[]>([])\n  \n  // New Quote form state\n  const [newQuoteForm, setNewQuoteForm] = useState({\n    clientName: '',\n    clientEmail: '',\n    clientPhone: '',\n    businessName: '',\n    industry: '',\n    pageCount: 1,\n    features: [] as string[],\n    timeline: '',\n    budget: '',\n    finalPrice: 0,\n    totalHours: 0,\n    requirements: '',\n    additionalNotes: ''\n  })\n  \n  // Form validation state\n  const [formErrors, setFormErrors] = useState<Record<string, string>>({})\n  const [isFormValid, setIsFormValid] = useState(false)\n  const [isSubmittingQuote, setIsSubmittingQuote] = useState(false)\n  \n  // Validation functions\n  const validateEmail = (email: string): boolean => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    return emailRegex.test(email)\n  }\n  \n  const validateForm = useCallback((formData: typeof newQuoteForm): Record<string, string> => {\n    const errors: Record<string, string> = {}\n    \n    // Required field validations\n    if (!formData.clientName.trim()) {\n      errors.clientName = 'Client name is required'\n    }\n    \n    if (!formData.clientEmail.trim()) {\n      errors.clientEmail = 'Client email is required'\n    } else if (!validateEmail(formData.clientEmail)) {\n      errors.clientEmail = 'Please enter a valid email address'\n    }\n    \n    if (!formData.businessName.trim()) {\n      errors.businessName = 'Business name is required'\n    }\n    \n    if (!formData.industry) {\n      errors.industry = 'Please select an industry'\n    }\n    \n    if (!formData.timeline.trim()) {\n      errors.timeline = 'Timeline is required'\n    }\n    \n    if (!formData.budget) {\n      errors.budget = 'Please select a budget range'\n    }\n    \n    if (formData.finalPrice <= 0) {\n      errors.finalPrice = 'Final price must be greater than 0'\n    }\n    \n    if (!formData.requirements.trim()) {\n      errors.requirements = 'Project requirements are required'\n    }\n    \n    if (formData.pageCount < 1) {\n      errors.pageCount = 'Page count must be at least 1'\n    }\n    \n    return errors\n  }, [])\n  \n  // Handler functions\n  const handleNewQuoteFormChange = useCallback((field: string, value: any) => {\n    const updatedForm = {\n      ...newQuoteForm,\n      [field]: value\n    }\n    \n    setNewQuoteForm(updatedForm)\n    \n    // Validate form and update errors\n    const errors = validateForm(updatedForm)\n    setFormErrors(errors)\n    setIsFormValid(Object.keys(errors).length === 0)\n  }, [newQuoteForm, validateForm])\n  \n  const handleNewQuote = useCallback(() => {\n    // Reset form when opening modal\n    setNewQuoteForm({\n      clientName: '',\n      clientEmail: '',\n      clientPhone: '',\n      businessName: '',\n      industry: '',\n      pageCount: 1,\n      features: [],\n      timeline: '',\n      budget: '',\n      finalPrice: 0,\n      totalHours: 0,\n      requirements: '',\n      additionalNotes: ''\n    })\n    setFormErrors({})\n    setIsFormValid(false)\n    setShowQuoteModal(true)\n  }, [])\n\n  const handleCloseQuoteModal = useCallback(() => {\n    // Check if form has any data\n    const hasFormData = Object.values(newQuoteForm).some(value => {\n      if (Array.isArray(value)) return value.length > 0\n      if (typeof value === 'string') return value.trim() !== ''\n      if (typeof value === 'number') return value > 0\n      return false\n    })\n\n    if (hasFormData && !isSubmittingQuote) {\n      const confirmClose = window.confirm(\n        'You have unsaved changes. Are you sure you want to close this form? All data will be lost.'\n      )\n      if (!confirmClose) return\n    }\n\n    setShowQuoteModal(false)\n    // Reset form when closing\n    setNewQuoteForm({\n      clientName: '',\n      clientEmail: '',\n      clientPhone: '',\n      businessName: '',\n      industry: '',\n      pageCount: 1,\n      features: [],\n      timeline: '',\n      budget: '',\n      finalPrice: 0,\n      totalHours: 0,\n      requirements: '',\n      additionalNotes: ''\n    })\n    setFormErrors({})\n    setIsFormValid(false)\n  }, [newQuoteForm, isSubmittingQuote])\n\n  const handleQuoteSubmit = useCallback(async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    // Validate form one more time\n    const errors = validateForm(newQuoteForm)\n    if (Object.keys(errors).length > 0) {\n      setFormErrors(errors)\n      setIsFormValid(false)\n      return\n    }\n\n    setIsSubmittingQuote(true)\n    \n    try {\n      // Simulate API call delay for better UX\n      await new Promise(resolve => setTimeout(resolve, 1000))\n      \n      // Create new quote\n      const newQuote: Quote = {\n        id: `quote-${Date.now()}`,\n        quoteNumber: `Q-${new Date().getFullYear()}-${String(state.quotes.length + 1).padStart(3, '0')}`,\n        clientName: newQuoteForm.clientName,\n        clientEmail: newQuoteForm.clientEmail,\n        clientPhone: newQuoteForm.clientPhone,\n        businessName: newQuoteForm.businessName,\n        industry: newQuoteForm.industry,\n        pageCount: newQuoteForm.pageCount,\n        features: newQuoteForm.features,\n        timeline: newQuoteForm.timeline,\n        budget: newQuoteForm.budget,\n        finalPrice: newQuoteForm.finalPrice,\n        totalHours: newQuoteForm.totalHours,\n        requirements: newQuoteForm.requirements,\n        additionalNotes: newQuoteForm.additionalNotes,\n        status: 'draft',\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      }\n\n      // Add quote to state\n      dispatch({ type: 'ADD_QUOTE', payload: newQuote })\n      \n      // Close modal and reset form\n      setShowQuoteModal(false)\n      setNewQuoteForm({\n        clientName: '',\n        clientEmail: '',\n        clientPhone: '',\n        businessName: '',\n        industry: '',\n        pageCount: 1,\n        features: [],\n        timeline: '',\n        budget: '',\n        finalPrice: 0,\n        totalHours: 0,\n        requirements: '',\n        additionalNotes: ''\n      })\n      setFormErrors({})\n      setIsFormValid(false)\n      \n      // Enhanced success message with more details\n       showSuccess(\n         `Quote ${newQuote.quoteNumber} created successfully! ` +\n         `Client: ${newQuote.clientName} (${newQuote.businessName}) | ` +\n         `Value: $${newQuote.finalPrice.toLocaleString()} | ` +\n         `You can now convert this quote to a contract.`\n       )\n      \n    } catch (error) {\n      console.error('Error creating quote:', error)\n      \n      // Enhanced error handling with specific error messages\n      let errorMessage = 'Failed to create quote. Please try again.'\n      \n      if (error instanceof Error) {\n        if (error.message.includes('network') || error.message.includes('fetch')) {\n          errorMessage = 'Network error. Please check your connection and try again.'\n        } else if (error.message.includes('validation')) {\n          errorMessage = 'Please check your form data and try again.'\n        } else if (error.message.includes('duplicate')) {\n          errorMessage = 'A quote with similar details already exists.'\n        }\n      }\n      \n      showError(errorMessage)\n      \n      // Keep form data intact on error so user doesn't lose their work\n      // Don't reset the form or close modal on error\n    } finally {\n      setIsSubmittingQuote(false)\n    }\n  }, [newQuoteForm, validateForm, state.quotes.length, dispatch, showSuccess, showError])\n\n  // Calculate dashboard stats\n  const dashboardStats = useMemo((): DashboardStats => {\n    const totalQuotes = state.quotes.length\n    const totalContracts = state.contracts.length\n    const totalInvoices = state.invoices.length\n    const totalRevenue = state.invoices\n      .filter(inv => inv.status === 'Paid')\n      .reduce((acc, inv) => acc + inv.totalAmount, 0)\n    const pendingPayments = state.invoices\n      .filter(inv => inv.status === 'Sent')\n      .reduce((acc, inv) => acc + inv.totalAmount, 0)\n    const activeProjects = state.contracts.filter(contract => contract.status === 'active').length\n    const conversionRate = totalQuotes > 0 ? (totalContracts / totalQuotes) * 100 : 0\n    const averageProjectValue = totalContracts > 0 ? totalRevenue / totalContracts : 0\n\n    return {\n      totalQuotes,\n      totalContracts,\n      totalInvoices,\n      totalRevenue,\n      pendingPayments,\n      activeProjects,\n      conversionRate,\n      averageProjectValue\n    }\n  }, [state.quotes, state.contracts, state.invoices])\n\n  // Handle quote to contract conversion\n  const handleConversion = useCallback(async () => {\n    if (!conversionFlow.selectedQuote) {\n      setConversionFlow(prev => ({\n        ...prev,\n        errors: ['Please select a quote to convert']\n      }))\n      return\n    }\n\n    setIsLoading(true)\n    try {\n      const result = EnhancedQuoteConverter.convertQuoteToContractAndInvoices(\n        conversionFlow.selectedQuote,\n        conversionFlow.conversionOptions\n      )\n\n      if (!result.success) {\n        setConversionFlow(prev => ({\n          ...prev,\n          errors: result.errors\n        }))\n        return\n      }\n\n      // Convert EnhancedContract to Contract format\n      const convertedContract: Contract = {\n        id: result.contract.id,\n        quoteId: result.contract.quoteId,\n        clientId: result.contract.clientId || '',\n        contractNumber: result.contract.contractNumber,\n        contractTitle: result.contract.contractTitle,\n        clientName: result.contract.clientName,\n        clientEmail: result.contract.clientEmail,\n        startDate: result.contract.startDate.toISOString(),\n        endDate: result.contract.endDate.toISOString(),\n        terms: result.contract.contractTerms.serviceDescription + '\\n\\n' + \n               'Client Responsibilities: ' + result.contract.contractTerms.clientResponsibilities.join(', ') + '\\n\\n' +\n               'Provider Responsibilities: ' + result.contract.contractTerms.providerResponsibilities.join(', '),\n        totalAmount: result.contract.totalAmount,\n        paymentSchedule: result.contract.paymentSchedule,\n        scopeOfWork: result.contract.scopeOfWork,\n        clientInfo: {\n          name: result.contract.clientName,\n          email: result.contract.clientEmail,\n          phone: '',\n          company: result.contract.clientName,\n          address: ''\n        },\n        projectDetails: {\n          title: result.contract.projectDetails.title,\n          description: result.contract.projectDetails.description\n        },\n        status: 'draft',\n        priority: 'medium',\n        createdAt: result.contract.createdAt || new Date().toISOString(),\n        updatedAt: result.contract.updatedAt || new Date().toISOString()\n      }\n      dispatch({ type: 'ADD_CONTRACT', payload: convertedContract })\n      \n      result.invoices.forEach(invoice => {\n        // Convert UnifiedInvoice to Invoice format\n        const standardInvoice: Invoice = {\n          id: invoice.id,\n          invoiceNumber: invoice.invoiceNumber,\n          clientId: invoice.clientId || '',\n          clientName: invoice.clientName,\n          clientEmail: invoice.clientEmail,\n          clientAddress: invoice.clientAddress,\n          issueDate: invoice.issueDate,\n          dueDate: invoice.dueDate,\n          items: invoice.items.map(item => ({\n            id: item.id,\n            description: item.description,\n            quantity: item.quantity,\n            price: item.unitPrice,\n            total: item.total\n          })),\n          subtotal: invoice.subtotal,\n          tax: invoice.tax,\n          totalAmount: invoice.totalAmount,\n          notes: invoice.notes,\n          status: invoice.status === 'draft' ? 'Draft' : \n                  invoice.status === 'sent' ? 'Sent' : \n                  invoice.status === 'paid' ? 'Paid' : \n                  invoice.status === 'overdue' ? 'Overdue' : 'Draft'\n        }\n        dispatch({ type: 'ADD_INVOICE', payload: standardInvoice })\n      }) // Fixed: Added missing closing parenthesis\n      \n      // Update enhanced data\n      setEnhancedContracts(prev => [...prev, result.contract])\n      setUnifiedInvoices(prev => [...prev, ...result.invoices])\n      \n      // Reset conversion flow\n      setConversionFlow({\n        step: 'select_quote',\n        conversionOptions: {\n          paymentStructure: 'milestone',\n          taxRate: 0.0875,\n          paymentTerms: 'Net 30',\n          includeDetailedItems: true,\n          autoGenerateInvoices: true,\n          userId: user?.id\n        },\n        errors: []\n      })\n      \n      setShowConversionModal(false)\n      setActiveTab('contracts')\n      showSuccess('Quote successfully converted to contract and invoices!')\n      \n    } catch (error) {\n      console.error('Conversion error:', error)\n      setConversionFlow(prev => ({\n        ...prev,\n        errors: ['Failed to convert quote to contract. Please try again.']\n      }))\n      showError('Failed to convert quote to contract')\n    } finally {\n      setIsLoading(false)\n    }\n  }, [conversionFlow, dispatch, user?.id, showSuccess, showError])\n  \n  // Generate preview of conversion\n  const generatePreview = useCallback(() => {\n    if (!conversionFlow.selectedQuote) return\n    \n    try {\n      const result = EnhancedQuoteConverter.convertQuoteToContractAndInvoices(\n        conversionFlow.selectedQuote,\n        conversionFlow.conversionOptions\n      )\n      \n      setConversionFlow(prev => ({\n        ...prev,\n        previewResult: result,\n        step: 'review'\n      }))\n    } catch (error) {\n      console.error('Preview error:', error)\n      setConversionFlow(prev => ({\n        ...prev,\n        errors: ['Failed to generate preview. Please check your configuration.']\n      }))\n    }\n  }, [conversionFlow.selectedQuote, conversionFlow.conversionOptions])\n  \n  // Status badge component\n  const StatusBadge: React.FC<{ status: string; type?: 'quote' | 'contract' | 'invoice' }> = ({ status, type = 'quote' }) => {\n    const getStatusConfig = (status: string, type: string) => {\n      const configs: Record<string, Record<string, { color: string; icon: any }>> = {\n        quote: {\n          draft: { color: 'bg-gray-100 text-gray-800', icon: Clock },\n          sent: { color: 'bg-blue-100 text-blue-800', icon: Send },\n          accepted: { color: 'bg-green-100 text-green-800', icon: CheckCircle },\n          rejected: { color: 'bg-red-100 text-red-800', icon: X }\n        },\n        contract: {\n          draft: { color: 'bg-gray-100 text-gray-800', icon: Clock },\n          active: { color: 'bg-green-100 text-green-800', icon: CheckCircle },\n          completed: { color: 'bg-blue-100 text-blue-800', icon: CheckCircle },\n          cancelled: { color: 'bg-red-100 text-red-800', icon: X }\n        },\n        invoice: {\n          Draft: { color: 'bg-gray-100 text-gray-800', icon: Clock },\n          Sent: { color: 'bg-blue-100 text-blue-800', icon: Send },\n          Paid: { color: 'bg-green-100 text-green-800', icon: CheckCircle },\n          Overdue: { color: 'bg-red-100 text-red-800', icon: AlertCircle }\n        }\n      }\n      \n      return configs[type]?.[status] || { color: 'bg-gray-100 text-gray-800', icon: Clock }\n    }\n    \n    const config = getStatusConfig(status, type)\n    const Icon = config.icon\n    \n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color}`}>\n        <Icon className=\"w-3 h-3 mr-1\" />\n        {status.charAt(0).toUpperCase() + status.slice(1).replace('_', ' ')}\n      </span>\n    )\n  }\n\n  // Dashboard rendering\n  const renderDashboard = () => (\n    <div className=\"space-y-6\">\n      {/* Stats Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <FileText className=\"h-8 w-8 text-blue-600\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Total Quotes</dt>\n                <dd className=\"text-lg font-medium text-gray-900\">{dashboardStats.totalQuotes}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <Receipt className=\"h-8 w-8 text-green-600\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Active Contracts</dt>\n                <dd className=\"text-lg font-medium text-gray-900\">{dashboardStats.totalContracts}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <DollarSign className=\"h-8 w-8 text-yellow-600\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Total Revenue</dt>\n                <dd className=\"text-lg font-medium text-gray-900\">${dashboardStats.totalRevenue.toLocaleString()}</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <TrendingUp className=\"h-8 w-8 text-purple-600\" />\n            </div>\n            <div className=\"ml-5 w-0 flex-1\">\n              <dl>\n                <dt className=\"text-sm font-medium text-gray-500 truncate\">Conversion Rate</dt>\n                <dd className=\"text-lg font-medium text-gray-900\">{dashboardStats.conversionRate.toFixed(1)}%</dd>\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Recent Activity */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-medium text-gray-900\">Recent Activity</h3>\n        </div>\n        <div className=\"p-6\">\n          <div className=\"space-y-4\">\n            {state.quotes.slice(0, 3).map(quote => (\n              <div key={quote.id} className=\"flex items-center space-x-4\">\n                <div className=\"flex-shrink-0\">\n                  <FileText className=\"h-6 w-6 text-gray-400\" />\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-gray-900 truncate\">\n                    Quote {quote.quoteNumber} for {quote.clientName}\n                  </p>\n                  <p className=\"text-sm text-gray-500\">\n                    ${quote.finalPrice.toLocaleString()} • {new Date(quote.createdAt).toLocaleDateString()}\n                  </p>\n                </div>\n                <div className=\"flex-shrink-0\">\n                  <StatusBadge status={quote.status} type=\"quote\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  // Conversion flow rendering\n  const renderConversionFlow = () => (\n    <div className=\"space-y-6\">\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Quote to Contract Conversion</h2>\n        \n        {/* Step 1: Select Quote */}\n        {conversionFlow.step === 'select_quote' && (\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-medium text-gray-900\">Select a Quote to Convert</h3>\n            <div className=\"grid gap-4\">\n              {state.quotes.filter(q => q.status === 'accepted').map(quote => (\n                <div key={quote.id} className=\"border rounded-lg p-4 hover:bg-gray-50 cursor-pointer\"\n                     onClick={() => setConversionFlow(prev => ({ ...prev, selectedQuote: quote, step: 'configure_contract' }))}>\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{quote.quoteNumber}</h4>\n                      <p className=\"text-sm text-gray-600\">{quote.clientName} • {quote.businessName}</p>\n                      <p className=\"text-sm text-gray-500\">${quote.finalPrice.toLocaleString()}</p>\n                    </div>\n                    <StatusBadge status={quote.status} type=\"quote\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        {/* Step 2: Configure Contract */}\n        {conversionFlow.step === 'configure_contract' && conversionFlow.selectedQuote && (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Configure Contract Settings</h3>\n              <button\n                onClick={() => setConversionFlow(prev => ({ ...prev, step: 'select_quote' }))}\n                className=\"text-sm text-gray-500 hover:text-gray-700\"\n              >\n                ← Back to Quote Selection\n              </button>\n            </div>\n            \n            <div className=\"bg-gray-50 rounded-lg p-4\">\n              <h4 className=\"font-medium text-gray-900 mb-2\">Selected Quote</h4>\n              <p className=\"text-sm text-gray-600\">\n                {conversionFlow.selectedQuote.quoteNumber} • {conversionFlow.selectedQuote.clientName} • \n                ${conversionFlow.selectedQuote.finalPrice.toLocaleString()}\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Payment Structure</label>\n                <select\n                  value={conversionFlow.conversionOptions.paymentStructure}\n                  onChange={(e) => setConversionFlow(prev => ({\n                    ...prev,\n                    conversionOptions: {\n                      ...prev.conversionOptions,\n                      paymentStructure: e.target.value as any\n                    }\n                  }))}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2\"\n                >\n                  <option value=\"single\">Single Payment</option>\n                  <option value=\"deposit_final\">Deposit + Final</option>\n                  <option value=\"milestone\">Milestone Payments</option>\n                  <option value=\"progress\">Progress Payments</option>\n                </select>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Payment Terms</label>\n                <select\n                  value={conversionFlow.conversionOptions.paymentTerms}\n                  onChange={(e) => setConversionFlow(prev => ({\n                    ...prev,\n                    conversionOptions: {\n                      ...prev.conversionOptions,\n                      paymentTerms: e.target.value\n                    }\n                  }))}\n                  className=\"w-full border border-gray-300 rounded-md px-3 py-2\"\n                >\n                  <option value=\"Net 15\">Net 15</option>\n                  <option value=\"Net 30\">Net 30</option>\n                  <option value=\"Net 45\">Net 45</option>\n                  <option value=\"Due on Receipt\">Due on Receipt</option>\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={generatePreview}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n              >\n                Generate Preview\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {/* Step 3: Review */}\n        {conversionFlow.step === 'review' && conversionFlow.previewResult && (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Review Conversion</h3>\n              <button\n                onClick={() => setConversionFlow(prev => ({ ...prev, step: 'configure_contract' }))}\n                className=\"text-sm text-gray-500 hover:text-gray-700\"\n              >\n                ← Back to Configuration\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              {/* Contract Preview */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">Contract Preview</h4>\n                <div className=\"space-y-2 text-sm\">\n                  <p><span className=\"font-medium\">Contract Number:</span> {conversionFlow.previewResult.contract.contractNumber}</p>\n                  <p><span className=\"font-medium\">Client:</span> {conversionFlow.previewResult.contract.clientName}</p>\n                  <p><span className=\"font-medium\">Total Amount:</span> ${conversionFlow.previewResult.contract.totalAmount.toLocaleString()}</p>\n                  <p><span className=\"font-medium\">Payment Structure:</span> {conversionFlow.previewResult.contract.paymentStructure.type}</p>\n                </div>\n              </div>\n              \n              {/* Invoice Preview */}\n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <h4 className=\"font-medium text-gray-900 mb-3\">Generated Invoices ({conversionFlow.previewResult.invoices.length})</h4>\n                <div className=\"space-y-3\">\n                  {conversionFlow.previewResult.invoices.map((invoice, index) => (\n                    <div key={index} className=\"bg-white rounded p-3 text-sm\">\n                      <p><span className=\"font-medium\">Invoice:</span> {invoice.invoiceNumber}</p>\n                      <p><span className=\"font-medium\">Type:</span> {invoice.invoiceType}</p>\n                      <p><span className=\"font-medium\">Amount:</span> ${invoice.totalAmount.toLocaleString()}</p>\n                      <p><span className=\"font-medium\">Due:</span> {invoice.dueDate.toLocaleDateString()}</p>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={handleConversion}\n                disabled={isLoading}\n                className=\"px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50\"\n              >\n                {isLoading ? 'Converting...' : 'Confirm Conversion'}\n              </button>\n            </div>\n          </div>\n        )}\n        \n        {/* Error Display */}\n        {conversionFlow.errors.length > 0 && (\n          <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n            <div className=\"flex\">\n              <AlertCircle className=\"h-5 w-5 text-red-400\" />\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">Conversion Errors</h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  <ul className=\"list-disc pl-5 space-y-1\">\n                    {conversionFlow.errors.map((error, index) => (\n                      <li key={index}>{error}</li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n\n  // Tab configuration\n  const tabs = [\n    { id: 'dashboard', label: 'Dashboard', icon: BarChart3 },\n    { id: 'quotes', label: 'Quotes', icon: FileText },\n    { id: 'contracts', label: 'Contracts', icon: Receipt },\n    { id: 'invoices', label: 'Invoices', icon: DollarSign },\n    { id: 'conversion', label: 'Quote Conversion', icon: ArrowRight }\n  ]\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center py-6\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Contract & Invoice Manager</h1>\n              <p className=\"text-sm text-gray-600\">Streamlined quote-to-contract-to-invoice workflow</p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button \n                onClick={() => handleNewQuote()}\n                className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-200\"\n              >\n                <Plus className=\"w-4 h-4 mr-2\" />\n                New Quote\n              </button>\n            </div>\n          </div>\n          \n          {/* Navigation Tabs */}\n          <nav className=\"flex space-x-8\">\n            {tabs.map(tab => {\n              const Icon = tab.icon\n              return (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id as any)}\n                  className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <Icon className=\"w-4 h-4\" />\n                  <span>{tab.label}</span>\n                </button>\n              )\n            })}\n          </nav>\n        </div>\n      </div>\n      \n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {activeTab === 'dashboard' && renderDashboard()}\n        {activeTab === 'conversion' && renderConversionFlow()}\n        {activeTab === 'invoices' && (\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Invoice Management</h3>\n            <p>Invoice management interface will be implemented here.</p>\n          </div>\n        )}\n        {activeTab === 'contracts' && (\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Enhanced Contracts</h2>\n            <p className=\"text-gray-600\">Contract management interface will be implemented here.</p>\n          </div>\n        )}\n        {activeTab === 'quotes' && (\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Quotes Management</h2>\n            <div className=\"space-y-4\">\n              {state.quotes.map(quote => (\n                <div key={quote.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">{quote.quoteNumber}</h3>\n                      <p className=\"text-sm text-gray-600\">{quote.clientName} • {quote.businessName}</p>\n                      <p className=\"text-sm text-gray-500\">${quote.finalPrice.toLocaleString()}</p>\n                    </div>\n                    <StatusBadge status={quote.status} type=\"quote\" />\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Quote Creation Modal */}\n      {showQuoteModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold text-gray-900\">Create New Quote</h2>\n              <button\n                onClick={handleCloseQuoteModal}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n            \n            <form onSubmit={handleQuoteSubmit} className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Client Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newQuoteForm.clientName}\n                    onChange={(e) => handleNewQuoteFormChange('clientName', e.target.value)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.clientName \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Enter client name\"\n                  />\n                  {formErrors.clientName && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.clientName}</p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Client Email *\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={newQuoteForm.clientEmail}\n                    onChange={(e) => handleNewQuoteFormChange('clientEmail', e.target.value)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.clientEmail \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Enter client email\"\n                  />\n                  {formErrors.clientEmail && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.clientEmail}</p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Client Phone\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={newQuoteForm.clientPhone}\n                    onChange={(e) => handleNewQuoteFormChange('clientPhone', e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    placeholder=\"Enter client phone number\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Business Name *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newQuoteForm.businessName}\n                    onChange={(e) => handleNewQuoteFormChange('businessName', e.target.value)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.businessName \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Enter business name\"\n                  />\n                  {formErrors.businessName && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.businessName}</p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Industry *\n                  </label>\n                  <select \n                    value={newQuoteForm.industry}\n                    onChange={(e) => handleNewQuoteFormChange('industry', e.target.value)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.industry \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                  >\n                    <option value=\"\">Select industry</option>\n                    <option value=\"Technology\">Technology</option>\n                    <option value=\"Healthcare\">Healthcare</option>\n                    <option value=\"Finance\">Finance</option>\n                    <option value=\"Education\">Education</option>\n                    <option value=\"Retail\">Retail</option>\n                    <option value=\"Other\">Other</option>\n                  </select>\n                  {formErrors.industry && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.industry}</p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Page Count *\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"1\"\n                    value={newQuoteForm.pageCount}\n                    onChange={(e) => handleNewQuoteFormChange('pageCount', parseInt(e.target.value) || 1)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.pageCount \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Number of pages\"\n                  />\n                  {formErrors.pageCount && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.pageCount}</p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Timeline *\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newQuoteForm.timeline}\n                    onChange={(e) => handleNewQuoteFormChange('timeline', e.target.value)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.timeline \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"e.g., 6 weeks\"\n                  />\n                  {formErrors.timeline && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.timeline}</p>\n                  )}\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Project Requirements *\n                </label>\n                <textarea\n                  rows={3}\n                  value={newQuoteForm.requirements}\n                  onChange={(e) => handleNewQuoteFormChange('requirements', e.target.value)}\n                  className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                    formErrors.requirements \n                      ? 'border-red-300 focus:ring-red-500' \n                      : 'border-gray-300 focus:ring-blue-500'\n                  }`}\n                  placeholder=\"Describe the project requirements\"\n                />\n                {formErrors.requirements && (\n                  <p className=\"mt-1 text-sm text-red-600\">{formErrors.requirements}</p>\n                )}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Features (comma-separated)\n                </label>\n                <input\n                  type=\"text\"\n                  value={newQuoteForm.features.join(', ')}\n                  onChange={(e) => handleNewQuoteFormChange('features', e.target.value.split(',').map(f => f.trim()).filter(f => f))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"e.g., Responsive Design, E-commerce, SEO\"\n                />\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Budget Range *\n                  </label>\n                  <select \n                    value={newQuoteForm.budget}\n                    onChange={(e) => handleNewQuoteFormChange('budget', e.target.value)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.budget \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                  >\n                    <option value=\"\">Select budget range</option>\n                    <option value=\"$1000-$5000\">$1,000 - $5,000</option>\n                    <option value=\"$5000-$10000\">$5,000 - $10,000</option>\n                    <option value=\"$10000-$15000\">$10,000 - $15,000</option>\n                    <option value=\"$15000-$25000\">$15,000 - $25,000</option>\n                    <option value=\"$25000+\">$25,000+</option>\n                  </select>\n                  {formErrors.budget && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.budget}</p>\n                  )}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Final Price *\n                  </label>\n                  <input\n                    type=\"number\"\n                    min=\"0\"\n                    step=\"0.01\"\n                    value={newQuoteForm.finalPrice}\n                    onChange={(e) => handleNewQuoteFormChange('finalPrice', parseFloat(e.target.value) || 0)}\n                    className={`w-full px-3 py-2 border rounded-md focus:outline-none focus:ring-2 ${\n                      formErrors.finalPrice \n                        ? 'border-red-300 focus:ring-red-500' \n                        : 'border-gray-300 focus:ring-blue-500'\n                    }`}\n                    placeholder=\"Enter final price\"\n                  />\n                  {formErrors.finalPrice && (\n                    <p className=\"mt-1 text-sm text-red-600\">{formErrors.finalPrice}</p>\n                  )}\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Additional Notes\n                </label>\n                <textarea\n                  rows={2}\n                  value={newQuoteForm.additionalNotes}\n                  onChange={(e) => handleNewQuoteFormChange('additionalNotes', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Any additional notes or requirements\"\n                />\n              </div>\n              \n              <div className=\"flex justify-end space-x-3 pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={handleCloseQuoteModal}\n                  className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={!isFormValid || isSubmittingQuote}\n                  className={`px-4 py-2 rounded-md transition-colors flex items-center space-x-2 ${\n                    isFormValid && !isSubmittingQuote\n                      ? 'bg-blue-600 text-white hover:bg-blue-700'\n                      : 'bg-gray-300 text-gray-500 cursor-not-allowed'\n                  }`}\n                >\n                  {isSubmittingQuote && (\n                    <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                  )}\n                  <span>{isSubmittingQuote ? 'Creating Quote...' : 'Create Quote'}</span>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default EnhancedContractInvoiceManager\n"],"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","ignoreList":[]}