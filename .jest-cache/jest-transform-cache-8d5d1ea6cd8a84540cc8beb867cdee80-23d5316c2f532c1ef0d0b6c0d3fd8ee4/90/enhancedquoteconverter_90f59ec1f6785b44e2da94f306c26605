f378c68d04d9d7cc64ba8948b95bd4e7
"use strict";

/* istanbul ignore next */
function cov_293a9yu732() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\enhanced-quote-converter.tsx";
  var hash = "25b829c99e36fbb2743462690e9f18a7663e65c6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\enhanced-quote-converter.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 38
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 41
        },
        end: {
          line: 19,
          column: 95
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 39
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "9": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 70
        }
      },
      "10": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 33,
          column: 79
        }
      },
      "11": {
        start: {
          line: 35,
          column: 32
        },
        end: {
          line: 35,
          column: 66
        }
      },
      "12": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "13": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 49,
          column: 10
        }
      },
      "14": {
        start: {
          line: 54,
          column: 27
        },
        end: {
          line: 54,
          column: 70
        }
      },
      "15": {
        start: {
          line: 55,
          column: 25
        },
        end: {
          line: 55,
          column: 134
        }
      },
      "16": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "17": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 70
        }
      },
      "18": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "19": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 121
        }
      },
      "20": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 121
        }
      },
      "21": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "22": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 74
        }
      },
      "23": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "24": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 48
        }
      },
      "25": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 53
        }
      },
      "26": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 24
        }
      },
      "27": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 80,
          column: 27
        }
      },
      "28": {
        start: {
          line: 81,
          column: 24
        },
        end: {
          line: 81,
          column: 64
        }
      },
      "29": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 11
        }
      },
      "30": {
        start: {
          line: 84,
          column: 28
        },
        end: {
          line: 84,
          column: 114
        }
      },
      "31": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 35
        }
      },
      "32": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "33": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 92,
          column: 103
        }
      },
      "34": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 94,
          column: 37
        }
      },
      "35": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "36": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 35
        }
      },
      "37": {
        start: {
          line: 97,
          column: 15
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "38": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 36
        }
      },
      "39": {
        start: {
          line: 99,
          column: 15
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "40": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 34
        }
      },
      "41": {
        start: {
          line: 103,
          column: 22
        },
        end: {
          line: 103,
          column: 114
        }
      },
      "42": {
        start: {
          line: 104,
          column: 25
        },
        end: {
          line: 104,
          column: 71
        }
      },
      "43": {
        start: {
          line: 104,
          column: 51
        },
        end: {
          line: 104,
          column: 67
        }
      },
      "44": {
        start: {
          line: 105,
          column: 20
        },
        end: {
          line: 105,
          column: 38
        }
      },
      "45": {
        start: {
          line: 106,
          column: 28
        },
        end: {
          line: 106,
          column: 42
        }
      },
      "46": {
        start: {
          line: 107,
          column: 24
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "47": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 159,
          column: 23
        }
      },
      "48": {
        start: {
          line: 164,
          column: 22
        },
        end: {
          line: 164,
          column: 24
        }
      },
      "49": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "50": {
        start: {
          line: 167,
          column: 31
        },
        end: {
          line: 167,
          column: 53
        }
      },
      "51": {
        start: {
          line: 169,
          column: 34
        },
        end: {
          line: 169,
          column: 56
        }
      },
      "52": {
        start: {
          line: 171,
          column: 37
        },
        end: {
          line: 171,
          column: 74
        }
      },
      "53": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "54": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 202,
          column: 15
        }
      },
      "55": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 201,
          column: 19
        }
      },
      "56": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 217,
          column: 15
        }
      },
      "57": {
        start: {
          line: 219,
          column: 8
        },
        end: {
          line: 219,
          column: 21
        }
      },
      "58": {
        start: {
          line: 224,
          column: 29
        },
        end: {
          line: 224,
          column: 50
        }
      },
      "59": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "60": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 28
        }
      },
      "61": {
        start: {
          line: 227,
          column: 15
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "62": {
        start: {
          line: 228,
          column: 12
        },
        end: {
          line: 228,
          column: 25
        }
      },
      "63": {
        start: {
          line: 229,
          column: 15
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "64": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 29
        }
      },
      "65": {
        start: {
          line: 231,
          column: 15
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "66": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 33
        }
      },
      "67": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 33
        }
      },
      "68": {
        start: {
          line: 240,
          column: 27
        },
        end: {
          line: 240,
          column: 43
        }
      },
      "69": {
        start: {
          line: 241,
          column: 25
        },
        end: {
          line: 241,
          column: 27
        }
      },
      "70": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 36
        }
      },
      "71": {
        start: {
          line: 244,
          column: 30
        },
        end: {
          line: 244,
          column: 212
        }
      },
      "72": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "73": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 262,
          column: 19
        }
      },
      "74": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 22
        }
      },
      "75": {
        start: {
          line: 265,
          column: 16
        },
        end: {
          line: 294,
          column: 19
        }
      },
      "76": {
        start: {
          line: 295,
          column: 16
        },
        end: {
          line: 295,
          column: 22
        }
      },
      "77": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 401,
          column: 17
        }
      },
      "78": {
        start: {
          line: 298,
          column: 20
        },
        end: {
          line: 298,
          column: 86
        }
      },
      "79": {
        start: {
          line: 299,
          column: 23
        },
        end: {
          line: 401,
          column: 17
        }
      },
      "80": {
        start: {
          line: 301,
          column: 39
        },
        end: {
          line: 329,
          column: 21
        }
      },
      "81": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 344,
          column: 23
        }
      },
      "82": {
        start: {
          line: 331,
          column: 40
        },
        end: {
          line: 331,
          column: 59
        }
      },
      "83": {
        start: {
          line: 332,
          column: 24
        },
        end: {
          line: 332,
          column: 127
        }
      },
      "84": {
        start: {
          line: 333,
          column: 24
        },
        end: {
          line: 343,
          column: 27
        }
      },
      "85": {
        start: {
          line: 347,
          column: 39
        },
        end: {
          line: 385,
          column: 21
        }
      },
      "86": {
        start: {
          line: 386,
          column: 20
        },
        end: {
          line: 400,
          column: 23
        }
      },
      "87": {
        start: {
          line: 387,
          column: 40
        },
        end: {
          line: 387,
          column: 59
        }
      },
      "88": {
        start: {
          line: 388,
          column: 24
        },
        end: {
          line: 388,
          column: 127
        }
      },
      "89": {
        start: {
          line: 389,
          column: 24
        },
        end: {
          line: 399,
          column: 27
        }
      },
      "90": {
        start: {
          line: 402,
          column: 16
        },
        end: {
          line: 402,
          column: 22
        }
      },
      "91": {
        start: {
          line: 405,
          column: 40
        },
        end: {
          line: 405,
          column: 68
        }
      },
      "92": {
        start: {
          line: 406,
          column: 43
        },
        end: {
          line: 406,
          column: 64
        }
      },
      "93": {
        start: {
          line: 407,
          column: 16
        },
        end: {
          line: 425,
          column: 17
        }
      },
      "94": {
        start: {
          line: 407,
          column: 28
        },
        end: {
          line: 407,
          column: 29
        }
      },
      "95": {
        start: {
          line: 408,
          column: 36
        },
        end: {
          line: 408,
          column: 55
        }
      },
      "96": {
        start: {
          line: 409,
          column: 20
        },
        end: {
          line: 409,
          column: 67
        }
      },
      "97": {
        start: {
          line: 410,
          column: 20
        },
        end: {
          line: 424,
          column: 23
        }
      },
      "98": {
        start: {
          line: 426,
          column: 16
        },
        end: {
          line: 426,
          column: 22
        }
      },
      "99": {
        start: {
          line: 428,
          column: 8
        },
        end: {
          line: 428,
          column: 24
        }
      },
      "100": {
        start: {
          line: 433,
          column: 27
        },
        end: {
          line: 433,
          column: 43
        }
      },
      "101": {
        start: {
          line: 434,
          column: 26
        },
        end: {
          line: 434,
          column: 36
        }
      },
      "102": {
        start: {
          line: 435,
          column: 8
        },
        end: {
          line: 448,
          column: 16
        }
      },
      "103": {
        start: {
          line: 435,
          column: 57
        },
        end: {
          line: 448,
          column: 13
        }
      },
      "104": {
        start: {
          line: 453,
          column: 20
        },
        end: {
          line: 453,
          column: 69
        }
      },
      "105": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 454,
          column: 38
        }
      },
      "106": {
        start: {
          line: 455,
          column: 8
        },
        end: {
          line: 455,
          column: 48
        }
      },
      "107": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 456,
          column: 51
        }
      },
      "108": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 53
        }
      },
      "109": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 45
        }
      },
      "110": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 461,
          column: 11
        }
      },
      "111": {
        start: {
          line: 460,
          column: 12
        },
        end: {
          line: 460,
          column: 42
        }
      },
      "112": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "113": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 463,
          column: 120
        }
      },
      "114": {
        start: {
          line: 464,
          column: 15
        },
        end: {
          line: 466,
          column: 9
        }
      },
      "115": {
        start: {
          line: 465,
          column: 12
        },
        end: {
          line: 465,
          column: 118
        }
      },
      "116": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 467,
          column: 21
        }
      },
      "117": {
        start: {
          line: 472,
          column: 20
        },
        end: {
          line: 472,
          column: 103
        }
      },
      "118": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 473,
          column: 42
        }
      },
      "119": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 47
        }
      },
      "120": {
        start: {
          line: 475,
          column: 8
        },
        end: {
          line: 475,
          column: 56
        }
      },
      "121": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 64
        }
      },
      "122": {
        start: {
          line: 477,
          column: 8
        },
        end: {
          line: 477,
          column: 109
        }
      },
      "123": {
        start: {
          line: 478,
          column: 8
        },
        end: {
          line: 478,
          column: 58
        }
      },
      "124": {
        start: {
          line: 479,
          column: 8
        },
        end: {
          line: 481,
          column: 9
        }
      },
      "125": {
        start: {
          line: 480,
          column: 12
        },
        end: {
          line: 480,
          column: 76
        }
      },
      "126": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 482,
          column: 21
        }
      },
      "127": {
        start: {
          line: 487,
          column: 23
        },
        end: {
          line: 487,
          column: 25
        }
      },
      "128": {
        start: {
          line: 488,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "129": {
        start: {
          line: 489,
          column: 36
        },
        end: {
          line: 489,
          column: 123
        }
      },
      "130": {
        start: {
          line: 489,
          column: 86
        },
        end: {
          line: 489,
          column: 119
        }
      },
      "131": {
        start: {
          line: 490,
          column: 12
        },
        end: {
          line: 492,
          column: 13
        }
      },
      "132": {
        start: {
          line: 491,
          column: 16
        },
        end: {
          line: 491,
          column: 65
        }
      },
      "133": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 496,
          column: 15
        }
      },
      "134": {
        start: {
          line: 494,
          column: 16
        },
        end: {
          line: 494,
          column: 92
        }
      },
      "135": {
        start: {
          line: 494,
          column: 37
        },
        end: {
          line: 494,
          column: 92
        }
      },
      "136": {
        start: {
          line: 495,
          column: 16
        },
        end: {
          line: 495,
          column: 144
        }
      },
      "137": {
        start: {
          line: 495,
          column: 72
        },
        end: {
          line: 495,
          column: 144
        }
      },
      "138": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 500,
          column: 9
        }
      },
      "139": {
        start: {
          line: 499,
          column: 12
        },
        end: {
          line: 499,
          column: 60
        }
      },
      "140": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 504,
          column: 10
        }
      },
      "141": {
        start: {
          line: 509,
          column: 48
        },
        end: {
          line: 509,
          column: 54
        }
      },
      "142": {
        start: {
          line: 510,
          column: 26
        },
        end: {
          line: 510,
          column: 48
        }
      },
      "143": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 511,
          column: 46
        }
      },
      "144": {
        start: {
          line: 512,
          column: 8
        },
        end: {
          line: 512,
          column: 64
        }
      },
      "145": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 513,
          column: 58
        }
      },
      "146": {
        start: {
          line: 514,
          column: 8
        },
        end: {
          line: 514,
          column: 69
        }
      },
      "147": {
        start: {
          line: 515,
          column: 8
        },
        end: {
          line: 515,
          column: 119
        }
      },
      "148": {
        start: {
          line: 516,
          column: 8
        },
        end: {
          line: 516,
          column: 80
        }
      },
      "149": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 75
        }
      },
      "150": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 518,
          column: 117
        }
      },
      "151": {
        start: {
          line: 519,
          column: 8
        },
        end: {
          line: 519,
          column: 45
        }
      },
      "152": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 522,
          column: 11
        }
      },
      "153": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 521,
          column: 214
        }
      },
      "154": {
        start: {
          line: 523,
          column: 8
        },
        end: {
          line: 523,
          column: 96
        }
      },
      "155": {
        start: {
          line: 524,
          column: 8
        },
        end: {
          line: 524,
          column: 27
        }
      },
      "156": {
        start: {
          line: 527,
          column: 17
        },
        end: {
          line: 527,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 34
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 29,
            column: 7
          }
        },
        loc: {
          start: {
            line: 29,
            column: 68
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 53,
            column: 6
          },
          end: {
            line: 53,
            column: 7
          }
        },
        loc: {
          start: {
            line: 53,
            column: 54
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 6
          },
          end: {
            line: 79,
            column: 7
          }
        },
        loc: {
          start: {
            line: 79,
            column: 63
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 79
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 52
          }
        },
        loc: {
          start: {
            line: 83,
            column: 71
          },
          end: {
            line: 86,
            column: 9
          }
        },
        line: 83
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        },
        loc: {
          start: {
            line: 91,
            column: 95
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 91
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 104,
            column: 38
          },
          end: {
            line: 104,
            column: 39
          }
        },
        loc: {
          start: {
            line: 104,
            column: 51
          },
          end: {
            line: 104,
            column: 67
          }
        },
        line: 104
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        },
        loc: {
          start: {
            line: 163,
            column: 79
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 163
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 186,
            column: 35
          },
          end: {
            line: 186,
            column: 36
          }
        },
        loc: {
          start: {
            line: 186,
            column: 53
          },
          end: {
            line: 202,
            column: 13
          }
        },
        line: 186
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 223,
            column: 6
          },
          end: {
            line: 223,
            column: 7
          }
        },
        loc: {
          start: {
            line: 223,
            column: 40
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 223
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 239,
            column: 7
          }
        },
        loc: {
          start: {
            line: 239,
            column: 56
          },
          end: {
            line: 429,
            column: 5
          }
        },
        line: 239
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 330,
            column: 39
          },
          end: {
            line: 330,
            column: 40
          }
        },
        loc: {
          start: {
            line: 330,
            column: 59
          },
          end: {
            line: 344,
            column: 21
          }
        },
        line: 330
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 386,
            column: 39
          },
          end: {
            line: 386,
            column: 40
          }
        },
        loc: {
          start: {
            line: 386,
            column: 59
          },
          end: {
            line: 400,
            column: 21
          }
        },
        line: 386
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 432,
            column: 6
          },
          end: {
            line: 432,
            column: 7
          }
        },
        loc: {
          start: {
            line: 432,
            column: 68
          },
          end: {
            line: 449,
            column: 5
          }
        },
        line: 432
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 435,
            column: 36
          },
          end: {
            line: 435,
            column: 37
          }
        },
        loc: {
          start: {
            line: 435,
            column: 57
          },
          end: {
            line: 448,
            column: 13
          }
        },
        line: 435
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 452,
            column: 6
          },
          end: {
            line: 452,
            column: 7
          }
        },
        loc: {
          start: {
            line: 452,
            column: 65
          },
          end: {
            line: 468,
            column: 5
          }
        },
        line: 452
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 459,
            column: 39
          },
          end: {
            line: 459,
            column: 40
          }
        },
        loc: {
          start: {
            line: 459,
            column: 54
          },
          end: {
            line: 461,
            column: 9
          }
        },
        line: 459
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 471,
            column: 6
          },
          end: {
            line: 471,
            column: 7
          }
        },
        loc: {
          start: {
            line: 471,
            column: 63
          },
          end: {
            line: 483,
            column: 5
          }
        },
        line: 471
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 486,
            column: 6
          },
          end: {
            line: 486,
            column: 7
          }
        },
        loc: {
          start: {
            line: 486,
            column: 48
          },
          end: {
            line: 505,
            column: 5
          }
        },
        line: 486
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 489,
            column: 68
          },
          end: {
            line: 489,
            column: 69
          }
        },
        loc: {
          start: {
            line: 489,
            column: 86
          },
          end: {
            line: 489,
            column: 119
          }
        },
        line: 489
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 493,
            column: 45
          },
          end: {
            line: 493,
            column: 46
          }
        },
        loc: {
          start: {
            line: 493,
            column: 65
          },
          end: {
            line: 496,
            column: 13
          }
        },
        line: 493
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 508,
            column: 6
          },
          end: {
            line: 508,
            column: 7
          }
        },
        loc: {
          start: {
            line: 508,
            column: 47
          },
          end: {
            line: 525,
            column: 5
          }
        },
        line: 508
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 520,
            column: 25
          },
          end: {
            line: 520,
            column: 26
          }
        },
        loc: {
          start: {
            line: 520,
            column: 43
          },
          end: {
            line: 522,
            column: 9
          }
        },
        line: 520
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 54
          },
          end: {
            line: 29,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 64
          },
          end: {
            line: 29,
            column: 66
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 56
          }
        }, {
          start: {
            line: 40,
            column: 60
          },
          end: {
            line: 40,
            column: 61
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 27
          },
          end: {
            line: 54,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 27
          },
          end: {
            line: 54,
            column: 45
          }
        }, {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 54,
            column: 70
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 64,
            column: 13
          }
        }],
        line: 60
      },
      "5": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 40
          }
        }, {
          start: {
            line: 60,
            column: 44
          },
          end: {
            line: 60,
            column: 79
          }
        }],
        line: 60
      },
      "6": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 24
          },
          end: {
            line: 81,
            column: 39
          }
        }, {
          start: {
            line: 81,
            column: 43
          },
          end: {
            line: 81,
            column: 64
          }
        }],
        line: 81
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 101,
            column: 9
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 15
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 101,
            column: 9
          }
        }],
        line: 97
      },
      "11": {
        loc: {
          start: {
            line: 97,
            column: 19
          },
          end: {
            line: 97,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 19
          },
          end: {
            line: 97,
            column: 30
          }
        }, {
          start: {
            line: 97,
            column: 34
          },
          end: {
            line: 97,
            column: 60
          }
        }],
        line: 97
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 103,
            column: 76
          },
          end: {
            line: 103,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 76
          },
          end: {
            line: 103,
            column: 104
          }
        }, {
          start: {
            line: 103,
            column: 108
          },
          end: {
            line: 103,
            column: 113
          }
        }],
        line: 103
      },
      "14": {
        loc: {
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 24
          },
          end: {
            line: 113,
            column: 40
          }
        }, {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 113,
            column: 62
          }
        }],
        line: 113
      },
      "15": {
        loc: {
          start: {
            line: 114,
            column: 25
          },
          end: {
            line: 114,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 25
          },
          end: {
            line: 114,
            column: 42
          }
        }, {
          start: {
            line: 114,
            column: 46
          },
          end: {
            line: 114,
            column: 48
          }
        }],
        line: 114
      },
      "16": {
        loc: {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 115,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 115,
            column: 46
          }
        }, {
          start: {
            line: 115,
            column: 50
          },
          end: {
            line: 115,
            column: 52
          }
        }],
        line: 115
      },
      "17": {
        loc: {
          start: {
            line: 126,
            column: 20
          },
          end: {
            line: 126,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 51
          },
          end: {
            line: 126,
            column: 58
          }
        }, {
          start: {
            line: 126,
            column: 61
          },
          end: {
            line: 126,
            column: 68
          }
        }],
        line: 126
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 36
          }
        }, {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 42
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 137,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 137,
            column: 44
          }
        }, {
          start: {
            line: 137,
            column: 48
          },
          end: {
            line: 137,
            column: 49
          }
        }],
        line: 137
      },
      "20": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 218,
            column: 9
          }
        }, {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 218,
            column: 9
          }
        }],
        line: 165
      },
      "21": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 27
          }
        }, {
          start: {
            line: 165,
            column: 31
          },
          end: {
            line: 165,
            column: 56
          }
        }],
        line: 165
      },
      "22": {
        loc: {
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 180,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 33
          },
          end: {
            line: 180,
            column: 49
          }
        }, {
          start: {
            line: 180,
            column: 53
          },
          end: {
            line: 180,
            column: 54
          }
        }],
        line: 180
      },
      "23": {
        loc: {
          start: {
            line: 194,
            column: 37
          },
          end: {
            line: 194,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 194,
            column: 37
          },
          end: {
            line: 194,
            column: 53
          }
        }, {
          start: {
            line: 194,
            column: 57
          },
          end: {
            line: 194,
            column: 58
          }
        }],
        line: 194
      },
      "24": {
        loc: {
          start: {
            line: 212,
            column: 33
          },
          end: {
            line: 212,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 33
          },
          end: {
            line: 212,
            column: 49
          }
        }, {
          start: {
            line: 212,
            column: 53
          },
          end: {
            line: 212,
            column: 54
          }
        }],
        line: 212
      },
      "25": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }],
        line: 225
      },
      "26": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 225,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 225,
            column: 43
          }
        }, {
          start: {
            line: 225,
            column: 47
          },
          end: {
            line: 225,
            column: 74
          }
        }, {
          start: {
            line: 225,
            column: 78
          },
          end: {
            line: 225,
            column: 105
          }
        }],
        line: 225
      },
      "27": {
        loc: {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }],
        line: 227
      },
      "28": {
        loc: {
          start: {
            line: 227,
            column: 19
          },
          end: {
            line: 227,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 19
          },
          end: {
            line: 227,
            column: 47
          }
        }, {
          start: {
            line: 227,
            column: 51
          },
          end: {
            line: 227,
            column: 88
          }
        }],
        line: 227
      },
      "29": {
        loc: {
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }],
        line: 229
      },
      "30": {
        loc: {
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 229,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 19
          },
          end: {
            line: 229,
            column: 51
          }
        }, {
          start: {
            line: 229,
            column: 55
          },
          end: {
            line: 229,
            column: 83
          }
        }],
        line: 229
      },
      "31": {
        loc: {
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }],
        line: 231
      },
      "32": {
        loc: {
          start: {
            line: 231,
            column: 19
          },
          end: {
            line: 231,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 231,
            column: 19
          },
          end: {
            line: 231,
            column: 55
          }
        }, {
          start: {
            line: 231,
            column: 59
          },
          end: {
            line: 231,
            column: 91
          }
        }],
        line: 231
      },
      "33": {
        loc: {
          start: {
            line: 244,
            column: 30
          },
          end: {
            line: 244,
            column: 212
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 64
          },
          end: {
            line: 244,
            column: 114
          }
        }, {
          start: {
            line: 244,
            column: 117
          },
          end: {
            line: 244,
            column: 212
          }
        }],
        line: 244
      },
      "34": {
        loc: {
          start: {
            line: 244,
            column: 64
          },
          end: {
            line: 244,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 64
          },
          end: {
            line: 244,
            column: 109
          }
        }, {
          start: {
            line: 244,
            column: 113
          },
          end: {
            line: 244,
            column: 114
          }
        }],
        line: 244
      },
      "35": {
        loc: {
          start: {
            line: 244,
            column: 117
          },
          end: {
            line: 244,
            column: 212
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 244,
            column: 152
          },
          end: {
            line: 244,
            column: 208
          }
        }, {
          start: {
            line: 244,
            column: 211
          },
          end: {
            line: 244,
            column: 212
          }
        }],
        line: 244
      },
      "36": {
        loc: {
          start: {
            line: 244,
            column: 153
          },
          end: {
            line: 244,
            column: 203
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 244,
            column: 153
          },
          end: {
            line: 244,
            column: 198
          }
        }, {
          start: {
            line: 244,
            column: 202
          },
          end: {
            line: 244,
            column: 203
          }
        }],
        line: 244
      },
      "37": {
        loc: {
          start: {
            line: 245,
            column: 8
          },
          end: {
            line: 427,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 263,
            column: 22
          }
        }, {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 295,
            column: 22
          }
        }, {
          start: {
            line: 296,
            column: 12
          },
          end: {
            line: 402,
            column: 22
          }
        }, {
          start: {
            line: 403,
            column: 12
          },
          end: {
            line: 426,
            column: 22
          }
        }],
        line: 245
      },
      "38": {
        loc: {
          start: {
            line: 297,
            column: 16
          },
          end: {
            line: 401,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 16
          },
          end: {
            line: 401,
            column: 17
          }
        }, {
          start: {
            line: 299,
            column: 23
          },
          end: {
            line: 401,
            column: 17
          }
        }],
        line: 297
      },
      "39": {
        loc: {
          start: {
            line: 299,
            column: 23
          },
          end: {
            line: 401,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 23
          },
          end: {
            line: 401,
            column: 17
          }
        }, {
          start: {
            line: 345,
            column: 23
          },
          end: {
            line: 401,
            column: 17
          }
        }],
        line: 299
      },
      "40": {
        loc: {
          start: {
            line: 436,
            column: 20
          },
          end: {
            line: 436,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 436,
            column: 20
          },
          end: {
            line: 436,
            column: 32
          }
        }, {
          start: {
            line: 436,
            column: 36
          },
          end: {
            line: 436,
            column: 70
          }
        }],
        line: 436
      },
      "41": {
        loc: {
          start: {
            line: 437,
            column: 33
          },
          end: {
            line: 437,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 437,
            column: 33
          },
          end: {
            line: 437,
            column: 58
          }
        }, {
          start: {
            line: 437,
            column: 62
          },
          end: {
            line: 437,
            column: 71
          }
        }],
        line: 437
      },
      "42": {
        loc: {
          start: {
            line: 438,
            column: 22
          },
          end: {
            line: 438,
            column: 64
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 438,
            column: 22
          },
          end: {
            line: 438,
            column: 36
          }
        }, {
          start: {
            line: 438,
            column: 40
          },
          end: {
            line: 438,
            column: 64
          }
        }],
        line: 438
      },
      "43": {
        loc: {
          start: {
            line: 439,
            column: 29
          },
          end: {
            line: 439,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 439,
            column: 29
          },
          end: {
            line: 439,
            column: 50
          }
        }, {
          start: {
            line: 439,
            column: 54
          },
          end: {
            line: 439,
            column: 85
          }
        }],
        line: 439
      },
      "44": {
        loc: {
          start: {
            line: 440,
            column: 28
          },
          end: {
            line: 440,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 440,
            column: 28
          },
          end: {
            line: 440,
            column: 48
          }
        }, {
          start: {
            line: 440,
            column: 52
          },
          end: {
            line: 440,
            column: 53
          }
        }],
        line: 440
      },
      "45": {
        loc: {
          start: {
            line: 441,
            column: 24
          },
          end: {
            line: 441,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 24
          },
          end: {
            line: 441,
            column: 40
          }
        }, {
          start: {
            line: 441,
            column: 44
          },
          end: {
            line: 441,
            column: 92
          }
        }],
        line: 441
      },
      "46": {
        loc: {
          start: {
            line: 441,
            column: 59
          },
          end: {
            line: 441,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 441,
            column: 59
          },
          end: {
            line: 441,
            column: 79
          }
        }, {
          start: {
            line: 441,
            column: 83
          },
          end: {
            line: 441,
            column: 84
          }
        }],
        line: 441
      },
      "47": {
        loc: {
          start: {
            line: 442,
            column: 25
          },
          end: {
            line: 442,
            column: 144
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 442,
            column: 25
          },
          end: {
            line: 442,
            column: 42
          }
        }, {
          start: {
            line: 442,
            column: 46
          },
          end: {
            line: 442,
            column: 144
          }
        }],
        line: 442
      },
      "48": {
        loc: {
          start: {
            line: 443,
            column: 30
          },
          end: {
            line: 445,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 443,
            column: 30
          },
          end: {
            line: 443,
            column: 52
          }
        }, {
          start: {
            line: 443,
            column: 56
          },
          end: {
            line: 445,
            column: 17
          }
        }],
        line: 443
      },
      "49": {
        loc: {
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: 464,
            column: 15
          },
          end: {
            line: 466,
            column: 9
          }
        }],
        line: 462
      },
      "50": {
        loc: {
          start: {
            line: 464,
            column: 15
          },
          end: {
            line: 466,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 464,
            column: 15
          },
          end: {
            line: 466,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 464
      },
      "51": {
        loc: {
          start: {
            line: 479,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 479,
            column: 8
          },
          end: {
            line: 481,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 479
      },
      "52": {
        loc: {
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 479,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 479,
            column: 12
          },
          end: {
            line: 479,
            column: 34
          }
        }, {
          start: {
            line: 479,
            column: 38
          },
          end: {
            line: 479,
            column: 71
          }
        }],
        line: 479
      },
      "53": {
        loc: {
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "54": {
        loc: {
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 488,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 488,
            column: 12
          },
          end: {
            line: 488,
            column: 36
          }
        }, {
          start: {
            line: 488,
            column: 40
          },
          end: {
            line: 488,
            column: 75
          }
        }],
        line: 488
      },
      "55": {
        loc: {
          start: {
            line: 489,
            column: 93
          },
          end: {
            line: 489,
            column: 118
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 489,
            column: 93
          },
          end: {
            line: 489,
            column: 113
          }
        }, {
          start: {
            line: 489,
            column: 117
          },
          end: {
            line: 489,
            column: 118
          }
        }],
        line: 489
      },
      "56": {
        loc: {
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 492,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 12
          },
          end: {
            line: 492,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "57": {
        loc: {
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 494,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 494,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "58": {
        loc: {
          start: {
            line: 495,
            column: 16
          },
          end: {
            line: 495,
            column: 144
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 16
          },
          end: {
            line: 495,
            column: 144
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "59": {
        loc: {
          start: {
            line: 495,
            column: 20
          },
          end: {
            line: 495,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 495,
            column: 20
          },
          end: {
            line: 495,
            column: 41
          }
        }, {
          start: {
            line: 495,
            column: 45
          },
          end: {
            line: 495,
            column: 70
          }
        }],
        line: 495
      },
      "60": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 500,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "61": {
        loc: {
          start: {
            line: 498,
            column: 12
          },
          end: {
            line: 498,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 498,
            column: 12
          },
          end: {
            line: 498,
            column: 27
          }
        }, {
          start: {
            line: 498,
            column: 32
          },
          end: {
            line: 498,
            column: 51
          }
        }, {
          start: {
            line: 498,
            column: 55
          },
          end: {
            line: 498,
            column: 74
          }
        }],
        line: 498
      },
      "62": {
        loc: {
          start: {
            line: 523,
            column: 50
          },
          end: {
            line: 523,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 523,
            column: 79
          },
          end: {
            line: 523,
            column: 84
          }
        }, {
          start: {
            line: 523,
            column: 87
          },
          end: {
            line: 523,
            column: 91
          }
        }],
        line: 523
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0, 0],
      "62": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\enhanced-quote-converter.tsx"],
      sourcesContent: ["import {\n  EnhancedContractTemplateService,\n  type EnhancedContract,\n  type PaymentMilestone,\n} from \"../services/EnhancedContractTemplateService\"\nimport type { Quote, Invoice } from \"../schemas/contractInvoiceSchemas\"\n\n// Enhanced interfaces for unified conversion\nexport interface UnifiedInvoiceItem {\n  id: string\n  description: string\n  quantity: number\n  unitPrice: number\n  total: number\n\n  // Enhanced properties for quote data preservation\n  category?: \"design\" | \"development\" | \"content\" | \"seo\" | \"maintenance\" | \"custom\"\n  hoursAllocated?: number\n  relatedFeatures?: string[]\n  milestonePhase?: string\n\n  // Tax and pricing\n  taxable: boolean\n  taxRate: number\n  discountPercentage?: number\n  discountAmount?: number\n}\n\nexport interface UnifiedInvoice {\n  // Core invoice data\n  id: string\n  invoiceNumber: string\n  contractId?: string\n  quoteId?: string\n  clientId?: string\n  clientName: string\n  clientEmail: string\n  clientAddress: string\n\n  // Dynamic invoice properties\n  invoiceType: \"deposit\" | \"milestone\" | \"final\" | \"progress\" | \"custom\"\n  milestoneNumber?: number\n  totalMilestones?: number\n  progressPercentage?: number\n\n  // Enhanced items with quote data preservation\n  items: UnifiedInvoiceItem[]\n\n  // Financial details\n  subtotal: number\n  tax: number\n  totalAmount: number\n  amountPaid: number\n  amountDue: number\n\n  // Status and dates\n  status: \"Draft\" | \"Sent\" | \"Paid\" | \"Overdue\" | \"draft\" | \"sent\" | \"viewed\" | \"paid\" | \"overdue\" | \"cancelled\"\n  issueDate: Date\n  dueDate: Date\n  paidDate?: string\n\n  // Quote data preservation\n  originalQuoteData?: {\n    businessName: string\n    industry: string\n    pageCount: number\n    features: string[]\n    timeline: string\n    budget: string\n    finalPrice: number\n    totalHours: number\n    requirements?: string\n    additionalNotes?: string\n  }\n\n  // Contract data preservation\n  contractData?: {\n    projectTitle: string\n    projectDescription: string\n    serviceType: string\n    timeline: string\n    startDate: string\n    deliveryDate: string\n    milestones?: PaymentMilestone[]\n  }\n\n  // Payment and terms\n  paymentTerms: string\n  notes?: string\n  internalNotes?: string\n  currency: string\n\n  // Metadata\n  createdAt: string\n  updatedAt: string\n  createdBy?: string\n  lastModifiedBy?: string\n}\n\n// Conversion options\nexport interface ConversionOptions {\n  templateId?: string\n  paymentStructure?: \"single\" | \"deposit_final\" | \"milestone\" | \"progress\"\n  customMilestones?: Partial<PaymentMilestone>[]\n  taxRate?: number\n  paymentTerms?: string\n  includeDetailedItems?: boolean\n  autoGenerateInvoices?: boolean\n  userId?: string\n}\n\n// Conversion result\nexport interface ConversionResult {\n  contract: EnhancedContract\n  invoices: UnifiedInvoice[]\n  paymentSchedule: PaymentMilestone[]\n  summary: {\n    totalAmount: number\n    numberOfInvoices: number\n    firstInvoiceAmount: number\n    estimatedCompletionDate: string\n    preservedQuoteData: boolean\n  }\n}\n\n// Enhanced Quote to Contract Converter\nexport class EnhancedQuoteConverter {\n  private static readonly DEFAULT_TAX_RATE = 0.0875 // 8.75%\n  private static readonly DEFAULT_PAYMENT_TERMS = \"Net 30\"\n\n  /**\n   * Convert quote to contract and generate unified invoices\n   */\n  static convertQuoteToContractAndInvoices(quote: Quote, options: ConversionOptions = {}): ConversionResult {\n    // Generate enhanced contract\n    const contract = this.generateEnhancedContract(quote, options)\n\n    // Generate unified invoices based on payment structure\n    const invoices = this.generateUnifiedInvoices(quote, contract, options)\n\n    // Extract payment schedule\n    const paymentSchedule = contract.paymentStructure.schedule\n\n    // Calculate summary\n    const summary = {\n      totalAmount: contract.paymentStructure.totalAmount,\n      numberOfInvoices: invoices.length,\n      firstInvoiceAmount: invoices[0]?.totalAmount || 0,\n      estimatedCompletionDate: contract.projectDetails.endDate,\n      preservedQuoteData: true,\n    }\n\n    return {\n      contract,\n      invoices,\n      paymentSchedule,\n      summary,\n    }\n  }\n\n  /**\n   * Generate enhanced contract from quote\n   */\n  private static generateEnhancedContract(quote: Quote, options: ConversionOptions): EnhancedContract {\n    const templateId = options.templateId || \"web-design-template\"\n    const contract = EnhancedContractTemplateService.generateContractFromQuote(quote, templateId)\n\n    // Apply custom payment structure if provided\n    if (options.paymentStructure) {\n      contract.paymentStructure.type = options.paymentStructure\n\n      // Regenerate schedule based on custom structure\n      if (options.customMilestones && options.customMilestones.length > 0) {\n        contract.paymentStructure.schedule = this.generateCustomPaymentSchedule(quote, options.customMilestones)\n      } else {\n        contract.paymentStructure.schedule = this.generatePaymentScheduleByType(quote, options.paymentStructure)\n      }\n    }\n\n    // Apply custom payment terms\n    if (options.paymentTerms) {\n      contract.paymentStructure.paymentTerms = options.paymentTerms\n    }\n\n    // Add user metadata\n    if (options.userId) {\n      contract.createdBy = options.userId\n      contract.lastModifiedBy = options.userId\n    }\n\n    return contract\n  }\n\n  /**\n   * Generate unified invoices from contract\n   */\n  private static generateUnifiedInvoices(\n    quote: Quote,\n    contract: EnhancedContract,\n    options: ConversionOptions,\n  ): UnifiedInvoice[] {\n    const invoices: UnifiedInvoice[] = []\n    const taxRate = options.taxRate || this.DEFAULT_TAX_RATE\n\n    // Generate invoice for each milestone\n    contract.paymentStructure.schedule.forEach((milestone, index) => {\n      const invoice = this.generateInvoiceFromMilestone(quote, contract, milestone, index, taxRate, options)\n      invoices.push(invoice)\n    })\n\n    return invoices\n  }\n\n  /**\n   * Generate invoice from milestone\n   */\n  private static generateInvoiceFromMilestone(\n    quote: Quote,\n    contract: EnhancedContract,\n    milestone: PaymentMilestone,\n    index: number,\n    taxRate: number,\n    options: ConversionOptions,\n  ): UnifiedInvoice {\n    const invoiceNumber = `INV-${new Date().getFullYear()}-${String(Date.now() + index).slice(-6)}`\n\n    // Determine invoice type\n    let invoiceType: UnifiedInvoice[\"invoiceType\"] = \"milestone\"\n    if (contract.paymentStructure.schedule.length === 1) {\n      invoiceType = \"custom\"\n    } else if (index === 0 && milestone.percentage >= 40) {\n      invoiceType = \"deposit\"\n    } else if (index === contract.paymentStructure.schedule.length - 1) {\n      invoiceType = \"final\"\n    }\n\n    // Generate invoice items\n    const items = this.generateInvoiceItems(quote, contract, milestone, options.includeDetailedItems || false)\n\n    const subtotal = items.reduce((sum, item) => sum + item.total, 0)\n    const tax = subtotal * taxRate\n    const totalAmount = subtotal + tax\n\n    const invoice: UnifiedInvoice = {\n      id: `invoice-${Date.now()}-${index}`,\n      invoiceNumber,\n      contractId: contract.id,\n      quoteId: quote.id,\n      clientId: quote.clientId,\n      clientName: quote.clientName || quote.businessName,\n      clientEmail: quote.clientEmail || '',\n      clientAddress: quote.clientAddress || '',\n\n      invoiceType,\n      milestoneNumber: milestone.milestoneNumber,\n      totalMilestones: contract.paymentStructure.schedule.length,\n      progressPercentage: milestone.percentage,\n\n      items,\n      subtotal,\n      tax,\n      totalAmount,\n      amountPaid: 0,\n      amountDue: totalAmount,\n\n      status: options.autoGenerateInvoices ? \"draft\" : \"draft\",\n      issueDate: new Date(),\n      dueDate: new Date(milestone.dueDate),\n\n      originalQuoteData: {\n        businessName: quote.businessName,\n        industry: quote.industry,\n        pageCount: quote.pageCount,\n        features: quote.features,\n        timeline: quote.timeline,\n        budget: quote.budget || '',\n        finalPrice: quote.finalPrice,\n        totalHours: quote.totalHours || 0,\n        requirements: quote.requirements,\n        additionalNotes: quote.additionalNotes,\n      },\n\n      contractData: {\n        projectTitle: contract.projectDetails.title,\n        projectDescription: contract.projectDetails.description,\n        serviceType: \"Web Design & Development\",\n        timeline: contract.projectDetails.timeline,\n        startDate: contract.projectDetails.startDate,\n        deliveryDate: contract.projectDetails.endDate,\n        milestones: contract.paymentStructure.schedule,\n      },\n\n      paymentTerms: contract.paymentStructure.paymentTerms,\n      notes: this.generateInvoiceNotes(quote, milestone, invoiceType),\n      internalNotes: this.generateInternalNotes(quote, contract, milestone),\n      currency: contract.paymentStructure.currency,\n\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      createdBy: options.userId,\n      lastModifiedBy: options.userId,\n    }\n\n    return invoice\n  }\n\n  /**\n   * Generate detailed invoice items\n   */\n  private static generateInvoiceItems(\n    quote: Quote,\n    contract: EnhancedContract,\n    milestone: PaymentMilestone,\n    includeDetailed: boolean,\n  ): UnifiedInvoiceItem[] {\n    const items: UnifiedInvoiceItem[] = []\n\n    if (includeDetailed && quote.features.length > 1) {\n      // Generate detailed items based on features\n      const baseAmount = milestone.amount * 0.3 // 30% for base services\n      const featureAmount = milestone.amount * 0.7 // 70% for features\n      const amountPerFeature = featureAmount / quote.features.length\n\n      // Base service item\n      items.push({\n        id: `item-base-${Date.now()}`,\n        description: `${milestone.name} - Base Web Design Services`,\n        quantity: 1,\n        unitPrice: baseAmount,\n        total: baseAmount,\n        category: \"design\",\n        hoursAllocated: (quote.totalHours || 0) * 0.3 * (milestone.percentage / 100),\n        milestonePhase: milestone.name,\n        taxable: true,\n        taxRate: 0,\n      })\n\n      // Feature-specific items\n      quote.features.forEach((feature: string, index: number) => {\n        items.push({\n          id: `item-feature-${Date.now()}-${index}`,\n          description: `${milestone.name} - ${feature}`,\n          quantity: 1,\n          unitPrice: amountPerFeature,\n          total: amountPerFeature,\n          category: this.categorizeFeature(feature),\n          hoursAllocated: ((quote.totalHours || 0) * 0.7 * (milestone.percentage / 100)) / quote.features.length,\n          relatedFeatures: [feature],\n          milestonePhase: milestone.name,\n          taxable: true,\n          taxRate: 0,\n        })\n      })\n    } else {\n      // Single consolidated item\n      items.push({\n        id: `item-${Date.now()}`,\n        description: `${milestone.name} - ${contract.projectDetails.title}`,\n        quantity: 1,\n        unitPrice: milestone.amount,\n        total: milestone.amount,\n        category: \"custom\",\n        hoursAllocated: (quote.totalHours || 0) * (milestone.percentage / 100),\n        relatedFeatures: quote.features,\n        milestonePhase: milestone.name,\n        taxable: true,\n        taxRate: 0,\n      })\n    }\n\n    return items\n  }\n\n  /**\n   * Categorize feature for invoice items\n   */\n  private static categorizeFeature(feature: string): UnifiedInvoiceItem[\"category\"] {\n    const featureLower = feature.toLowerCase()\n\n    if (featureLower.includes(\"design\") || featureLower.includes(\"ui\") || featureLower.includes(\"ux\")) {\n      return \"design\"\n    } else if (featureLower.includes(\"seo\") || featureLower.includes(\"optimization\")) {\n      return \"seo\"\n    } else if (featureLower.includes(\"content\") || featureLower.includes(\"cms\")) {\n      return \"content\"\n    } else if (featureLower.includes(\"maintenance\") || featureLower.includes(\"support\")) {\n      return \"maintenance\"\n    } else {\n      return \"development\"\n    }\n  }\n\n  /**\n   * Generate payment schedule by type\n   */\n  private static generatePaymentScheduleByType(\n    quote: Quote,\n    type: \"single\" | \"deposit_final\" | \"milestone\" | \"progress\",\n  ): PaymentMilestone[] {\n    const baseAmount = quote.finalPrice\n    const schedule: PaymentMilestone[] = []\n    const startDate = new Date()\n\n    // Calculate timeline\n    const timelineWeeks = quote.timeline.includes(\"week\")\n      ? Number.parseInt(quote.timeline.split(\"-\")[0]) || 4\n      : quote.timeline.includes(\"month\")\n        ? (Number.parseInt(quote.timeline.split(\"-\")[0]) || 2) * 4\n        : 8\n\n    switch (type) {\n      case \"single\":\n        schedule.push({\n          id: `milestone-${Date.now()}`,\n          milestoneNumber: 1,\n          name: \"Full Payment\",\n          description: \"Complete project payment\",\n          percentage: 100,\n          amount: baseAmount,\n          dueDate: new Date(startDate.getTime() + timelineWeeks * 7 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0],\n          deliverables: [\"Complete website\", \"All features implemented\", \"Testing completed\", \"Launch and training\"],\n          status: \"pending\",\n        })\n        break\n\n      case \"deposit_final\":\n        schedule.push(\n          {\n            id: `milestone-${Date.now()}-1`,\n            milestoneNumber: 1,\n            name: \"Project Deposit\",\n            description: \"Initial deposit to begin project\",\n            percentage: 50,\n            amount: baseAmount * 0.5,\n            dueDate: startDate.toISOString().split(\"T\")[0],\n            deliverables: [\"Project kickoff\", \"Requirements gathering\", \"Initial designs\"],\n            status: \"pending\",\n          },\n          {\n            id: `milestone-${Date.now()}-2`,\n            milestoneNumber: 2,\n            name: \"Final Payment\",\n            description: \"Final payment upon project completion\",\n            percentage: 50,\n            amount: baseAmount * 0.5,\n            dueDate: new Date(startDate.getTime() + timelineWeeks * 7 * 24 * 60 * 60 * 1000)\n              .toISOString()\n              .split(\"T\")[0],\n            deliverables: [\"Complete website\", \"Testing\", \"Launch\", \"Training\"],\n            status: \"pending\",\n          },\n        )\n        break\n\n      case \"milestone\":\n        if (baseAmount < 5000) {\n          return this.generatePaymentScheduleByType(quote, \"deposit_final\")\n        } else if (baseAmount < 15000) {\n          // 3-milestone schedule\n          const milestones = [\n            {\n              name: \"Project Start & Deposit\",\n              percentage: 40,\n              deliverables: [\"Project kickoff\", \"Requirements\", \"Wireframes\"],\n            },\n            {\n              name: \"Design Approval\",\n              percentage: 30,\n              deliverables: [\"Visual designs\", \"Content integration\", \"Development start\"],\n            },\n            { name: \"Project Completion\", percentage: 30, deliverables: [\"Final development\", \"Testing\", \"Launch\"] },\n          ]\n\n          milestones.forEach((milestone, index) => {\n            const dueDate = new Date(startDate)\n            dueDate.setDate(startDate.getDate() + (index + 1) * Math.floor((timelineWeeks * 7) / milestones.length))\n\n            schedule.push({\n              id: `milestone-${Date.now()}-${index + 1}`,\n              milestoneNumber: index + 1,\n              name: milestone.name,\n              description: `${milestone.name} for ${quote.businessName}`,\n              percentage: milestone.percentage,\n              amount: baseAmount * (milestone.percentage / 100),\n              dueDate: dueDate.toISOString().split(\"T\")[0],\n              deliverables: milestone.deliverables,\n              status: \"pending\",\n            })\n          })\n        } else {\n          // 4-milestone schedule for larger projects\n          const milestones = [\n            {\n              name: \"Project Start & Deposit\",\n              percentage: 30,\n              deliverables: [\"Project kickoff\", \"Requirements\", \"Wireframes\"],\n            },\n            {\n              name: \"Design Phase\",\n              percentage: 25,\n              deliverables: [\"Visual designs\", \"Design system\", \"Client approval\"],\n            },\n            {\n              name: \"Development Phase\",\n              percentage: 25,\n              deliverables: [\"Frontend development\", \"Backend integration\", \"Content management\"],\n            },\n            {\n              name: \"Launch & Completion\",\n              percentage: 20,\n              deliverables: [\"Testing\", \"Launch\", \"Training\", \"Documentation\"],\n            },\n          ]\n\n          milestones.forEach((milestone, index) => {\n            const dueDate = new Date(startDate)\n            dueDate.setDate(startDate.getDate() + (index + 1) * Math.floor((timelineWeeks * 7) / milestones.length))\n\n            schedule.push({\n              id: `milestone-${Date.now()}-${index + 1}`,\n              milestoneNumber: index + 1,\n              name: milestone.name,\n              description: `${milestone.name} for ${quote.businessName}`,\n              percentage: milestone.percentage,\n              amount: baseAmount * (milestone.percentage / 100),\n              dueDate: dueDate.toISOString().split(\"T\")[0],\n              deliverables: milestone.deliverables,\n              status: \"pending\",\n            })\n          })\n        }\n        break\n\n      case \"progress\":\n        // Monthly progress payments\n        const monthlyPayments = Math.ceil(timelineWeeks / 4)\n        const percentagePerMonth = 100 / monthlyPayments\n\n        for (let i = 0; i < monthlyPayments; i++) {\n          const dueDate = new Date(startDate)\n          dueDate.setMonth(startDate.getMonth() + i + 1)\n\n          schedule.push({\n            id: `milestone-${Date.now()}-${i + 1}`,\n            milestoneNumber: i + 1,\n            name: `Progress Payment ${i + 1}`,\n            description: `Monthly progress payment ${i + 1} of ${monthlyPayments}`,\n            percentage: percentagePerMonth,\n            amount: baseAmount * (percentagePerMonth / 100),\n            dueDate: dueDate.toISOString().split(\"T\")[0],\n            deliverables: [`Month ${i + 1} deliverables`, \"Progress review\", \"Client approval\"],\n            status: \"pending\",\n          })\n        }\n        break\n    }\n\n    return schedule\n  }\n\n  /**\n   * Generate custom payment schedule\n   */\n  private static generateCustomPaymentSchedule(\n    quote: Quote,\n    customMilestones: Partial<PaymentMilestone>[],\n  ): PaymentMilestone[] {\n    const baseAmount = quote.finalPrice\n    const startDate = new Date()\n\n    return customMilestones.map((milestone, index) => ({\n      id: milestone.id || `milestone-${Date.now()}-${index}`,\n      milestoneNumber: milestone.milestoneNumber || index + 1,\n      name: milestone.name || `Milestone ${index + 1}`,\n      description: milestone.description || `Custom milestone ${index + 1}`,\n      percentage: milestone.percentage || 0,\n      amount: milestone.amount || baseAmount * ((milestone.percentage || 0) / 100),\n      dueDate:\n        milestone.dueDate ||\n        new Date(startDate.getTime() + (index + 1) * 30 * 24 * 60 * 60 * 1000).toISOString().split(\"T\")[0],\n      deliverables: milestone.deliverables || [`Milestone ${index + 1} deliverables`],\n      dependencies: milestone.dependencies,\n      status: \"pending\",\n    }))\n  }\n\n  /**\n   * Generate invoice notes\n   */\n  private static generateInvoiceNotes(\n    quote: Quote,\n    milestone: PaymentMilestone,\n    invoiceType: UnifiedInvoice[\"invoiceType\"],\n  ): string {\n    let notes = `${milestone.name} for ${quote.businessName}\\n\\n`\n    notes += `Project Details:\\n`\n    notes += `\u2022 ${quote.pageCount} pages\\n`\n    notes += `\u2022 Industry: ${quote.industry}\\n`\n    notes += `\u2022 Timeline: ${quote.timeline}\\n\\n`\n    notes += `Milestone Deliverables:\\n`\n    milestone.deliverables.forEach((deliverable) => {\n      notes += `\u2022 ${deliverable}\\n`\n    })\n\n    if (invoiceType === \"deposit\") {\n      notes += `\\nThis is the initial deposit to begin your project. Work will commence upon receipt of payment.`\n    } else if (invoiceType === \"final\") {\n      notes += `\\nThis is the final payment for your project. All deliverables will be completed upon receipt.`\n    }\n\n    return notes\n  }\n\n  /**\n   * Generate internal notes\n   */\n  private static generateInternalNotes(quote: Quote, contract: EnhancedContract, milestone: PaymentMilestone): string {\n    let notes = `Auto-generated from Quote ${quote.id} via Contract ${contract.contractNumber}\\n\\n`\n    notes += `Original Quote Data:\\n`\n    notes += `\u2022 Budget: ${quote.budget}\\n`\n    notes += `\u2022 Total Hours: ${quote.totalHours}\\n`\n    notes += `\u2022 Features: ${quote.features.join(\", \")}\\n\\n`\n    notes += `Milestone: ${milestone.milestoneNumber} of ${contract.paymentStructure.schedule.length}\\n`\n    notes += `Percentage: ${milestone.percentage}%\\n`\n\n    if (milestone.dependencies && milestone.dependencies.length > 0) {\n      notes += `Dependencies: ${milestone.dependencies.join(\", \")}\\n`\n    }\n\n    return notes\n  }\n\n  /**\n   * Validate conversion options\n   */\n  static validateConversionOptions(options: ConversionOptions): { isValid: boolean; errors: string[] } {\n    const errors: string[] = []\n\n    if (options.customMilestones && options.customMilestones.length > 0) {\n      const totalPercentage = options.customMilestones.reduce((sum, milestone) => sum + (milestone.percentage || 0), 0)\n      if (Math.abs(totalPercentage - 100) > 0.01) {\n        errors.push(\"Custom milestones must total 100%\")\n      }\n\n      options.customMilestones.forEach((milestone, index) => {\n        if (!milestone.name) errors.push(`Milestone ${index + 1} name is required`)\n        if (!milestone.percentage || milestone.percentage <= 0)\n          errors.push(`Milestone ${index + 1} percentage must be greater than 0`)\n      })\n    }\n\n    if (options.taxRate && (options.taxRate < 0 || options.taxRate > 1)) {\n      errors.push(\"Tax rate must be between 0 and 1\")\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n    }\n  }\n\n  /**\n   * Generate conversion summary\n   */\n  static generateConversionSummary(result: ConversionResult): string {\n    const { contract, invoices, summary } = result\n\n    let summaryText = `Conversion Summary\\n`\n    summaryText += `================\\n\\n`\n    summaryText += `Contract: ${contract.contractNumber}\\n`\n    summaryText += `Client: ${contract.clientName}\\n`\n    summaryText += `Project: ${contract.projectDetails.title}\\n`\n    summaryText += `Total Amount: ${contract.paymentStructure.currency} ${summary.totalAmount.toLocaleString()}\\n`\n    summaryText += `Payment Structure: ${contract.paymentStructure.type}\\n`\n    summaryText += `Number of Invoices: ${summary.numberOfInvoices}\\n`\n    summaryText += `Estimated Completion: ${new Date(summary.estimatedCompletionDate).toLocaleDateString()}\\n\\n`\n\n    summaryText += `Invoice Schedule:\\n`\n    invoices.forEach((invoice, index) => {\n      summaryText += `${index + 1}. ${invoice.invoiceNumber} - ${invoice.invoiceType} - ${invoice.currency} ${invoice.totalAmount.toLocaleString()} (Due: ${new Date(invoice.dueDate).toLocaleDateString()})\\n`\n    })\n\n    summaryText += `\\nQuote Data Preserved: ${summary.preservedQuoteData ? \"Yes\" : \"No\"}\\n`\n\n    return summaryText\n  }\n}\n\nexport default EnhancedQuoteConverter\n"],
      names: ["EnhancedQuoteConverter", "DEFAULT_TAX_RATE", "DEFAULT_PAYMENT_TERMS", "convertQuoteToContractAndInvoices", "quote", "options", "contract", "generateEnhancedContract", "invoices", "generateUnifiedInvoices", "paymentSchedule", "paymentStructure", "schedule", "summary", "totalAmount", "numberOfInvoices", "length", "firstInvoiceAmount", "estimatedCompletionDate", "projectDetails", "endDate", "preservedQuoteData", "templateId", "EnhancedContractTemplateService", "generateContractFromQuote", "type", "customMilestones", "generateCustomPaymentSchedule", "generatePaymentScheduleByType", "paymentTerms", "userId", "createdBy", "lastModifiedBy", "taxRate", "forEach", "milestone", "index", "invoice", "generateInvoiceFromMilestone", "push", "invoiceNumber", "Date", "getFullYear", "String", "now", "slice", "invoiceType", "percentage", "items", "generateInvoiceItems", "includeDetailedItems", "subtotal", "reduce", "sum", "item", "total", "tax", "id", "contractId", "quoteId", "clientId", "clientName", "businessName", "clientEmail", "clientAddress", "milestoneNumber", "totalMilestones", "progressPercentage", "amountPaid", "amountDue", "status", "autoGenerateInvoices", "issueDate", "dueDate", "originalQuoteData", "industry", "pageCount", "features", "timeline", "budget", "finalPrice", "totalHours", "requirements", "additionalNotes", "contractData", "projectTitle", "title", "projectDescription", "description", "serviceType", "startDate", "deliveryDate", "milestones", "notes", "generateInvoiceNotes", "internalNotes", "generateInternalNotes", "currency", "createdAt", "toISOString", "updatedAt", "includeDetailed", "baseAmount", "amount", "featureAmount", "amountPerFeature", "name", "quantity", "unitPrice", "category", "hoursAllocated", "milestonePhase", "taxable", "feature", "categorizeFeature", "relatedFeatures", "featureLower", "toLowerCase", "includes", "timelineWeeks", "Number", "parseInt", "split", "getTime", "deliverables", "setDate", "getDate", "Math", "floor", "monthlyPayments", "ceil", "percentagePerMonth", "i", "setMonth", "getMonth", "map", "dependencies", "deliverable", "contractNumber", "join", "validateConversionOptions", "errors", "totalPercentage", "abs", "isValid", "generateConversionSummary", "result", "summaryText", "toLocaleString", "toLocaleDateString"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "25b829c99e36fbb2743462690e9f18a7663e65c6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_293a9yu732 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_293a9yu732();
cov_293a9yu732().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_293a9yu732().f[0]++;
  cov_293a9yu732().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_293a9yu732().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_293a9yu732().s[3]++;
_export(exports, {
  get EnhancedQuoteConverter() {
    /* istanbul ignore next */
    cov_293a9yu732().f[1]++;
    cov_293a9yu732().s[4]++;
    return EnhancedQuoteConverter;
  },
  get default() {
    /* istanbul ignore next */
    cov_293a9yu732().f[2]++;
    cov_293a9yu732().s[5]++;
    return _default;
  }
});
const _EnhancedContractTemplateService =
/* istanbul ignore next */
(cov_293a9yu732().s[6]++, require("../services/EnhancedContractTemplateService"));
class EnhancedQuoteConverter {
  static {
    /* istanbul ignore next */
    cov_293a9yu732().s[7]++;
    this.DEFAULT_TAX_RATE = 0.0875; // 8.75%
  }
  static {
    /* istanbul ignore next */
    cov_293a9yu732().s[8]++;
    this.DEFAULT_PAYMENT_TERMS = "Net 30";
  }
  /**
  * Convert quote to contract and generate unified invoices
  */
  static convertQuoteToContractAndInvoices(quote, options =
  /* istanbul ignore next */
  (cov_293a9yu732().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_293a9yu732().f[3]++;
    // Generate enhanced contract
    const contract =
    /* istanbul ignore next */
    (cov_293a9yu732().s[9]++, this.generateEnhancedContract(quote, options));
    // Generate unified invoices based on payment structure
    const invoices =
    /* istanbul ignore next */
    (cov_293a9yu732().s[10]++, this.generateUnifiedInvoices(quote, contract, options));
    // Extract payment schedule
    const paymentSchedule =
    /* istanbul ignore next */
    (cov_293a9yu732().s[11]++, contract.paymentStructure.schedule);
    // Calculate summary
    const summary =
    /* istanbul ignore next */
    (cov_293a9yu732().s[12]++, {
      totalAmount: contract.paymentStructure.totalAmount,
      numberOfInvoices: invoices.length,
      firstInvoiceAmount:
      /* istanbul ignore next */
      (cov_293a9yu732().b[1][0]++, invoices[0]?.totalAmount) ||
      /* istanbul ignore next */
      (cov_293a9yu732().b[1][1]++, 0),
      estimatedCompletionDate: contract.projectDetails.endDate,
      preservedQuoteData: true
    });
    /* istanbul ignore next */
    cov_293a9yu732().s[13]++;
    return {
      contract,
      invoices,
      paymentSchedule,
      summary
    };
  }
  /**
  * Generate enhanced contract from quote
  */
  static generateEnhancedContract(quote, options) {
    /* istanbul ignore next */
    cov_293a9yu732().f[4]++;
    const templateId =
    /* istanbul ignore next */
    (cov_293a9yu732().s[14]++,
    /* istanbul ignore next */
    (cov_293a9yu732().b[2][0]++, options.templateId) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[2][1]++, "web-design-template"));
    const contract =
    /* istanbul ignore next */
    (cov_293a9yu732().s[15]++, _EnhancedContractTemplateService.EnhancedContractTemplateService.generateContractFromQuote(quote, templateId));
    // Apply custom payment structure if provided
    /* istanbul ignore next */
    cov_293a9yu732().s[16]++;
    if (options.paymentStructure) {
      /* istanbul ignore next */
      cov_293a9yu732().b[3][0]++;
      cov_293a9yu732().s[17]++;
      contract.paymentStructure.type = options.paymentStructure;
      // Regenerate schedule based on custom structure
      /* istanbul ignore next */
      cov_293a9yu732().s[18]++;
      if (
      /* istanbul ignore next */
      (cov_293a9yu732().b[5][0]++, options.customMilestones) &&
      /* istanbul ignore next */
      (cov_293a9yu732().b[5][1]++, options.customMilestones.length > 0)) {
        /* istanbul ignore next */
        cov_293a9yu732().b[4][0]++;
        cov_293a9yu732().s[19]++;
        contract.paymentStructure.schedule = this.generateCustomPaymentSchedule(quote, options.customMilestones);
      } else {
        /* istanbul ignore next */
        cov_293a9yu732().b[4][1]++;
        cov_293a9yu732().s[20]++;
        contract.paymentStructure.schedule = this.generatePaymentScheduleByType(quote, options.paymentStructure);
      }
    } else
    /* istanbul ignore next */
    {
      cov_293a9yu732().b[3][1]++;
    }
    // Apply custom payment terms
    cov_293a9yu732().s[21]++;
    if (options.paymentTerms) {
      /* istanbul ignore next */
      cov_293a9yu732().b[6][0]++;
      cov_293a9yu732().s[22]++;
      contract.paymentStructure.paymentTerms = options.paymentTerms;
    } else
    /* istanbul ignore next */
    {
      cov_293a9yu732().b[6][1]++;
    }
    // Add user metadata
    cov_293a9yu732().s[23]++;
    if (options.userId) {
      /* istanbul ignore next */
      cov_293a9yu732().b[7][0]++;
      cov_293a9yu732().s[24]++;
      contract.createdBy = options.userId;
      /* istanbul ignore next */
      cov_293a9yu732().s[25]++;
      contract.lastModifiedBy = options.userId;
    } else
    /* istanbul ignore next */
    {
      cov_293a9yu732().b[7][1]++;
    }
    cov_293a9yu732().s[26]++;
    return contract;
  }
  /**
  * Generate unified invoices from contract
  */
  static generateUnifiedInvoices(quote, contract, options) {
    /* istanbul ignore next */
    cov_293a9yu732().f[5]++;
    const invoices =
    /* istanbul ignore next */
    (cov_293a9yu732().s[27]++, []);
    const taxRate =
    /* istanbul ignore next */
    (cov_293a9yu732().s[28]++,
    /* istanbul ignore next */
    (cov_293a9yu732().b[8][0]++, options.taxRate) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[8][1]++, this.DEFAULT_TAX_RATE));
    // Generate invoice for each milestone
    /* istanbul ignore next */
    cov_293a9yu732().s[29]++;
    contract.paymentStructure.schedule.forEach((milestone, index) => {
      /* istanbul ignore next */
      cov_293a9yu732().f[6]++;
      const invoice =
      /* istanbul ignore next */
      (cov_293a9yu732().s[30]++, this.generateInvoiceFromMilestone(quote, contract, milestone, index, taxRate, options));
      /* istanbul ignore next */
      cov_293a9yu732().s[31]++;
      invoices.push(invoice);
    });
    /* istanbul ignore next */
    cov_293a9yu732().s[32]++;
    return invoices;
  }
  /**
  * Generate invoice from milestone
  */
  static generateInvoiceFromMilestone(quote, contract, milestone, index, taxRate, options) {
    /* istanbul ignore next */
    cov_293a9yu732().f[7]++;
    const invoiceNumber =
    /* istanbul ignore next */
    (cov_293a9yu732().s[33]++, `INV-${new Date().getFullYear()}-${String(Date.now() + index).slice(-6)}`);
    // Determine invoice type
    let invoiceType =
    /* istanbul ignore next */
    (cov_293a9yu732().s[34]++, "milestone");
    /* istanbul ignore next */
    cov_293a9yu732().s[35]++;
    if (contract.paymentStructure.schedule.length === 1) {
      /* istanbul ignore next */
      cov_293a9yu732().b[9][0]++;
      cov_293a9yu732().s[36]++;
      invoiceType = "custom";
    } else {
      /* istanbul ignore next */
      cov_293a9yu732().b[9][1]++;
      cov_293a9yu732().s[37]++;
      if (
      /* istanbul ignore next */
      (cov_293a9yu732().b[11][0]++, index === 0) &&
      /* istanbul ignore next */
      (cov_293a9yu732().b[11][1]++, milestone.percentage >= 40)) {
        /* istanbul ignore next */
        cov_293a9yu732().b[10][0]++;
        cov_293a9yu732().s[38]++;
        invoiceType = "deposit";
      } else {
        /* istanbul ignore next */
        cov_293a9yu732().b[10][1]++;
        cov_293a9yu732().s[39]++;
        if (index === contract.paymentStructure.schedule.length - 1) {
          /* istanbul ignore next */
          cov_293a9yu732().b[12][0]++;
          cov_293a9yu732().s[40]++;
          invoiceType = "final";
        } else
        /* istanbul ignore next */
        {
          cov_293a9yu732().b[12][1]++;
        }
      }
    }
    // Generate invoice items
    const items =
    /* istanbul ignore next */
    (cov_293a9yu732().s[41]++, this.generateInvoiceItems(quote, contract, milestone,
    /* istanbul ignore next */
    (cov_293a9yu732().b[13][0]++, options.includeDetailedItems) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[13][1]++, false)));
    const subtotal =
    /* istanbul ignore next */
    (cov_293a9yu732().s[42]++, items.reduce((sum, item) => {
      /* istanbul ignore next */
      cov_293a9yu732().f[8]++;
      cov_293a9yu732().s[43]++;
      return sum + item.total;
    }, 0));
    const tax =
    /* istanbul ignore next */
    (cov_293a9yu732().s[44]++, subtotal * taxRate);
    const totalAmount =
    /* istanbul ignore next */
    (cov_293a9yu732().s[45]++, subtotal + tax);
    const invoice =
    /* istanbul ignore next */
    (cov_293a9yu732().s[46]++, {
      id: `invoice-${Date.now()}-${index}`,
      invoiceNumber,
      contractId: contract.id,
      quoteId: quote.id,
      clientId: quote.clientId,
      clientName:
      /* istanbul ignore next */
      (cov_293a9yu732().b[14][0]++, quote.clientName) ||
      /* istanbul ignore next */
      (cov_293a9yu732().b[14][1]++, quote.businessName),
      clientEmail:
      /* istanbul ignore next */
      (cov_293a9yu732().b[15][0]++, quote.clientEmail) ||
      /* istanbul ignore next */
      (cov_293a9yu732().b[15][1]++, ''),
      clientAddress:
      /* istanbul ignore next */
      (cov_293a9yu732().b[16][0]++, quote.clientAddress) ||
      /* istanbul ignore next */
      (cov_293a9yu732().b[16][1]++, ''),
      invoiceType,
      milestoneNumber: milestone.milestoneNumber,
      totalMilestones: contract.paymentStructure.schedule.length,
      progressPercentage: milestone.percentage,
      items,
      subtotal,
      tax,
      totalAmount,
      amountPaid: 0,
      amountDue: totalAmount,
      status: options.autoGenerateInvoices ?
      /* istanbul ignore next */
      (cov_293a9yu732().b[17][0]++, "draft") :
      /* istanbul ignore next */
      (cov_293a9yu732().b[17][1]++, "draft"),
      issueDate: new Date(),
      dueDate: new Date(milestone.dueDate),
      originalQuoteData: {
        businessName: quote.businessName,
        industry: quote.industry,
        pageCount: quote.pageCount,
        features: quote.features,
        timeline: quote.timeline,
        budget:
        /* istanbul ignore next */
        (cov_293a9yu732().b[18][0]++, quote.budget) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[18][1]++, ''),
        finalPrice: quote.finalPrice,
        totalHours:
        /* istanbul ignore next */
        (cov_293a9yu732().b[19][0]++, quote.totalHours) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[19][1]++, 0),
        requirements: quote.requirements,
        additionalNotes: quote.additionalNotes
      },
      contractData: {
        projectTitle: contract.projectDetails.title,
        projectDescription: contract.projectDetails.description,
        serviceType: "Web Design & Development",
        timeline: contract.projectDetails.timeline,
        startDate: contract.projectDetails.startDate,
        deliveryDate: contract.projectDetails.endDate,
        milestones: contract.paymentStructure.schedule
      },
      paymentTerms: contract.paymentStructure.paymentTerms,
      notes: this.generateInvoiceNotes(quote, milestone, invoiceType),
      internalNotes: this.generateInternalNotes(quote, contract, milestone),
      currency: contract.paymentStructure.currency,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
      createdBy: options.userId,
      lastModifiedBy: options.userId
    });
    /* istanbul ignore next */
    cov_293a9yu732().s[47]++;
    return invoice;
  }
  /**
  * Generate detailed invoice items
  */
  static generateInvoiceItems(quote, contract, milestone, includeDetailed) {
    /* istanbul ignore next */
    cov_293a9yu732().f[9]++;
    const items =
    /* istanbul ignore next */
    (cov_293a9yu732().s[48]++, []);
    /* istanbul ignore next */
    cov_293a9yu732().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_293a9yu732().b[21][0]++, includeDetailed) &&
    /* istanbul ignore next */
    (cov_293a9yu732().b[21][1]++, quote.features.length > 1)) {
      /* istanbul ignore next */
      cov_293a9yu732().b[20][0]++;
      // Generate detailed items based on features
      const baseAmount =
      /* istanbul ignore next */
      (cov_293a9yu732().s[50]++, milestone.amount * 0.3) // 30% for base services
      ;
      const featureAmount =
      /* istanbul ignore next */
      (cov_293a9yu732().s[51]++, milestone.amount * 0.7) // 70% for features
      ;
      const amountPerFeature =
      /* istanbul ignore next */
      (cov_293a9yu732().s[52]++, featureAmount / quote.features.length);
      // Base service item
      /* istanbul ignore next */
      cov_293a9yu732().s[53]++;
      items.push({
        id: `item-base-${Date.now()}`,
        description: `${milestone.name} - Base Web Design Services`,
        quantity: 1,
        unitPrice: baseAmount,
        total: baseAmount,
        category: "design",
        hoursAllocated: (
        /* istanbul ignore next */
        (cov_293a9yu732().b[22][0]++, quote.totalHours) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[22][1]++, 0)) * 0.3 * (milestone.percentage / 100),
        milestonePhase: milestone.name,
        taxable: true,
        taxRate: 0
      });
      // Feature-specific items
      /* istanbul ignore next */
      cov_293a9yu732().s[54]++;
      quote.features.forEach((feature, index) => {
        /* istanbul ignore next */
        cov_293a9yu732().f[10]++;
        cov_293a9yu732().s[55]++;
        items.push({
          id: `item-feature-${Date.now()}-${index}`,
          description: `${milestone.name} - ${feature}`,
          quantity: 1,
          unitPrice: amountPerFeature,
          total: amountPerFeature,
          category: this.categorizeFeature(feature),
          hoursAllocated: (
          /* istanbul ignore next */
          (cov_293a9yu732().b[23][0]++, quote.totalHours) ||
          /* istanbul ignore next */
          (cov_293a9yu732().b[23][1]++, 0)) * 0.7 * (milestone.percentage / 100) / quote.features.length,
          relatedFeatures: [feature],
          milestonePhase: milestone.name,
          taxable: true,
          taxRate: 0
        });
      });
    } else {
      /* istanbul ignore next */
      cov_293a9yu732().b[20][1]++;
      cov_293a9yu732().s[56]++;
      // Single consolidated item
      items.push({
        id: `item-${Date.now()}`,
        description: `${milestone.name} - ${contract.projectDetails.title}`,
        quantity: 1,
        unitPrice: milestone.amount,
        total: milestone.amount,
        category: "custom",
        hoursAllocated: (
        /* istanbul ignore next */
        (cov_293a9yu732().b[24][0]++, quote.totalHours) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[24][1]++, 0)) * (milestone.percentage / 100),
        relatedFeatures: quote.features,
        milestonePhase: milestone.name,
        taxable: true,
        taxRate: 0
      });
    }
    /* istanbul ignore next */
    cov_293a9yu732().s[57]++;
    return items;
  }
  /**
  * Categorize feature for invoice items
  */
  static categorizeFeature(feature) {
    /* istanbul ignore next */
    cov_293a9yu732().f[11]++;
    const featureLower =
    /* istanbul ignore next */
    (cov_293a9yu732().s[58]++, feature.toLowerCase());
    /* istanbul ignore next */
    cov_293a9yu732().s[59]++;
    if (
    /* istanbul ignore next */
    (cov_293a9yu732().b[26][0]++, featureLower.includes("design")) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[26][1]++, featureLower.includes("ui")) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[26][2]++, featureLower.includes("ux"))) {
      /* istanbul ignore next */
      cov_293a9yu732().b[25][0]++;
      cov_293a9yu732().s[60]++;
      return "design";
    } else {
      /* istanbul ignore next */
      cov_293a9yu732().b[25][1]++;
      cov_293a9yu732().s[61]++;
      if (
      /* istanbul ignore next */
      (cov_293a9yu732().b[28][0]++, featureLower.includes("seo")) ||
      /* istanbul ignore next */
      (cov_293a9yu732().b[28][1]++, featureLower.includes("optimization"))) {
        /* istanbul ignore next */
        cov_293a9yu732().b[27][0]++;
        cov_293a9yu732().s[62]++;
        return "seo";
      } else {
        /* istanbul ignore next */
        cov_293a9yu732().b[27][1]++;
        cov_293a9yu732().s[63]++;
        if (
        /* istanbul ignore next */
        (cov_293a9yu732().b[30][0]++, featureLower.includes("content")) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[30][1]++, featureLower.includes("cms"))) {
          /* istanbul ignore next */
          cov_293a9yu732().b[29][0]++;
          cov_293a9yu732().s[64]++;
          return "content";
        } else {
          /* istanbul ignore next */
          cov_293a9yu732().b[29][1]++;
          cov_293a9yu732().s[65]++;
          if (
          /* istanbul ignore next */
          (cov_293a9yu732().b[32][0]++, featureLower.includes("maintenance")) ||
          /* istanbul ignore next */
          (cov_293a9yu732().b[32][1]++, featureLower.includes("support"))) {
            /* istanbul ignore next */
            cov_293a9yu732().b[31][0]++;
            cov_293a9yu732().s[66]++;
            return "maintenance";
          } else {
            /* istanbul ignore next */
            cov_293a9yu732().b[31][1]++;
            cov_293a9yu732().s[67]++;
            return "development";
          }
        }
      }
    }
  }
  /**
  * Generate payment schedule by type
  */
  static generatePaymentScheduleByType(quote, type) {
    /* istanbul ignore next */
    cov_293a9yu732().f[12]++;
    const baseAmount =
    /* istanbul ignore next */
    (cov_293a9yu732().s[68]++, quote.finalPrice);
    const schedule =
    /* istanbul ignore next */
    (cov_293a9yu732().s[69]++, []);
    const startDate =
    /* istanbul ignore next */
    (cov_293a9yu732().s[70]++, new Date());
    // Calculate timeline
    const timelineWeeks =
    /* istanbul ignore next */
    (cov_293a9yu732().s[71]++, quote.timeline.includes("week") ?
    /* istanbul ignore next */
    (cov_293a9yu732().b[33][0]++,
    /* istanbul ignore next */
    (cov_293a9yu732().b[34][0]++, Number.parseInt(quote.timeline.split("-")[0])) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[34][1]++, 4)) :
    /* istanbul ignore next */
    (cov_293a9yu732().b[33][1]++, quote.timeline.includes("month") ?
    /* istanbul ignore next */
    (cov_293a9yu732().b[35][0]++, (
    /* istanbul ignore next */
    (cov_293a9yu732().b[36][0]++, Number.parseInt(quote.timeline.split("-")[0])) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[36][1]++, 2)) * 4) :
    /* istanbul ignore next */
    (cov_293a9yu732().b[35][1]++, 8)));
    /* istanbul ignore next */
    cov_293a9yu732().s[72]++;
    switch (type) {
      case "single":
        /* istanbul ignore next */
        cov_293a9yu732().b[37][0]++;
        cov_293a9yu732().s[73]++;
        schedule.push({
          id: `milestone-${Date.now()}`,
          milestoneNumber: 1,
          name: "Full Payment",
          description: "Complete project payment",
          percentage: 100,
          amount: baseAmount,
          dueDate: new Date(startDate.getTime() + timelineWeeks * 7 * 24 * 60 * 60 * 1000).toISOString().split("T")[0],
          deliverables: ["Complete website", "All features implemented", "Testing completed", "Launch and training"],
          status: "pending"
        });
        /* istanbul ignore next */
        cov_293a9yu732().s[74]++;
        break;
      case "deposit_final":
        /* istanbul ignore next */
        cov_293a9yu732().b[37][1]++;
        cov_293a9yu732().s[75]++;
        schedule.push({
          id: `milestone-${Date.now()}-1`,
          milestoneNumber: 1,
          name: "Project Deposit",
          description: "Initial deposit to begin project",
          percentage: 50,
          amount: baseAmount * 0.5,
          dueDate: startDate.toISOString().split("T")[0],
          deliverables: ["Project kickoff", "Requirements gathering", "Initial designs"],
          status: "pending"
        }, {
          id: `milestone-${Date.now()}-2`,
          milestoneNumber: 2,
          name: "Final Payment",
          description: "Final payment upon project completion",
          percentage: 50,
          amount: baseAmount * 0.5,
          dueDate: new Date(startDate.getTime() + timelineWeeks * 7 * 24 * 60 * 60 * 1000).toISOString().split("T")[0],
          deliverables: ["Complete website", "Testing", "Launch", "Training"],
          status: "pending"
        });
        /* istanbul ignore next */
        cov_293a9yu732().s[76]++;
        break;
      case "milestone":
        /* istanbul ignore next */
        cov_293a9yu732().b[37][2]++;
        cov_293a9yu732().s[77]++;
        if (baseAmount < 5000) {
          /* istanbul ignore next */
          cov_293a9yu732().b[38][0]++;
          cov_293a9yu732().s[78]++;
          return this.generatePaymentScheduleByType(quote, "deposit_final");
        } else {
          /* istanbul ignore next */
          cov_293a9yu732().b[38][1]++;
          cov_293a9yu732().s[79]++;
          if (baseAmount < 15000) {
            /* istanbul ignore next */
            cov_293a9yu732().b[39][0]++;
            // 3-milestone schedule
            const milestones =
            /* istanbul ignore next */
            (cov_293a9yu732().s[80]++, [{
              name: "Project Start & Deposit",
              percentage: 40,
              deliverables: ["Project kickoff", "Requirements", "Wireframes"]
            }, {
              name: "Design Approval",
              percentage: 30,
              deliverables: ["Visual designs", "Content integration", "Development start"]
            }, {
              name: "Project Completion",
              percentage: 30,
              deliverables: ["Final development", "Testing", "Launch"]
            }]);
            /* istanbul ignore next */
            cov_293a9yu732().s[81]++;
            milestones.forEach((milestone, index) => {
              /* istanbul ignore next */
              cov_293a9yu732().f[13]++;
              const dueDate =
              /* istanbul ignore next */
              (cov_293a9yu732().s[82]++, new Date(startDate));
              /* istanbul ignore next */
              cov_293a9yu732().s[83]++;
              dueDate.setDate(startDate.getDate() + (index + 1) * Math.floor(timelineWeeks * 7 / milestones.length));
              /* istanbul ignore next */
              cov_293a9yu732().s[84]++;
              schedule.push({
                id: `milestone-${Date.now()}-${index + 1}`,
                milestoneNumber: index + 1,
                name: milestone.name,
                description: `${milestone.name} for ${quote.businessName}`,
                percentage: milestone.percentage,
                amount: baseAmount * (milestone.percentage / 100),
                dueDate: dueDate.toISOString().split("T")[0],
                deliverables: milestone.deliverables,
                status: "pending"
              });
            });
          } else {
            /* istanbul ignore next */
            cov_293a9yu732().b[39][1]++;
            // 4-milestone schedule for larger projects
            const milestones =
            /* istanbul ignore next */
            (cov_293a9yu732().s[85]++, [{
              name: "Project Start & Deposit",
              percentage: 30,
              deliverables: ["Project kickoff", "Requirements", "Wireframes"]
            }, {
              name: "Design Phase",
              percentage: 25,
              deliverables: ["Visual designs", "Design system", "Client approval"]
            }, {
              name: "Development Phase",
              percentage: 25,
              deliverables: ["Frontend development", "Backend integration", "Content management"]
            }, {
              name: "Launch & Completion",
              percentage: 20,
              deliverables: ["Testing", "Launch", "Training", "Documentation"]
            }]);
            /* istanbul ignore next */
            cov_293a9yu732().s[86]++;
            milestones.forEach((milestone, index) => {
              /* istanbul ignore next */
              cov_293a9yu732().f[14]++;
              const dueDate =
              /* istanbul ignore next */
              (cov_293a9yu732().s[87]++, new Date(startDate));
              /* istanbul ignore next */
              cov_293a9yu732().s[88]++;
              dueDate.setDate(startDate.getDate() + (index + 1) * Math.floor(timelineWeeks * 7 / milestones.length));
              /* istanbul ignore next */
              cov_293a9yu732().s[89]++;
              schedule.push({
                id: `milestone-${Date.now()}-${index + 1}`,
                milestoneNumber: index + 1,
                name: milestone.name,
                description: `${milestone.name} for ${quote.businessName}`,
                percentage: milestone.percentage,
                amount: baseAmount * (milestone.percentage / 100),
                dueDate: dueDate.toISOString().split("T")[0],
                deliverables: milestone.deliverables,
                status: "pending"
              });
            });
          }
        }
        /* istanbul ignore next */
        cov_293a9yu732().s[90]++;
        break;
      case "progress":
        /* istanbul ignore next */
        cov_293a9yu732().b[37][3]++;
        // Monthly progress payments
        const monthlyPayments =
        /* istanbul ignore next */
        (cov_293a9yu732().s[91]++, Math.ceil(timelineWeeks / 4));
        const percentagePerMonth =
        /* istanbul ignore next */
        (cov_293a9yu732().s[92]++, 100 / monthlyPayments);
        /* istanbul ignore next */
        cov_293a9yu732().s[93]++;
        for (let i =
        /* istanbul ignore next */
        (cov_293a9yu732().s[94]++, 0); i < monthlyPayments; i++) {
          const dueDate =
          /* istanbul ignore next */
          (cov_293a9yu732().s[95]++, new Date(startDate));
          /* istanbul ignore next */
          cov_293a9yu732().s[96]++;
          dueDate.setMonth(startDate.getMonth() + i + 1);
          /* istanbul ignore next */
          cov_293a9yu732().s[97]++;
          schedule.push({
            id: `milestone-${Date.now()}-${i + 1}`,
            milestoneNumber: i + 1,
            name: `Progress Payment ${i + 1}`,
            description: `Monthly progress payment ${i + 1} of ${monthlyPayments}`,
            percentage: percentagePerMonth,
            amount: baseAmount * (percentagePerMonth / 100),
            dueDate: dueDate.toISOString().split("T")[0],
            deliverables: [`Month ${i + 1} deliverables`, "Progress review", "Client approval"],
            status: "pending"
          });
        }
        /* istanbul ignore next */
        cov_293a9yu732().s[98]++;
        break;
    }
    /* istanbul ignore next */
    cov_293a9yu732().s[99]++;
    return schedule;
  }
  /**
  * Generate custom payment schedule
  */
  static generateCustomPaymentSchedule(quote, customMilestones) {
    /* istanbul ignore next */
    cov_293a9yu732().f[15]++;
    const baseAmount =
    /* istanbul ignore next */
    (cov_293a9yu732().s[100]++, quote.finalPrice);
    const startDate =
    /* istanbul ignore next */
    (cov_293a9yu732().s[101]++, new Date());
    /* istanbul ignore next */
    cov_293a9yu732().s[102]++;
    return customMilestones.map((milestone, index) => {
      /* istanbul ignore next */
      cov_293a9yu732().f[16]++;
      cov_293a9yu732().s[103]++;
      return {
        id:
        /* istanbul ignore next */
        (cov_293a9yu732().b[40][0]++, milestone.id) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[40][1]++, `milestone-${Date.now()}-${index}`),
        milestoneNumber:
        /* istanbul ignore next */
        (cov_293a9yu732().b[41][0]++, milestone.milestoneNumber) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[41][1]++, index + 1),
        name:
        /* istanbul ignore next */
        (cov_293a9yu732().b[42][0]++, milestone.name) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[42][1]++, `Milestone ${index + 1}`),
        description:
        /* istanbul ignore next */
        (cov_293a9yu732().b[43][0]++, milestone.description) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[43][1]++, `Custom milestone ${index + 1}`),
        percentage:
        /* istanbul ignore next */
        (cov_293a9yu732().b[44][0]++, milestone.percentage) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[44][1]++, 0),
        amount:
        /* istanbul ignore next */
        (cov_293a9yu732().b[45][0]++, milestone.amount) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[45][1]++, baseAmount * ((
        /* istanbul ignore next */
        (cov_293a9yu732().b[46][0]++, milestone.percentage) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[46][1]++, 0)) / 100)),
        dueDate:
        /* istanbul ignore next */
        (cov_293a9yu732().b[47][0]++, milestone.dueDate) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[47][1]++, new Date(startDate.getTime() + (index + 1) * 30 * 24 * 60 * 60 * 1000).toISOString().split("T")[0]),
        deliverables:
        /* istanbul ignore next */
        (cov_293a9yu732().b[48][0]++, milestone.deliverables) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[48][1]++, [`Milestone ${index + 1} deliverables`]),
        dependencies: milestone.dependencies,
        status: "pending"
      };
    });
  }
  /**
  * Generate invoice notes
  */
  static generateInvoiceNotes(quote, milestone, invoiceType) {
    /* istanbul ignore next */
    cov_293a9yu732().f[17]++;
    let notes =
    /* istanbul ignore next */
    (cov_293a9yu732().s[104]++, `${milestone.name} for ${quote.businessName}\n\n`);
    /* istanbul ignore next */
    cov_293a9yu732().s[105]++;
    notes += `Project Details:\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[106]++;
    notes += `• ${quote.pageCount} pages\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[107]++;
    notes += `• Industry: ${quote.industry}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[108]++;
    notes += `• Timeline: ${quote.timeline}\n\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[109]++;
    notes += `Milestone Deliverables:\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[110]++;
    milestone.deliverables.forEach(deliverable => {
      /* istanbul ignore next */
      cov_293a9yu732().f[18]++;
      cov_293a9yu732().s[111]++;
      notes += `• ${deliverable}\n`;
    });
    /* istanbul ignore next */
    cov_293a9yu732().s[112]++;
    if (invoiceType === "deposit") {
      /* istanbul ignore next */
      cov_293a9yu732().b[49][0]++;
      cov_293a9yu732().s[113]++;
      notes += `\nThis is the initial deposit to begin your project. Work will commence upon receipt of payment.`;
    } else {
      /* istanbul ignore next */
      cov_293a9yu732().b[49][1]++;
      cov_293a9yu732().s[114]++;
      if (invoiceType === "final") {
        /* istanbul ignore next */
        cov_293a9yu732().b[50][0]++;
        cov_293a9yu732().s[115]++;
        notes += `\nThis is the final payment for your project. All deliverables will be completed upon receipt.`;
      } else
      /* istanbul ignore next */
      {
        cov_293a9yu732().b[50][1]++;
      }
    }
    /* istanbul ignore next */
    cov_293a9yu732().s[116]++;
    return notes;
  }
  /**
  * Generate internal notes
  */
  static generateInternalNotes(quote, contract, milestone) {
    /* istanbul ignore next */
    cov_293a9yu732().f[19]++;
    let notes =
    /* istanbul ignore next */
    (cov_293a9yu732().s[117]++, `Auto-generated from Quote ${quote.id} via Contract ${contract.contractNumber}\n\n`);
    /* istanbul ignore next */
    cov_293a9yu732().s[118]++;
    notes += `Original Quote Data:\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[119]++;
    notes += `• Budget: ${quote.budget}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[120]++;
    notes += `• Total Hours: ${quote.totalHours}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[121]++;
    notes += `• Features: ${quote.features.join(", ")}\n\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[122]++;
    notes += `Milestone: ${milestone.milestoneNumber} of ${contract.paymentStructure.schedule.length}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[123]++;
    notes += `Percentage: ${milestone.percentage}%\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[124]++;
    if (
    /* istanbul ignore next */
    (cov_293a9yu732().b[52][0]++, milestone.dependencies) &&
    /* istanbul ignore next */
    (cov_293a9yu732().b[52][1]++, milestone.dependencies.length > 0)) {
      /* istanbul ignore next */
      cov_293a9yu732().b[51][0]++;
      cov_293a9yu732().s[125]++;
      notes += `Dependencies: ${milestone.dependencies.join(", ")}\n`;
    } else
    /* istanbul ignore next */
    {
      cov_293a9yu732().b[51][1]++;
    }
    cov_293a9yu732().s[126]++;
    return notes;
  }
  /**
  * Validate conversion options
  */
  static validateConversionOptions(options) {
    /* istanbul ignore next */
    cov_293a9yu732().f[20]++;
    const errors =
    /* istanbul ignore next */
    (cov_293a9yu732().s[127]++, []);
    /* istanbul ignore next */
    cov_293a9yu732().s[128]++;
    if (
    /* istanbul ignore next */
    (cov_293a9yu732().b[54][0]++, options.customMilestones) &&
    /* istanbul ignore next */
    (cov_293a9yu732().b[54][1]++, options.customMilestones.length > 0)) {
      /* istanbul ignore next */
      cov_293a9yu732().b[53][0]++;
      const totalPercentage =
      /* istanbul ignore next */
      (cov_293a9yu732().s[129]++, options.customMilestones.reduce((sum, milestone) => {
        /* istanbul ignore next */
        cov_293a9yu732().f[21]++;
        cov_293a9yu732().s[130]++;
        return sum + (
        /* istanbul ignore next */
        (cov_293a9yu732().b[55][0]++, milestone.percentage) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[55][1]++, 0));
      }, 0));
      /* istanbul ignore next */
      cov_293a9yu732().s[131]++;
      if (Math.abs(totalPercentage - 100) > 0.01) {
        /* istanbul ignore next */
        cov_293a9yu732().b[56][0]++;
        cov_293a9yu732().s[132]++;
        errors.push("Custom milestones must total 100%");
      } else
      /* istanbul ignore next */
      {
        cov_293a9yu732().b[56][1]++;
      }
      cov_293a9yu732().s[133]++;
      options.customMilestones.forEach((milestone, index) => {
        /* istanbul ignore next */
        cov_293a9yu732().f[22]++;
        cov_293a9yu732().s[134]++;
        if (!milestone.name) {
          /* istanbul ignore next */
          cov_293a9yu732().b[57][0]++;
          cov_293a9yu732().s[135]++;
          errors.push(`Milestone ${index + 1} name is required`);
        } else
        /* istanbul ignore next */
        {
          cov_293a9yu732().b[57][1]++;
        }
        cov_293a9yu732().s[136]++;
        if (
        /* istanbul ignore next */
        (cov_293a9yu732().b[59][0]++, !milestone.percentage) ||
        /* istanbul ignore next */
        (cov_293a9yu732().b[59][1]++, milestone.percentage <= 0)) {
          /* istanbul ignore next */
          cov_293a9yu732().b[58][0]++;
          cov_293a9yu732().s[137]++;
          errors.push(`Milestone ${index + 1} percentage must be greater than 0`);
        } else
        /* istanbul ignore next */
        {
          cov_293a9yu732().b[58][1]++;
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_293a9yu732().b[53][1]++;
    }
    cov_293a9yu732().s[138]++;
    if (
    /* istanbul ignore next */
    (cov_293a9yu732().b[61][0]++, options.taxRate) && (
    /* istanbul ignore next */
    (cov_293a9yu732().b[61][1]++, options.taxRate < 0) ||
    /* istanbul ignore next */
    (cov_293a9yu732().b[61][2]++, options.taxRate > 1))) {
      /* istanbul ignore next */
      cov_293a9yu732().b[60][0]++;
      cov_293a9yu732().s[139]++;
      errors.push("Tax rate must be between 0 and 1");
    } else
    /* istanbul ignore next */
    {
      cov_293a9yu732().b[60][1]++;
    }
    cov_293a9yu732().s[140]++;
    return {
      isValid: errors.length === 0,
      errors
    };
  }
  /**
  * Generate conversion summary
  */
  static generateConversionSummary(result) {
    /* istanbul ignore next */
    cov_293a9yu732().f[23]++;
    const {
      contract,
      invoices,
      summary
    } =
    /* istanbul ignore next */
    (cov_293a9yu732().s[141]++, result);
    let summaryText =
    /* istanbul ignore next */
    (cov_293a9yu732().s[142]++, `Conversion Summary\n`);
    /* istanbul ignore next */
    cov_293a9yu732().s[143]++;
    summaryText += `================\n\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[144]++;
    summaryText += `Contract: ${contract.contractNumber}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[145]++;
    summaryText += `Client: ${contract.clientName}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[146]++;
    summaryText += `Project: ${contract.projectDetails.title}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[147]++;
    summaryText += `Total Amount: ${contract.paymentStructure.currency} ${summary.totalAmount.toLocaleString()}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[148]++;
    summaryText += `Payment Structure: ${contract.paymentStructure.type}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[149]++;
    summaryText += `Number of Invoices: ${summary.numberOfInvoices}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[150]++;
    summaryText += `Estimated Completion: ${new Date(summary.estimatedCompletionDate).toLocaleDateString()}\n\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[151]++;
    summaryText += `Invoice Schedule:\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[152]++;
    invoices.forEach((invoice, index) => {
      /* istanbul ignore next */
      cov_293a9yu732().f[24]++;
      cov_293a9yu732().s[153]++;
      summaryText += `${index + 1}. ${invoice.invoiceNumber} - ${invoice.invoiceType} - ${invoice.currency} ${invoice.totalAmount.toLocaleString()} (Due: ${new Date(invoice.dueDate).toLocaleDateString()})\n`;
    });
    /* istanbul ignore next */
    cov_293a9yu732().s[154]++;
    summaryText += `\nQuote Data Preserved: ${summary.preservedQuoteData ?
    /* istanbul ignore next */
    (cov_293a9yu732().b[62][0]++, "Yes") :
    /* istanbul ignore next */
    (cov_293a9yu732().b[62][1]++, "No")}\n`;
    /* istanbul ignore next */
    cov_293a9yu732().s[155]++;
    return summaryText;
  }
}
const _default =
/* istanbul ignore next */
(cov_293a9yu732().s[156]++, EnhancedQuoteConverter);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,