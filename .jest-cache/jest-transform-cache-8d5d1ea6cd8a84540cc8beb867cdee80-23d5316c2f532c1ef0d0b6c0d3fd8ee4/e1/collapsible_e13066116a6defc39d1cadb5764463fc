06a183432adcd78f4bd40ff83a3f54d7
"use client";
"use strict";

/* istanbul ignore next */
function cov_28377prm12() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\collapsible.tsx";
  var hash = "2f1a710fdc800459d9c85fa1af32c64cd9e5e378";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\collapsible.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 34
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 71
        }
      },
      "9": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 25,
          column: 105
        }
      },
      "10": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "12": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "13": {
        start: {
          line: 33,
          column: 39
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "14": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "15": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 20
        }
      },
      "17": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "18": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "20": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "21": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "22": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "23": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "24": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "25": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "26": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 56,
          column: 88
        }
      },
      "27": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "28": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "29": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 95
        }
      },
      "30": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "31": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "32": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "33": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "34": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "35": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "36": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "37": {
        start: {
          line: 73,
          column: 20
        },
        end: {
          line: 73,
          column: 42
        }
      },
      "38": {
        start: {
          line: 74,
          column: 27
        },
        end: {
          line: 74,
          column: 63
        }
      },
      "39": {
        start: {
          line: 75,
          column: 41
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "40": {
        start: {
          line: 75,
          column: 113
        },
        end: {
          line: 79,
          column: 6
        }
      },
      "41": {
        start: {
          line: 80,
          column: 0
        },
        end: {
          line: 80,
          column: 82
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "5": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 33
          }
        },
        loc: {
          start: {
            line: 32,
            column: 47
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 40
          }
        },
        loc: {
          start: {
            line: 36,
            column: 61
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "7": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 34
          }
        },
        loc: {
          start: {
            line: 40,
            column: 53
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 67
          },
          end: {
            line: 75,
            column: 68
          }
        },
        loc: {
          start: {
            line: 75,
            column: 113
          },
          end: {
            line: 79,
            column: 6
          }
        },
        line: 75
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 37,
            column: 45
          }
        }, {
          start: {
            line: 37,
            column: 48
          },
          end: {
            line: 37,
            column: 65
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 27
          }
        }, {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 47
          }
        }, {
          start: {
            line: 44,
            column: 51
          },
          end: {
            line: 44,
            column: 76
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 31
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 53
          }
        }, {
          start: {
            line: 56,
            column: 57
          },
          end: {
            line: 56,
            column: 88
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 29
          }
        }, {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 58,
            column: 79
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 47
          },
          end: {
            line: 59,
            column: 88
          }
        }, {
          start: {
            line: 59,
            column: 91
          },
          end: {
            line: 59,
            column: 95
          }
        }],
        line: 59
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 64,
            column: 13
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 20
          }
        }, {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 60,
            column: 33
          }
        }, {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 45
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\collapsible.tsx"],
      sourcesContent: ["\"use client\"\n\nimport React from \"react\"\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\nimport { cn } from \"@/lib/utils\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = React.forwardRef<\n  React.ElementRef<typeof CollapsiblePrimitive.CollapsibleContent>,\n  React.ComponentPropsWithoutRef<typeof CollapsiblePrimitive.CollapsibleContent>\n>(({ className, ...props }, ref) => (\n  <CollapsiblePrimitive.CollapsibleContent\n    ref={ref}\n    className={cn(\n      \"overflow-hidden data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down\",\n      className,\n    )}\n    {...props}\n  />\n))\n\nCollapsibleContent.displayName = CollapsiblePrimitive.CollapsibleContent.displayName\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n"],
      names: ["Collapsible", "CollapsibleContent", "CollapsibleTrigger", "CollapsiblePrimitive", "Root", "React", "forwardRef", "className", "props", "ref", "cn", "displayName"],
      mappings: "AAAA;;;;;;;;;;;;QA0BSA;eAAAA;;QAAiCC;eAAAA;;QAApBC;eAAAA;;;;8DAxBJ;0EACoB;uBACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMF,cAAcG,kBAAqBC,IAAI;AAE7C,MAAMF,qBAAqBC,kBAAqBD,kBAAkB;AAElE,MAAMD,mCAAqBI,cAAK,CAACC,UAAU,CAGzC,CAAC,EAAEC,SAAS,EAAE,GAAGC,OAAO,EAAEC,oBAC1B,qBAACN,kBAAqBF,kBAAkB;QACtCQ,KAAKA;QACLF,WAAWG,IAAAA,SAAE,EACX,yGACAH;QAED,GAAGC,KAAK;;AAIbP,mBAAmBU,WAAW,GAAGR,kBAAqBF,kBAAkB,CAACU,WAAW"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2f1a710fdc800459d9c85fa1af32c64cd9e5e378"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_28377prm12 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_28377prm12();
cov_28377prm12().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_28377prm12().f[0]++;
  cov_28377prm12().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_28377prm12().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_28377prm12().s[3]++;
_export(exports, {
  get Collapsible() {
    /* istanbul ignore next */
    cov_28377prm12().f[1]++;
    cov_28377prm12().s[4]++;
    return Collapsible;
  },
  get CollapsibleContent() {
    /* istanbul ignore next */
    cov_28377prm12().f[2]++;
    cov_28377prm12().s[5]++;
    return CollapsibleContent;
  },
  get CollapsibleTrigger() {
    /* istanbul ignore next */
    cov_28377prm12().f[3]++;
    cov_28377prm12().s[6]++;
    return CollapsibleTrigger;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_28377prm12().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_28377prm12().s[8]++, _interop_require_default(require("react")));
const _reactcollapsible =
/* istanbul ignore next */
(/*#__PURE__*/cov_28377prm12().s[9]++, _interop_require_wildcard(require("@radix-ui/react-collapsible")));
const _utils =
/* istanbul ignore next */
(cov_28377prm12().s[10]++, require("../../lib/utils"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_28377prm12().f[4]++;
  cov_28377prm12().s[11]++;
  return /* istanbul ignore next */(cov_28377prm12().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_28377prm12().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_28377prm12().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_28377prm12().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_28377prm12().f[5]++;
  cov_28377prm12().s[12]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_28377prm12().b[2][0]++;
    cov_28377prm12().s[13]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_28377prm12().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_28377prm12().s[14]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_28377prm12().s[15]++, new WeakMap());
  /* istanbul ignore next */
  cov_28377prm12().s[16]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_28377prm12().f[6]++;
    cov_28377prm12().s[17]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_28377prm12().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_28377prm12().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_28377prm12().f[7]++;
  cov_28377prm12().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_28377prm12().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_28377prm12().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_28377prm12().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_28377prm12().b[4][0]++;
    cov_28377prm12().s[19]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_28377prm12().b[4][1]++;
  }
  cov_28377prm12().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_28377prm12().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_28377prm12().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_28377prm12().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_28377prm12().b[6][0]++;
    cov_28377prm12().s[21]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_28377prm12().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_28377prm12().s[22]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_28377prm12().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_28377prm12().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_28377prm12().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_28377prm12().b[8][0]++;
    cov_28377prm12().s[24]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_28377prm12().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_28377prm12().s[25]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_28377prm12().s[26]++,
  /* istanbul ignore next */
  (cov_28377prm12().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_28377prm12().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_28377prm12().s[27]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_28377prm12().s[28]++;
    if (
    /* istanbul ignore next */
    (cov_28377prm12().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_28377prm12().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_28377prm12().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_28377prm12().s[29]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_28377prm12().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_28377prm12().b[13][1]++, null));
      /* istanbul ignore next */
      cov_28377prm12().s[30]++;
      if (
      /* istanbul ignore next */
      (cov_28377prm12().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_28377prm12().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_28377prm12().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_28377prm12().b[14][0]++;
        cov_28377prm12().s[31]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_28377prm12().b[14][1]++;
        cov_28377prm12().s[32]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_28377prm12().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_28377prm12().s[33]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_28377prm12().s[34]++;
  if (cache) {
    /* istanbul ignore next */
    cov_28377prm12().b[16][0]++;
    cov_28377prm12().s[35]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_28377prm12().b[16][1]++;
  }
  cov_28377prm12().s[36]++;
  return newObj;
}
const Collapsible =
/* istanbul ignore next */
(cov_28377prm12().s[37]++, _reactcollapsible.Root);
const CollapsibleTrigger =
/* istanbul ignore next */
(cov_28377prm12().s[38]++, _reactcollapsible.CollapsibleTrigger);
const CollapsibleContent =
/* istanbul ignore next */
(/*#__PURE__*/cov_28377prm12().s[39]++, _react.default.forwardRef(({
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_28377prm12().f[8]++;
  cov_28377prm12().s[40]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_reactcollapsible.CollapsibleContent, {
    ref: ref,
    className: (0, _utils.cn)("overflow-hidden data-[state=closed]:animate-collapsible-up data-[state=open]:animate-collapsible-down", className),
    ...props
  });
}));
/* istanbul ignore next */
cov_28377prm12().s[41]++;
CollapsibleContent.displayName = _reactcollapsible.CollapsibleContent.displayName;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMjgzNzdwcm0xMiIsImFjdHVhbENvdmVyYWdlIiwicyIsIkNvbGxhcHNpYmxlIiwiZiIsIkNvbGxhcHNpYmxlQ29udGVudCIsIkNvbGxhcHNpYmxlVHJpZ2dlciIsIl9yZWFjdGNvbGxhcHNpYmxlIiwiUm9vdCIsIl9yZWFjdCIsImRlZmF1bHQiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJyZWYiLCJfanN4cnVudGltZSIsImpzeCIsIl91dGlscyIsImNuIiwiZGlzcGxheU5hbWUiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGNoYXNlXFxEb3dubG9hZHNcXGNybSAoMzIpXFxzcmNcXGNvbXBvbmVudHNcXHVpXFxjb2xsYXBzaWJsZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCJcblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiXG5pbXBvcnQgKiBhcyBDb2xsYXBzaWJsZVByaW1pdGl2ZSBmcm9tIFwiQHJhZGl4LXVpL3JlYWN0LWNvbGxhcHNpYmxlXCJcbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcblxuY29uc3QgQ29sbGFwc2libGUgPSBDb2xsYXBzaWJsZVByaW1pdGl2ZS5Sb290XG5cbmNvbnN0IENvbGxhcHNpYmxlVHJpZ2dlciA9IENvbGxhcHNpYmxlUHJpbWl0aXZlLkNvbGxhcHNpYmxlVHJpZ2dlclxuXG5jb25zdCBDb2xsYXBzaWJsZUNvbnRlbnQgPSBSZWFjdC5mb3J3YXJkUmVmPFxuICBSZWFjdC5FbGVtZW50UmVmPHR5cGVvZiBDb2xsYXBzaWJsZVByaW1pdGl2ZS5Db2xsYXBzaWJsZUNvbnRlbnQ+LFxuICBSZWFjdC5Db21wb25lbnRQcm9wc1dpdGhvdXRSZWY8dHlwZW9mIENvbGxhcHNpYmxlUHJpbWl0aXZlLkNvbGxhcHNpYmxlQ29udGVudD5cbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcbiAgPENvbGxhcHNpYmxlUHJpbWl0aXZlLkNvbGxhcHNpYmxlQ29udGVudFxuICAgIHJlZj17cmVmfVxuICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICBcIm92ZXJmbG93LWhpZGRlbiBkYXRhLVtzdGF0ZT1jbG9zZWRdOmFuaW1hdGUtY29sbGFwc2libGUtdXAgZGF0YS1bc3RhdGU9b3Blbl06YW5pbWF0ZS1jb2xsYXBzaWJsZS1kb3duXCIsXG4gICAgICBjbGFzc05hbWUsXG4gICAgKX1cbiAgICB7Li4ucHJvcHN9XG4gIC8+XG4pKVxuXG5Db2xsYXBzaWJsZUNvbnRlbnQuZGlzcGxheU5hbWUgPSBDb2xsYXBzaWJsZVByaW1pdGl2ZS5Db2xsYXBzaWJsZUNvbnRlbnQuZGlzcGxheU5hbWVcblxuZXhwb3J0IHsgQ29sbGFwc2libGUsIENvbGxhcHNpYmxlVHJpZ2dlciwgQ29sbGFwc2libGVDb250ZW50IH1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBMEIwQztJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7TUFBakNDLFlBQUE7SUFBQTtJQUFBSCxjQUFBLEdBQUFJLENBQUE7SUFBQUosY0FBQSxHQUFBRSxDQUFBO1dBQUFDLFdBQUE7O01BQWlDRSxtQkFBQTtJQUFBO0lBQUFMLGNBQUEsR0FBQUksQ0FBQTtJQUFBSixjQUFBLEdBQUFFLENBQUE7V0FBQUcsa0JBQUE7O01BQXBCQyxtQkFBQTtJQUFBO0lBQUFOLGNBQUEsR0FBQUksQ0FBQTtJQUFBSixjQUFBLEdBQUFFLENBQUE7V0FBQUksa0JBQUE7Ozs7Ozs7O3dFQXhCSjs7O3lFQUNvQjs7O21DQUNuQjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRW5CLE1BQU1ILFdBQUE7QUFBQTtBQUFBLENBQUFILGNBQUEsR0FBQUUsQ0FBQSxRQUFjSyxpQkFBQSxDQUFxQkMsSUFBSTtBQUU3QyxNQUFNRixrQkFBQTtBQUFBO0FBQUEsQ0FBQU4sY0FBQSxHQUFBRSxDQUFBLFFBQXFCSyxpQkFBQSxDQUFxQkQsa0JBQWtCO0FBRWxFLE1BQU1ELGtCQUFBO0FBQUE7QUFBQSxjQUFBTCxjQUFBLEdBQUFFLENBQUEsUUFBcUJPLE1BQUEsQ0FBQUMsT0FBSyxDQUFDQyxVQUFVLENBR3pDLENBQUM7RUFBRUMsU0FBUztFQUFFLEdBQUdDO0FBQUEsQ0FBTyxFQUFFQyxHQUFBLEtBQzFCO0VBQUE7RUFBQWQsY0FBQSxHQUFBSSxDQUFBO0VBQUFKLGNBQUEsR0FBQUUsQ0FBQTtFQUFBLE9BRDBCLGFBQzFCLElBQUFhLFdBQUEsQ0FBQUMsR0FBQSxFQUFDVCxpQkFBQSxDQUFxQkYsa0JBQWtCO0lBQ3RDUyxHQUFBLEVBQUtBLEdBQUE7SUFDTEYsU0FBQSxFQUFXLElBQUFLLE1BQUEsQ0FBQUMsRUFBRSxFQUNYLHlHQUNBTixTQUFBO0lBRUQsR0FBR0M7Ozs7O0FBSVJSLGtCQUFBLENBQW1CYyxXQUFXLEdBQUdaLGlCQUFBLENBQXFCRixrQkFBa0IsQ0FBQ2MsV0FBVyIsImlnbm9yZUxpc3QiOltdfQ==