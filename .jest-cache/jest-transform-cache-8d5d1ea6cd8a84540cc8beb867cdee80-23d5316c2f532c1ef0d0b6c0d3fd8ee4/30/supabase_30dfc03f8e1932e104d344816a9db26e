15a33ec8c1200ee6a5b98a5a1e698102
"use strict";

/* istanbul ignore next */
function cov_2ykb265bb() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\supabase.ts";
  var hash = "578ad62ac9c87559d262272bf2784e6e3c362f98";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\supabase.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 24
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 52
        }
      },
      "4": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 94
        }
      },
      "5": {
        start: {
          line: 14,
          column: 24
        },
        end: {
          line: 14,
          column: 84
        }
      },
      "6": {
        start: {
          line: 16,
          column: 0
        },
        end: {
          line: 18,
          column: 1
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 66
        }
      },
      "8": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 21,
          column: 1
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 20,
          column: 142
        }
      },
      "10": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "11": {
        start: {
          line: 24,
          column: 0
        },
        end: {
          line: 117,
          column: 1
        }
      },
      "12": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "13": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 79
        }
      },
      "14": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "15": {
        start: {
          line: 30,
          column: 33
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "16": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "17": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "18": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 40
        }
      },
      "19": {
        start: {
          line: 34,
          column: 24
        },
        end: {
          line: 34,
          column: 40
        }
      },
      "20": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 36
        }
      },
      "21": {
        start: {
          line: 36,
          column: 21
        },
        end: {
          line: 36,
          column: 37
        }
      },
      "22": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "23": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 37
        }
      },
      "24": {
        start: {
          line: 39,
          column: 20
        },
        end: {
          line: 39,
          column: 36
        }
      },
      "25": {
        start: {
          line: 40,
          column: 21
        },
        end: {
          line: 40,
          column: 37
        }
      },
      "26": {
        start: {
          line: 41,
          column: 22
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "27": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 39
        }
      },
      "28": {
        start: {
          line: 43,
          column: 20
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "29": {
        start: {
          line: 44,
          column: 20
        },
        end: {
          line: 44,
          column: 36
        }
      },
      "30": {
        start: {
          line: 45,
          column: 26
        },
        end: {
          line: 45,
          column: 42
        }
      },
      "31": {
        start: {
          line: 46,
          column: 29
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "32": {
        start: {
          line: 47,
          column: 25
        },
        end: {
          line: 47,
          column: 41
        }
      },
      "33": {
        start: {
          line: 48,
          column: 26
        },
        end: {
          line: 48,
          column: 42
        }
      },
      "34": {
        start: {
          line: 49,
          column: 25
        },
        end: {
          line: 49,
          column: 41
        }
      },
      "35": {
        start: {
          line: 50,
          column: 26
        },
        end: {
          line: 50,
          column: 42
        }
      },
      "36": {
        start: {
          line: 51,
          column: 31
        },
        end: {
          line: 51,
          column: 47
        }
      },
      "37": {
        start: {
          line: 52,
          column: 26
        },
        end: {
          line: 52,
          column: 42
        }
      },
      "38": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "39": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "40": {
        start: {
          line: 55,
          column: 21
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "41": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 36
        }
      },
      "42": {
        start: {
          line: 57,
          column: 24
        },
        end: {
          line: 57,
          column: 40
        }
      },
      "43": {
        start: {
          line: 58,
          column: 23
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "44": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "45": {
        start: {
          line: 60,
          column: 23
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "46": {
        start: {
          line: 61,
          column: 29
        },
        end: {
          line: 61,
          column: 45
        }
      },
      "47": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "48": {
        start: {
          line: 66,
          column: 29
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "49": {
        start: {
          line: 70,
          column: 21
        },
        end: {
          line: 73,
          column: 18
        }
      },
      "50": {
        start: {
          line: 74,
          column: 25
        },
        end: {
          line: 77,
          column: 18
        }
      },
      "51": {
        start: {
          line: 78,
          column: 25
        },
        end: {
          line: 81,
          column: 18
        }
      },
      "52": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 85,
          column: 18
        }
      },
      "53": {
        start: {
          line: 86,
          column: 25
        },
        end: {
          line: 86,
          column: 41
        }
      },
      "54": {
        start: {
          line: 87,
          column: 29
        },
        end: {
          line: 90,
          column: 18
        }
      },
      "55": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 112,
          column: 10
        }
      },
      "56": {
        start: {
          line: 93,
          column: 22
        },
        end: {
          line: 93,
          column: 38
        }
      },
      "57": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 100,
          column: 22
        }
      },
      "58": {
        start: {
          line: 101,
          column: 40
        },
        end: {
          line: 107,
          column: 22
        }
      },
      "59": {
        start: {
          line: 108,
          column: 29
        },
        end: {
          line: 110,
          column: 22
        }
      },
      "60": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 66
        }
      },
      "61": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 20
          },
          end: {
            line: 31,
            column: 21
          }
        },
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 31,
            column: 40
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 32,
            column: 21
          }
        },
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 40
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 33,
            column: 20
          },
          end: {
            line: 33,
            column: 21
          }
        },
        loc: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 40
          }
        },
        line: 33
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 34,
            column: 20
          },
          end: {
            line: 34,
            column: 21
          }
        },
        loc: {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 40
          }
        },
        line: 34
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 16
          },
          end: {
            line: 35,
            column: 17
          }
        },
        loc: {
          start: {
            line: 35,
            column: 20
          },
          end: {
            line: 35,
            column: 36
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 18
          }
        },
        loc: {
          start: {
            line: 36,
            column: 21
          },
          end: {
            line: 36,
            column: 37
          }
        },
        line: 36
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 17
          }
        },
        loc: {
          start: {
            line: 37,
            column: 20
          },
          end: {
            line: 37,
            column: 36
          }
        },
        line: 37
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 37
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 17
          }
        },
        loc: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 39,
            column: 36
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 17
          },
          end: {
            line: 40,
            column: 18
          }
        },
        loc: {
          start: {
            line: 40,
            column: 21
          },
          end: {
            line: 40,
            column: 37
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 41,
            column: 19
          }
        },
        loc: {
          start: {
            line: 41,
            column: 22
          },
          end: {
            line: 41,
            column: 38
          }
        },
        line: 41
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 42,
            column: 19
          },
          end: {
            line: 42,
            column: 20
          }
        },
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 39
          }
        },
        line: 42
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 43,
            column: 17
          }
        },
        loc: {
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 43,
            column: 36
          }
        },
        line: 43
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 17
          }
        },
        loc: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 36
          }
        },
        line: 44
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 45,
            column: 23
          }
        },
        loc: {
          start: {
            line: 45,
            column: 26
          },
          end: {
            line: 45,
            column: 42
          }
        },
        line: 45
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 26
          }
        },
        loc: {
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 45
          }
        },
        line: 46
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 22
          }
        },
        loc: {
          start: {
            line: 47,
            column: 25
          },
          end: {
            line: 47,
            column: 41
          }
        },
        line: 47
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 23
          }
        },
        loc: {
          start: {
            line: 48,
            column: 26
          },
          end: {
            line: 48,
            column: 42
          }
        },
        line: 48
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 49,
            column: 21
          },
          end: {
            line: 49,
            column: 22
          }
        },
        loc: {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 41
          }
        },
        line: 49
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 50,
            column: 22
          },
          end: {
            line: 50,
            column: 23
          }
        },
        loc: {
          start: {
            line: 50,
            column: 26
          },
          end: {
            line: 50,
            column: 42
          }
        },
        line: 50
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 51,
            column: 27
          },
          end: {
            line: 51,
            column: 28
          }
        },
        loc: {
          start: {
            line: 51,
            column: 31
          },
          end: {
            line: 51,
            column: 47
          }
        },
        line: 51
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 52,
            column: 23
          }
        },
        loc: {
          start: {
            line: 52,
            column: 26
          },
          end: {
            line: 52,
            column: 42
          }
        },
        line: 52
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 25
          }
        },
        loc: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 44
          }
        },
        line: 53
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 20
          }
        },
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 54,
            column: 39
          }
        },
        line: 54
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 55,
            column: 17
          },
          end: {
            line: 55,
            column: 18
          }
        },
        loc: {
          start: {
            line: 55,
            column: 21
          },
          end: {
            line: 55,
            column: 37
          }
        },
        line: 55
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 17
          }
        },
        loc: {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 36
          }
        },
        line: 56
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 57,
            column: 20
          },
          end: {
            line: 57,
            column: 21
          }
        },
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 40
          }
        },
        line: 57
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 58,
            column: 20
          }
        },
        loc: {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 39
          }
        },
        line: 58
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 59,
            column: 20
          }
        },
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 39
          }
        },
        line: 59
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 60,
            column: 19
          },
          end: {
            line: 60,
            column: 20
          }
        },
        loc: {
          start: {
            line: 60,
            column: 23
          },
          end: {
            line: 60,
            column: 39
          }
        },
        line: 60
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 61,
            column: 25
          },
          end: {
            line: 61,
            column: 26
          }
        },
        loc: {
          start: {
            line: 61,
            column: 29
          },
          end: {
            line: 61,
            column: 45
          }
        },
        line: 61
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 62,
            column: 20
          },
          end: {
            line: 62,
            column: 21
          }
        },
        loc: {
          start: {
            line: 62,
            column: 24
          },
          end: {
            line: 65,
            column: 18
          }
        },
        line: 62
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 66,
            column: 25
          },
          end: {
            line: 66,
            column: 26
          }
        },
        loc: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 69,
            column: 18
          }
        },
        line: 66
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 70,
            column: 18
          }
        },
        loc: {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 73,
            column: 18
          }
        },
        line: 70
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 74,
            column: 21
          },
          end: {
            line: 74,
            column: 22
          }
        },
        loc: {
          start: {
            line: 74,
            column: 25
          },
          end: {
            line: 77,
            column: 18
          }
        },
        line: 74
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 78,
            column: 21
          },
          end: {
            line: 78,
            column: 22
          }
        },
        loc: {
          start: {
            line: 78,
            column: 25
          },
          end: {
            line: 81,
            column: 18
          }
        },
        line: 78
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 82,
            column: 22
          },
          end: {
            line: 82,
            column: 23
          }
        },
        loc: {
          start: {
            line: 82,
            column: 26
          },
          end: {
            line: 85,
            column: 18
          }
        },
        line: 82
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 86,
            column: 21
          },
          end: {
            line: 86,
            column: 22
          }
        },
        loc: {
          start: {
            line: 86,
            column: 25
          },
          end: {
            line: 86,
            column: 41
          }
        },
        line: 86
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 87,
            column: 18
          },
          end: {
            line: 87,
            column: 19
          }
        },
        loc: {
          start: {
            line: 87,
            column: 29
          },
          end: {
            line: 90,
            column: 18
          }
        },
        line: 87
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 93,
            column: 18
          },
          end: {
            line: 93,
            column: 19
          }
        },
        loc: {
          start: {
            line: 93,
            column: 22
          },
          end: {
            line: 93,
            column: 38
          }
        },
        line: 93
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 26
          }
        },
        loc: {
          start: {
            line: 95,
            column: 29
          },
          end: {
            line: 100,
            column: 22
          }
        },
        line: 95
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 101,
            column: 36
          },
          end: {
            line: 101,
            column: 37
          }
        },
        loc: {
          start: {
            line: 101,
            column: 40
          },
          end: {
            line: 107,
            column: 22
          }
        },
        line: 101
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 26
          }
        },
        loc: {
          start: {
            line: 108,
            column: 29
          },
          end: {
            line: 110,
            column: 22
          }
        },
        line: 108
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 13,
            column: 56
          }
        }, {
          start: {
            line: 13,
            column: 60
          },
          end: {
            line: 13,
            column: 94
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 24
          },
          end: {
            line: 14,
            column: 65
          }
        }, {
          start: {
            line: 14,
            column: 69
          },
          end: {
            line: 14,
            column: 84
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 18,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 0
          },
          end: {
            line: 18,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "3": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 16
          }
        }, {
          start: {
            line: 16,
            column: 20
          },
          end: {
            line: 16,
            column: 70
          }
        }],
        line: 16
      },
      "4": {
        loc: {
          start: {
            line: 19,
            column: 0
          },
          end: {
            line: 21,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 0
          },
          end: {
            line: 21,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "5": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 20
          }
        }, {
          start: {
            line: 19,
            column: 24
          },
          end: {
            line: 19,
            column: 59
          }
        }],
        line: 19
      },
      "6": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 113,
            column: 5
          }
        }, {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 113,
            column: 5
          }
        }],
        line: 25
      },
      "7": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 58
          }
        }, {
          start: {
            line: 25,
            column: 62
          },
          end: {
            line: 25,
            column: 97
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\supabase.ts"],
      sourcesContent: ["import { createClient, SupabaseClient } from \"@supabase/supabase-js\"\n\n// Environment variables with fallbacks\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || \"https://your-project.supabase.co\"\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || \"your-anon-key\"\n\n// Validate environment variables\nif (!supabaseUrl || supabaseUrl === \"https://your-project.supabase.co\") {\n  console.warn(\"Supabase URL not configured. Using mock data.\")\n}\n\nif (!supabaseAnonKey || supabaseAnonKey === \"your-anon-key\") {\n  console.warn(\n    \"Supabase anonymous key not configured. Using mock data. Please set NEXT_PUBLIC_SUPABASE_ANON_KEY in your .env.local file.\",\n  )\n}\n\n// Database types for TypeScript\nexport interface Database {\n  public: {\n    Tables: {\n      clients: {\n        Row: {\n          id: string\n          name: string\n          email: string\n          phone: string\n          company: string\n          status: string\n          value: number\n          stage: string\n          source: string\n          created_at: string\n          updated_at: string\n          notes: string\n          projects: string[]\n          custom_fields: Record<string, unknown>\n        }\n        Insert: {\n          id?: string\n          name: string\n          email: string\n          phone?: string\n          company?: string\n          status?: string\n          value?: number\n          stage?: string\n          source?: string\n          created_at?: string\n          updated_at?: string\n          notes?: string\n          projects?: string[]\n          custom_fields?: Record<string, unknown>\n        }\n        Update: {\n          id?: string\n          name?: string\n          email?: string\n          phone?: string\n          company?: string\n          status?: string\n          value?: number\n          stage?: string\n          source?: string\n          created_at?: string\n          updated_at?: string\n          notes?: string\n          projects?: string[]\n          custom_fields?: Record<string, unknown>\n        }\n      }\n      tasks: {\n        Row: {\n          id: string\n          title: string\n          description: string\n          status: string\n          priority: string\n          assigned_to: string\n          client_id: string\n          due_date: string\n          created_at: string\n          updated_at: string\n          tags: string[]\n          time_estimate: number\n          time_spent: number\n        }\n        Insert: {\n          id?: string\n          title: string\n          description?: string\n          status?: string\n          priority?: string\n          assigned_to?: string\n          client_id?: string\n          due_date?: string\n          created_at?: string\n          updated_at?: string\n          tags?: string[]\n          time_estimate?: number\n          time_spent?: number\n        }\n        Update: {\n          id?: string\n          title?: string\n          description?: string\n          status?: string\n          priority?: string\n          assigned_to?: string\n          client_id?: string\n          due_date?: string\n          created_at?: string\n          updated_at?: string\n          tags?: string[]\n          time_estimate?: number\n          time_spent?: number\n        }\n      }\n      events: {\n        Row: {\n          id: string\n          title: string\n          description: string\n          start_date: string\n          end_date: string\n          type: string\n          client_id: string\n          created_at: string\n          updated_at: string\n          location: string\n          attendees: string[]\n        }\n        Insert: {\n          id?: string\n          title: string\n          description?: string\n          start_date: string\n          end_date: string\n          type?: string\n          client_id?: string\n          created_at?: string\n          updated_at?: string\n          location?: string\n          attendees?: string[]\n        }\n        Update: {\n          id?: string\n          title?: string\n          description?: string\n          start_date?: string\n          end_date?: string\n          type?: string\n          client_id?: string\n          created_at?: string\n          updated_at?: string\n          location?: string\n          attendees?: string[]\n        }\n      }\n      users: {\n        Row: {\n          id: string\n          name: string\n          email: string\n          role: string\n          status: string\n          last_login: string\n          created_at: string\n          updated_at: string\n          avatar_url: string\n          preferences: Record<string, unknown>\n        }\n        Insert: {\n          id?: string\n          name: string\n          email: string\n          role?: string\n          status?: string\n          last_login?: string\n          created_at?: string\n          updated_at?: string\n          avatar_url?: string\n          preferences?: Record<string, unknown>\n        }\n        Update: {\n          id?: string\n          name?: string\n          email?: string\n          role?: string\n          status?: string\n          last_login?: string\n          created_at?: string\n          updated_at?: string\n          avatar_url?: string\n          preferences?: Record<string, unknown>\n        }\n      }\n      custom_fields: {\n        Row: {\n          id: string\n          name: string\n          type: string\n          required: boolean\n          options: string[]\n          entity_type: string\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          name: string\n          type: string\n          required?: boolean\n          options?: string[]\n          entity_type: string\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          id?: string\n          name?: string\n          type?: string\n          required?: boolean\n          options?: string[]\n          entity_type?: string\n          created_at?: string\n          updated_at?: string\n        }\n      }\n      api_keys: {\n        Row: {\n          id: string\n          name: string\n          key_hash: string\n          permissions: string[]\n          user_id: string\n          created_at: string\n          last_used: string\n          is_active: boolean\n        }\n        Insert: {\n          id?: string\n          name: string\n          key_hash: string\n          permissions: string[]\n          user_id: string\n          created_at?: string\n          last_used?: string\n          is_active?: boolean\n        }\n        Update: {\n          id?: string\n          name?: string\n          key_hash?: string\n          permissions?: string[]\n          user_id?: string\n          created_at?: string\n          last_used?: string\n          is_active?: boolean\n        }\n      }\n      sales_stages: {\n        Row: {\n          id: string\n          name: string\n          order: number\n          color: string\n          description: string\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          name: string\n          order: number\n          color?: string\n          description?: string\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          id?: string\n          name?: string\n          order?: number\n          color?: string\n          description?: string\n          created_at?: string\n          updated_at?: string\n        }\n      }\n      emails: {\n        Row: {\n          id: string\n          subject: string\n          body: string\n          body_type: string\n          from_email: string\n          to_email: string[]\n          cc_email: string[]\n          bcc_email: string[]\n          status: string\n          priority: string\n          thread_id: string\n          folder: string\n          is_read: boolean\n          is_starred: boolean\n          is_important: boolean\n          client_id: string\n          project_id: string\n          task_id: string\n          user_id: string\n          metadata: Record<string, any>\n          created_at: string\n          updated_at: string\n          sent_at: string\n          attachments: { id: string; filename: string; contentType: string; size: number; data?: string; url?: string; cid?: string }[]\n        }\n        Insert: {\n          id?: string\n          subject: string\n          body: string\n          body_type?: string\n          from_email: string\n          to_email: string[]\n          cc_email?: string[]\n          bcc_email?: string[]\n          status?: string\n          priority?: string\n          thread_id?: string\n          folder?: string\n          is_read?: boolean\n          is_starred?: boolean\n          is_important?: boolean\n          client_id?: string\n          project_id?: string\n          task_id?: string\n          user_id?: string\n          metadata?: Record<string, any>\n          created_at?: string\n          updated_at?: string\n          sent_at?: string\n          attachments?: { id: string; filename: string; contentType: string; size: number; data?: string; url?: string; cid?: string }[]\n        }\n        Update: {\n          id?: string\n          subject?: string\n          body?: string\n          body_type?: string\n          from_email?: string\n          to_email?: string[]\n          cc_email?: string[]\n          bcc_email?: string[]\n          status?: string\n          priority?: string\n          thread_id?: string\n          folder?: string\n          is_read?: boolean\n          is_starred?: boolean\n          is_important?: boolean\n          client_id?: string\n          project_id?: string\n          task_id?: string\n          user_id?: string\n          metadata?: Record<string, any>\n          created_at?: string\n          updated_at?: string\n          sent_at?: string\n          attachments?: { id: string; filename: string; contentType: string; size: number; data?: string; url?: string; cid?: string }[]\n        }\n      }\n      workflows: {\n        Row: {\n          id: string\n          name: string\n          description: string\n          is_active: boolean\n          created_at: string\n          updated_at: string\n          user_id: string\n        }\n        Insert: {\n          id?: string\n          name: string\n          description?: string\n          is_active?: boolean\n          created_at?: string\n          updated_at?: string\n          user_id: string\n        }\n        Update: {\n          id?: string\n          name?: string\n          description?: string\n          is_active?: boolean\n          created_at?: string\n          updated_at?: string\n          user_id?: string\n        }\n      }\n      workflow_triggers: {\n        Row: {\n          id: string\n          workflow_id: string\n          type: string\n          config: Record<string, unknown>\n        }\n        Insert: {\n          id?: string\n          workflow_id: string\n          type: string\n          config?: Record<string, unknown>\n        }\n        Update: {\n          id?: string\n          workflow_id?: string\n          type?: string\n          config?: Record<string, unknown>\n        }\n      }\n      workflow_actions: {\n        Row: {\n          id: string\n          workflow_id: string\n          type: string\n          config: Record<string, unknown>\n          order: number\n        }\n        Insert: {\n          id?: string\n          workflow_id: string\n          type: string\n          config?: Record<string, unknown>\n          order: number\n        }\n        Update: {\n          id?: string\n          workflow_id?: string\n          type?: string\n          config?: Record<string, unknown>\n          order?: number\n        }\n      }\n      workflow_templates: {\n        Row: {\n          id: string\n          name: string\n          description: string\n          category: string\n          config: Record<string, unknown>\n        }\n        Insert: {\n          id?: string\n          name: string\n          description?: string\n          category?: string\n          config?: Record<string, unknown>\n        }\n        Update: {\n          id?: string\n          name?: string\n          description?: string\n          category?: string\n          config?: Record<string, unknown>\n        }\n      }\n      workflow_executions: {\n        Row: {\n          id: string\n          workflow_id: string\n          status: string\n          started_at: string\n          completed_at: string\n          error: string\n          logs: { timestamp: string; level: string; message: string }[]\n        }\n        Insert: {\n          id?: string\n          workflow_id: string\n          status: string\n          started_at?: string\n          completed_at?: string\n          error?: string\n          logs?: { timestamp: string; level: string; message: string }[]\n        }\n        Update: {\n          id?: string\n          workflow_id?: string\n          status?: string\n          started_at?: string\n          completed_at?: string\n          error?: string\n          logs?: { timestamp: string; level: string; message: string }[]\n        }\n      }\n      email_quotas: {\n        Row: {\n          id: string\n          user_id: string\n          daily_limit: number\n          monthly_limit: number\n          daily_sent: number\n          monthly_sent: number\n          last_reset_date: string\n          attachment_size_limit: number\n          storage_used: number\n          storage_limit: number\n          created_at: string\n          updated_at: string\n        }\n        Insert: {\n          id?: string\n          user_id: string\n          daily_limit?: number\n          monthly_limit?: number\n          daily_sent?: number\n          monthly_sent?: number\n          last_reset_date?: string\n          attachment_size_limit?: number\n          storage_used?: number\n          storage_limit?: number\n          created_at?: string\n          updated_at?: string\n        }\n        Update: {\n          id?: string\n          user_id?: string\n          daily_limit?: number\n          monthly_limit?: number\n          daily_sent?: number\n          monthly_sent?: number\n          last_reset_date?: string\n          attachment_size_limit?: number\n          storage_used?: number\n          storage_limit?: number\n          created_at?: string\n          updated_at?: string\n        }\n      }\n    }\n    Views: {\n      [_ in never]: never\n    }\n    Functions: {\n      [_ in never]: never\n    }\n    Enums: {\n      [_ in never]: never\n    }\n  }\n}\n\n// Create Supabase client with error handling\nlet supabase: SupabaseClient<Database> | null = null\n\ntry {\n  if (supabaseUrl !== \"https://your-project.supabase.co\" && supabaseAnonKey !== \"your-anon-key\") {\n    supabase = createClient<Database>(supabaseUrl, supabaseAnonKey)\n  } else {\n    console.warn(\"Using mock Supabase client for development\")\n    // Create a mock client for development\n    const mockQueryBuilder = {\n      select: () => mockQueryBuilder,\n      insert: () => mockQueryBuilder,\n      update: () => mockQueryBuilder,\n      delete: () => mockQueryBuilder,\n      eq: () => mockQueryBuilder,\n      neq: () => mockQueryBuilder,\n      gt: () => mockQueryBuilder,\n      gte: () => mockQueryBuilder,\n      lt: () => mockQueryBuilder,\n      lte: () => mockQueryBuilder,\n      like: () => mockQueryBuilder,\n      ilike: () => mockQueryBuilder,\n      is: () => mockQueryBuilder,\n      in: () => mockQueryBuilder,\n      contains: () => mockQueryBuilder,\n      containedBy: () => mockQueryBuilder,\n      rangeGt: () => mockQueryBuilder,\n      rangeGte: () => mockQueryBuilder,\n      rangeLt: () => mockQueryBuilder,\n      rangeLte: () => mockQueryBuilder,\n      rangeAdjacent: () => mockQueryBuilder,\n      overlaps: () => mockQueryBuilder,\n      textSearch: () => mockQueryBuilder,\n      match: () => mockQueryBuilder,\n      not: () => mockQueryBuilder,\n      or: () => mockQueryBuilder,\n      filter: () => mockQueryBuilder,\n      order: () => mockQueryBuilder,\n      limit: () => mockQueryBuilder,\n      range: () => mockQueryBuilder,\n      abortSignal: () => mockQueryBuilder,\n      single: () => Promise.resolve({ data: null, error: null }),\n      maybeSingle: () => Promise.resolve({ data: null, error: null }),\n      csv: () => Promise.resolve({ data: '', error: null }),\n      geojson: () => Promise.resolve({ data: null, error: null }),\n      explain: () => Promise.resolve({ data: '', error: null }),\n      rollback: () => Promise.resolve({ data: null, error: null }),\n      returns: () => mockQueryBuilder,\n      then: (resolve: any) => resolve({ data: [], error: null })\n    }\n    \n    supabase = {\n      from: () => mockQueryBuilder,\n      auth: {\n        getUser: () => Promise.resolve({ data: { user: null }, error: null }),\n        signInWithPassword: () => Promise.resolve({ data: { user: null, session: null }, error: null }),\n        signOut: () => Promise.resolve({ error: null }),\n      },\n    } as any as SupabaseClient<Database>\n  }\n} catch (error) {\n  console.error(\"Failed to initialize Supabase client:\", error)\n  supabase = null\n}\n\nexport { supabase }\n\nexport type Tables<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Row\"]\nexport type Inserts<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Insert\"]\nexport type Updates<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Update\"]\n"],
      names: ["supabase", "supabaseUrl", "process", "env", "NEXT_PUBLIC_SUPABASE_URL", "supabaseAnonKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "console", "warn", "createClient", "mockQueryBuilder", "select", "insert", "update", "delete", "eq", "neq", "gt", "gte", "lt", "lte", "like", "ilike", "is", "in", "contains", "containedBy", "rangeGt", "rangeGte", "rangeLt", "rangeLte", "rangeAdjacent", "overlaps", "textSearch", "match", "not", "or", "filter", "order", "limit", "range", "abortSignal", "single", "Promise", "resolve", "data", "error", "maybeSingle", "csv", "geojson", "explain", "rollback", "returns", "then", "from", "auth", "getUser", "user", "signInWithPassword", "session", "signOut"],
      mappings: ";;;;+BAwmBSA;;;eAAAA;;;4BAxmBoC;AAE7C,uCAAuC;AACvC,MAAMC,cAAcC,QAAQC,GAAG,CAACC,wBAAwB,IAAI;AAC5D,MAAMC,kBAAkBH,QAAQC,GAAG,CAACG,6BAA6B,IAAI;AAErE,iCAAiC;AACjC,IAAI,CAACL,eAAeA,gBAAgB,oCAAoC;IACtEM,QAAQC,IAAI,CAAC;AACf;AAEA,IAAI,CAACH,mBAAmBA,oBAAoB,iBAAiB;IAC3DE,QAAQC,IAAI,CACV;AAEJ;AAwhBA,6CAA6C;AAC7C,IAAIR,WAA4C;AAEhD,IAAI;IACF,IAAIC,gBAAgB,sCAAsCI,oBAAoB,iBAAiB;QAC7FL,WAAWS,IAAAA,wBAAY,EAAWR,aAAaI;IACjD,OAAO;QACLE,QAAQC,IAAI,CAAC;QACb,uCAAuC;QACvC,MAAME,mBAAmB;YACvBC,QAAQ,IAAMD;YACdE,QAAQ,IAAMF;YACdG,QAAQ,IAAMH;YACdI,QAAQ,IAAMJ;YACdK,IAAI,IAAML;YACVM,KAAK,IAAMN;YACXO,IAAI,IAAMP;YACVQ,KAAK,IAAMR;YACXS,IAAI,IAAMT;YACVU,KAAK,IAAMV;YACXW,MAAM,IAAMX;YACZY,OAAO,IAAMZ;YACba,IAAI,IAAMb;YACVc,IAAI,IAAMd;YACVe,UAAU,IAAMf;YAChBgB,aAAa,IAAMhB;YACnBiB,SAAS,IAAMjB;YACfkB,UAAU,IAAMlB;YAChBmB,SAAS,IAAMnB;YACfoB,UAAU,IAAMpB;YAChBqB,eAAe,IAAMrB;YACrBsB,UAAU,IAAMtB;YAChBuB,YAAY,IAAMvB;YAClBwB,OAAO,IAAMxB;YACbyB,KAAK,IAAMzB;YACX0B,IAAI,IAAM1B;YACV2B,QAAQ,IAAM3B;YACd4B,OAAO,IAAM5B;YACb6B,OAAO,IAAM7B;YACb8B,OAAO,IAAM9B;YACb+B,aAAa,IAAM/B;YACnBgC,QAAQ,IAAMC,QAAQC,OAAO,CAAC;oBAAEC,MAAM;oBAAMC,OAAO;gBAAK;YACxDC,aAAa,IAAMJ,QAAQC,OAAO,CAAC;oBAAEC,MAAM;oBAAMC,OAAO;gBAAK;YAC7DE,KAAK,IAAML,QAAQC,OAAO,CAAC;oBAAEC,MAAM;oBAAIC,OAAO;gBAAK;YACnDG,SAAS,IAAMN,QAAQC,OAAO,CAAC;oBAAEC,MAAM;oBAAMC,OAAO;gBAAK;YACzDI,SAAS,IAAMP,QAAQC,OAAO,CAAC;oBAAEC,MAAM;oBAAIC,OAAO;gBAAK;YACvDK,UAAU,IAAMR,QAAQC,OAAO,CAAC;oBAAEC,MAAM;oBAAMC,OAAO;gBAAK;YAC1DM,SAAS,IAAM1C;YACf2C,MAAM,CAACT,UAAiBA,QAAQ;oBAAEC,MAAM,EAAE;oBAAEC,OAAO;gBAAK;QAC1D;QAEA9C,WAAW;YACTsD,MAAM,IAAM5C;YACZ6C,MAAM;gBACJC,SAAS,IAAMb,QAAQC,OAAO,CAAC;wBAAEC,MAAM;4BAAEY,MAAM;wBAAK;wBAAGX,OAAO;oBAAK;gBACnEY,oBAAoB,IAAMf,QAAQC,OAAO,CAAC;wBAAEC,MAAM;4BAAEY,MAAM;4BAAME,SAAS;wBAAK;wBAAGb,OAAO;oBAAK;gBAC7Fc,SAAS,IAAMjB,QAAQC,OAAO,CAAC;wBAAEE,OAAO;oBAAK;YAC/C;QACF;IACF;AACF,EAAE,OAAOA,OAAO;IACdvC,QAAQuC,KAAK,CAAC,yCAAyCA;IACvD9C,WAAW;AACb"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "578ad62ac9c87559d262272bf2784e6e3c362f98"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2ykb265bb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2ykb265bb();
cov_2ykb265bb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2ykb265bb().s[1]++;
Object.defineProperty(exports, "supabase", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2ykb265bb().f[0]++;
    cov_2ykb265bb().s[2]++;
    return supabase;
  }
});
const _supabasejs =
/* istanbul ignore next */
(cov_2ykb265bb().s[3]++, require("@supabase/supabase-js"));
// Environment variables with fallbacks
const supabaseUrl =
/* istanbul ignore next */
(cov_2ykb265bb().s[4]++,
/* istanbul ignore next */
(cov_2ykb265bb().b[0][0]++, process.env.NEXT_PUBLIC_SUPABASE_URL) ||
/* istanbul ignore next */
(cov_2ykb265bb().b[0][1]++, "https://your-project.supabase.co"));
const supabaseAnonKey =
/* istanbul ignore next */
(cov_2ykb265bb().s[5]++,
/* istanbul ignore next */
(cov_2ykb265bb().b[1][0]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) ||
/* istanbul ignore next */
(cov_2ykb265bb().b[1][1]++, "your-anon-key"));
// Validate environment variables
/* istanbul ignore next */
cov_2ykb265bb().s[6]++;
if (
/* istanbul ignore next */
(cov_2ykb265bb().b[3][0]++, !supabaseUrl) ||
/* istanbul ignore next */
(cov_2ykb265bb().b[3][1]++, supabaseUrl === "https://your-project.supabase.co")) {
  /* istanbul ignore next */
  cov_2ykb265bb().b[2][0]++;
  cov_2ykb265bb().s[7]++;
  console.warn("Supabase URL not configured. Using mock data.");
} else
/* istanbul ignore next */
{
  cov_2ykb265bb().b[2][1]++;
}
cov_2ykb265bb().s[8]++;
if (
/* istanbul ignore next */
(cov_2ykb265bb().b[5][0]++, !supabaseAnonKey) ||
/* istanbul ignore next */
(cov_2ykb265bb().b[5][1]++, supabaseAnonKey === "your-anon-key")) {
  /* istanbul ignore next */
  cov_2ykb265bb().b[4][0]++;
  cov_2ykb265bb().s[9]++;
  console.warn("Supabase anonymous key not configured. Using mock data. Please set NEXT_PUBLIC_SUPABASE_ANON_KEY in your .env.local file.");
} else
/* istanbul ignore next */
{
  cov_2ykb265bb().b[4][1]++;
}
// Create Supabase client with error handling
let supabase =
/* istanbul ignore next */
(cov_2ykb265bb().s[10]++, null);
/* istanbul ignore next */
cov_2ykb265bb().s[11]++;
try {
  /* istanbul ignore next */
  cov_2ykb265bb().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2ykb265bb().b[7][0]++, supabaseUrl !== "https://your-project.supabase.co") &&
  /* istanbul ignore next */
  (cov_2ykb265bb().b[7][1]++, supabaseAnonKey !== "your-anon-key")) {
    /* istanbul ignore next */
    cov_2ykb265bb().b[6][0]++;
    cov_2ykb265bb().s[13]++;
    supabase = (0, _supabasejs.createClient)(supabaseUrl, supabaseAnonKey);
  } else {
    /* istanbul ignore next */
    cov_2ykb265bb().b[6][1]++;
    cov_2ykb265bb().s[14]++;
    console.warn("Using mock Supabase client for development");
    // Create a mock client for development
    const mockQueryBuilder =
    /* istanbul ignore next */
    (cov_2ykb265bb().s[15]++, {
      select: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[1]++;
        cov_2ykb265bb().s[16]++;
        return mockQueryBuilder;
      },
      insert: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[2]++;
        cov_2ykb265bb().s[17]++;
        return mockQueryBuilder;
      },
      update: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[3]++;
        cov_2ykb265bb().s[18]++;
        return mockQueryBuilder;
      },
      delete: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[4]++;
        cov_2ykb265bb().s[19]++;
        return mockQueryBuilder;
      },
      eq: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[5]++;
        cov_2ykb265bb().s[20]++;
        return mockQueryBuilder;
      },
      neq: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[6]++;
        cov_2ykb265bb().s[21]++;
        return mockQueryBuilder;
      },
      gt: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[7]++;
        cov_2ykb265bb().s[22]++;
        return mockQueryBuilder;
      },
      gte: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[8]++;
        cov_2ykb265bb().s[23]++;
        return mockQueryBuilder;
      },
      lt: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[9]++;
        cov_2ykb265bb().s[24]++;
        return mockQueryBuilder;
      },
      lte: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[10]++;
        cov_2ykb265bb().s[25]++;
        return mockQueryBuilder;
      },
      like: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[11]++;
        cov_2ykb265bb().s[26]++;
        return mockQueryBuilder;
      },
      ilike: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[12]++;
        cov_2ykb265bb().s[27]++;
        return mockQueryBuilder;
      },
      is: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[13]++;
        cov_2ykb265bb().s[28]++;
        return mockQueryBuilder;
      },
      in: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[14]++;
        cov_2ykb265bb().s[29]++;
        return mockQueryBuilder;
      },
      contains: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[15]++;
        cov_2ykb265bb().s[30]++;
        return mockQueryBuilder;
      },
      containedBy: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[16]++;
        cov_2ykb265bb().s[31]++;
        return mockQueryBuilder;
      },
      rangeGt: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[17]++;
        cov_2ykb265bb().s[32]++;
        return mockQueryBuilder;
      },
      rangeGte: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[18]++;
        cov_2ykb265bb().s[33]++;
        return mockQueryBuilder;
      },
      rangeLt: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[19]++;
        cov_2ykb265bb().s[34]++;
        return mockQueryBuilder;
      },
      rangeLte: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[20]++;
        cov_2ykb265bb().s[35]++;
        return mockQueryBuilder;
      },
      rangeAdjacent: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[21]++;
        cov_2ykb265bb().s[36]++;
        return mockQueryBuilder;
      },
      overlaps: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[22]++;
        cov_2ykb265bb().s[37]++;
        return mockQueryBuilder;
      },
      textSearch: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[23]++;
        cov_2ykb265bb().s[38]++;
        return mockQueryBuilder;
      },
      match: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[24]++;
        cov_2ykb265bb().s[39]++;
        return mockQueryBuilder;
      },
      not: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[25]++;
        cov_2ykb265bb().s[40]++;
        return mockQueryBuilder;
      },
      or: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[26]++;
        cov_2ykb265bb().s[41]++;
        return mockQueryBuilder;
      },
      filter: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[27]++;
        cov_2ykb265bb().s[42]++;
        return mockQueryBuilder;
      },
      order: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[28]++;
        cov_2ykb265bb().s[43]++;
        return mockQueryBuilder;
      },
      limit: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[29]++;
        cov_2ykb265bb().s[44]++;
        return mockQueryBuilder;
      },
      range: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[30]++;
        cov_2ykb265bb().s[45]++;
        return mockQueryBuilder;
      },
      abortSignal: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[31]++;
        cov_2ykb265bb().s[46]++;
        return mockQueryBuilder;
      },
      single: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[32]++;
        cov_2ykb265bb().s[47]++;
        return Promise.resolve({
          data: null,
          error: null
        });
      },
      maybeSingle: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[33]++;
        cov_2ykb265bb().s[48]++;
        return Promise.resolve({
          data: null,
          error: null
        });
      },
      csv: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[34]++;
        cov_2ykb265bb().s[49]++;
        return Promise.resolve({
          data: '',
          error: null
        });
      },
      geojson: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[35]++;
        cov_2ykb265bb().s[50]++;
        return Promise.resolve({
          data: null,
          error: null
        });
      },
      explain: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[36]++;
        cov_2ykb265bb().s[51]++;
        return Promise.resolve({
          data: '',
          error: null
        });
      },
      rollback: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[37]++;
        cov_2ykb265bb().s[52]++;
        return Promise.resolve({
          data: null,
          error: null
        });
      },
      returns: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[38]++;
        cov_2ykb265bb().s[53]++;
        return mockQueryBuilder;
      },
      then: resolve => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[39]++;
        cov_2ykb265bb().s[54]++;
        return resolve({
          data: [],
          error: null
        });
      }
    });
    /* istanbul ignore next */
    cov_2ykb265bb().s[55]++;
    supabase = {
      from: () => {
        /* istanbul ignore next */
        cov_2ykb265bb().f[40]++;
        cov_2ykb265bb().s[56]++;
        return mockQueryBuilder;
      },
      auth: {
        getUser: () => {
          /* istanbul ignore next */
          cov_2ykb265bb().f[41]++;
          cov_2ykb265bb().s[57]++;
          return Promise.resolve({
            data: {
              user: null
            },
            error: null
          });
        },
        signInWithPassword: () => {
          /* istanbul ignore next */
          cov_2ykb265bb().f[42]++;
          cov_2ykb265bb().s[58]++;
          return Promise.resolve({
            data: {
              user: null,
              session: null
            },
            error: null
          });
        },
        signOut: () => {
          /* istanbul ignore next */
          cov_2ykb265bb().f[43]++;
          cov_2ykb265bb().s[59]++;
          return Promise.resolve({
            error: null
          });
        }
      }
    };
  }
} catch (error) {
  /* istanbul ignore next */
  cov_2ykb265bb().s[60]++;
  console.error("Failed to initialize Supabase client:", error);
  /* istanbul ignore next */
  cov_2ykb265bb().s[61]++;
  supabase = null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,