d72ff7144e0b959cebbb193765e6a705
"use client";
"use strict";

/* istanbul ignore next */
function cov_22qb74himp() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\email\\EmailList.tsx";
  var hash = "db839fe9dfef5b796448c2253b2049be94d8cfa1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\email\\EmailList.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 174,
          column: 1
        }
      },
      "8": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 173,
          column: 7
        }
      },
      "9": {
        start: {
          line: 63,
          column: 47
        },
        end: {
          line: 63,
          column: 77
        }
      },
      "10": {
        start: {
          line: 89,
          column: 64
        },
        end: {
          line: 153,
          column: 36
        }
      },
      "11": {
        start: {
          line: 90,
          column: 41
        },
        end: {
          line: 90,
          column: 60
        }
      },
      "12": {
        start: {
          line: 101,
          column: 62
        },
        end: {
          line: 101,
          column: 86
        }
      },
      "13": {
        start: {
          line: 102,
          column: 62
        },
        end: {
          line: 102,
          column: 81
        }
      },
      "14": {
        start: {
          line: 106,
          column: 62
        },
        end: {
          line: 106,
          column: 87
        }
      },
      "15": {
        start: {
          line: 140,
          column: 100
        },
        end: {
          line: 147,
          column: 63
        }
      },
      "16": {
        start: {
          line: 146,
          column: 83
        },
        end: {
          line: 146,
          column: 99
        }
      },
      "17": {
        start: {
          line: 175,
          column: 17
        },
        end: {
          line: 175,
          column: 26
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 19
          }
        },
        loc: {
          start: {
            line: 20,
            column: 202
          },
          end: {
            line: 174,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 63,
            column: 42
          },
          end: {
            line: 63,
            column: 43
          }
        },
        loc: {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 63,
            column: 77
          }
        },
        line: 63
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 42
          }
        },
        loc: {
          start: {
            line: 89,
            column: 64
          },
          end: {
            line: 153,
            column: 36
          }
        },
        line: 89
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 37
          },
          end: {
            line: 90,
            column: 38
          }
        },
        loc: {
          start: {
            line: 90,
            column: 41
          },
          end: {
            line: 90,
            column: 60
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 101,
            column: 58
          },
          end: {
            line: 101,
            column: 59
          }
        },
        loc: {
          start: {
            line: 101,
            column: 62
          },
          end: {
            line: 101,
            column: 86
          }
        },
        line: 101
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 57
          },
          end: {
            line: 102,
            column: 58
          }
        },
        loc: {
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 102,
            column: 81
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 106,
            column: 57
          },
          end: {
            line: 106,
            column: 58
          }
        },
        loc: {
          start: {
            line: 106,
            column: 62
          },
          end: {
            line: 106,
            column: 87
          }
        },
        line: 106
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 140,
            column: 75
          },
          end: {
            line: 140,
            column: 76
          }
        },
        loc: {
          start: {
            line: 140,
            column: 100
          },
          end: {
            line: 147,
            column: 63
          }
        },
        line: 140
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 146,
            column: 78
          },
          end: {
            line: 146,
            column: 79
          }
        },
        loc: {
          start: {
            line: 146,
            column: 83
          },
          end: {
            line: 146,
            column: 99
          }
        },
        line: 146
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 41
          },
          end: {
            line: 32,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 41
          },
          end: {
            line: 32,
            column: 80
          }
        }, {
          start: {
            line: 32,
            column: 84
          },
          end: {
            line: 32,
            column: 101
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 170,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 57
          },
          end: {
            line: 88,
            column: 18
          }
        }, {
          start: {
            line: 88,
            column: 21
          },
          end: {
            line: 170,
            column: 18
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 88,
            column: 21
          },
          end: {
            line: 170,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 154,
            column: 18
          }
        }, {
          start: {
            line: 154,
            column: 35
          },
          end: {
            line: 170,
            column: 18
          }
        }],
        line: 88
      },
      "5": {
        loc: {
          start: {
            line: 91,
            column: 99
          },
          end: {
            line: 91,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 113
          },
          end: {
            line: 91,
            column: 125
          }
        }, {
          start: {
            line: 91,
            column: 128
          },
          end: {
            line: 91,
            column: 130
          }
        }],
        line: 91
      },
      "6": {
        loc: {
          start: {
            line: 109,
            column: 63
          },
          end: {
            line: 109,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 79
          },
          end: {
            line: 109,
            column: 112
          }
        }, {
          start: {
            line: 109,
            column: 115
          },
          end: {
            line: 109,
            column: 130
          }
        }],
        line: 109
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 90
          },
          end: {
            line: 121,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 121,
            column: 104
          },
          end: {
            line: 121,
            column: 119
          }
        }, {
          start: {
            line: 121,
            column: 122
          },
          end: {
            line: 121,
            column: 137
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 131,
            column: 79
          },
          end: {
            line: 131,
            column: 138
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 93
          },
          end: {
            line: 131,
            column: 120
          }
        }, {
          start: {
            line: 131,
            column: 123
          },
          end: {
            line: 131,
            column: 138
          }
        }],
        line: 131
      },
      "9": {
        loc: {
          start: {
            line: 138,
            column: 44
          },
          end: {
            line: 148,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 138,
            column: 44
          },
          end: {
            line: 138,
            column: 56
          }
        }, {
          start: {
            line: 138,
            column: 60
          },
          end: {
            line: 138,
            column: 83
          }
        }, {
          start: {
            line: 138,
            column: 101
          },
          end: {
            line: 148,
            column: 46
          }
        }],
        line: 138
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\email\\EmailList.tsx"],
      sourcesContent: ["\"use client\"\n\nimport React from \"react\"\nimport {\n  Mail,\n  Star,\n  Search,\n  Filter,\n  RefreshCw,\n  Loader2,\n} from \"lucide-react\"\n\ninterface Email {\n  id: string\n  from: string\n  email: string\n  subject: string\n  preview: string\n  body: string\n  date: string\n  read: boolean\n  starred: boolean\n  labels: string[]\n  folder: string\n  attachments?: Array<{\n    name: string\n    size: string\n    type: string\n  }>\n}\n\ninterface Label {\n  id: string\n  name: string\n  color: string\n}\n\ninterface LoadingState {\n  emails: boolean\n  sending: boolean\n  attachment: boolean\n}\n\ninterface EmailListProps {\n  emails: Email[]\n  selectedEmails: string[]\n  searchQuery: string\n  loading: LoadingState\n  onSearchChange: (query: string) => void\n  onEmailClick: (email: Email) => void\n  onToggleSelect: (emailId: string) => void\n  onToggleStar: (emailId: string, e: React.MouseEvent) => void\n  onSelectAll: () => void\n  getLabelColor: (labelId: string) => string\n  getLabelBgColor: (color: string) => string\n  getLabelTextColor: (color: string) => string\n  labels: Label[]\n}\n\nconst EmailList: React.FC<EmailListProps> = ({\n  emails,\n  selectedEmails,\n  searchQuery,\n  loading,\n  onSearchChange,\n  onEmailClick,\n  onToggleSelect,\n  onToggleStar,\n  onSelectAll,\n  getLabelColor,\n  getLabelBgColor,\n  getLabelTextColor,\n  labels,\n}) => {\n  return (\n    <div className=\"flex-1 flex flex-col overflow-hidden\">\n      {/* Toolbar */}\n      <div className=\"p-4 border-b border-gray-200 flex items-center gap-2\">\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"checkbox\"\n            checked={selectedEmails.length === emails.length && emails.length > 0}\n            onChange={onSelectAll}\n            className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          />\n          <button className=\"p-1.5 rounded-lg hover:bg-gray-100\">\n            <RefreshCw size={16} className=\"text-gray-500\" />\n          </button>\n          <button className=\"p-1.5 rounded-lg hover:bg-gray-100\">\n            <Filter size={16} className=\"text-gray-500\" />\n          </button>\n        </div>\n\n        <div className=\"flex-1 relative\">\n          <Search size={16} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search emails...\"\n            value={searchQuery}\n            onChange={(e) => onSearchChange(e.target.value)}\n            className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n        </div>\n      </div>\n\n      {/* Email List */}\n      <div className=\"flex-1 overflow-y-auto\">\n        {loading.emails ? (\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-500 p-8\">\n            <Loader2 size={48} className=\"text-gray-300 mb-4 animate-spin\" />\n            <p className=\"text-lg font-medium\">Loading emails...</p>\n            <p className=\"text-sm\">Please wait while we fetch your messages</p>\n          </div>\n        ) : emails.length > 0 ? (\n          <div>\n            {emails.map((email) => (\n              <div\n                key={email.id}\n                onClick={() => onEmailClick(email)}\n                className={`border-b border-gray-200 hover:bg-gray-50 cursor-pointer ${\n                  !email.read ? \"bg-blue-50\" : \"\"\n                }`}\n              >\n                <div className=\"p-4 flex items-center gap-4\">\n                  <div className=\"flex items-center gap-3\">\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedEmails.includes(email.id)}\n                      onChange={() => onToggleSelect(email.id)}\n                      onClick={(e) => e.stopPropagation()}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                    <button onClick={(e) => onToggleStar(email.id, e)}>\n                      <Star\n                        size={18}\n                        className={email.starred ? \"text-yellow-400 fill-yellow-400\" : \"text-gray-400\"}\n                      />\n                    </button>\n                  </div>\n\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"flex items-center justify-between\">\n                      <p className={`text-sm font-medium ${!email.read ? \"text-gray-900\" : \"text-gray-700\"}`}>\n                        {email.from}\n                      </p>\n                      <p className=\"text-xs text-gray-500\">{email.date}</p>\n                    </div>\n                    <p\n                      className={`text-sm truncate ${!email.read ? \"font-medium text-gray-900\" : \"text-gray-700\"}`}\n                    >\n                      {email.subject}\n                    </p>\n                    <p className=\"text-xs text-gray-500 truncate\">{email.preview}</p>\n\n                    {email.labels && email.labels.length > 0 && (\n                      <div className=\"flex gap-1 mt-1\">\n                        {email.labels.map((labelId) => (\n                          <span\n                            key={labelId}\n                            className=\"text-xs px-1.5 py-0.5 rounded-full\"\n                            style={{\n                              backgroundColor: getLabelBgColor(getLabelColor(labelId)),\n                              color: getLabelTextColor(getLabelColor(labelId)),\n                            }}\n                          >\n                            {labels.find((l) => l.id === labelId)?.name}\n                          </span>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-500 p-8\">\n            <Mail size={48} className=\"text-gray-300 mb-4\" />\n            <p className=\"text-lg font-medium\">No emails found</p>\n            <p className=\"text-sm\">Try adjusting your search or filters</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default EmailList"],
      names: ["EmailList", "emails", "selectedEmails", "searchQuery", "loading", "onSearchChange", "onEmailClick", "onToggleSelect", "onToggleStar", "onSelectAll", "getLabelColor", "getLabelBgColor", "getLabelTextColor", "labels", "div", "className", "input", "type", "checked", "length", "onChange", "button", "RefreshCw", "size", "Filter", "Search", "placeholder", "value", "e", "target", "Loader2", "p", "map", "email", "onClick", "read", "includes", "id", "stopPropagation", "Star", "starred", "from", "date", "subject", "preview", "labelId", "span", "style", "backgroundColor", "color", "find", "l", "name", "Mail"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "db839fe9dfef5b796448c2253b2049be94d8cfa1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_22qb74himp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_22qb74himp();
cov_22qb74himp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_22qb74himp().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_22qb74himp().f[0]++;
    cov_22qb74himp().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_22qb74himp().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_22qb74himp().s[4]++, _interop_require_default(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_22qb74himp().s[5]++, require("lucide-react"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_22qb74himp().f[1]++;
  cov_22qb74himp().s[6]++;
  return /* istanbul ignore next */(cov_22qb74himp().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_22qb74himp().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_22qb74himp().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_22qb74himp().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_22qb74himp().s[7]++;
const EmailList = ({
  emails,
  selectedEmails,
  searchQuery,
  loading,
  onSearchChange,
  onEmailClick,
  onToggleSelect,
  onToggleStar,
  onSelectAll,
  getLabelColor,
  getLabelBgColor,
  getLabelTextColor,
  labels
}) => {
  /* istanbul ignore next */
  cov_22qb74himp().f[2]++;
  cov_22qb74himp().s[8]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "flex-1 flex flex-col overflow-hidden",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "p-4 border-b border-gray-200 flex items-center gap-2",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "checkbox",
          checked:
          /* istanbul ignore next */
          (cov_22qb74himp().b[2][0]++, selectedEmails.length === emails.length) &&
          /* istanbul ignore next */
          (cov_22qb74himp().b[2][1]++, emails.length > 0),
          onChange: onSelectAll,
          className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          className: "p-1.5 rounded-lg hover:bg-gray-100",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            size: 16,
            className: "text-gray-500"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          className: "p-1.5 rounded-lg hover:bg-gray-100",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Filter, {
            size: 16,
            className: "text-gray-500"
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex-1 relative",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Search, {
          size: 16,
          className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "text",
          placeholder: "Search emails...",
          value: searchQuery,
          onChange: e => {
            /* istanbul ignore next */
            cov_22qb74himp().f[3]++;
            cov_22qb74himp().s[9]++;
            return onSearchChange(e.target.value);
          },
          className: "w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex-1 overflow-y-auto",
      children: loading.emails ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_22qb74himp().b[3][0]++, (0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col items-center justify-center h-full text-gray-500 p-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
          size: 48,
          className: "text-gray-300 mb-4 animate-spin"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-lg font-medium",
          children: "Loading emails..."
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm",
          children: "Please wait while we fetch your messages"
        })]
      })) :
      /* istanbul ignore next */
      (cov_22qb74himp().b[3][1]++, emails.length > 0 ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_22qb74himp().b[4][0]++, (0, _jsxruntime.jsx)("div", {
        children: emails.map(email => {
          /* istanbul ignore next */
          cov_22qb74himp().f[4]++;
          cov_22qb74himp().s[10]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            onClick: () => {
              /* istanbul ignore next */
              cov_22qb74himp().f[5]++;
              cov_22qb74himp().s[11]++;
              return onEmailClick(email);
            },
            className: `border-b border-gray-200 hover:bg-gray-50 cursor-pointer ${!email.read ?
            /* istanbul ignore next */
            (cov_22qb74himp().b[5][0]++, "bg-blue-50") :
            /* istanbul ignore next */
            (cov_22qb74himp().b[5][1]++, "")}`,
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "p-4 flex items-center gap-4",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                  type: "checkbox",
                  checked: selectedEmails.includes(email.id),
                  onChange: () => {
                    /* istanbul ignore next */
                    cov_22qb74himp().f[6]++;
                    cov_22qb74himp().s[12]++;
                    return onToggleSelect(email.id);
                  },
                  onClick: e => {
                    /* istanbul ignore next */
                    cov_22qb74himp().f[7]++;
                    cov_22qb74himp().s[13]++;
                    return e.stopPropagation();
                  },
                  className: "rounded border-gray-300 text-blue-600 focus:ring-blue-500"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                  onClick: e => {
                    /* istanbul ignore next */
                    cov_22qb74himp().f[8]++;
                    cov_22qb74himp().s[14]++;
                    return onToggleStar(email.id, e);
                  },
                  children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Star, {
                    size: 18,
                    className: email.starred ?
                    /* istanbul ignore next */
                    (cov_22qb74himp().b[6][0]++, "text-yellow-400 fill-yellow-400") :
                    /* istanbul ignore next */
                    (cov_22qb74himp().b[6][1]++, "text-gray-400")
                  })
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex-1 min-w-0",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: `text-sm font-medium ${!email.read ?
                    /* istanbul ignore next */
                    (cov_22qb74himp().b[7][0]++, "text-gray-900") :
                    /* istanbul ignore next */
                    (cov_22qb74himp().b[7][1]++, "text-gray-700")}`,
                    children: email.from
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: "text-xs text-gray-500",
                    children: email.date
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: `text-sm truncate ${!email.read ?
                  /* istanbul ignore next */
                  (cov_22qb74himp().b[8][0]++, "font-medium text-gray-900") :
                  /* istanbul ignore next */
                  (cov_22qb74himp().b[8][1]++, "text-gray-700")}`,
                  children: email.subject
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                  className: "text-xs text-gray-500 truncate",
                  children: email.preview
                }),
                /* istanbul ignore next */
                (cov_22qb74himp().b[9][0]++, email.labels) &&
                /* istanbul ignore next */
                (cov_22qb74himp().b[9][1]++, email.labels.length > 0) &&
                /* istanbul ignore next */
                (cov_22qb74himp().b[9][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "flex gap-1 mt-1",
                  children: email.labels.map(labelId => {
                    /* istanbul ignore next */
                    cov_22qb74himp().f[9]++;
                    cov_22qb74himp().s[15]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                      className: "text-xs px-1.5 py-0.5 rounded-full",
                      style: {
                        backgroundColor: getLabelBgColor(getLabelColor(labelId)),
                        color: getLabelTextColor(getLabelColor(labelId))
                      },
                      children: labels.find(l => {
                        /* istanbul ignore next */
                        cov_22qb74himp().f[10]++;
                        cov_22qb74himp().s[16]++;
                        return l.id === labelId;
                      })?.name
                    }, labelId);
                  })
                }))]
              })]
            })
          }, email.id);
        })
      })) :
      /* istanbul ignore next */
      (/*#__PURE__*/cov_22qb74himp().b[4][1]++, (0, _jsxruntime.jsxs)("div", {
        className: "flex flex-col items-center justify-center h-full text-gray-500 p-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Mail, {
          size: 48,
          className: "text-gray-300 mb-4"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-lg font-medium",
          children: "No emails found"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm",
          children: "Try adjusting your search or filters"
        })]
      })))
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_22qb74himp().s[17]++, EmailList);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,