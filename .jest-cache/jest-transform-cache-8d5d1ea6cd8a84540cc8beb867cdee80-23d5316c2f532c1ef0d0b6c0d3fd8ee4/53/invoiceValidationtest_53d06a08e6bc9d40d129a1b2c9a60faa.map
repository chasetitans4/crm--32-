{"version":3,"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\__tests__\\utils\\invoiceValidation.test.ts"],"sourcesContent":["import {\n  validateEmail,\n  validatePhone,\n  validateAmount,\n  validateContractForm,\n  validateInvoiceForm,\n} from \"../../utils/invoiceValidation\"\nimport type { ContractFormData, InvoiceFormData, InvoiceItem } from \"../../types/invoice\"\n\ndescribe(\"invoiceValidation\", () => {\n  describe(\"validateEmail\", () => {\n    it(\"validates correct email addresses\", () => {\n      expect(validateEmail(\"test@example.com\")).toBe(true)\n      expect(validateEmail(\"user.name@domain.co.uk\")).toBe(true)\n    })\n\n    it(\"rejects invalid email addresses\", () => {\n      expect(validateEmail(\"invalid-email\")).toBe(false)\n      expect(validateEmail(\"test@\")).toBe(false)\n      expect(validateEmail(\"@domain.com\")).toBe(false)\n    })\n  })\n\n  describe(\"validatePhone\", () => {\n    it(\"validates correct phone numbers\", () => {\n      expect(validatePhone(\"1234567890\")).toBe(true)\n      expect(validatePhone(\"+1 (555) 123-4567\")).toBe(true)\n    })\n\n    it(\"rejects invalid phone numbers\", () => {\n      expect(validatePhone(\"abc\")).toBe(false)\n      expect(validatePhone(\"123\")).toBe(false)\n    })\n  })\n\n  describe(\"validateAmount\", () => {\n    it(\"validates correct amounts\", () => {\n      expect(validateAmount(\"100\")).toBe(true)\n      expect(validateAmount(\"100.50\")).toBe(true)\n      expect(validateAmount(\"0\")).toBe(true)\n    })\n\n    it(\"rejects invalid amounts\", () => {\n      expect(validateAmount(\"-100\")).toBe(false)\n      expect(validateAmount(\"abc\")).toBe(false)\n    })\n  })\n\n  describe(\"validateContractForm\", () => {\n    const validFormData: ContractFormData = {\n      clientName: \"John Doe\",\n      clientEmail: \"john@example.com\",\n      clientPhone: \"1234567890\",\n      projectTitle: \"Website Redesign\",\n      projectDescription: \"Complete website redesign\",\n      totalAmount: \"5000\",\n      depositPercentage: \"50\",\n      startDate: \"2024-01-01\",\n      endDate: \"2024-01-31\",\n      deliveryDate: \"2024-02-01\",\n      paymentTerms: \"Net 30\",\n      deliverables: [\"Design\", \"Development\"],\n    }\n\n    it(\"validates correct form data\", () => {\n      const result = validateContractForm(validFormData)\n      expect(result.isValid).toBe(true)\n      expect(result.errors).toHaveLength(0)\n    })\n\n    it(\"rejects form with missing required fields\", () => {\n      const invalidFormData = { ...validFormData, clientName: \"\" }\n      const result = validateContractForm(invalidFormData)\n      expect(result.isValid).toBe(false)\n      expect(result.errors.some((error) => error.field === \"clientName\")).toBe(true)\n    })\n\n    it(\"rejects form with invalid email\", () => {\n      const invalidFormData = { ...validFormData, clientEmail: \"invalid-email\" }\n      const result = validateContractForm(invalidFormData)\n      expect(result.isValid).toBe(false)\n      expect(result.errors.some((error) => error.field === \"clientEmail\")).toBe(true)\n    })\n  })\n\n  describe(\"validateInvoiceForm\", () => {\n    const validFormData: InvoiceFormData = {\n      invoiceNumber: \"INV-001\",\n      clientName: \"John Doe\",\n      clientEmail: \"john@example.com\",\n      clientAddress: \"123 Main St\",\n      issueDate: \"2024-01-01\",\n      dueDate: \"2024-02-01\",\n      items: [],\n      subtotal: 0,\n      tax: 0,\n      totalAmount: 0,\n      notes: \"Thank you\",\n      status: \"Draft\",\n    }\n\n    const validItems: InvoiceItem[] = [\n      {\n        id: \"1\",\n        description: \"Web Design\",\n        quantity: 1,\n        price: 1000,\n        total: 1000,\n      },\n    ]\n\n    it(\"validates correct form data\", () => {\n      const result = validateInvoiceForm(validFormData, validItems)\n      expect(result.isValid).toBe(true)\n      expect(result.errors).toHaveLength(0)\n    })\n\n    it(\"rejects form with no items\", () => {\n      const result = validateInvoiceForm(validFormData, [])\n      expect(result.isValid).toBe(false)\n      expect(result.errors.some((error) => error.field === \"items\")).toBe(true)\n    })\n\n    it(\"rejects form with invalid due date\", () => {\n      const invalidFormData = { ...validFormData, dueDate: \"2023-12-01\" }\n      const result = validateInvoiceForm(invalidFormData, validItems)\n      expect(result.isValid).toBe(false)\n      expect(result.errors.some((error) => error.field === \"dueDate\")).toBe(true)\n    })\n  })\n})\n"],"names":["describe","it","expect","validateEmail","toBe","validatePhone","validateAmount","validFormData","clientName","clientEmail","clientPhone","projectTitle","projectDescription","totalAmount","depositPercentage","startDate","endDate","deliveryDate","paymentTerms","deliverables","result","validateContractForm","isValid","errors","toHaveLength","invalidFormData","some","error","field","invoiceNumber","clientAddress","issueDate","dueDate","items","subtotal","tax","notes","status","validItems","id","description","quantity","price","total","validateInvoiceForm"],"mappings":"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"}