d170aca17ebba40015a425b372785c26
"use client";
"use strict";

/* istanbul ignore next */
function cov_b5e7qcz9j() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\radix-tabs.tsx";
  var hash = "8211656f17e1fcbe22cfbd951fbfdd2f2c79d7ae";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\radix-tabs.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 23
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 20
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 20
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 23
        }
      },
      "8": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "9": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 72
        }
      },
      "10": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "11": {
        start: {
          line: 29,
          column: 39
        },
        end: {
          line: 29,
          column: 51
        }
      },
      "12": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 41
        }
      },
      "13": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "14": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 20
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 66
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 19
        }
      },
      "18": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 43,
          column: 10
        }
      },
      "20": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 53
        }
      },
      "21": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "22": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 30
        }
      },
      "23": {
        start: {
          line: 49,
          column: 17
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "24": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 52,
          column: 88
        }
      },
      "25": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "26": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "27": {
        start: {
          line: 55,
          column: 23
        },
        end: {
          line: 55,
          column: 95
        }
      },
      "28": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "29": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 57
        }
      },
      "30": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 39
        }
      },
      "31": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 25
        }
      },
      "32": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "33": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 31
        }
      },
      "34": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 18
        }
      },
      "35": {
        start: {
          line: 69,
          column: 34
        },
        end: {
          line: 69,
          column: 70
        }
      },
      "36": {
        start: {
          line: 70,
          column: 13
        },
        end: {
          line: 89,
          column: 1
        }
      },
      "37": {
        start: {
          line: 71,
          column: 46
        },
        end: {
          line: 71,
          column: 80
        }
      },
      "38": {
        start: {
          line: 72,
          column: 18
        },
        end: {
          line: 72,
          column: 50
        }
      },
      "39": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "40": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "41": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 39
        }
      },
      "42": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 34
        }
      },
      "43": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "44": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 90,
          column: 26
        }
      },
      "45": {
        start: {
          line: 91,
          column: 27
        },
        end: {
          line: 99,
          column: 2
        }
      },
      "46": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 98,
          column: 7
        }
      },
      "47": {
        start: {
          line: 100,
          column: 0
        },
        end: {
          line: 100,
          column: 30
        }
      },
      "48": {
        start: {
          line: 101,
          column: 30
        },
        end: {
          line: 118,
          column: 2
        }
      },
      "49": {
        start: {
          line: 102,
          column: 20
        },
        end: {
          line: 102,
          column: 55
        }
      },
      "50": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "51": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 70
        }
      },
      "52": {
        start: {
          line: 106,
          column: 21
        },
        end: {
          line: 106,
          column: 44
        }
      },
      "53": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "54": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 62
        }
      },
      "55": {
        start: {
          line: 119,
          column: 0
        },
        end: {
          line: 119,
          column: 36
        }
      },
      "56": {
        start: {
          line: 120,
          column: 30
        },
        end: {
          line: 135,
          column: 2
        }
      },
      "57": {
        start: {
          line: 121,
          column: 20
        },
        end: {
          line: 121,
          column: 55
        }
      },
      "58": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "59": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 70
        }
      },
      "60": {
        start: {
          line: 125,
          column: 21
        },
        end: {
          line: 125,
          column: 44
        }
      },
      "61": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 126,
          column: 31
        }
      },
      "62": {
        start: {
          line: 126,
          column: 19
        },
        end: {
          line: 126,
          column: 31
        }
      },
      "63": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 134,
          column: 7
        }
      },
      "64": {
        start: {
          line: 136,
          column: 0
        },
        end: {
          line: 136,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 16
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 33
          }
        },
        loc: {
          start: {
            line: 28,
            column: 47
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 28
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 32,
            column: 39
          },
          end: {
            line: 32,
            column: 40
          }
        },
        loc: {
          start: {
            line: 32,
            column: 61
          },
          end: {
            line: 34,
            column: 5
          }
        },
        line: 32
      },
      "7": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 36,
            column: 9
          },
          end: {
            line: 36,
            column: 34
          }
        },
        loc: {
          start: {
            line: 36,
            column: 53
          },
          end: {
            line: 68,
            column: 1
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 70,
            column: 13
          },
          end: {
            line: 70,
            column: 14
          }
        },
        loc: {
          start: {
            line: 70,
            column: 98
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 70
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 73,
            column: 31
          }
        },
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 73
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 91,
            column: 53
          },
          end: {
            line: 91,
            column: 54
          }
        },
        loc: {
          start: {
            line: 91,
            column: 95
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 91
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 101,
            column: 56
          },
          end: {
            line: 101,
            column: 57
          }
        },
        loc: {
          start: {
            line: 101,
            column: 115
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 101
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 114,
            column: 17
          },
          end: {
            line: 114,
            column: 18
          }
        },
        loc: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 62
          }
        },
        line: 114
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 120,
            column: 56
          },
          end: {
            line: 120,
            column: 57
          }
        },
        loc: {
          start: {
            line: 120,
            column: 105
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 120
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 33,
            column: 45
          }
        }, {
          start: {
            line: 33,
            column: 48
          },
          end: {
            line: 33,
            column: 65
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 27
          }
        }, {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 37,
            column: 45
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 40,
            column: 20
          }
        }, {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 47
          }
        }, {
          start: {
            line: 40,
            column: 51
          },
          end: {
            line: 40,
            column: 76
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 17
          },
          end: {
            line: 46,
            column: 31
          }
        }],
        line: 46
      },
      "8": {
        loc: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 53
          }
        }, {
          start: {
            line: 52,
            column: 57
          },
          end: {
            line: 52,
            column: 88
          }
        }],
        line: 52
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 29
          }
        }, {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 54,
            column: 79
          }
        }],
        line: 54
      },
      "11": {
        loc: {
          start: {
            line: 55,
            column: 23
          },
          end: {
            line: 55,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 55,
            column: 47
          },
          end: {
            line: 55,
            column: 88
          }
        }, {
          start: {
            line: 55,
            column: 91
          },
          end: {
            line: 55,
            column: 95
          }
        }],
        line: 55
      },
      "12": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 19
          },
          end: {
            line: 60,
            column: 13
          }
        }],
        line: 56
      },
      "13": {
        loc: {
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 16
          },
          end: {
            line: 56,
            column: 20
          }
        }, {
          start: {
            line: 56,
            column: 25
          },
          end: {
            line: 56,
            column: 33
          }
        }, {
          start: {
            line: 56,
            column: 37
          },
          end: {
            line: 56,
            column: 45
          }
        }],
        line: 56
      },
      "14": {
        loc: {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 40
          },
          end: {
            line: 70,
            column: 57
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 55
          },
          end: {
            line: 70,
            column: 57
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 18
          },
          end: {
            line: 72,
            column: 33
          }
        }, {
          start: {
            line: 72,
            column: 37
          },
          end: {
            line: 72,
            column: 50
          }
        }],
        line: 72
      },
      "17": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "18": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "19": {
        loc: {
          start: {
            line: 112,
            column: 22
          },
          end: {
            line: 112,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 41
          }
        }, {
          start: {
            line: 112,
            column: 44
          },
          end: {
            line: 112,
            column: 54
          }
        }],
        line: 112
      },
      "20": {
        loc: {
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 21
          },
          end: {
            line: 114,
            column: 30
          }
        }, {
          start: {
            line: 114,
            column: 34
          },
          end: {
            line: 114,
            column: 62
          }
        }],
        line: 114
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "22": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 31
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 31
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "23": {
        loc: {
          start: {
            line: 131,
            column: 22
          },
          end: {
            line: 131,
            column: 54
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 41
          }
        }, {
          start: {
            line: 131,
            column: 44
          },
          end: {
            line: 131,
            column: 54
          }
        }],
        line: 131
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\radix-tabs.tsx"],
      sourcesContent: ["\"use client\"\n\nimport React, { createContext, useContext, useState } from \"react\"\n\ninterface TabsContextType {\n  value: string\n  onValueChange: (value: string) => void\n}\n\nconst TabsContext = createContext<TabsContextType | undefined>(undefined)\n\ninterface TabsProps {\n  value?: string\n  defaultValue?: string\n  onValueChange?: (value: string) => void\n  children: React.ReactNode\n  className?: string\n}\n\nconst Root: React.FC<TabsProps> = ({\n  value: controlledValue,\n  defaultValue = \"\",\n  onValueChange,\n  children,\n  className,\n}) => {\n  const [internalValue, setInternalValue] = useState(defaultValue)\n  const value = controlledValue ?? internalValue\n\n  const handleValueChange = (newValue: string) => {\n    if (controlledValue === undefined) {\n      setInternalValue(newValue)\n    }\n    onValueChange?.(newValue)\n  }\n\n  return (\n    <TabsContext.Provider value={{ value, onValueChange: handleValueChange }}>\n      <div className={className}>{children}</div>\n    </TabsContext.Provider>\n  )\n}\nRoot.displayName = \"Tabs\"\n\ninterface TabsListProps {\n  children: React.ReactNode\n  className?: string\n}\n\nconst List = React.forwardRef<HTMLDivElement, TabsListProps>(({ children, className, ...props }, ref) => {\n  return (\n    <div ref={ref} className={className} role=\"tablist\" {...props}>\n      {children}\n    </div>\n  )\n})\nList.displayName = \"TabsList\"\n\ninterface TabsTriggerProps {\n  value: string\n  children: React.ReactNode\n  className?: string\n  disabled?: boolean\n}\n\nconst Trigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(\n  ({ value, children, className, disabled, ...props }, ref) => {\n    const context = useContext(TabsContext)\n    if (!context) {\n      throw new Error(\"Tabs.Trigger must be used within Tabs.Root\")\n    }\n\n    const isActive = context.value === value\n\n    return (\n      <button\n        ref={ref}\n        className={className}\n        role=\"tab\"\n        aria-selected={isActive}\n        data-state={isActive ? \"active\" : \"inactive\"}\n        disabled={disabled}\n        onClick={() => !disabled && context.onValueChange(value)}\n        {...props}\n      >\n        {children}\n      </button>\n    )\n  },\n)\nTrigger.displayName = \"TabsTrigger\"\n\ninterface TabsContentProps {\n  value: string\n  children: React.ReactNode\n  className?: string\n}\n\nconst Content = React.forwardRef<HTMLDivElement, TabsContentProps>(({ value, children, className, ...props }, ref) => {\n  const context = useContext(TabsContext)\n  if (!context) {\n    throw new Error(\"Tabs.Content must be used within Tabs.Root\")\n  }\n\n  const isActive = context.value === value\n\n  if (!isActive) return null\n\n  return (\n    <div ref={ref} className={className} role=\"tabpanel\" data-state={isActive ? \"active\" : \"inactive\"} {...props}>\n      {children}\n    </div>\n  )\n})\nContent.displayName = \"TabsContent\"\n\nexport { Root, List, Trigger, Content }\n"],
      names: ["Content", "List", "Root", "Trigger", "TabsContext", "createContext", "undefined", "value", "controlledValue", "defaultValue", "onValueChange", "children", "className", "internalValue", "setInternalValue", "useState", "handleValueChange", "newValue", "Provider", "div", "displayName", "React", "forwardRef", "props", "ref", "role", "disabled", "context", "useContext", "Error", "isActive", "button", "aria-selected", "data-state", "onClick"],
      mappings: "AAAA;;;;;;;;;;;;QAoH8BA;eAAAA;;QAAfC;eAAAA;;QAANC;eAAAA;;QAAYC;eAAAA;;;;+DAlHsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3D,MAAMC,4BAAcC,IAAAA,oBAAa,EAA8BC;AAU/D,MAAMJ,OAA4B,CAAC,EACjCK,OAAOC,eAAe,EACtBC,eAAe,EAAE,EACjBC,aAAa,EACbC,QAAQ,EACRC,SAAS,EACV;IACC,MAAM,CAACC,eAAeC,iBAAiB,GAAGC,IAAAA,eAAQ,EAACN;IACnD,MAAMF,QAAQC,mBAAmBK;IAEjC,MAAMG,oBAAoB,CAACC;QACzB,IAAIT,oBAAoBF,WAAW;YACjCQ,iBAAiBG;QACnB;QACAP,gBAAgBO;IAClB;IAEA,qBACE,qBAACb,YAAYc,QAAQ;QAACX,OAAO;YAAEA;YAAOG,eAAeM;QAAkB;kBACrE,cAAA,qBAACG;YAAIP,WAAWA;sBAAYD;;;AAGlC;AACAT,KAAKkB,WAAW,GAAG;AAOnB,MAAMnB,qBAAOoB,cAAK,CAACC,UAAU,CAAgC,CAAC,EAAEX,QAAQ,EAAEC,SAAS,EAAE,GAAGW,OAAO,EAAEC;IAC/F,qBACE,qBAACL;QAAIK,KAAKA;QAAKZ,WAAWA;QAAWa,MAAK;QAAW,GAAGF,KAAK;kBAC1DZ;;AAGP;AACAV,KAAKmB,WAAW,GAAG;AASnB,MAAMjB,wBAAUkB,cAAK,CAACC,UAAU,CAC9B,CAAC,EAAEf,KAAK,EAAEI,QAAQ,EAAEC,SAAS,EAAEc,QAAQ,EAAE,GAAGH,OAAO,EAAEC;IACnD,MAAMG,UAAUC,IAAAA,iBAAU,EAACxB;IAC3B,IAAI,CAACuB,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IAEA,MAAMC,WAAWH,QAAQpB,KAAK,KAAKA;IAEnC,qBACE,qBAACwB;QACCP,KAAKA;QACLZ,WAAWA;QACXa,MAAK;QACLO,iBAAeF;QACfG,cAAYH,WAAW,WAAW;QAClCJ,UAAUA;QACVQ,SAAS,IAAM,CAACR,YAAYC,QAAQjB,aAAa,CAACH;QACjD,GAAGgB,KAAK;kBAERZ;;AAGP;AAEFR,QAAQiB,WAAW,GAAG;AAQtB,MAAMpB,wBAAUqB,cAAK,CAACC,UAAU,CAAmC,CAAC,EAAEf,KAAK,EAAEI,QAAQ,EAAEC,SAAS,EAAE,GAAGW,OAAO,EAAEC;IAC5G,MAAMG,UAAUC,IAAAA,iBAAU,EAACxB;IAC3B,IAAI,CAACuB,SAAS;QACZ,MAAM,IAAIE,MAAM;IAClB;IAEA,MAAMC,WAAWH,QAAQpB,KAAK,KAAKA;IAEnC,IAAI,CAACuB,UAAU,OAAO;IAEtB,qBACE,qBAACX;QAAIK,KAAKA;QAAKZ,WAAWA;QAAWa,MAAK;QAAWQ,cAAYH,WAAW,WAAW;QAAa,GAAGP,KAAK;kBACzGZ;;AAGP;AACAX,QAAQoB,WAAW,GAAG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8211656f17e1fcbe22cfbd951fbfdd2f2c79d7ae"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_b5e7qcz9j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_b5e7qcz9j();
cov_b5e7qcz9j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_b5e7qcz9j().f[0]++;
  cov_b5e7qcz9j().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_b5e7qcz9j().s[3]++;
_export(exports, {
  get Content() {
    /* istanbul ignore next */
    cov_b5e7qcz9j().f[1]++;
    cov_b5e7qcz9j().s[4]++;
    return Content;
  },
  get List() {
    /* istanbul ignore next */
    cov_b5e7qcz9j().f[2]++;
    cov_b5e7qcz9j().s[5]++;
    return List;
  },
  get Root() {
    /* istanbul ignore next */
    cov_b5e7qcz9j().f[3]++;
    cov_b5e7qcz9j().s[6]++;
    return Root;
  },
  get Trigger() {
    /* istanbul ignore next */
    cov_b5e7qcz9j().f[4]++;
    cov_b5e7qcz9j().s[7]++;
    return Trigger;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_b5e7qcz9j().s[8]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_b5e7qcz9j().s[9]++, _interop_require_wildcard(require("react")));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_b5e7qcz9j().f[5]++;
  cov_b5e7qcz9j().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[0][0]++;
    cov_b5e7qcz9j().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().f[6]++;
    cov_b5e7qcz9j().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_b5e7qcz9j().f[7]++;
  cov_b5e7qcz9j().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[2][0]++;
    cov_b5e7qcz9j().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[2][1]++;
  }
  cov_b5e7qcz9j().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[4][0]++;
    cov_b5e7qcz9j().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[6][0]++;
    cov_b5e7qcz9j().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[24]++,
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_b5e7qcz9j().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_b5e7qcz9j().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_b5e7qcz9j().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_b5e7qcz9j().b[11][1]++, null));
      /* istanbul ignore next */
      cov_b5e7qcz9j().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_b5e7qcz9j().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_b5e7qcz9j().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_b5e7qcz9j().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_b5e7qcz9j().b[12][0]++;
        cov_b5e7qcz9j().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_b5e7qcz9j().b[12][1]++;
        cov_b5e7qcz9j().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_b5e7qcz9j().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[14][0]++;
    cov_b5e7qcz9j().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[14][1]++;
  }
  cov_b5e7qcz9j().s[34]++;
  return newObj;
}
const TabsContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_b5e7qcz9j().s[35]++, (0, _react.createContext)(undefined));
/* istanbul ignore next */
cov_b5e7qcz9j().s[36]++;
const Root = ({
  value: controlledValue,
  defaultValue =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[15][0]++, ""),
  onValueChange,
  children,
  className
}) => {
  /* istanbul ignore next */
  cov_b5e7qcz9j().f[8]++;
  const [internalValue, setInternalValue] =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[37]++, (0, _react.useState)(defaultValue));
  const value =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[38]++,
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[16][0]++, controlledValue) ??
  /* istanbul ignore next */
  (cov_b5e7qcz9j().b[16][1]++, internalValue));
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[39]++;
  const handleValueChange = newValue => {
    /* istanbul ignore next */
    cov_b5e7qcz9j().f[9]++;
    cov_b5e7qcz9j().s[40]++;
    if (controlledValue === undefined) {
      /* istanbul ignore next */
      cov_b5e7qcz9j().b[17][0]++;
      cov_b5e7qcz9j().s[41]++;
      setInternalValue(newValue);
    } else
    /* istanbul ignore next */
    {
      cov_b5e7qcz9j().b[17][1]++;
    }
    cov_b5e7qcz9j().s[42]++;
    onValueChange?.(newValue);
  };
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[43]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(TabsContext.Provider, {
    value: {
      value,
      onValueChange: handleValueChange
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: className,
      children: children
    })
  });
};
/* istanbul ignore next */
cov_b5e7qcz9j().s[44]++;
Root.displayName = "Tabs";
const List =
/* istanbul ignore next */
(/*#__PURE__*/cov_b5e7qcz9j().s[45]++, _react.default.forwardRef(({
  children,
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_b5e7qcz9j().f[10]++;
  cov_b5e7qcz9j().s[46]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: ref,
    className: className,
    role: "tablist",
    ...props,
    children: children
  });
}));
/* istanbul ignore next */
cov_b5e7qcz9j().s[47]++;
List.displayName = "TabsList";
const Trigger =
/* istanbul ignore next */
(/*#__PURE__*/cov_b5e7qcz9j().s[48]++, _react.default.forwardRef(({
  value,
  children,
  className,
  disabled,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_b5e7qcz9j().f[11]++;
  const context =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[49]++, (0, _react.useContext)(TabsContext));
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[50]++;
  if (!context) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[18][0]++;
    cov_b5e7qcz9j().s[51]++;
    throw new Error("Tabs.Trigger must be used within Tabs.Root");
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[18][1]++;
  }
  const isActive =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[52]++, context.value === value);
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[53]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
    ref: ref,
    className: className,
    role: "tab",
    "aria-selected": isActive,
    "data-state": isActive ?
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[19][0]++, "active") :
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[19][1]++, "inactive"),
    disabled: disabled,
    onClick: () => {
      /* istanbul ignore next */
      cov_b5e7qcz9j().f[12]++;
      cov_b5e7qcz9j().s[54]++;
      return /* istanbul ignore next */(cov_b5e7qcz9j().b[20][0]++, !disabled) &&
      /* istanbul ignore next */
      (cov_b5e7qcz9j().b[20][1]++, context.onValueChange(value));
    },
    ...props,
    children: children
  });
}));
/* istanbul ignore next */
cov_b5e7qcz9j().s[55]++;
Trigger.displayName = "TabsTrigger";
const Content =
/* istanbul ignore next */
(/*#__PURE__*/cov_b5e7qcz9j().s[56]++, _react.default.forwardRef(({
  value,
  children,
  className,
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_b5e7qcz9j().f[13]++;
  const context =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[57]++, (0, _react.useContext)(TabsContext));
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[58]++;
  if (!context) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[21][0]++;
    cov_b5e7qcz9j().s[59]++;
    throw new Error("Tabs.Content must be used within Tabs.Root");
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[21][1]++;
  }
  const isActive =
  /* istanbul ignore next */
  (cov_b5e7qcz9j().s[60]++, context.value === value);
  /* istanbul ignore next */
  cov_b5e7qcz9j().s[61]++;
  if (!isActive) {
    /* istanbul ignore next */
    cov_b5e7qcz9j().b[22][0]++;
    cov_b5e7qcz9j().s[62]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_b5e7qcz9j().b[22][1]++;
  }
  cov_b5e7qcz9j().s[63]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: ref,
    className: className,
    role: "tabpanel",
    "data-state": isActive ?
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[23][0]++, "active") :
    /* istanbul ignore next */
    (cov_b5e7qcz9j().b[23][1]++, "inactive"),
    ...props,
    children: children
  });
}));
/* istanbul ignore next */
cov_b5e7qcz9j().s[64]++;
Content.displayName = "TabsContent";
//# sourceMappingURL=data:application/json;charset=utf-8;base64,