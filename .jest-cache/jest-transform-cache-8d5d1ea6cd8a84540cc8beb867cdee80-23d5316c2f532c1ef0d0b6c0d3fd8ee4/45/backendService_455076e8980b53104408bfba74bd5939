c9f0eb4eba45996b8043ae606705e020
"use strict";

/* istanbul ignore next */
function cov_255m12gg1k() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\backendService.ts";
  var hash = "c2b9acbd365b7e3050c8219e520bb0bd051e097b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\backendService.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 24
        }
      },
      "6": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "7": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 28,
          column: 1
        }
      },
      "8": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "9": {
        start: {
          line: 24,
          column: 8
        },
        end: {
          line: 24,
          column: 92
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 15
        }
      },
      "12": {
        start: {
          line: 30,
          column: 33
        },
        end: {
          line: 34,
          column: 1
        }
      },
      "13": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 60
        }
      },
      "14": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 65
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 121
        }
      },
      "16": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "18": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 41
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 33
        }
      },
      "20": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 39
        }
      },
      "21": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 42,
          column: 89
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "23": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 65
        }
      },
      "24": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 69
        }
      },
      "25": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "26": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 44
        }
      },
      "27": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 37
        }
      },
      "28": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 66,
          column: 9
        }
      },
      "29": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 44
        }
      },
      "30": {
        start: {
          line: 70,
          column: 37
        },
        end: {
          line: 70,
          column: 44
        }
      },
      "31": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "32": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 33
        }
      },
      "33": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "34": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "35": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 34
        }
      },
      "36": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 79,
          column: 64
        }
      },
      "37": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 82,
          column: 9
        }
      },
      "38": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 55
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 44
        }
      },
      "40": {
        start: {
          line: 85,
          column: 37
        },
        end: {
          line: 85,
          column: 44
        }
      },
      "41": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "42": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 45
        }
      },
      "43": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 93,
          column: 37
        }
      },
      "44": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "45": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 39
        }
      },
      "46": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "47": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "48": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "49": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 66
        }
      },
      "50": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "51": {
        start: {
          line: 110,
          column: 44
        },
        end: {
          line: 110,
          column: 111
        }
      },
      "52": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 35
        }
      },
      "53": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 35
        }
      },
      "54": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 51
        }
      },
      "55": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 26
        }
      },
      "56": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "57": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 70
        }
      },
      "58": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 24
        }
      },
      "59": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 130,
          column: 9
        }
      },
      "60": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 129,
          column: 14
        }
      },
      "61": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "62": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "63": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "64": {
        start: {
          line: 138,
          column: 44
        },
        end: {
          line: 138,
          column: 124
        }
      },
      "65": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "66": {
        start: {
          line: 139,
          column: 23
        },
        end: {
          line: 139,
          column: 35
        }
      },
      "67": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 51
        }
      },
      "68": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 26
        }
      },
      "69": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "70": {
        start: {
          line: 144,
          column: 16
        },
        end: {
          line: 147,
          column: 19
        }
      },
      "71": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 24
        }
      },
      "72": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "73": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 19
        }
      },
      "74": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "75": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "76": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 19
        }
      },
      "77": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "78": {
        start: {
          line: 165,
          column: 30
        },
        end: {
          line: 165,
          column: 88
        }
      },
      "79": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 35
        }
      },
      "80": {
        start: {
          line: 166,
          column: 23
        },
        end: {
          line: 166,
          column: 35
        }
      },
      "81": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 51
        }
      },
      "82": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "83": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 172,
          column: 19
        }
      },
      "84": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 23
        }
      },
      "85": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "86": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "87": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 43
        }
      },
      "88": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "89": {
        start: {
          line: 184,
          column: 24
        },
        end: {
          line: 184,
          column: 66
        }
      },
      "90": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "91": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 192,
          column: 19
        }
      },
      "92": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 191,
          column: 21
        }
      },
      "93": {
        start: {
          line: 188,
          column: 24
        },
        end: {
          line: 188,
          column: 53
        }
      },
      "94": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 190,
          column: 53
        }
      },
      "95": {
        start: {
          line: 194,
          column: 36
        },
        end: {
          line: 194,
          column: 47
        }
      },
      "96": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "97": {
        start: {
          line: 195,
          column: 23
        },
        end: {
          line: 195,
          column: 35
        }
      },
      "98": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 51
        }
      },
      "99": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 30
        }
      },
      "100": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 202,
          column: 13
        }
      },
      "101": {
        start: {
          line: 201,
          column: 16
        },
        end: {
          line: 201,
          column: 58
        }
      },
      "102": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 24
        }
      },
      "103": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "104": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 235,
          column: 18
        }
      },
      "105": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 262,
          column: 18
        }
      },
      "106": {
        start: {
          line: 264,
          column: 16
        },
        end: {
          line: 276,
          column: 18
        }
      },
      "107": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 278,
          column: 26
        }
      },
      "108": {
        start: {
          line: 283,
          column: 23
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "109": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 39
        }
      },
      "110": {
        start: {
          line: 292,
          column: 8
        },
        end: {
          line: 292,
          column: 32
        }
      },
      "111": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 293,
          column: 49
        }
      },
      "112": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 300,
          column: 10
        }
      },
      "113": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 44
        }
      },
      "114": {
        start: {
          line: 303,
          column: 37
        },
        end: {
          line: 303,
          column: 44
        }
      },
      "115": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 81
        }
      },
      "116": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 44
        }
      },
      "117": {
        start: {
          line: 307,
          column: 37
        },
        end: {
          line: 307,
          column: 44
        }
      },
      "118": {
        start: {
          line: 308,
          column: 31
        },
        end: {
          line: 308,
          column: 81
        }
      },
      "119": {
        start: {
          line: 308,
          column: 66
        },
        end: {
          line: 308,
          column: 80
        }
      },
      "120": {
        start: {
          line: 309,
          column: 8
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "121": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 317,
          column: 13
        }
      },
      "122": {
        start: {
          line: 311,
          column: 16
        },
        end: {
          line: 311,
          column: 56
        }
      },
      "123": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 312,
          column: 37
        }
      },
      "124": {
        start: {
          line: 313,
          column: 16
        },
        end: {
          line: 313,
          column: 63
        }
      },
      "125": {
        start: {
          line: 316,
          column: 16
        },
        end: {
          line: 316,
          column: 77
        }
      },
      "126": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 79
        }
      },
      "127": {
        start: {
          line: 320,
          column: 63
        },
        end: {
          line: 320,
          column: 77
        }
      },
      "128": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 321,
          column: 32
        }
      },
      "129": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 324,
          column: 44
        }
      },
      "130": {
        start: {
          line: 324,
          column: 37
        },
        end: {
          line: 324,
          column: 44
        }
      },
      "131": {
        start: {
          line: 325,
          column: 39
        },
        end: {
          line: 325,
          column: 45
        }
      },
      "132": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 337,
          column: 9
        }
      },
      "133": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 67
        }
      },
      "134": {
        start: {
          line: 329,
          column: 16
        },
        end: {
          line: 329,
          column: 22
        }
      },
      "135": {
        start: {
          line: 331,
          column: 46
        },
        end: {
          line: 331,
          column: 50
        }
      },
      "136": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 86
        }
      },
      "137": {
        start: {
          line: 333,
          column: 16
        },
        end: {
          line: 333,
          column: 22
        }
      },
      "138": {
        start: {
          line: 335,
          column: 16
        },
        end: {
          line: 335,
          column: 81
        }
      },
      "139": {
        start: {
          line: 336,
          column: 16
        },
        end: {
          line: 336,
          column: 22
        }
      },
      "140": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "141": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 44
        }
      },
      "142": {
        start: {
          line: 344,
          column: 25
        },
        end: {
          line: 344,
          column: 75
        }
      },
      "143": {
        start: {
          line: 345,
          column: 23
        },
        end: {
          line: 345,
          column: 53
        }
      },
      "144": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 48
        }
      },
      "145": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 44
        }
      },
      "146": {
        start: {
          line: 349,
          column: 37
        },
        end: {
          line: 349,
          column: 44
        }
      },
      "147": {
        start: {
          line: 350,
          column: 25
        },
        end: {
          line: 350,
          column: 75
        }
      },
      "148": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 61
        }
      },
      "149": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 360,
          column: 11
        }
      },
      "150": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "151": {
        start: {
          line: 364,
          column: 12
        },
        end: {
          line: 368,
          column: 14
        }
      },
      "152": {
        start: {
          line: 370,
          column: 8
        },
        end: {
          line: 370,
          column: 52
        }
      },
      "153": {
        start: {
          line: 374,
          column: 8
        },
        end: {
          line: 377,
          column: 9
        }
      },
      "154": {
        start: {
          line: 376,
          column: 12
        },
        end: {
          line: 376,
          column: 19
        }
      },
      "155": {
        start: {
          line: 378,
          column: 25
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "156": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "157": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "158": {
        start: {
          line: 387,
          column: 29
        },
        end: {
          line: 387,
          column: 52
        }
      },
      "159": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 388,
          column: 49
        }
      },
      "160": {
        start: {
          line: 389,
          column: 16
        },
        end: {
          line: 389,
          column: 56
        }
      },
      "161": {
        start: {
          line: 392,
          column: 16
        },
        end: {
          line: 392,
          column: 70
        }
      },
      "162": {
        start: {
          line: 398,
          column: 8
        },
        end: {
          line: 406,
          column: 9
        }
      },
      "163": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 405,
          column: 14
        }
      },
      "164": {
        start: {
          line: 407,
          column: 26
        },
        end: {
          line: 407,
          column: 36
        }
      },
      "165": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 427,
          column: 9
        }
      },
      "166": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 411,
          column: 13
        }
      },
      "167": {
        start: {
          line: 410,
          column: 16
        },
        end: {
          line: 410,
          column: 67
        }
      },
      "168": {
        start: {
          line: 412,
          column: 12
        },
        end: {
          line: 412,
          column: 78
        }
      },
      "169": {
        start: {
          line: 413,
          column: 33
        },
        end: {
          line: 413,
          column: 55
        }
      },
      "170": {
        start: {
          line: 414,
          column: 12
        },
        end: {
          line: 419,
          column: 14
        }
      },
      "171": {
        start: {
          line: 421,
          column: 12
        },
        end: {
          line: 426,
          column: 14
        }
      },
      "172": {
        start: {
          line: 430,
          column: 30
        },
        end: {
          line: 430,
          column: 110
        }
      },
      "173": {
        start: {
          line: 430,
          column: 84
        },
        end: {
          line: 430,
          column: 109
        }
      },
      "174": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 431,
          column: 72
        }
      },
      "175": {
        start: {
          line: 436,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "176": {
        start: {
          line: 441,
          column: 8
        },
        end: {
          line: 443,
          column: 9
        }
      },
      "177": {
        start: {
          line: 442,
          column: 12
        },
        end: {
          line: 442,
          column: 45
        }
      },
      "178": {
        start: {
          line: 444,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "179": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 445,
          column: 74
        }
      },
      "180": {
        start: {
          line: 446,
          column: 12
        },
        end: {
          line: 446,
          column: 77
        }
      },
      "181": {
        start: {
          line: 446,
          column: 54
        },
        end: {
          line: 446,
          column: 75
        }
      },
      "182": {
        start: {
          line: 450,
          column: 23
        },
        end: {
          line: 450,
          column: 43
        }
      },
      "183": {
        start: {
          line: 451,
          column: 17
        },
        end: {
          line: 451,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 21,
            column: 25
          }
        },
        loc: {
          start: {
            line: 21,
            column: 31
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 34
          }
        },
        loc: {
          start: {
            line: 30,
            column: 37
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 30
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 28
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 36
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 61
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 31
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 71,
            column: 42
          },
          end: {
            line: 71,
            column: 43
          }
        },
        loc: {
          start: {
            line: 71,
            column: 46
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 71
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 75,
            column: 43
          },
          end: {
            line: 75,
            column: 44
          }
        },
        loc: {
          start: {
            line: 75,
            column: 47
          },
          end: {
            line: 77,
            column: 9
          }
        },
        line: 75
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 89,
            column: 40
          },
          end: {
            line: 89,
            column: 41
          }
        },
        loc: {
          start: {
            line: 89,
            column: 44
          },
          end: {
            line: 93,
            column: 9
          }
        },
        line: 89
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 5
          }
        },
        loc: {
          start: {
            line: 96,
            column: 30
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 96
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        loc: {
          start: {
            line: 122,
            column: 34
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 122
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 152,
            column: 5
          }
        },
        loc: {
          start: {
            line: 152,
            column: 28
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 152
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 5
          }
        },
        loc: {
          start: {
            line: 178,
            column: 31
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 178
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 186,
            column: 48
          },
          end: {
            line: 186,
            column: 49
          }
        },
        loc: {
          start: {
            line: 186,
            column: 64
          },
          end: {
            line: 192,
            column: 17
          }
        },
        line: 186
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 207,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        loc: {
          start: {
            line: 207,
            column: 23
          },
          end: {
            line: 280,
            column: 5
          }
        },
        line: 207
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 282,
            column: 4
          },
          end: {
            line: 282,
            column: 5
          }
        },
        loc: {
          start: {
            line: 282,
            column: 43
          },
          end: {
            line: 301,
            column: 5
          }
        },
        line: 282
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 302,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        loc: {
          start: {
            line: 302,
            column: 23
          },
          end: {
            line: 305,
            column: 5
          }
        },
        line: 302
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 306,
            column: 5
          }
        },
        loc: {
          start: {
            line: 306,
            column: 31
          },
          end: {
            line: 322,
            column: 5
          }
        },
        line: 306
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 308,
            column: 56
          },
          end: {
            line: 308,
            column: 57
          }
        },
        loc: {
          start: {
            line: 308,
            column: 66
          },
          end: {
            line: 308,
            column: 80
          }
        },
        line: 308
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 320,
            column: 53
          },
          end: {
            line: 320,
            column: 54
          }
        },
        loc: {
          start: {
            line: 320,
            column: 63
          },
          end: {
            line: 320,
            column: 77
          }
        },
        line: 320
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        loc: {
          start: {
            line: 323,
            column: 39
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 323
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 340,
            column: 4
          },
          end: {
            line: 340,
            column: 5
          }
        },
        loc: {
          start: {
            line: 340,
            column: 35
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 340
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 348,
            column: 4
          },
          end: {
            line: 348,
            column: 5
          }
        },
        loc: {
          start: {
            line: 348,
            column: 41
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 348
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 354,
            column: 4
          },
          end: {
            line: 354,
            column: 5
          }
        },
        loc: {
          start: {
            line: 354,
            column: 51
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 354
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 362,
            column: 4
          },
          end: {
            line: 362,
            column: 5
          }
        },
        loc: {
          start: {
            line: 362,
            column: 26
          },
          end: {
            line: 371,
            column: 5
          }
        },
        line: 362
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 373,
            column: 4
          },
          end: {
            line: 373,
            column: 5
          }
        },
        loc: {
          start: {
            line: 373,
            column: 28
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 373
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 397,
            column: 4
          },
          end: {
            line: 397,
            column: 5
          }
        },
        loc: {
          start: {
            line: 397,
            column: 34
          },
          end: {
            line: 428,
            column: 5
          }
        },
        line: 397
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        loc: {
          start: {
            line: 429,
            column: 25
          },
          end: {
            line: 432,
            column: 5
          }
        },
        line: 429
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 430,
            column: 74
          },
          end: {
            line: 430,
            column: 75
          }
        },
        loc: {
          start: {
            line: 430,
            column: 84
          },
          end: {
            line: 430,
            column: 109
          }
        },
        line: 430
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 433,
            column: 4
          },
          end: {
            line: 433,
            column: 5
          }
        },
        loc: {
          start: {
            line: 433,
            column: 28
          },
          end: {
            line: 438,
            column: 5
          }
        },
        line: 433
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 440,
            column: 4
          },
          end: {
            line: 440,
            column: 5
          }
        },
        loc: {
          start: {
            line: 440,
            column: 14
          },
          end: {
            line: 448,
            column: 5
          }
        },
        line: 440
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 446,
            column: 50
          },
          end: {
            line: 446,
            column: 51
          }
        },
        loc: {
          start: {
            line: 446,
            column: 54
          },
          end: {
            line: 446,
            column: 75
          }
        },
        line: 446
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 26,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 8
          },
          end: {
            line: 23,
            column: 45
          }
        }, {
          start: {
            line: 23,
            column: 49
          },
          end: {
            line: 23,
            column: 74
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 120
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 11
          },
          end: {
            line: 33,
            column: 22
          }
        }, {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 33,
            column: 37
          }
        }, {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 33,
            column: 78
          }
        }, {
          start: {
            line: 33,
            column: 82
          },
          end: {
            line: 33,
            column: 120
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 36,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 25
          },
          end: {
            line: 36,
            column: 27
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 89
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 42,
            column: 61
          }
        }, {
          start: {
            line: 42,
            column: 65
          },
          end: {
            line: 42,
            column: 89
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: 57,
            column: 15
          },
          end: {
            line: 59,
            column: 9
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 66,
            column: 9
          }
        }, {
          start: {
            line: 64,
            column: 15
          },
          end: {
            line: 66,
            column: 9
          }
        }],
        line: 62
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 82,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "11": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "12": {
        loc: {
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 16
          },
          end: {
            line: 90,
            column: 29
          }
        }, {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 55
          }
        }],
        line: 90
      },
      "13": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "14": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "15": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 26
          }
        }, {
          start: {
            line: 106,
            column: 30
          },
          end: {
            line: 106,
            column: 59
          }
        }],
        line: 106
      },
      "16": {
        loc: {
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 12
          },
          end: {
            line: 111,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "17": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "18": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 130,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "19": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "20": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 131,
            column: 26
          }
        }, {
          start: {
            line: 131,
            column: 30
          },
          end: {
            line: 131,
            column: 59
          }
        }],
        line: 131
      },
      "21": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "22": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "23": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "24": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 163,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "25": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 26
          }
        }, {
          start: {
            line: 158,
            column: 30
          },
          end: {
            line: 158,
            column: 59
          }
        }],
        line: 158
      },
      "26": {
        loc: {
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 166,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 12
          },
          end: {
            line: 166,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "27": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "28": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "29": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 193,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "30": {
        loc: {
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 191,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 191,
            column: 21
          }
        }, {
          start: {
            line: 189,
            column: 27
          },
          end: {
            line: 191,
            column: 21
          }
        }],
        line: 187
      },
      "31": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 35
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 195,
            column: 35
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "32": {
        loc: {
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 19
          },
          end: {
            line: 197,
            column: 23
          }
        }, {
          start: {
            line: 197,
            column: 27
          },
          end: {
            line: 197,
            column: 29
          }
        }],
        line: 197
      },
      "33": {
        loc: {
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 202,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 12
          },
          end: {
            line: 202,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "34": {
        loc: {
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 200,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 200,
            column: 16
          },
          end: {
            line: 200,
            column: 30
          }
        }, {
          start: {
            line: 200,
            column: 34
          },
          end: {
            line: 200,
            column: 63
          }
        }],
        line: 200
      },
      "35": {
        loc: {
          start: {
            line: 208,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 209,
            column: 12
          },
          end: {
            line: 235,
            column: 18
          }
        }, {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 262,
            column: 18
          }
        }, {
          start: {
            line: 263,
            column: 12
          },
          end: {
            line: 276,
            column: 18
          }
        }, {
          start: {
            line: 277,
            column: 12
          },
          end: {
            line: 278,
            column: 26
          }
        }],
        line: 208
      },
      "36": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 303,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 303,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "37": {
        loc: {
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 8
          },
          end: {
            line: 307,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "38": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 324,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 324,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "39": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 337,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 329,
            column: 22
          }
        }, {
          start: {
            line: 330,
            column: 12
          },
          end: {
            line: 333,
            column: 22
          }
        }, {
          start: {
            line: 334,
            column: 12
          },
          end: {
            line: 336,
            column: 22
          }
        }],
        line: 326
      },
      "40": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "41": {
        loc: {
          start: {
            line: 344,
            column: 59
          },
          end: {
            line: 344,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 344,
            column: 59
          },
          end: {
            line: 344,
            column: 66
          }
        }, {
          start: {
            line: 344,
            column: 70
          },
          end: {
            line: 344,
            column: 72
          }
        }],
        line: 344
      },
      "42": {
        loc: {
          start: {
            line: 346,
            column: 15
          },
          end: {
            line: 346,
            column: 47
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 346,
            column: 24
          },
          end: {
            line: 346,
            column: 42
          }
        }, {
          start: {
            line: 346,
            column: 45
          },
          end: {
            line: 346,
            column: 47
          }
        }],
        line: 346
      },
      "43": {
        loc: {
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 349,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 349,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      },
      "44": {
        loc: {
          start: {
            line: 350,
            column: 59
          },
          end: {
            line: 350,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 350,
            column: 59
          },
          end: {
            line: 350,
            column: 66
          }
        }, {
          start: {
            line: 350,
            column: 70
          },
          end: {
            line: 350,
            column: 72
          }
        }],
        line: 350
      },
      "45": {
        loc: {
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 363,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 363
      },
      "46": {
        loc: {
          start: {
            line: 364,
            column: 19
          },
          end: {
            line: 368,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 19
          },
          end: {
            line: 364,
            column: 46
          }
        }, {
          start: {
            line: 364,
            column: 50
          },
          end: {
            line: 368,
            column: 13
          }
        }],
        line: 364
      },
      "47": {
        loc: {
          start: {
            line: 367,
            column: 24
          },
          end: {
            line: 367,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 367,
            column: 49
          },
          end: {
            line: 367,
            column: 58
          }
        }, {
          start: {
            line: 367,
            column: 61
          },
          end: {
            line: 367,
            column: 69
          }
        }],
        line: 367
      },
      "48": {
        loc: {
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 8
          },
          end: {
            line: 377,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "49": {
        loc: {
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 398,
            column: 8
          },
          end: {
            line: 406,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 398
      },
      "50": {
        loc: {
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 411,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "51": {
        loc: {
          start: {
            line: 436,
            column: 15
          },
          end: {
            line: 436,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 436,
            column: 40
          },
          end: {
            line: 436,
            column: 44
          }
        }, {
          start: {
            line: 436,
            column: 47
          },
          end: {
            line: 436,
            column: 50
          }
        }],
        line: 436
      },
      "52": {
        loc: {
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 441,
            column: 8
          },
          end: {
            line: 443,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 441
      },
      "53": {
        loc: {
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 444,
            column: 8
          },
          end: {
            line: 447,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 444
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0, 0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\backendService.ts"],
      sourcesContent: ["import { supabase } from \"../lib/supabase\"\r\nimport type { Database } from \"../lib/supabase\"\r\n\r\ntype Tables<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Row\"]\r\ntype Inserts<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Insert\"]\r\ntype Updates<T extends keyof Database[\"public\"][\"Tables\"]> = Database[\"public\"][\"Tables\"][T][\"Update\"]\r\n\r\nexport interface BackendConfig {\r\n  apiUrl: string\r\n  timeout: number\r\n  retryAttempts: number\r\n  enableOfflineMode: boolean\r\n  syncInterval: number\r\n}\r\n\r\nexport interface SyncStatus {\r\n  entity: string\r\n  lastSync: string\r\n  status: \"synced\" | \"pending\" | \"error\"\r\n  errorMessage?: string\r\n}\r\n\r\nexport interface OfflineAction {\r\n  id: string\r\n  type: \"create\" | \"update\" | \"delete\"\r\n  entity: string\r\n  data: Record<string, unknown>\r\n  timestamp: string\r\n  synced: boolean\r\n}\r\n\r\nexport interface BackupData {\r\n  id: string\r\n  timestamp: string\r\n  entities: Record<string, unknown[]>\r\n  size: number\r\n  compressed: boolean\r\n}\r\n\r\n// Helper function to ensure secure URL\r\nconst ensureSecureUrl = (url: string): string => {\r\n  // In production, enforce HTTPS\r\n  if (process.env.NODE_ENV === 'production' && url.startsWith('http://')) {\r\n    console.warn('Insecure HTTP URL detected in production, converting to HTTPS:', url)\r\n    return url.replace('http://', 'https://')\r\n  }\r\n  return url\r\n}\r\n\r\n// Helper function to check if we have a real Supabase connection\r\nconst isRealSupabaseConnection = () => {\r\n  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL\r\n  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\r\n  return supabaseUrl && supabaseKey && !supabaseUrl.includes(\"your-project\") && !supabaseKey.includes(\"your-anon-key\")\r\n}\r\n\r\nclass BackendService {\r\n  private config: BackendConfig\r\n  private offlineQueue: OfflineAction[] = []\r\n  private syncStatus: Map<string, SyncStatus> = new Map()\r\n  private isOnline = navigator.onLine\r\n  private syncInterval: NodeJS.Timeout | null = null\r\n  private hasRealConnection = false\r\n\r\n  constructor(config: Partial<BackendConfig> = {}) {\r\n    const defaultApiUrl = process.env.NEXT_PUBLIC_API_URL || \"https://localhost:3001\"\r\n    \r\n    this.config = {\r\n      apiUrl: ensureSecureUrl(defaultApiUrl),\r\n      timeout: 30000,\r\n      retryAttempts: 3,\r\n      enableOfflineMode: true,\r\n      syncInterval: 30000, // 30 seconds\r\n      ...config,\r\n    }\r\n\r\n    // Ensure the configured URL is also secure\r\n    this.config.apiUrl = ensureSecureUrl(this.config.apiUrl)\r\n\r\n    this.hasRealConnection = Boolean(isRealSupabaseConnection())\r\n\r\n    if (this.hasRealConnection) {\r\n      this.initializeOfflineSupport()\r\n      this.startSyncInterval()\r\n    } else {\r\n      // Silent logging - Backend service running in mock mode\r\n    }\r\n  }\r\n\r\n  async initialize(): Promise<void> {\r\n    if (this.hasRealConnection) {\r\n      // Silent logging - Backend service initialized with real database\r\n    } else {\r\n      // Silent logging - Backend service initialized in mock mode\r\n    }\r\n  }\r\n\r\n  // Connection Management\r\n  private initializeOfflineSupport(): void {\r\n    if (!this.hasRealConnection) return\r\n\r\n    window.addEventListener(\"online\", () => {\r\n      this.isOnline = true\r\n      this.syncOfflineActions()\r\n    })\r\n\r\n    window.addEventListener(\"offline\", () => {\r\n      this.isOnline = false\r\n    })\r\n\r\n    // Load offline queue from localStorage\r\n    const savedQueue = localStorage.getItem(\"offline_queue\")\r\n    if (savedQueue) {\r\n      this.offlineQueue = JSON.parse(savedQueue)\r\n    }\r\n  }\r\n\r\n  private startSyncInterval(): void {\r\n    if (!this.hasRealConnection) return\r\n\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval)\r\n    }\r\n\r\n    this.syncInterval = setInterval(() => {\r\n      if (this.isOnline && this.hasRealConnection) {\r\n        this.syncAllEntities()\r\n      }\r\n    }, this.config.syncInterval)\r\n  }\r\n\r\n  // CRUD Operations with Offline Support\r\n  async create<T extends keyof Database[\"public\"][\"Tables\"]>(table: T, data: Inserts<T>): Promise<Tables<T>> {\r\n    if (!this.hasRealConnection) {\r\n      // Return mock data for development\r\n      return {\r\n        id: crypto.randomUUID(),\r\n        ...data,\r\n        created_at: new Date().toISOString(),\r\n        updated_at: new Date().toISOString(),\r\n      } as Tables<T>\r\n    }\r\n\r\n    if (!this.isOnline && this.config.enableOfflineMode) {\r\n      return this.queueOfflineAction(\"create\", table as string, data as any)\r\n    }\r\n\r\n    try {\r\n      const { data: result, error } = await (supabase as any).from(table).insert(data as any).select().single()\r\n\r\n      if (error) throw error\r\n\r\n      // Update sync status\r\n      this.updateSyncStatus(table as string, \"synced\")\r\n\r\n      return result as Tables<T>\r\n    } catch (error: any) {\r\n      if (this.config.enableOfflineMode) {\r\n        return this.queueOfflineAction(\"create\", table as string, data as any)\r\n      }\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async update<T extends keyof Database[\"public\"][\"Tables\"]>(\r\n    table: T,\r\n    id: string,\r\n    data: Updates<T>,\r\n  ): Promise<Tables<T>> {\r\n    if (!this.hasRealConnection) {\r\n      // Return mock data for development\r\n      return {\r\n        id,\r\n        ...data,\r\n        updated_at: new Date().toISOString(),\r\n      } as Tables<T>\r\n    }\r\n\r\n    if (!this.isOnline && this.config.enableOfflineMode) {\r\n      return this.queueOfflineAction(\"update\", table as string, { id, ...data as any })\r\n    }\r\n\r\n    try {\r\n      const { data: result, error } = await (supabase as any).from(table).update(data as any).eq(\"id\", id as any).select().single()\r\n\r\n      if (error) throw error\r\n\r\n      this.updateSyncStatus(table as string, \"synced\")\r\n\r\n      return result as Tables<T>\r\n    } catch (error: any) {\r\n      if (this.config.enableOfflineMode) {\r\n        return this.queueOfflineAction(\"update\", table as string, { id, ...data as any })\r\n      }\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async delete<T extends keyof Database[\"public\"][\"Tables\"]>(table: T, id: string): Promise<void> {\r\n    if (!this.hasRealConnection) {\r\n      // Mock delete - just log it\r\n      // Silent logging - Mock delete operation\r\n      return\r\n    }\r\n\r\n    if (!this.isOnline && this.config.enableOfflineMode) {\r\n      this.queueOfflineAction(\"delete\", table as string, { id })\r\n      return\r\n    }\r\n\r\n    try {\r\n      const { error } = await (supabase as any).from(table).delete().eq(\"id\", id as any)\r\n\r\n      if (error) throw error\r\n\r\n      this.updateSyncStatus(table as string, \"synced\")\r\n    } catch (error: any) {\r\n      if (this.config.enableOfflineMode) {\r\n        this.queueOfflineAction(\"delete\", table as string, { id })\r\n        return\r\n      }\r\n      throw error\r\n    }\r\n  }\r\n\r\n  async read<T extends keyof Database[\"public\"][\"Tables\"]>(\r\n    table: T,\r\n    filters?: Record<string, any>,\r\n  ): Promise<Tables<T>[]> {\r\n    if (!this.hasRealConnection) {\r\n      // Return mock data based on table\r\n      return this.getMockData(table as string) as Tables<T>[]\r\n    }\r\n\r\n    try {\r\n      let query = (supabase as any).from(table).select(\"*\")\r\n\r\n      if (filters) {\r\n        Object.entries(filters).forEach(([key, value]) => {\r\n          if (Array.isArray(value)) {\r\n            query = query.in(key as any, value as any)\r\n          } else {\r\n            query = query.eq(key as any, value as any)\r\n          }\r\n        })\r\n      }\r\n\r\n      const { data, error } = await query\r\n\r\n      if (error) throw error\r\n\r\n      this.updateSyncStatus(table as string, \"synced\")\r\n\r\n      return (data || []) as Tables<T>[]\r\n    } catch (error: any) {\r\n      // Try to get cached data if offline\r\n      if (!this.isOnline && this.config.enableOfflineMode) {\r\n        return this.getCachedData(table as string, filters)\r\n      }\r\n      throw error\r\n    }\r\n  }\r\n\r\n  // Mock data for development\r\n  private getMockData(table: string): any[] {\r\n    switch (table) {\r\n      case \"clients\":\r\n        return [\r\n          {\r\n            id: \"1\",\r\n            name: \"Acme Corp\",\r\n            email: \"john@acme.com\",\r\n            phone: \"555-0123\",\r\n            company: \"Acme Corporation\",\r\n            status: \"active\",\r\n            stage: \"1\",\r\n            value: 5000,\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString(),\r\n          },\r\n          {\r\n            id: \"2\",\r\n            name: \"Tech Solutions\",\r\n            email: \"sarah@techsolutions.com\",\r\n            phone: \"555-0456\",\r\n            company: \"Tech Solutions Inc\",\r\n            status: \"active\",\r\n            stage: \"3\",\r\n            value: 12000,\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString(),\r\n          },\r\n        ]\r\n      case \"tasks\":\r\n        return [\r\n          {\r\n            id: \"1\",\r\n            title: \"Design Homepage\",\r\n            description: \"Create homepage design mockup\",\r\n            status: \"pending\",\r\n            priority: \"high\",\r\n            due_date: \"2024-02-15\",\r\n            client_id: \"1\",\r\n            assigned_to: \"John Doe\",\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString(),\r\n          },\r\n          {\r\n            id: \"2\",\r\n            title: \"Client Review\",\r\n            description: \"Review client feedback\",\r\n            status: \"completed\",\r\n            priority: \"medium\",\r\n            due_date: \"2024-02-20\",\r\n            client_id: \"2\",\r\n            assigned_to: \"Jane Smith\",\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString(),\r\n          },\r\n        ]\r\n      case \"events\":\r\n        return [\r\n          {\r\n            id: \"1\",\r\n            title: \"Client Meeting\",\r\n            description: \"Discuss project requirements\",\r\n            start_date: \"2024-02-15T10:00:00Z\",\r\n            end_date: \"2024-02-15T11:00:00Z\",\r\n            type: \"meeting\",\r\n            client_id: \"1\",\r\n            created_at: new Date().toISOString(),\r\n            updated_at: new Date().toISOString(),\r\n          },\r\n        ]\r\n      default:\r\n        return []\r\n    }\r\n  }\r\n\r\n  // Offline Queue Management\r\n  private queueOfflineAction(type: OfflineAction[\"type\"], entity: string, data: any): any {\r\n    const action: OfflineAction = {\r\n      id: crypto.randomUUID(),\r\n      type,\r\n      entity,\r\n      data,\r\n      timestamp: new Date().toISOString(),\r\n      synced: false,\r\n    }\r\n\r\n    this.offlineQueue.push(action)\r\n    this.saveOfflineQueue()\r\n    this.updateSyncStatus(entity, \"pending\")\r\n\r\n    // Return optimistic result for UI\r\n    return {\r\n      id: action.id,\r\n      ...data,\r\n      created_at: action.timestamp,\r\n      updated_at: action.timestamp,\r\n    }\r\n  }\r\n\r\n  private saveOfflineQueue(): void {\r\n    if (!this.hasRealConnection) return\r\n    localStorage.setItem(\"offline_queue\", JSON.stringify(this.offlineQueue))\r\n  }\r\n\r\n  private async syncOfflineActions(): Promise<void> {\r\n    if (!this.hasRealConnection) return\r\n\r\n    const pendingActions = this.offlineQueue.filter((action) => !action.synced)\r\n\r\n    for (const action of pendingActions) {\r\n      try {\r\n        await this.executeOfflineAction(action)\r\n        action.synced = true\r\n        this.updateSyncStatus(action.entity, \"synced\")\r\n      } catch (error: any) {\r\n        // Silent error handling - Failed to sync action\r\n        this.updateSyncStatus(action.entity, \"error\", error.message)\r\n      }\r\n    }\r\n\r\n    // Remove synced actions\r\n    this.offlineQueue = this.offlineQueue.filter((action) => !action.synced)\r\n    this.saveOfflineQueue()\r\n  }\r\n\r\n  private async executeOfflineAction(action: OfflineAction): Promise<void> {\r\n    if (!this.hasRealConnection) return\r\n\r\n    const { type, entity, data } = action\r\n\r\n    switch (type) {\r\n      case \"create\":\r\n        await (supabase as any).from(entity).insert(data as any)\r\n        break\r\n      case \"update\":\r\n        const { id, ...updateData } = data\r\n        await (supabase as any).from(entity).update(updateData as any).eq(\"id\", id as any)\r\n        break\r\n      case \"delete\":\r\n        await (supabase as any).from(entity).delete().eq(\"id\", (data as any).id)\r\n        break\r\n    }\r\n  }\r\n\r\n  // Caching\r\n  private getCachedData(entity: string, filters?: Record<string, any>): any[] {\r\n    if (!this.hasRealConnection) {\r\n      return this.getMockData(entity)\r\n    }\r\n\r\n    const cacheKey = `cache_${entity}_${JSON.stringify(filters || {})}`\r\n    const cached = localStorage.getItem(cacheKey)\r\n    return cached ? JSON.parse(cached) : []\r\n  }\r\n\r\n  private setCachedData(entity: string, data: any[], filters?: Record<string, any>): void {\r\n    if (!this.hasRealConnection) return\r\n\r\n    const cacheKey = `cache_${entity}_${JSON.stringify(filters || {})}`\r\n    localStorage.setItem(cacheKey, JSON.stringify(data))\r\n  }\r\n\r\n  // Sync Status Management\r\n  private updateSyncStatus(entity: string, status: SyncStatus[\"status\"], errorMessage?: string): void {\r\n    this.syncStatus.set(entity, {\r\n      entity,\r\n      lastSync: new Date().toISOString(),\r\n      status,\r\n      errorMessage,\r\n    })\r\n  }\r\n\r\n  getSyncStatus(entity?: string): SyncStatus | SyncStatus[] {\r\n    if (entity) {\r\n      return (\r\n        this.syncStatus.get(entity) || {\r\n          entity,\r\n          lastSync: \"\",\r\n          status: this.hasRealConnection ? \"pending\" : \"synced\",\r\n        }\r\n      )\r\n    }\r\n    return Array.from(this.syncStatus.values())\r\n  }\r\n\r\n  // Full Sync\r\n  private async syncAllEntities(): Promise<void> {\r\n    if (!this.hasRealConnection) {\r\n      // Silent logging - Skipping sync, using mock data\r\n      return\r\n    }\r\n\r\n    const entities = [\"clients\", \"tasks\", \"events\", \"projects\", \"invoices\"]\r\n\r\n    for (const entity of entities) {\r\n      try {\r\n        const data = await this.read(entity as any)\r\n        this.setCachedData(entity, data)\r\n        this.updateSyncStatus(entity, \"synced\")\r\n      } catch (error: any) {\r\n        // Silent error handling - Failed to sync entity\r\n        this.updateSyncStatus(entity, \"error\", error.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  // Performance Monitoring\r\n  async getPerformanceMetrics(): Promise<{\r\n    responseTime: number\r\n    errorRate: number\r\n    syncQueueSize: number\r\n    cacheHitRate: number\r\n  }> {\r\n    if (!this.hasRealConnection) {\r\n      // Return mock metrics for development\r\n      return {\r\n        responseTime: 50,\r\n        errorRate: 0,\r\n        syncQueueSize: 0,\r\n        cacheHitRate: 1,\r\n      }\r\n    }\r\n\r\n    const startTime = Date.now()\r\n\r\n    try {\r\n      if (!supabase) {\r\n        throw new Error(\"Supabase client not initialized\")\r\n      }\r\n      \r\n      await supabase.from(\"clients\").select(\"count\").limit(1)\r\n      const responseTime = Date.now() - startTime\r\n\r\n      return {\r\n        responseTime,\r\n        errorRate: this.calculateErrorRate(),\r\n        syncQueueSize: this.offlineQueue.length,\r\n        cacheHitRate: this.calculateCacheHitRate(),\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        responseTime: -1,\r\n        errorRate: 1,\r\n        syncQueueSize: this.offlineQueue.length,\r\n        cacheHitRate: 0,\r\n      }\r\n    }\r\n  }\r\n\r\n  private calculateErrorRate(): number {\r\n    const errorStatuses = Array.from(this.syncStatus.values()).filter((status) => status.status === \"error\")\r\n    return errorStatuses.length / Math.max(this.syncStatus.size, 1)\r\n  }\r\n\r\n  private calculateCacheHitRate(): number {\r\n    // Simplified cache hit rate calculation\r\n    // In a real implementation, you'd track cache hits vs misses\r\n    return this.hasRealConnection ? 0.85 : 1.0 // 100% hit rate for mock data\r\n  }\r\n\r\n  // Cleanup\r\n  destroy(): void {\r\n    if (this.syncInterval) {\r\n      clearInterval(this.syncInterval)\r\n    }\r\n\r\n    if (this.hasRealConnection) {\r\n      window.removeEventListener(\"online\", this.syncOfflineActions)\r\n      window.removeEventListener(\"offline\", () => (this.isOnline = false))\r\n    }\r\n  }\r\n}\r\n\r\nexport const backendService = new BackendService()\r\nexport default backendService\r\n"],
      names: ["backendService", "ensureSecureUrl", "url", "process", "env", "NODE_ENV", "startsWith", "console", "warn", "replace", "isRealSupabaseConnection", "supabaseUrl", "NEXT_PUBLIC_SUPABASE_URL", "supabaseKey", "NEXT_PUBLIC_SUPABASE_ANON_KEY", "includes", "BackendService", "config", "offlineQueue", "syncStatus", "Map", "isOnline", "navigator", "onLine", "syncInterval", "hasRealConnection", "defaultApiUrl", "NEXT_PUBLIC_API_URL", "apiUrl", "timeout", "retryAttempts", "enableOfflineMode", "Boolean", "initializeOfflineSupport", "startSyncInterval", "initialize", "window", "addEventListener", "syncOfflineActions", "savedQueue", "localStorage", "getItem", "JSON", "parse", "clearInterval", "setInterval", "syncAllEntities", "create", "table", "data", "id", "crypto", "randomUUID", "created_at", "Date", "toISOString", "updated_at", "queueOfflineAction", "result", "error", "supabase", "from", "insert", "select", "single", "updateSyncStatus", "update", "eq", "delete", "read", "filters", "getMockData", "query", "Object", "entries", "forEach", "key", "value", "Array", "isArray", "in", "getCachedData", "name", "email", "phone", "company", "status", "stage", "title", "description", "priority", "due_date", "client_id", "assigned_to", "start_date", "end_date", "type", "entity", "action", "timestamp", "synced", "push", "saveOfflineQueue", "setItem", "stringify", "pendingActions", "filter", "executeOfflineAction", "message", "updateData", "cacheKey", "cached", "setCachedData", "errorMessage", "set", "lastSync", "getSyncStatus", "get", "values", "entities", "getPerformanceMetrics", "responseTime", "errorRate", "syncQueueSize", "cacheHitRate", "startTime", "now", "Error", "limit", "calculateErrorRate", "length", "calculateCacheHitRate", "errorStatuses", "Math", "max", "size", "destroy", "removeEventListener"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c2b9acbd365b7e3050c8219e520bb0bd051e097b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_255m12gg1k = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_255m12gg1k();
cov_255m12gg1k().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_255m12gg1k().f[0]++;
  cov_255m12gg1k().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_255m12gg1k().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_255m12gg1k().s[3]++;
_export(exports, {
  get backendService() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[1]++;
    cov_255m12gg1k().s[4]++;
    return backendService;
  },
  get default() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[2]++;
    cov_255m12gg1k().s[5]++;
    return _default;
  }
});
const _supabase =
/* istanbul ignore next */
(cov_255m12gg1k().s[6]++, require("../lib/supabase"));
// Helper function to ensure secure URL
/* istanbul ignore next */
cov_255m12gg1k().s[7]++;
const ensureSecureUrl = url => {
  /* istanbul ignore next */
  cov_255m12gg1k().f[3]++;
  cov_255m12gg1k().s[8]++;
  // In production, enforce HTTPS
  if (
  /* istanbul ignore next */
  (cov_255m12gg1k().b[1][0]++, process.env.NODE_ENV === 'production') &&
  /* istanbul ignore next */
  (cov_255m12gg1k().b[1][1]++, url.startsWith('http://'))) {
    /* istanbul ignore next */
    cov_255m12gg1k().b[0][0]++;
    cov_255m12gg1k().s[9]++;
    console.warn('Insecure HTTP URL detected in production, converting to HTTPS:', url);
    /* istanbul ignore next */
    cov_255m12gg1k().s[10]++;
    return url.replace('http://', 'https://');
  } else
  /* istanbul ignore next */
  {
    cov_255m12gg1k().b[0][1]++;
  }
  cov_255m12gg1k().s[11]++;
  return url;
};
// Helper function to check if we have a real Supabase connection
/* istanbul ignore next */
cov_255m12gg1k().s[12]++;
const isRealSupabaseConnection = () => {
  /* istanbul ignore next */
  cov_255m12gg1k().f[4]++;
  const supabaseUrl =
  /* istanbul ignore next */
  (cov_255m12gg1k().s[13]++, process.env.NEXT_PUBLIC_SUPABASE_URL);
  const supabaseKey =
  /* istanbul ignore next */
  (cov_255m12gg1k().s[14]++, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY);
  /* istanbul ignore next */
  cov_255m12gg1k().s[15]++;
  return /* istanbul ignore next */(cov_255m12gg1k().b[2][0]++, supabaseUrl) &&
  /* istanbul ignore next */
  (cov_255m12gg1k().b[2][1]++, supabaseKey) &&
  /* istanbul ignore next */
  (cov_255m12gg1k().b[2][2]++, !supabaseUrl.includes("your-project")) &&
  /* istanbul ignore next */
  (cov_255m12gg1k().b[2][3]++, !supabaseKey.includes("your-anon-key"));
};
class BackendService {
  constructor(config =
  /* istanbul ignore next */
  (cov_255m12gg1k().b[3][0]++, {})) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[5]++;
    cov_255m12gg1k().s[16]++;
    this.offlineQueue = [];
    /* istanbul ignore next */
    cov_255m12gg1k().s[17]++;
    this.syncStatus = new Map();
    /* istanbul ignore next */
    cov_255m12gg1k().s[18]++;
    this.isOnline = navigator.onLine;
    /* istanbul ignore next */
    cov_255m12gg1k().s[19]++;
    this.syncInterval = null;
    /* istanbul ignore next */
    cov_255m12gg1k().s[20]++;
    this.hasRealConnection = false;
    const defaultApiUrl =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[21]++,
    /* istanbul ignore next */
    (cov_255m12gg1k().b[4][0]++, process.env.NEXT_PUBLIC_API_URL) ||
    /* istanbul ignore next */
    (cov_255m12gg1k().b[4][1]++, "https://localhost:3001"));
    /* istanbul ignore next */
    cov_255m12gg1k().s[22]++;
    this.config = {
      apiUrl: ensureSecureUrl(defaultApiUrl),
      timeout: 30000,
      retryAttempts: 3,
      enableOfflineMode: true,
      syncInterval: 30000,
      ...config
    };
    // Ensure the configured URL is also secure
    /* istanbul ignore next */
    cov_255m12gg1k().s[23]++;
    this.config.apiUrl = ensureSecureUrl(this.config.apiUrl);
    /* istanbul ignore next */
    cov_255m12gg1k().s[24]++;
    this.hasRealConnection = Boolean(isRealSupabaseConnection());
    /* istanbul ignore next */
    cov_255m12gg1k().s[25]++;
    if (this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[5][0]++;
      cov_255m12gg1k().s[26]++;
      this.initializeOfflineSupport();
      /* istanbul ignore next */
      cov_255m12gg1k().s[27]++;
      this.startSyncInterval();
    } else {
      /* istanbul ignore next */
      cov_255m12gg1k().b[5][1]++;
    } // Silent logging - Backend service running in mock mode
  }
  async initialize() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[6]++;
    cov_255m12gg1k().s[28]++;
    if (this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[6][0]++;
    } // Silent logging - Backend service initialized with real database
    else {
      /* istanbul ignore next */
      cov_255m12gg1k().b[6][1]++;
    } // Silent logging - Backend service initialized in mock mode
  }
  // Connection Management
  initializeOfflineSupport() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[7]++;
    cov_255m12gg1k().s[29]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[7][0]++;
      cov_255m12gg1k().s[30]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[7][1]++;
    }
    cov_255m12gg1k().s[31]++;
    window.addEventListener("online", () => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[8]++;
      cov_255m12gg1k().s[32]++;
      this.isOnline = true;
      /* istanbul ignore next */
      cov_255m12gg1k().s[33]++;
      this.syncOfflineActions();
    });
    /* istanbul ignore next */
    cov_255m12gg1k().s[34]++;
    window.addEventListener("offline", () => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[9]++;
      cov_255m12gg1k().s[35]++;
      this.isOnline = false;
    });
    // Load offline queue from localStorage
    const savedQueue =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[36]++, localStorage.getItem("offline_queue"));
    /* istanbul ignore next */
    cov_255m12gg1k().s[37]++;
    if (savedQueue) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[8][0]++;
      cov_255m12gg1k().s[38]++;
      this.offlineQueue = JSON.parse(savedQueue);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[8][1]++;
    }
  }
  startSyncInterval() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[10]++;
    cov_255m12gg1k().s[39]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[9][0]++;
      cov_255m12gg1k().s[40]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[9][1]++;
    }
    cov_255m12gg1k().s[41]++;
    if (this.syncInterval) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[10][0]++;
      cov_255m12gg1k().s[42]++;
      clearInterval(this.syncInterval);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[10][1]++;
    }
    cov_255m12gg1k().s[43]++;
    this.syncInterval = setInterval(() => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[11]++;
      cov_255m12gg1k().s[44]++;
      if (
      /* istanbul ignore next */
      (cov_255m12gg1k().b[12][0]++, this.isOnline) &&
      /* istanbul ignore next */
      (cov_255m12gg1k().b[12][1]++, this.hasRealConnection)) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[11][0]++;
        cov_255m12gg1k().s[45]++;
        this.syncAllEntities();
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[11][1]++;
      }
    }, this.config.syncInterval);
  }
  // CRUD Operations with Offline Support
  async create(table, data) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[12]++;
    cov_255m12gg1k().s[46]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[13][0]++;
      cov_255m12gg1k().s[47]++;
      // Return mock data for development
      return {
        id: crypto.randomUUID(),
        ...data,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString()
      };
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[13][1]++;
    }
    cov_255m12gg1k().s[48]++;
    if (
    /* istanbul ignore next */
    (cov_255m12gg1k().b[15][0]++, !this.isOnline) &&
    /* istanbul ignore next */
    (cov_255m12gg1k().b[15][1]++, this.config.enableOfflineMode)) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[14][0]++;
      cov_255m12gg1k().s[49]++;
      return this.queueOfflineAction("create", table, data);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[14][1]++;
    }
    cov_255m12gg1k().s[50]++;
    try {
      const {
        data: result,
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[51]++, await _supabase.supabase.from(table).insert(data).select().single());
      /* istanbul ignore next */
      cov_255m12gg1k().s[52]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[16][0]++;
        cov_255m12gg1k().s[53]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[16][1]++;
      }
      // Update sync status
      cov_255m12gg1k().s[54]++;
      this.updateSyncStatus(table, "synced");
      /* istanbul ignore next */
      cov_255m12gg1k().s[55]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[56]++;
      if (this.config.enableOfflineMode) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[17][0]++;
        cov_255m12gg1k().s[57]++;
        return this.queueOfflineAction("create", table, data);
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[17][1]++;
      }
      cov_255m12gg1k().s[58]++;
      throw error;
    }
  }
  async update(table, id, data) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[13]++;
    cov_255m12gg1k().s[59]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[18][0]++;
      cov_255m12gg1k().s[60]++;
      // Return mock data for development
      return {
        id,
        ...data,
        updated_at: new Date().toISOString()
      };
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[18][1]++;
    }
    cov_255m12gg1k().s[61]++;
    if (
    /* istanbul ignore next */
    (cov_255m12gg1k().b[20][0]++, !this.isOnline) &&
    /* istanbul ignore next */
    (cov_255m12gg1k().b[20][1]++, this.config.enableOfflineMode)) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[19][0]++;
      cov_255m12gg1k().s[62]++;
      return this.queueOfflineAction("update", table, {
        id,
        ...data
      });
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[19][1]++;
    }
    cov_255m12gg1k().s[63]++;
    try {
      const {
        data: result,
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[64]++, await _supabase.supabase.from(table).update(data).eq("id", id).select().single());
      /* istanbul ignore next */
      cov_255m12gg1k().s[65]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[21][0]++;
        cov_255m12gg1k().s[66]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[21][1]++;
      }
      cov_255m12gg1k().s[67]++;
      this.updateSyncStatus(table, "synced");
      /* istanbul ignore next */
      cov_255m12gg1k().s[68]++;
      return result;
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[69]++;
      if (this.config.enableOfflineMode) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[22][0]++;
        cov_255m12gg1k().s[70]++;
        return this.queueOfflineAction("update", table, {
          id,
          ...data
        });
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[22][1]++;
      }
      cov_255m12gg1k().s[71]++;
      throw error;
    }
  }
  async delete(table, id) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[14]++;
    cov_255m12gg1k().s[72]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[23][0]++;
      cov_255m12gg1k().s[73]++;
      // Mock delete - just log it
      // Silent logging - Mock delete operation
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[23][1]++;
    }
    cov_255m12gg1k().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_255m12gg1k().b[25][0]++, !this.isOnline) &&
    /* istanbul ignore next */
    (cov_255m12gg1k().b[25][1]++, this.config.enableOfflineMode)) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[24][0]++;
      cov_255m12gg1k().s[75]++;
      this.queueOfflineAction("delete", table, {
        id
      });
      /* istanbul ignore next */
      cov_255m12gg1k().s[76]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[24][1]++;
    }
    cov_255m12gg1k().s[77]++;
    try {
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[78]++, await _supabase.supabase.from(table).delete().eq("id", id));
      /* istanbul ignore next */
      cov_255m12gg1k().s[79]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[26][0]++;
        cov_255m12gg1k().s[80]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[26][1]++;
      }
      cov_255m12gg1k().s[81]++;
      this.updateSyncStatus(table, "synced");
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[82]++;
      if (this.config.enableOfflineMode) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[27][0]++;
        cov_255m12gg1k().s[83]++;
        this.queueOfflineAction("delete", table, {
          id
        });
        /* istanbul ignore next */
        cov_255m12gg1k().s[84]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[27][1]++;
      }
      cov_255m12gg1k().s[85]++;
      throw error;
    }
  }
  async read(table, filters) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[15]++;
    cov_255m12gg1k().s[86]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[28][0]++;
      cov_255m12gg1k().s[87]++;
      // Return mock data based on table
      return this.getMockData(table);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[28][1]++;
    }
    cov_255m12gg1k().s[88]++;
    try {
      let query =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[89]++, _supabase.supabase.from(table).select("*"));
      /* istanbul ignore next */
      cov_255m12gg1k().s[90]++;
      if (filters) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[29][0]++;
        cov_255m12gg1k().s[91]++;
        Object.entries(filters).forEach(([key, value]) => {
          /* istanbul ignore next */
          cov_255m12gg1k().f[16]++;
          cov_255m12gg1k().s[92]++;
          if (Array.isArray(value)) {
            /* istanbul ignore next */
            cov_255m12gg1k().b[30][0]++;
            cov_255m12gg1k().s[93]++;
            query = query.in(key, value);
          } else {
            /* istanbul ignore next */
            cov_255m12gg1k().b[30][1]++;
            cov_255m12gg1k().s[94]++;
            query = query.eq(key, value);
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[29][1]++;
      }
      const {
        data,
        error
      } =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[95]++, await query);
      /* istanbul ignore next */
      cov_255m12gg1k().s[96]++;
      if (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[31][0]++;
        cov_255m12gg1k().s[97]++;
        throw error;
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[31][1]++;
      }
      cov_255m12gg1k().s[98]++;
      this.updateSyncStatus(table, "synced");
      /* istanbul ignore next */
      cov_255m12gg1k().s[99]++;
      return /* istanbul ignore next */(cov_255m12gg1k().b[32][0]++, data) ||
      /* istanbul ignore next */
      (cov_255m12gg1k().b[32][1]++, []);
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[100]++;
      // Try to get cached data if offline
      if (
      /* istanbul ignore next */
      (cov_255m12gg1k().b[34][0]++, !this.isOnline) &&
      /* istanbul ignore next */
      (cov_255m12gg1k().b[34][1]++, this.config.enableOfflineMode)) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[33][0]++;
        cov_255m12gg1k().s[101]++;
        return this.getCachedData(table, filters);
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[33][1]++;
      }
      cov_255m12gg1k().s[102]++;
      throw error;
    }
  }
  // Mock data for development
  getMockData(table) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[17]++;
    cov_255m12gg1k().s[103]++;
    switch (table) {
      case "clients":
        /* istanbul ignore next */
        cov_255m12gg1k().b[35][0]++;
        cov_255m12gg1k().s[104]++;
        return [{
          id: "1",
          name: "Acme Corp",
          email: "john@acme.com",
          phone: "555-0123",
          company: "Acme Corporation",
          status: "active",
          stage: "1",
          value: 5000,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }, {
          id: "2",
          name: "Tech Solutions",
          email: "sarah@techsolutions.com",
          phone: "555-0456",
          company: "Tech Solutions Inc",
          status: "active",
          stage: "3",
          value: 12000,
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }];
      case "tasks":
        /* istanbul ignore next */
        cov_255m12gg1k().b[35][1]++;
        cov_255m12gg1k().s[105]++;
        return [{
          id: "1",
          title: "Design Homepage",
          description: "Create homepage design mockup",
          status: "pending",
          priority: "high",
          due_date: "2024-02-15",
          client_id: "1",
          assigned_to: "John Doe",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }, {
          id: "2",
          title: "Client Review",
          description: "Review client feedback",
          status: "completed",
          priority: "medium",
          due_date: "2024-02-20",
          client_id: "2",
          assigned_to: "Jane Smith",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }];
      case "events":
        /* istanbul ignore next */
        cov_255m12gg1k().b[35][2]++;
        cov_255m12gg1k().s[106]++;
        return [{
          id: "1",
          title: "Client Meeting",
          description: "Discuss project requirements",
          start_date: "2024-02-15T10:00:00Z",
          end_date: "2024-02-15T11:00:00Z",
          type: "meeting",
          client_id: "1",
          created_at: new Date().toISOString(),
          updated_at: new Date().toISOString()
        }];
      default:
        /* istanbul ignore next */
        cov_255m12gg1k().b[35][3]++;
        cov_255m12gg1k().s[107]++;
        return [];
    }
  }
  // Offline Queue Management
  queueOfflineAction(type, entity, data) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[18]++;
    const action =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[108]++, {
      id: crypto.randomUUID(),
      type,
      entity,
      data,
      timestamp: new Date().toISOString(),
      synced: false
    });
    /* istanbul ignore next */
    cov_255m12gg1k().s[109]++;
    this.offlineQueue.push(action);
    /* istanbul ignore next */
    cov_255m12gg1k().s[110]++;
    this.saveOfflineQueue();
    /* istanbul ignore next */
    cov_255m12gg1k().s[111]++;
    this.updateSyncStatus(entity, "pending");
    // Return optimistic result for UI
    /* istanbul ignore next */
    cov_255m12gg1k().s[112]++;
    return {
      id: action.id,
      ...data,
      created_at: action.timestamp,
      updated_at: action.timestamp
    };
  }
  saveOfflineQueue() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[19]++;
    cov_255m12gg1k().s[113]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[36][0]++;
      cov_255m12gg1k().s[114]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[36][1]++;
    }
    cov_255m12gg1k().s[115]++;
    localStorage.setItem("offline_queue", JSON.stringify(this.offlineQueue));
  }
  async syncOfflineActions() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[20]++;
    cov_255m12gg1k().s[116]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[37][0]++;
      cov_255m12gg1k().s[117]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[37][1]++;
    }
    const pendingActions =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[118]++, this.offlineQueue.filter(action => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[21]++;
      cov_255m12gg1k().s[119]++;
      return !action.synced;
    }));
    /* istanbul ignore next */
    cov_255m12gg1k().s[120]++;
    for (const action of pendingActions) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[121]++;
      try {
        /* istanbul ignore next */
        cov_255m12gg1k().s[122]++;
        await this.executeOfflineAction(action);
        /* istanbul ignore next */
        cov_255m12gg1k().s[123]++;
        action.synced = true;
        /* istanbul ignore next */
        cov_255m12gg1k().s[124]++;
        this.updateSyncStatus(action.entity, "synced");
      } catch (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().s[125]++;
        // Silent error handling - Failed to sync action
        this.updateSyncStatus(action.entity, "error", error.message);
      }
    }
    // Remove synced actions
    /* istanbul ignore next */
    cov_255m12gg1k().s[126]++;
    this.offlineQueue = this.offlineQueue.filter(action => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[22]++;
      cov_255m12gg1k().s[127]++;
      return !action.synced;
    });
    /* istanbul ignore next */
    cov_255m12gg1k().s[128]++;
    this.saveOfflineQueue();
  }
  async executeOfflineAction(action) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[23]++;
    cov_255m12gg1k().s[129]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[38][0]++;
      cov_255m12gg1k().s[130]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[38][1]++;
    }
    const {
      type,
      entity,
      data
    } =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[131]++, action);
    /* istanbul ignore next */
    cov_255m12gg1k().s[132]++;
    switch (type) {
      case "create":
        /* istanbul ignore next */
        cov_255m12gg1k().b[39][0]++;
        cov_255m12gg1k().s[133]++;
        await _supabase.supabase.from(entity).insert(data);
        /* istanbul ignore next */
        cov_255m12gg1k().s[134]++;
        break;
      case "update":
        /* istanbul ignore next */
        cov_255m12gg1k().b[39][1]++;
        const {
          id,
          ...updateData
        } =
        /* istanbul ignore next */
        (cov_255m12gg1k().s[135]++, data);
        /* istanbul ignore next */
        cov_255m12gg1k().s[136]++;
        await _supabase.supabase.from(entity).update(updateData).eq("id", id);
        /* istanbul ignore next */
        cov_255m12gg1k().s[137]++;
        break;
      case "delete":
        /* istanbul ignore next */
        cov_255m12gg1k().b[39][2]++;
        cov_255m12gg1k().s[138]++;
        await _supabase.supabase.from(entity).delete().eq("id", data.id);
        /* istanbul ignore next */
        cov_255m12gg1k().s[139]++;
        break;
    }
  }
  // Caching
  getCachedData(entity, filters) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[24]++;
    cov_255m12gg1k().s[140]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[40][0]++;
      cov_255m12gg1k().s[141]++;
      return this.getMockData(entity);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[40][1]++;
    }
    const cacheKey =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[142]++, `cache_${entity}_${JSON.stringify(
    /* istanbul ignore next */
    (cov_255m12gg1k().b[41][0]++, filters) ||
    /* istanbul ignore next */
    (cov_255m12gg1k().b[41][1]++, {}))}`);
    const cached =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[143]++, localStorage.getItem(cacheKey));
    /* istanbul ignore next */
    cov_255m12gg1k().s[144]++;
    return cached ?
    /* istanbul ignore next */
    (cov_255m12gg1k().b[42][0]++, JSON.parse(cached)) :
    /* istanbul ignore next */
    (cov_255m12gg1k().b[42][1]++, []);
  }
  setCachedData(entity, data, filters) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[25]++;
    cov_255m12gg1k().s[145]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[43][0]++;
      cov_255m12gg1k().s[146]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[43][1]++;
    }
    const cacheKey =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[147]++, `cache_${entity}_${JSON.stringify(
    /* istanbul ignore next */
    (cov_255m12gg1k().b[44][0]++, filters) ||
    /* istanbul ignore next */
    (cov_255m12gg1k().b[44][1]++, {}))}`);
    /* istanbul ignore next */
    cov_255m12gg1k().s[148]++;
    localStorage.setItem(cacheKey, JSON.stringify(data));
  }
  // Sync Status Management
  updateSyncStatus(entity, status, errorMessage) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[26]++;
    cov_255m12gg1k().s[149]++;
    this.syncStatus.set(entity, {
      entity,
      lastSync: new Date().toISOString(),
      status,
      errorMessage
    });
  }
  getSyncStatus(entity) {
    /* istanbul ignore next */
    cov_255m12gg1k().f[27]++;
    cov_255m12gg1k().s[150]++;
    if (entity) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[45][0]++;
      cov_255m12gg1k().s[151]++;
      return /* istanbul ignore next */(cov_255m12gg1k().b[46][0]++, this.syncStatus.get(entity)) ||
      /* istanbul ignore next */
      (cov_255m12gg1k().b[46][1]++, {
        entity,
        lastSync: "",
        status: this.hasRealConnection ?
        /* istanbul ignore next */
        (cov_255m12gg1k().b[47][0]++, "pending") :
        /* istanbul ignore next */
        (cov_255m12gg1k().b[47][1]++, "synced")
      });
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[45][1]++;
    }
    cov_255m12gg1k().s[152]++;
    return Array.from(this.syncStatus.values());
  }
  // Full Sync
  async syncAllEntities() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[28]++;
    cov_255m12gg1k().s[153]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[48][0]++;
      cov_255m12gg1k().s[154]++;
      // Silent logging - Skipping sync, using mock data
      return;
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[48][1]++;
    }
    const entities =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[155]++, ["clients", "tasks", "events", "projects", "invoices"]);
    /* istanbul ignore next */
    cov_255m12gg1k().s[156]++;
    for (const entity of entities) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[157]++;
      try {
        const data =
        /* istanbul ignore next */
        (cov_255m12gg1k().s[158]++, await this.read(entity));
        /* istanbul ignore next */
        cov_255m12gg1k().s[159]++;
        this.setCachedData(entity, data);
        /* istanbul ignore next */
        cov_255m12gg1k().s[160]++;
        this.updateSyncStatus(entity, "synced");
      } catch (error) {
        /* istanbul ignore next */
        cov_255m12gg1k().s[161]++;
        // Silent error handling - Failed to sync entity
        this.updateSyncStatus(entity, "error", error.message);
      }
    }
  }
  // Performance Monitoring
  async getPerformanceMetrics() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[29]++;
    cov_255m12gg1k().s[162]++;
    if (!this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[49][0]++;
      cov_255m12gg1k().s[163]++;
      // Return mock metrics for development
      return {
        responseTime: 50,
        errorRate: 0,
        syncQueueSize: 0,
        cacheHitRate: 1
      };
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[49][1]++;
    }
    const startTime =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[164]++, Date.now());
    /* istanbul ignore next */
    cov_255m12gg1k().s[165]++;
    try {
      /* istanbul ignore next */
      cov_255m12gg1k().s[166]++;
      if (!_supabase.supabase) {
        /* istanbul ignore next */
        cov_255m12gg1k().b[50][0]++;
        cov_255m12gg1k().s[167]++;
        throw new Error("Supabase client not initialized");
      } else
      /* istanbul ignore next */
      {
        cov_255m12gg1k().b[50][1]++;
      }
      cov_255m12gg1k().s[168]++;
      await _supabase.supabase.from("clients").select("count").limit(1);
      const responseTime =
      /* istanbul ignore next */
      (cov_255m12gg1k().s[169]++, Date.now() - startTime);
      /* istanbul ignore next */
      cov_255m12gg1k().s[170]++;
      return {
        responseTime,
        errorRate: this.calculateErrorRate(),
        syncQueueSize: this.offlineQueue.length,
        cacheHitRate: this.calculateCacheHitRate()
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_255m12gg1k().s[171]++;
      return {
        responseTime: -1,
        errorRate: 1,
        syncQueueSize: this.offlineQueue.length,
        cacheHitRate: 0
      };
    }
  }
  calculateErrorRate() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[30]++;
    const errorStatuses =
    /* istanbul ignore next */
    (cov_255m12gg1k().s[172]++, Array.from(this.syncStatus.values()).filter(status => {
      /* istanbul ignore next */
      cov_255m12gg1k().f[31]++;
      cov_255m12gg1k().s[173]++;
      return status.status === "error";
    }));
    /* istanbul ignore next */
    cov_255m12gg1k().s[174]++;
    return errorStatuses.length / Math.max(this.syncStatus.size, 1);
  }
  calculateCacheHitRate() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[32]++;
    cov_255m12gg1k().s[175]++;
    // Simplified cache hit rate calculation
    // In a real implementation, you'd track cache hits vs misses
    return this.hasRealConnection ?
    /* istanbul ignore next */
    (cov_255m12gg1k().b[51][0]++, 0.85) :
    /* istanbul ignore next */
    (cov_255m12gg1k().b[51][1]++, 1.0) // 100% hit rate for mock data
    ;
  }
  // Cleanup
  destroy() {
    /* istanbul ignore next */
    cov_255m12gg1k().f[33]++;
    cov_255m12gg1k().s[176]++;
    if (this.syncInterval) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[52][0]++;
      cov_255m12gg1k().s[177]++;
      clearInterval(this.syncInterval);
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[52][1]++;
    }
    cov_255m12gg1k().s[178]++;
    if (this.hasRealConnection) {
      /* istanbul ignore next */
      cov_255m12gg1k().b[53][0]++;
      cov_255m12gg1k().s[179]++;
      window.removeEventListener("online", this.syncOfflineActions);
      /* istanbul ignore next */
      cov_255m12gg1k().s[180]++;
      window.removeEventListener("offline", () => {
        /* istanbul ignore next */
        cov_255m12gg1k().f[34]++;
        cov_255m12gg1k().s[181]++;
        return this.isOnline = false;
      });
    } else
    /* istanbul ignore next */
    {
      cov_255m12gg1k().b[53][1]++;
    }
  }
}
const backendService =
/* istanbul ignore next */
(cov_255m12gg1k().s[182]++, new BackendService());
const _default =
/* istanbul ignore next */
(cov_255m12gg1k().s[183]++, backendService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,