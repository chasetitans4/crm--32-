8f3eec50a349f2e2137ef96524a6ee1c
/**
 * This utility file provides functions for exporting data in various formats.
 * It supports CSV and JSON export from an array of objects.
 */"use strict";

/* istanbul ignore next */
function cov_2fib0kql10() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\dataExport.ts";
  var hash = "069e42ec09b12da47a7355701bebda4660fe16c3";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\dataExport.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 28
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 28
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "10": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 30
        }
      },
      "11": {
        start: {
          line: 37,
          column: 22
        },
        end: {
          line: 59,
          column: 1
        }
      },
      "12": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 58,
          column: 7
        }
      },
      "13": {
        start: {
          line: 39,
          column: 23
        },
        end: {
          line: 39,
          column: 39
        }
      },
      "14": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "15": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "16": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "17": {
        start: {
          line: 43,
          column: 30
        },
        end: {
          line: 43,
          column: 45
        }
      },
      "18": {
        start: {
          line: 44,
          column: 32
        },
        end: {
          line: 44,
          column: 51
        }
      },
      "19": {
        start: {
          line: 45,
          column: 29
        },
        end: {
          line: 51,
          column: 18
        }
      },
      "20": {
        start: {
          line: 46,
          column: 35
        },
        end: {
          line: 46,
          column: 50
        }
      },
      "21": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 50,
          column: 27
        }
      },
      "22": {
        start: {
          line: 48,
          column: 24
        },
        end: {
          line: 48,
          column: 52
        }
      },
      "23": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "24": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 30
        }
      },
      "25": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 30
        }
      },
      "26": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 32
        }
      },
      "27": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "28": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "29": {
        start: {
          line: 64,
          column: 20
        },
        end: {
          line: 64,
          column: 40
        }
      },
      "30": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 22
        }
      },
      "31": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 65
        }
      },
      "32": {
        start: {
          line: 67,
          column: 39
        },
        end: {
          line: 67,
          column: 52
        }
      },
      "33": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "34": {
        start: {
          line: 70,
          column: 23
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "35": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 71,
          column: 37
        }
      },
      "36": {
        start: {
          line: 73,
          column: 32
        },
        end: {
          line: 73,
          column: 90
        }
      },
      "37": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 58
        }
      },
      "38": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 39
        }
      },
      "39": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 78,
          column: 30
        }
      },
      "40": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "41": {
        start: {
          line: 85,
          column: 17
        },
        end: {
          line: 89,
          column: 6
        }
      },
      "42": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 41
        }
      },
      "43": {
        start: {
          line: 91,
          column: 14
        },
        end: {
          line: 91,
          column: 41
        }
      },
      "44": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 17
        }
      },
      "45": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 93,
          column: 26
        }
      },
      "46": {
        start: {
          line: 94,
          column: 4
        },
        end: {
          line: 94,
          column: 33
        }
      },
      "47": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 14
        }
      },
      "48": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 33
        }
      },
      "49": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 29
        }
      },
      "50": {
        start: {
          line: 100,
          column: 23
        },
        end: {
          line: 100,
          column: 41
        }
      },
      "51": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 101,
          column: 51
        }
      },
      "52": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 43
        }
      },
      "53": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 105,
          column: 60
        }
      },
      "54": {
        start: {
          line: 108,
          column: 22
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "55": {
        start: {
          line: 135,
          column: 4
        },
        end: {
          line: 135,
          column: 47
        }
      },
      "56": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 42
        }
      },
      "57": {
        start: {
          line: 137,
          column: 23
        },
        end: {
          line: 137,
          column: 46
        }
      },
      "58": {
        start: {
          line: 138,
          column: 4
        },
        end: {
          line: 138,
          column: 28
        }
      },
      "59": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 43
        }
      },
      "60": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 48
        }
      },
      "61": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 141,
          column: 29
        }
      },
      "62": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 147,
          column: 123
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 24
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 25
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 23
          }
        },
        loc: {
          start: {
            line: 37,
            column: 30
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 37
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 38,
            column: 24
          }
        },
        loc: {
          start: {
            line: 38,
            column: 42
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 38
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 24
          },
          end: {
            line: 40,
            column: 25
          }
        },
        loc: {
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 45,
            column: 49
          }
        },
        loc: {
          start: {
            line: 45,
            column: 56
          },
          end: {
            line: 51,
            column: 17
          }
        },
        line: 45
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 47,
            column: 42
          },
          end: {
            line: 47,
            column: 43
          }
        },
        loc: {
          start: {
            line: 47,
            column: 64
          },
          end: {
            line: 50,
            column: 21
          }
        },
        line: 47
      },
      "13": {
        name: "convertToCsv",
        decl: {
          start: {
            line: 60,
            column: 9
          },
          end: {
            line: 60,
            column: 21
          }
        },
        loc: {
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 79,
            column: 1
          }
        },
        line: 60
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 67,
            column: 29
          },
          end: {
            line: 67,
            column: 30
          }
        },
        loc: {
          start: {
            line: 67,
            column: 39
          },
          end: {
            line: 67,
            column: 52
          }
        },
        line: 67
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 70,
            column: 36
          }
        },
        loc: {
          start: {
            line: 70,
            column: 45
          },
          end: {
            line: 75,
            column: 9
          }
        },
        line: 70
      },
      "16": {
        name: "convertToJson",
        decl: {
          start: {
            line: 80,
            column: 9
          },
          end: {
            line: 80,
            column: 22
          }
        },
        loc: {
          start: {
            line: 80,
            column: 29
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 80
      },
      "17": {
        name: "downloadFile",
        decl: {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 21
          }
        },
        loc: {
          start: {
            line: 84,
            column: 51
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 84
      },
      "18": {
        name: "exportToCsv",
        decl: {
          start: {
            line: 99,
            column: 9
          },
          end: {
            line: 99,
            column: 20
          }
        },
        loc: {
          start: {
            line: 99,
            column: 52
          },
          end: {
            line: 102,
            column: 1
          }
        },
        line: 99
      },
      "19": {
        name: "exportToJson",
        decl: {
          start: {
            line: 103,
            column: 9
          },
          end: {
            line: 103,
            column: 21
          }
        },
        loc: {
          start: {
            line: 103,
            column: 54
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 103
      },
      "20": {
        name: "testDataExport",
        decl: {
          start: {
            line: 107,
            column: 9
          },
          end: {
            line: 107,
            column: 23
          }
        },
        loc: {
          start: {
            line: 107,
            column: 26
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 107
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "1": {
        loc: {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 73,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 73,
            column: 72
          },
          end: {
            line: 73,
            column: 74
          }
        }, {
          start: {
            line: 73,
            column: 77
          },
          end: {
            line: 73,
            column: 90
          }
        }],
        line: 73
      },
      "2": {
        loc: {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 73,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 73,
            column: 46
          }
        }, {
          start: {
            line: 73,
            column: 50
          },
          end: {
            line: 73,
            column: 69
          }
        }],
        line: 73
      },
      "3": {
        loc: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 38
          },
          end: {
            line: 99,
            column: 50
          }
        }],
        line: 99
      },
      "4": {
        loc: {
          start: {
            line: 103,
            column: 28
          },
          end: {
            line: 103,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 103,
            column: 52
          }
        }],
        line: 103
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\dataExport.ts"],
      sourcesContent: ["/**\n * This utility file provides functions for exporting data in various formats.\n * It supports CSV and JSON export from an array of objects.\n */\n\nexport const importFromCSV = (file: File): Promise<Record<string, unknown>[]> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      try {\n        const csv = e.target?.result as string\n        const lines = csv.split(\"\\n\")\n        const headers = lines[0].split(\",\")\n        const data = lines.slice(1).map((line) => {\n          const values = line.split(\",\")\n          return headers.reduce((obj, header, index) => {\n            obj[header] = values[index]\n            return obj\n          }, {} as Record<string, unknown>)\n        })\n        resolve(data)\n      } catch (error) {\n        reject(error)\n      }\n    }\n    reader.readAsText(file)\n  })\n}\n\n/**\n * Converts an array of objects to a CSV string.\n * Assumes all objects have the same keys.\n * @param data The array of objects to convert.\n * @param filename The desired filename for the CSV.\n * @returns The CSV string.\n */\nexport function convertToCsv<T extends Record<string, unknown>>(data: T[]): string {\n  if (data.length === 0) {\n    return \"\"\n  }\n\n  const headers = Object.keys(data[0])\n  const csvRows = []\n\n  // Add headers\n  csvRows.push(headers.map((header) => `\"${header}\"`).join(\",\"))\n\n  // Add data rows\n  for (const row of data) {\n    const values = headers.map((header) => {\n      const value = row[header]\n      // Handle null/undefined, escape double quotes, and wrap in quotes\n      const stringValue = value === null || value === undefined ? \"\" : String(value)\n      return `\"${stringValue.replace(/\"/g, '\"\"')}\"`\n    })\n    csvRows.push(values.join(\",\"))\n  }\n\n  return csvRows.join(\"\\n\")\n}\n\n/**\n * Converts an array of objects to a JSON string.\n * @param data The array of objects to convert.\n * @returns The JSON string.\n */\nexport function convertToJson<T extends Record<string, unknown>>(data: T[]): string {\n  return JSON.stringify(data, null, 2) // Pretty print with 2 space indentation\n}\n\n/**\n * Initiates a download of a string as a file.\n * @param content The string content to download.\n * @param filename The desired filename (e.g., \"data.csv\", \"data.json\").\n * @param mimeType The MIME type of the file (e.g., \"text/csv\", \"application/json\").\n */\nexport function downloadFile(content: string, filename: string, mimeType: string): void {\n  const blob = new Blob([content], { type: mimeType })\n  const url = URL.createObjectURL(blob)\n  const a = document.createElement(\"a\")\n  a.href = url\n  a.download = filename\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n  URL.revokeObjectURL(url) // Clean up the URL object\n}\n\n/**\n * Exports an array of objects to a CSV file.\n * @param data The array of objects to export.\n * @param filename The desired filename (e.g., \"my_data.csv\").\n */\nexport function exportToCsv<T extends Record<string, unknown>>(data: T[], filename = \"export.csv\"): void {\n  const csvContent = convertToCsv(data)\n  downloadFile(csvContent, filename, \"text/csv\")\n}\n\n/**\n * Exports an array of objects to a JSON file.\n * @param data The array of objects to export.\n * @param filename The desired filename (e.g., \"my_data.json\").\n */\nexport function exportToJson<T extends Record<string, unknown>>(data: T[], filename = \"export.json\"): void {\n  const jsonContent = convertToJson(data)\n  downloadFile(jsonContent, filename, \"application/json\")\n}\n\n/**\n * A simple function to demonstrate data export.\n */\nexport function testDataExport(): void {\n  const mockUsers = [\n    { id: 1, name: \"Alice Smith\", email: \"alice@example.com\", age: 30 },\n    { id: 2, name: \"Bob Johnson\", email: \"bob@example.com\", age: 24 },\n    { id: 3, name: \"Charlie Brown\", email: \"charlie@example.com\", age: 35, notes: 'Likes coffee, \"very\" particular.' },\n    { id: 4, name: \"Diana Prince\", email: \"diana@example.com\", age: null }, // Test null value\n  ]\n\n  console.log(\"--- Testing Data Export ---\")\n\n  console.log(\"\\nCSV Content Preview:\")\n  const csvPreview = convertToCsv(mockUsers)\n  console.log(csvPreview)\n\n  console.log(\"\\nJSON Content Preview:\")\n  const jsonPreview = convertToJson(mockUsers)\n  console.log(jsonPreview)\n\n  // To actually test download, you'd need to call these in a browser environment\n  // console.log(\"\\nAttempting to download mock_users.csv...\");\n  // exportToCsv(mockUsers, \"mock_users.csv\");\n\n  // console.log(\"\\nAttempting to download mock_users.json...\");\n  // exportToJson(mockUsers, \"mock_users.json\");\n\n  console.log(\"\\nData export functions are ready. Check console for previews or uncomment download calls in a browser.\")\n}\n"],
      names: ["convertToCsv", "convertToJson", "downloadFile", "exportToCsv", "exportToJson", "importFromCSV", "testDataExport", "file", "Promise", "resolve", "reject", "reader", "FileReader", "onload", "e", "csv", "target", "result", "lines", "split", "headers", "data", "slice", "map", "line", "values", "reduce", "obj", "header", "index", "error", "readAsText", "length", "Object", "keys", "csvRows", "push", "join", "row", "value", "stringValue", "undefined", "String", "replace", "JSON", "stringify", "content", "filename", "mimeType", "blob", "Blob", "type", "url", "URL", "createObjectURL", "a", "document", "createElement", "href", "download", "body", "appendChild", "click", "removeChild", "revokeObjectURL", "csvContent", "jsonContent", "mockUsers", "id", "name", "email", "age", "notes", "console", "log", "csvPreview", "jsonPreview"],
      mappings: "AAAA;;;CAGC;;;;;;;;;;;QAiCeA;eAAAA;;QA8BAC;eAAAA;;QAUAC;eAAAA;;QAiBAC;eAAAA;;QAUAC;eAAAA;;QAlGHC;eAAAA;;QA0GGC;eAAAA;;;AA1GT,MAAMD,gBAAgB,CAACE;IAC5B,OAAO,IAAIC,QAAQ,CAACC,SAASC;QAC3B,MAAMC,SAAS,IAAIC;QACnBD,OAAOE,MAAM,GAAG,CAACC;YACf,IAAI;gBACF,MAAMC,MAAMD,EAAEE,MAAM,EAAEC;gBACtB,MAAMC,QAAQH,IAAII,KAAK,CAAC;gBACxB,MAAMC,UAAUF,KAAK,CAAC,EAAE,CAACC,KAAK,CAAC;gBAC/B,MAAME,OAAOH,MAAMI,KAAK,CAAC,GAAGC,GAAG,CAAC,CAACC;oBAC/B,MAAMC,SAASD,KAAKL,KAAK,CAAC;oBAC1B,OAAOC,QAAQM,MAAM,CAAC,CAACC,KAAKC,QAAQC;wBAClCF,GAAG,CAACC,OAAO,GAAGH,MAAM,CAACI,MAAM;wBAC3B,OAAOF;oBACT,GAAG,CAAC;gBACN;gBACAlB,QAAQY;YACV,EAAE,OAAOS,OAAO;gBACdpB,OAAOoB;YACT;QACF;QACAnB,OAAOoB,UAAU,CAACxB;IACpB;AACF;AASO,SAASP,aAAgDqB,IAAS;IACvE,IAAIA,KAAKW,MAAM,KAAK,GAAG;QACrB,OAAO;IACT;IAEA,MAAMZ,UAAUa,OAAOC,IAAI,CAACb,IAAI,CAAC,EAAE;IACnC,MAAMc,UAAU,EAAE;IAElB,cAAc;IACdA,QAAQC,IAAI,CAAChB,QAAQG,GAAG,CAAC,CAACK,SAAW,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC,EAAES,IAAI,CAAC;IAEzD,gBAAgB;IAChB,KAAK,MAAMC,OAAOjB,KAAM;QACtB,MAAMI,SAASL,QAAQG,GAAG,CAAC,CAACK;YAC1B,MAAMW,QAAQD,GAAG,CAACV,OAAO;YACzB,kEAAkE;YAClE,MAAMY,cAAcD,UAAU,QAAQA,UAAUE,YAAY,KAAKC,OAAOH;YACxE,OAAO,CAAC,CAAC,EAAEC,YAAYG,OAAO,CAAC,MAAM,MAAM,CAAC,CAAC;QAC/C;QACAR,QAAQC,IAAI,CAACX,OAAOY,IAAI,CAAC;IAC3B;IAEA,OAAOF,QAAQE,IAAI,CAAC;AACtB;AAOO,SAASpC,cAAiDoB,IAAS;IACxE,OAAOuB,KAAKC,SAAS,CAACxB,MAAM,MAAM,GAAG,wCAAwC;;AAC/E;AAQO,SAASnB,aAAa4C,OAAe,EAAEC,QAAgB,EAAEC,QAAgB;IAC9E,MAAMC,OAAO,IAAIC,KAAK;QAACJ;KAAQ,EAAE;QAAEK,MAAMH;IAAS;IAClD,MAAMI,MAAMC,IAAIC,eAAe,CAACL;IAChC,MAAMM,IAAIC,SAASC,aAAa,CAAC;IACjCF,EAAEG,IAAI,GAAGN;IACTG,EAAEI,QAAQ,GAAGZ;IACbS,SAASI,IAAI,CAACC,WAAW,CAACN;IAC1BA,EAAEO,KAAK;IACPN,SAASI,IAAI,CAACG,WAAW,CAACR;IAC1BF,IAAIW,eAAe,CAACZ,MAAK,0BAA0B;AACrD;AAOO,SAASjD,YAA+CkB,IAAS,EAAE0B,WAAW,YAAY;IAC/F,MAAMkB,aAAajE,aAAaqB;IAChCnB,aAAa+D,YAAYlB,UAAU;AACrC;AAOO,SAAS3C,aAAgDiB,IAAS,EAAE0B,WAAW,aAAa;IACjG,MAAMmB,cAAcjE,cAAcoB;IAClCnB,aAAagE,aAAanB,UAAU;AACtC;AAKO,SAASzC;IACd,MAAM6D,YAAY;QAChB;YAAEC,IAAI;YAAGC,MAAM;YAAeC,OAAO;YAAqBC,KAAK;QAAG;QAClE;YAAEH,IAAI;YAAGC,MAAM;YAAeC,OAAO;YAAmBC,KAAK;QAAG;QAChE;YAAEH,IAAI;YAAGC,MAAM;YAAiBC,OAAO;YAAuBC,KAAK;YAAIC,OAAO;QAAmC;QACjH;YAAEJ,IAAI;YAAGC,MAAM;YAAgBC,OAAO;YAAqBC,KAAK;QAAK;KACtE;IAEDE,QAAQC,GAAG,CAAC;IAEZD,QAAQC,GAAG,CAAC;IACZ,MAAMC,aAAa3E,aAAamE;IAChCM,QAAQC,GAAG,CAACC;IAEZF,QAAQC,GAAG,CAAC;IACZ,MAAME,cAAc3E,cAAckE;IAClCM,QAAQC,GAAG,CAACE;IAEZ,+EAA+E;IAC/E,6DAA6D;IAC7D,4CAA4C;IAE5C,8DAA8D;IAC9D,8CAA8C;IAE9CH,QAAQC,GAAG,CAAC;AACd"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "069e42ec09b12da47a7355701bebda4660fe16c3"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2fib0kql10 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2fib0kql10();
cov_2fib0kql10().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2fib0kql10().f[0]++;
  cov_2fib0kql10().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2fib0kql10().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2fib0kql10().s[3]++;
_export(exports, {
  get convertToCsv() {
    /* istanbul ignore next */
    cov_2fib0kql10().f[1]++;
    cov_2fib0kql10().s[4]++;
    return convertToCsv;
  },
  get convertToJson() {
    /* istanbul ignore next */
    cov_2fib0kql10().f[2]++;
    cov_2fib0kql10().s[5]++;
    return convertToJson;
  },
  get downloadFile() {
    /* istanbul ignore next */
    cov_2fib0kql10().f[3]++;
    cov_2fib0kql10().s[6]++;
    return downloadFile;
  },
  get exportToCsv() {
    /* istanbul ignore next */
    cov_2fib0kql10().f[4]++;
    cov_2fib0kql10().s[7]++;
    return exportToCsv;
  },
  get exportToJson() {
    /* istanbul ignore next */
    cov_2fib0kql10().f[5]++;
    cov_2fib0kql10().s[8]++;
    return exportToJson;
  },
  get importFromCSV() {
    /* istanbul ignore next */
    cov_2fib0kql10().f[6]++;
    cov_2fib0kql10().s[9]++;
    return importFromCSV;
  },
  get testDataExport() {
    /* istanbul ignore next */
    cov_2fib0kql10().f[7]++;
    cov_2fib0kql10().s[10]++;
    return testDataExport;
  }
});
/* istanbul ignore next */
cov_2fib0kql10().s[11]++;
const importFromCSV = file => {
  /* istanbul ignore next */
  cov_2fib0kql10().f[8]++;
  cov_2fib0kql10().s[12]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_2fib0kql10().f[9]++;
    const reader =
    /* istanbul ignore next */
    (cov_2fib0kql10().s[13]++, new FileReader());
    /* istanbul ignore next */
    cov_2fib0kql10().s[14]++;
    reader.onload = e => {
      /* istanbul ignore next */
      cov_2fib0kql10().f[10]++;
      cov_2fib0kql10().s[15]++;
      try {
        const csv =
        /* istanbul ignore next */
        (cov_2fib0kql10().s[16]++, e.target?.result);
        const lines =
        /* istanbul ignore next */
        (cov_2fib0kql10().s[17]++, csv.split("\n"));
        const headers =
        /* istanbul ignore next */
        (cov_2fib0kql10().s[18]++, lines[0].split(","));
        const data =
        /* istanbul ignore next */
        (cov_2fib0kql10().s[19]++, lines.slice(1).map(line => {
          /* istanbul ignore next */
          cov_2fib0kql10().f[11]++;
          const values =
          /* istanbul ignore next */
          (cov_2fib0kql10().s[20]++, line.split(","));
          /* istanbul ignore next */
          cov_2fib0kql10().s[21]++;
          return headers.reduce((obj, header, index) => {
            /* istanbul ignore next */
            cov_2fib0kql10().f[12]++;
            cov_2fib0kql10().s[22]++;
            obj[header] = values[index];
            /* istanbul ignore next */
            cov_2fib0kql10().s[23]++;
            return obj;
          }, {});
        }));
        /* istanbul ignore next */
        cov_2fib0kql10().s[24]++;
        resolve(data);
      } catch (error) {
        /* istanbul ignore next */
        cov_2fib0kql10().s[25]++;
        reject(error);
      }
    };
    /* istanbul ignore next */
    cov_2fib0kql10().s[26]++;
    reader.readAsText(file);
  });
};
function convertToCsv(data) {
  /* istanbul ignore next */
  cov_2fib0kql10().f[13]++;
  cov_2fib0kql10().s[27]++;
  if (data.length === 0) {
    /* istanbul ignore next */
    cov_2fib0kql10().b[0][0]++;
    cov_2fib0kql10().s[28]++;
    return "";
  } else
  /* istanbul ignore next */
  {
    cov_2fib0kql10().b[0][1]++;
  }
  const headers =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[29]++, Object.keys(data[0]));
  const csvRows =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[30]++, []);
  // Add headers
  /* istanbul ignore next */
  cov_2fib0kql10().s[31]++;
  csvRows.push(headers.map(header => {
    /* istanbul ignore next */
    cov_2fib0kql10().f[14]++;
    cov_2fib0kql10().s[32]++;
    return `"${header}"`;
  }).join(","));
  // Add data rows
  /* istanbul ignore next */
  cov_2fib0kql10().s[33]++;
  for (const row of data) {
    const values =
    /* istanbul ignore next */
    (cov_2fib0kql10().s[34]++, headers.map(header => {
      /* istanbul ignore next */
      cov_2fib0kql10().f[15]++;
      const value =
      /* istanbul ignore next */
      (cov_2fib0kql10().s[35]++, row[header]);
      // Handle null/undefined, escape double quotes, and wrap in quotes
      const stringValue =
      /* istanbul ignore next */
      (cov_2fib0kql10().s[36]++,
      /* istanbul ignore next */
      (cov_2fib0kql10().b[2][0]++, value === null) ||
      /* istanbul ignore next */
      (cov_2fib0kql10().b[2][1]++, value === undefined) ?
      /* istanbul ignore next */
      (cov_2fib0kql10().b[1][0]++, "") :
      /* istanbul ignore next */
      (cov_2fib0kql10().b[1][1]++, String(value)));
      /* istanbul ignore next */
      cov_2fib0kql10().s[37]++;
      return `"${stringValue.replace(/"/g, '""')}"`;
    }));
    /* istanbul ignore next */
    cov_2fib0kql10().s[38]++;
    csvRows.push(values.join(","));
  }
  /* istanbul ignore next */
  cov_2fib0kql10().s[39]++;
  return csvRows.join("\n");
}
function convertToJson(data) {
  /* istanbul ignore next */
  cov_2fib0kql10().f[16]++;
  cov_2fib0kql10().s[40]++;
  return JSON.stringify(data, null, 2) // Pretty print with 2 space indentation
  ;
}
function downloadFile(content, filename, mimeType) {
  /* istanbul ignore next */
  cov_2fib0kql10().f[17]++;
  const blob =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[41]++, new Blob([content], {
    type: mimeType
  }));
  const url =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[42]++, URL.createObjectURL(blob));
  const a =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[43]++, document.createElement("a"));
  /* istanbul ignore next */
  cov_2fib0kql10().s[44]++;
  a.href = url;
  /* istanbul ignore next */
  cov_2fib0kql10().s[45]++;
  a.download = filename;
  /* istanbul ignore next */
  cov_2fib0kql10().s[46]++;
  document.body.appendChild(a);
  /* istanbul ignore next */
  cov_2fib0kql10().s[47]++;
  a.click();
  /* istanbul ignore next */
  cov_2fib0kql10().s[48]++;
  document.body.removeChild(a);
  /* istanbul ignore next */
  cov_2fib0kql10().s[49]++;
  URL.revokeObjectURL(url); // Clean up the URL object
}
function exportToCsv(data, filename =
/* istanbul ignore next */
(cov_2fib0kql10().b[3][0]++, "export.csv")) {
  /* istanbul ignore next */
  cov_2fib0kql10().f[18]++;
  const csvContent =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[50]++, convertToCsv(data));
  /* istanbul ignore next */
  cov_2fib0kql10().s[51]++;
  downloadFile(csvContent, filename, "text/csv");
}
function exportToJson(data, filename =
/* istanbul ignore next */
(cov_2fib0kql10().b[4][0]++, "export.json")) {
  /* istanbul ignore next */
  cov_2fib0kql10().f[19]++;
  const jsonContent =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[52]++, convertToJson(data));
  /* istanbul ignore next */
  cov_2fib0kql10().s[53]++;
  downloadFile(jsonContent, filename, "application/json");
}
function testDataExport() {
  /* istanbul ignore next */
  cov_2fib0kql10().f[20]++;
  const mockUsers =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[54]++, [{
    id: 1,
    name: "Alice Smith",
    email: "alice@example.com",
    age: 30
  }, {
    id: 2,
    name: "Bob Johnson",
    email: "bob@example.com",
    age: 24
  }, {
    id: 3,
    name: "Charlie Brown",
    email: "charlie@example.com",
    age: 35,
    notes: 'Likes coffee, "very" particular.'
  }, {
    id: 4,
    name: "Diana Prince",
    email: "diana@example.com",
    age: null
  }]);
  /* istanbul ignore next */
  cov_2fib0kql10().s[55]++;
  console.log("--- Testing Data Export ---");
  /* istanbul ignore next */
  cov_2fib0kql10().s[56]++;
  console.log("\nCSV Content Preview:");
  const csvPreview =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[57]++, convertToCsv(mockUsers));
  /* istanbul ignore next */
  cov_2fib0kql10().s[58]++;
  console.log(csvPreview);
  /* istanbul ignore next */
  cov_2fib0kql10().s[59]++;
  console.log("\nJSON Content Preview:");
  const jsonPreview =
  /* istanbul ignore next */
  (cov_2fib0kql10().s[60]++, convertToJson(mockUsers));
  /* istanbul ignore next */
  cov_2fib0kql10().s[61]++;
  console.log(jsonPreview);
  // To actually test download, you'd need to call these in a browser environment
  // console.log("\nAttempting to download mock_users.csv...");
  // exportToCsv(mockUsers, "mock_users.csv");
  // console.log("\nAttempting to download mock_users.json...");
  // exportToJson(mockUsers, "mock_users.json");
  /* istanbul ignore next */
  cov_2fib0kql10().s[62]++;
  console.log("\nData export functions are ready. Check console for previews or uncomment download calls in a browser.");
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMmZpYjBrcWwxMCIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwidHlwZSIsImxvY2F0aW9ucyIsInVuZGVmaW5lZCIsInMiLCJmIiwiYiIsImlucHV0U291cmNlTWFwIiwidmVyc2lvbiIsInNvdXJjZXMiLCJzb3VyY2VzQ29udGVudCIsIm5hbWVzIiwibWFwcGluZ3MiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiY29udmVydFRvQ3N2IiwiY29udmVydFRvSnNvbiIsImRvd25sb2FkRmlsZSIsImV4cG9ydFRvQ3N2IiwiZXhwb3J0VG9Kc29uIiwiaW1wb3J0RnJvbUNTViIsInRlc3REYXRhRXhwb3J0IiwiZmlsZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsImUiLCJjc3YiLCJ0YXJnZXQiLCJyZXN1bHQiLCJsaW5lcyIsInNwbGl0IiwiaGVhZGVycyIsImRhdGEiLCJzbGljZSIsIm1hcCIsInZhbHVlcyIsInJlZHVjZSIsIm9iaiIsImhlYWRlciIsImluZGV4IiwiZXJyb3IiLCJyZWFkQXNUZXh0IiwibGVuZ3RoIiwiT2JqZWN0Iiwia2V5cyIsImNzdlJvd3MiLCJwdXNoIiwiam9pbiIsInJvdyIsInZhbHVlIiwic3RyaW5nVmFsdWUiLCJTdHJpbmciLCJyZXBsYWNlIiwiSlNPTiIsInN0cmluZ2lmeSIsImNvbnRlbnQiLCJmaWxlbmFtZSIsIm1pbWVUeXBlIiwiYmxvYiIsIkJsb2IiLCJ1cmwiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJhIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsImRvd25sb2FkIiwiYm9keSIsImFwcGVuZENoaWxkIiwiY2xpY2siLCJyZW1vdmVDaGlsZCIsInJldm9rZU9iamVjdFVSTCIsImNzdkNvbnRlbnQiLCJqc29uQ29udGVudCIsIm1vY2tVc2VycyIsImlkIiwiZW1haWwiLCJhZ2UiLCJub3RlcyIsImNvbnNvbGUiLCJsb2ciLCJjc3ZQcmV2aWV3IiwianNvblByZXZpZXciXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXGNoYXNlXFxEb3dubG9hZHNcXGNybSAoMzIpXFxzcmNcXHV0aWxzXFxkYXRhRXhwb3J0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyB1dGlsaXR5IGZpbGUgcHJvdmlkZXMgZnVuY3Rpb25zIGZvciBleHBvcnRpbmcgZGF0YSBpbiB2YXJpb3VzIGZvcm1hdHMuXG4gKiBJdCBzdXBwb3J0cyBDU1YgYW5kIEpTT04gZXhwb3J0IGZyb20gYW4gYXJyYXkgb2Ygb2JqZWN0cy5cbiAqL1xuXG5leHBvcnQgY29uc3QgaW1wb3J0RnJvbUNTViA9IChmaWxlOiBGaWxlKTogUHJvbWlzZTxSZWNvcmQ8c3RyaW5nLCB1bmtub3duPltdPiA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxuICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4ge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgY3N2ID0gZS50YXJnZXQ/LnJlc3VsdCBhcyBzdHJpbmdcbiAgICAgICAgY29uc3QgbGluZXMgPSBjc3Yuc3BsaXQoXCJcXG5cIilcbiAgICAgICAgY29uc3QgaGVhZGVycyA9IGxpbmVzWzBdLnNwbGl0KFwiLFwiKVxuICAgICAgICBjb25zdCBkYXRhID0gbGluZXMuc2xpY2UoMSkubWFwKChsaW5lKSA9PiB7XG4gICAgICAgICAgY29uc3QgdmFsdWVzID0gbGluZS5zcGxpdChcIixcIilcbiAgICAgICAgICByZXR1cm4gaGVhZGVycy5yZWR1Y2UoKG9iaiwgaGVhZGVyLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgb2JqW2hlYWRlcl0gPSB2YWx1ZXNbaW5kZXhdXG4gICAgICAgICAgICByZXR1cm4gb2JqXG4gICAgICAgICAgfSwge30gYXMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4pXG4gICAgICAgIH0pXG4gICAgICAgIHJlc29sdmUoZGF0YSlcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgIH1cbiAgICB9XG4gICAgcmVhZGVyLnJlYWRBc1RleHQoZmlsZSlcbiAgfSlcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhbiBhcnJheSBvZiBvYmplY3RzIHRvIGEgQ1NWIHN0cmluZy5cbiAqIEFzc3VtZXMgYWxsIG9iamVjdHMgaGF2ZSB0aGUgc2FtZSBrZXlzLlxuICogQHBhcmFtIGRhdGEgVGhlIGFycmF5IG9mIG9iamVjdHMgdG8gY29udmVydC5cbiAqIEBwYXJhbSBmaWxlbmFtZSBUaGUgZGVzaXJlZCBmaWxlbmFtZSBmb3IgdGhlIENTVi5cbiAqIEByZXR1cm5zIFRoZSBDU1Ygc3RyaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRvQ3N2PFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4oZGF0YTogVFtdKTogc3RyaW5nIHtcbiAgaWYgKGRhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIFwiXCJcbiAgfVxuXG4gIGNvbnN0IGhlYWRlcnMgPSBPYmplY3Qua2V5cyhkYXRhWzBdKVxuICBjb25zdCBjc3ZSb3dzID0gW11cblxuICAvLyBBZGQgaGVhZGVyc1xuICBjc3ZSb3dzLnB1c2goaGVhZGVycy5tYXAoKGhlYWRlcikgPT4gYFwiJHtoZWFkZXJ9XCJgKS5qb2luKFwiLFwiKSlcblxuICAvLyBBZGQgZGF0YSByb3dzXG4gIGZvciAoY29uc3Qgcm93IG9mIGRhdGEpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSBoZWFkZXJzLm1hcCgoaGVhZGVyKSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZSA9IHJvd1toZWFkZXJdXG4gICAgICAvLyBIYW5kbGUgbnVsbC91bmRlZmluZWQsIGVzY2FwZSBkb3VibGUgcXVvdGVzLCBhbmQgd3JhcCBpbiBxdW90ZXNcbiAgICAgIGNvbnN0IHN0cmluZ1ZhbHVlID0gdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBTdHJpbmcodmFsdWUpXG4gICAgICByZXR1cm4gYFwiJHtzdHJpbmdWYWx1ZS5yZXBsYWNlKC9cIi9nLCAnXCJcIicpfVwiYFxuICAgIH0pXG4gICAgY3N2Um93cy5wdXNoKHZhbHVlcy5qb2luKFwiLFwiKSlcbiAgfVxuXG4gIHJldHVybiBjc3ZSb3dzLmpvaW4oXCJcXG5cIilcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhbiBhcnJheSBvZiBvYmplY3RzIHRvIGEgSlNPTiBzdHJpbmcuXG4gKiBAcGFyYW0gZGF0YSBUaGUgYXJyYXkgb2Ygb2JqZWN0cyB0byBjb252ZXJ0LlxuICogQHJldHVybnMgVGhlIEpTT04gc3RyaW5nLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydFRvSnNvbjxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4+KGRhdGE6IFRbXSk6IHN0cmluZyB7XG4gIHJldHVybiBKU09OLnN0cmluZ2lmeShkYXRhLCBudWxsLCAyKSAvLyBQcmV0dHkgcHJpbnQgd2l0aCAyIHNwYWNlIGluZGVudGF0aW9uXG59XG5cbi8qKlxuICogSW5pdGlhdGVzIGEgZG93bmxvYWQgb2YgYSBzdHJpbmcgYXMgYSBmaWxlLlxuICogQHBhcmFtIGNvbnRlbnQgVGhlIHN0cmluZyBjb250ZW50IHRvIGRvd25sb2FkLlxuICogQHBhcmFtIGZpbGVuYW1lIFRoZSBkZXNpcmVkIGZpbGVuYW1lIChlLmcuLCBcImRhdGEuY3N2XCIsIFwiZGF0YS5qc29uXCIpLlxuICogQHBhcmFtIG1pbWVUeXBlIFRoZSBNSU1FIHR5cGUgb2YgdGhlIGZpbGUgKGUuZy4sIFwidGV4dC9jc3ZcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZG93bmxvYWRGaWxlKGNvbnRlbnQ6IHN0cmluZywgZmlsZW5hbWU6IHN0cmluZywgbWltZVR5cGU6IHN0cmluZyk6IHZvaWQge1xuICBjb25zdCBibG9iID0gbmV3IEJsb2IoW2NvbnRlbnRdLCB7IHR5cGU6IG1pbWVUeXBlIH0pXG4gIGNvbnN0IHVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoYmxvYilcbiAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpXG4gIGEuaHJlZiA9IHVybFxuICBhLmRvd25sb2FkID0gZmlsZW5hbWVcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKVxuICBhLmNsaWNrKClcbiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChhKVxuICBVUkwucmV2b2tlT2JqZWN0VVJMKHVybCkgLy8gQ2xlYW4gdXAgdGhlIFVSTCBvYmplY3Rcbn1cblxuLyoqXG4gKiBFeHBvcnRzIGFuIGFycmF5IG9mIG9iamVjdHMgdG8gYSBDU1YgZmlsZS5cbiAqIEBwYXJhbSBkYXRhIFRoZSBhcnJheSBvZiBvYmplY3RzIHRvIGV4cG9ydC5cbiAqIEBwYXJhbSBmaWxlbmFtZSBUaGUgZGVzaXJlZCBmaWxlbmFtZSAoZS5nLiwgXCJteV9kYXRhLmNzdlwiKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9ydFRvQ3N2PFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4oZGF0YTogVFtdLCBmaWxlbmFtZSA9IFwiZXhwb3J0LmNzdlwiKTogdm9pZCB7XG4gIGNvbnN0IGNzdkNvbnRlbnQgPSBjb252ZXJ0VG9Dc3YoZGF0YSlcbiAgZG93bmxvYWRGaWxlKGNzdkNvbnRlbnQsIGZpbGVuYW1lLCBcInRleHQvY3N2XCIpXG59XG5cbi8qKlxuICogRXhwb3J0cyBhbiBhcnJheSBvZiBvYmplY3RzIHRvIGEgSlNPTiBmaWxlLlxuICogQHBhcmFtIGRhdGEgVGhlIGFycmF5IG9mIG9iamVjdHMgdG8gZXhwb3J0LlxuICogQHBhcmFtIGZpbGVuYW1lIFRoZSBkZXNpcmVkIGZpbGVuYW1lIChlLmcuLCBcIm15X2RhdGEuanNvblwiKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4cG9ydFRvSnNvbjxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4+KGRhdGE6IFRbXSwgZmlsZW5hbWUgPSBcImV4cG9ydC5qc29uXCIpOiB2b2lkIHtcbiAgY29uc3QganNvbkNvbnRlbnQgPSBjb252ZXJ0VG9Kc29uKGRhdGEpXG4gIGRvd25sb2FkRmlsZShqc29uQ29udGVudCwgZmlsZW5hbWUsIFwiYXBwbGljYXRpb24vanNvblwiKVxufVxuXG4vKipcbiAqIEEgc2ltcGxlIGZ1bmN0aW9uIHRvIGRlbW9uc3RyYXRlIGRhdGEgZXhwb3J0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGVzdERhdGFFeHBvcnQoKTogdm9pZCB7XG4gIGNvbnN0IG1vY2tVc2VycyA9IFtcbiAgICB7IGlkOiAxLCBuYW1lOiBcIkFsaWNlIFNtaXRoXCIsIGVtYWlsOiBcImFsaWNlQGV4YW1wbGUuY29tXCIsIGFnZTogMzAgfSxcbiAgICB7IGlkOiAyLCBuYW1lOiBcIkJvYiBKb2huc29uXCIsIGVtYWlsOiBcImJvYkBleGFtcGxlLmNvbVwiLCBhZ2U6IDI0IH0sXG4gICAgeyBpZDogMywgbmFtZTogXCJDaGFybGllIEJyb3duXCIsIGVtYWlsOiBcImNoYXJsaWVAZXhhbXBsZS5jb21cIiwgYWdlOiAzNSwgbm90ZXM6ICdMaWtlcyBjb2ZmZWUsIFwidmVyeVwiIHBhcnRpY3VsYXIuJyB9LFxuICAgIHsgaWQ6IDQsIG5hbWU6IFwiRGlhbmEgUHJpbmNlXCIsIGVtYWlsOiBcImRpYW5hQGV4YW1wbGUuY29tXCIsIGFnZTogbnVsbCB9LCAvLyBUZXN0IG51bGwgdmFsdWVcbiAgXVxuXG4gIGNvbnNvbGUubG9nKFwiLS0tIFRlc3RpbmcgRGF0YSBFeHBvcnQgLS0tXCIpXG5cbiAgY29uc29sZS5sb2coXCJcXG5DU1YgQ29udGVudCBQcmV2aWV3OlwiKVxuICBjb25zdCBjc3ZQcmV2aWV3ID0gY29udmVydFRvQ3N2KG1vY2tVc2VycylcbiAgY29uc29sZS5sb2coY3N2UHJldmlldylcblxuICBjb25zb2xlLmxvZyhcIlxcbkpTT04gQ29udGVudCBQcmV2aWV3OlwiKVxuICBjb25zdCBqc29uUHJldmlldyA9IGNvbnZlcnRUb0pzb24obW9ja1VzZXJzKVxuICBjb25zb2xlLmxvZyhqc29uUHJldmlldylcblxuICAvLyBUbyBhY3R1YWxseSB0ZXN0IGRvd25sb2FkLCB5b3UnZCBuZWVkIHRvIGNhbGwgdGhlc2UgaW4gYSBicm93c2VyIGVudmlyb25tZW50XG4gIC8vIGNvbnNvbGUubG9nKFwiXFxuQXR0ZW1wdGluZyB0byBkb3dubG9hZCBtb2NrX3VzZXJzLmNzdi4uLlwiKTtcbiAgLy8gZXhwb3J0VG9Dc3YobW9ja1VzZXJzLCBcIm1vY2tfdXNlcnMuY3N2XCIpO1xuXG4gIC8vIGNvbnNvbGUubG9nKFwiXFxuQXR0ZW1wdGluZyB0byBkb3dubG9hZCBtb2NrX3VzZXJzLmpzb24uLi5cIik7XG4gIC8vIGV4cG9ydFRvSnNvbihtb2NrVXNlcnMsIFwibW9ja191c2Vycy5qc29uXCIpO1xuXG4gIGNvbnNvbGUubG9nKFwiXFxuRGF0YSBleHBvcnQgZnVuY3Rpb25zIGFyZSByZWFkeS4gQ2hlY2sgY29uc29sZSBmb3IgcHJldmlld3Mgb3IgdW5jb21tZW50IGRvd25sb2FkIGNhbGxzIGluIGEgYnJvd3Nlci5cIilcbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdDOztBQUFBO0FBQUEsU0FBQUEsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFJLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7TUFBQTtRQUFBRCxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7VUFBQVIsR0FBQTtZQUFBRixJQUFBLEVBQUFVLFNBQUE7WUFBQVQsTUFBQSxFQUFBUztVQUFBO1FBQUE7UUFBQVYsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7VUFBQUYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQVcsQ0FBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtJQUFBO0lBQUFDLENBQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7TUFBQTtNQUFB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