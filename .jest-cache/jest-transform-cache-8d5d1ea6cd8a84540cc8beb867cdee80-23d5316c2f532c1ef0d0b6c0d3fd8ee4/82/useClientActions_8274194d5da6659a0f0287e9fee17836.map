{"version":3,"names":["cov_1kq6b7eqw5","actualCoverage","s","useClientActions","f","state","dispatch","_AppContext","useAppContext","clients","addClient","_react","useCallback","client","newClient","id","Math","max","map","c","b","parseInt","toString","type","payload","error","updateClient","data","addNote","clientId","note","date","Date","toISOString","split","updateClientStage","stage"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\hooks\\useClientActions.ts"],"sourcesContent":["\"use client\"\n\nimport { useCallback } from \"react\"\nimport { useAppContext } from \"../context/AppContext\"\nimport type { Client } from \"../types\"\n\nexport function useClientActions() {\n  const { state, dispatch } = useAppContext()\n  const { clients } = state\n\n  const addClient = useCallback(\n    async (client: Omit<Client, \"id\">) => {\n      try {\n        // In a real app, this would call the API\n        // const newClient = await clientsApi.create(client);\n\n        // For now, simulate API call\n        const newClient: Client = {\n          ...client,\n          id: (Math.max(0, ...clients.map((c) => parseInt(c.id) || 0)) + 1).toString(),\n        }\n\n        dispatch({ type: \"ADD_CLIENT\", payload: newClient })\n        return newClient\n      } catch (error) {\n        // Error adding client - error handled silently\n        throw error\n      }\n    },\n    [clients, dispatch],\n  )\n\n  const updateClient = useCallback(\n    async (id: string, data: Partial<Client>) => {\n      try {\n        // In a real app, this would call the API\n        // await clientsApi.update(id, data);\n\n        dispatch({ type: \"UPDATE_CLIENT\", payload: { id, client: data } })\n      } catch (error) {\n        // Error updating client - error handled silently\n        throw error\n      }\n    },\n    [dispatch],\n  )\n\n  const addNote = useCallback(\n    async (clientId: string, note: { type: \"call\" | \"email\" | \"meeting\"; content: string }) => {\n      try {\n        // In a real app, this would call the API\n        // await clientsApi.addNote(clientId, note);\n\n        const date = new Date().toISOString().split(\"T\")[0]\n        dispatch({\n          type: \"ADD_CLIENT_NOTE\",\n          payload: {\n            clientId,\n            note: { ...note, date },\n          },\n        })\n      } catch (error) {\n        // Error adding note - error handled silently\n        throw error\n      }\n    },\n    [dispatch],\n  )\n\n  const updateClientStage = useCallback(\n    async (clientId: string, stage: string) => {\n      try {\n        // In a real app, this would call the API\n        // await clientsApi.updateStage(clientId, stage);\n\n        dispatch({ type: \"UPDATE_CLIENT_STAGE\", payload: { clientId, stage } })\n      } catch (error) {\n        // Error updating client stage - error handled silently\n        throw error\n      }\n    },\n    [dispatch],\n  )\n\n  // Additional actions can be added here\n\n  return {\n    clients,\n    addClient,\n    updateClient,\n    addNote,\n    updateClientStage,\n  }\n}\n"],"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","ignoreList":[]}