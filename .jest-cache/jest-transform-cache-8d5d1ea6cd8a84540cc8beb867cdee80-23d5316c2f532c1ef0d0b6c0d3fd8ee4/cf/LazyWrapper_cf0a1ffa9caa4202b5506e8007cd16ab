161c0bc88376a515530881d6d5f3ffb8
'use client';
"use strict";

/* istanbul ignore next */
function cov_y1fled6i9() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\LazyWrapper.tsx";
  var hash = "fc503aea0a3af3288efc7bab91ca511ea0087d01";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\LazyWrapper.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 34,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 32
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 24
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 35
        }
      },
      "11": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 48
        }
      },
      "12": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 36,
          column: 72
        }
      },
      "13": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 60
        }
      },
      "14": {
        start: {
          line: 38,
          column: 14
        },
        end: {
          line: 38,
          column: 31
        }
      },
      "15": {
        start: {
          line: 39,
          column: 21
        },
        end: {
          line: 39,
          column: 44
        }
      },
      "16": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "17": {
        start: {
          line: 41,
          column: 39
        },
        end: {
          line: 41,
          column: 51
        }
      },
      "18": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 41
        }
      },
      "19": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "20": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 20
        }
      },
      "21": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 66
        }
      },
      "22": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "23": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 19
        }
      },
      "24": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "25": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 10
        }
      },
      "26": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 53
        }
      },
      "27": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "28": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 30
        }
      },
      "29": {
        start: {
          line: 61,
          column: 17
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "30": {
        start: {
          line: 64,
          column: 32
        },
        end: {
          line: 64,
          column: 88
        }
      },
      "31": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "32": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 73,
          column: 9
        }
      },
      "33": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 95
        }
      },
      "34": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "35": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 57
        }
      },
      "36": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 39
        }
      },
      "37": {
        start: {
          line: 75,
          column: 4
        },
        end: {
          line: 75,
          column: 25
        }
      },
      "38": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 78,
          column: 5
        }
      },
      "39": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 31
        }
      },
      "40": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 79,
          column: 18
        }
      },
      "41": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 21
        }
      },
      "42": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 10
        }
      },
      "43": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 93,
          column: 10
        }
      },
      "44": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 65
        }
      },
      "45": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 36
        }
      },
      "46": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 103,
          column: 11
        }
      },
      "47": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "48": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "49": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 35
        }
      },
      "50": {
        start: {
          line: 134,
          column: 21
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "51": {
        start: {
          line: 134,
          column: 51
        },
        end: {
          line: 155,
          column: 6
        }
      },
      "52": {
        start: {
          line: 150,
          column: 45
        },
        end: {
          line: 152,
          column: 25
        }
      },
      "53": {
        start: {
          line: 156,
          column: 22
        },
        end: {
          line: 178,
          column: 6
        }
      },
      "54": {
        start: {
          line: 156,
          column: 52
        },
        end: {
          line: 178,
          column: 6
        }
      },
      "55": {
        start: {
          line: 163,
          column: 45
        },
        end: {
          line: 165,
          column: 25
        }
      },
      "56": {
        start: {
          line: 169,
          column: 41
        },
        end: {
          line: 176,
          column: 21
        }
      },
      "57": {
        start: {
          line: 173,
          column: 49
        },
        end: {
          line: 175,
          column: 29
        }
      },
      "58": {
        start: {
          line: 179,
          column: 21
        },
        end: {
          line: 207,
          column: 6
        }
      },
      "59": {
        start: {
          line: 179,
          column: 51
        },
        end: {
          line: 207,
          column: 6
        }
      },
      "60": {
        start: {
          line: 184,
          column: 41
        },
        end: {
          line: 194,
          column: 21
        }
      },
      "61": {
        start: {
          line: 208,
          column: 26
        },
        end: {
          line: 263,
          column: 6
        }
      },
      "62": {
        start: {
          line: 208,
          column: 44
        },
        end: {
          line: 263,
          column: 6
        }
      },
      "63": {
        start: {
          line: 226,
          column: 45
        },
        end: {
          line: 249,
          column: 25
        }
      },
      "64": {
        start: {
          line: 264,
          column: 24
        },
        end: {
          line: 288,
          column: 1
        }
      },
      "65": {
        start: {
          line: 265,
          column: 4
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "66": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "67": {
        start: {
          line: 271,
          column: 12
        },
        end: {
          line: 273,
          column: 15
        }
      },
      "68": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 277,
          column: 15
        }
      },
      "69": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 77
        }
      },
      "70": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 286,
          column: 15
        }
      },
      "71": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 293,
          column: 6
        }
      },
      "72": {
        start: {
          line: 294,
          column: 4
        },
        end: {
          line: 296,
          column: 11
        }
      },
      "73": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 19
        }
      },
      "74": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 310,
          column: 7
        }
      },
      "75": {
        start: {
          line: 313,
          column: 90
        },
        end: {
          line: 313,
          column: 97
        }
      },
      "76": {
        start: {
          line: 315,
          column: 40
        },
        end: {
          line: 349,
          column: 6
        }
      },
      "77": {
        start: {
          line: 316,
          column: 26
        },
        end: {
          line: 316,
          column: 36
        }
      },
      "78": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 348,
          column: 11
        }
      },
      "79": {
        start: {
          line: 320,
          column: 32
        },
        end: {
          line: 320,
          column: 66
        }
      },
      "80": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 339,
          column: 17
        }
      },
      "81": {
        start: {
          line: 321,
          column: 34
        },
        end: {
          line: 321,
          column: 35
        }
      },
      "82": {
        start: {
          line: 322,
          column: 20
        },
        end: {
          line: 338,
          column: 21
        }
      },
      "83": {
        start: {
          line: 323,
          column: 39
        },
        end: {
          line: 323,
          column: 55
        }
      },
      "84": {
        start: {
          line: 325,
          column: 24
        },
        end: {
          line: 329,
          column: 27
        }
      },
      "85": {
        start: {
          line: 330,
          column: 24
        },
        end: {
          line: 330,
          column: 38
        }
      },
      "86": {
        start: {
          line: 332,
          column: 24
        },
        end: {
          line: 332,
          column: 42
        }
      },
      "87": {
        start: {
          line: 333,
          column: 24
        },
        end: {
          line: 333,
          column: 89
        }
      },
      "88": {
        start: {
          line: 334,
          column: 24
        },
        end: {
          line: 337,
          column: 25
        }
      },
      "89": {
        start: {
          line: 336,
          column: 28
        },
        end: {
          line: 336,
          column: 107
        }
      },
      "90": {
        start: {
          line: 336,
          column: 57
        },
        end: {
          line: 336,
          column: 105
        }
      },
      "91": {
        start: {
          line: 340,
          column: 16
        },
        end: {
          line: 340,
          column: 32
        }
      },
      "92": {
        start: {
          line: 344,
          column: 16
        },
        end: {
          line: 346,
          column: 28
        }
      },
      "93": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 345,
          column: 83
        }
      },
      "94": {
        start: {
          line: 351,
          column: 4
        },
        end: {
          line: 358,
          column: 5
        }
      },
      "95": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 357,
          column: 16
        }
      },
      "96": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 356,
          column: 15
        }
      },
      "97": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 355,
          column: 55
        }
      },
      "98": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 368,
          column: 12
        }
      },
      "99": {
        start: {
          line: 360,
          column: 79
        },
        end: {
          line: 368,
          column: 10
        }
      },
      "100": {
        start: {
          line: 371,
          column: 4
        },
        end: {
          line: 383,
          column: 7
        }
      },
      "101": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 379,
          column: 9
        }
      },
      "102": {
        start: {
          line: 373,
          column: 33
        },
        end: {
          line: 377,
          column: 19
        }
      },
      "103": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 376,
          column: 19
        }
      },
      "104": {
        start: {
          line: 375,
          column: 20
        },
        end: {
          line: 375,
          column: 69
        }
      },
      "105": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 50
        }
      },
      "106": {
        start: {
          line: 378,
          column: 23
        },
        end: {
          line: 378,
          column: 49
        }
      },
      "107": {
        start: {
          line: 386,
          column: 48
        },
        end: {
          line: 386,
          column: 78
        }
      },
      "108": {
        start: {
          line: 387,
          column: 48
        },
        end: {
          line: 387,
          column: 78
        }
      },
      "109": {
        start: {
          line: 388,
          column: 4
        },
        end: {
          line: 408,
          column: 7
        }
      },
      "110": {
        start: {
          line: 389,
          column: 24
        },
        end: {
          line: 389,
          column: 35
        }
      },
      "111": {
        start: {
          line: 390,
          column: 8
        },
        end: {
          line: 390,
          column: 47
        }
      },
      "112": {
        start: {
          line: 390,
          column: 40
        },
        end: {
          line: 390,
          column: 47
        }
      },
      "113": {
        start: {
          line: 391,
          column: 25
        },
        end: {
          line: 401,
          column: 10
        }
      },
      "114": {
        start: {
          line: 392,
          column: 12
        },
        end: {
          line: 396,
          column: 13
        }
      },
      "115": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 393,
          column: 40
        }
      },
      "116": {
        start: {
          line: 394,
          column: 16
        },
        end: {
          line: 394,
          column: 40
        }
      },
      "117": {
        start: {
          line: 395,
          column: 16
        },
        end: {
          line: 395,
          column: 38
        }
      },
      "118": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 34
        }
      },
      "119": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 403,
          column: 41
        }
      },
      "120": {
        start: {
          line: 403,
          column: 19
        },
        end: {
          line: 403,
          column: 40
        }
      },
      "121": {
        start: {
          line: 409,
          column: 4
        },
        end: {
          line: 412,
          column: 6
        }
      },
      "122": {
        start: {
          line: 415,
          column: 16
        },
        end: {
          line: 415,
          column: 43
        }
      },
      "123": {
        start: {
          line: 416,
          column: 47
        },
        end: {
          line: 419,
          column: 6
        }
      },
      "124": {
        start: {
          line: 420,
          column: 25
        },
        end: {
          line: 420,
          column: 63
        }
      },
      "125": {
        start: {
          line: 421,
          column: 4
        },
        end: {
          line: 427,
          column: 7
        }
      },
      "126": {
        start: {
          line: 430,
          column: 4
        },
        end: {
          line: 437,
          column: 7
        }
      },
      "127": {
        start: {
          line: 439,
          column: 17
        },
        end: {
          line: 439,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 28
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 19
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 31
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 33
          }
        },
        loc: {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 47,
            column: 1
          }
        },
        line: 40
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 39
          },
          end: {
            line: 44,
            column: 40
          }
        },
        loc: {
          start: {
            line: 44,
            column: 61
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 48,
            column: 9
          },
          end: {
            line: 48,
            column: 34
          }
        },
        loc: {
          start: {
            line: 48,
            column: 53
          },
          end: {
            line: 80,
            column: 1
          }
        },
        line: 48
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 5
          }
        },
        loc: {
          start: {
            line: 89,
            column: 43
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 89
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        loc: {
          start: {
            line: 95,
            column: 40
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 95
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 105,
            column: 5
          }
        },
        loc: {
          start: {
            line: 105,
            column: 13
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 105
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 134,
            column: 21
          },
          end: {
            line: 134,
            column: 22
          }
        },
        loc: {
          start: {
            line: 134,
            column: 51
          },
          end: {
            line: 155,
            column: 6
          }
        },
        line: 134
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 150,
            column: 23
          },
          end: {
            line: 150,
            column: 24
          }
        },
        loc: {
          start: {
            line: 150,
            column: 45
          },
          end: {
            line: 152,
            column: 25
          }
        },
        line: 150
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 23
          }
        },
        loc: {
          start: {
            line: 156,
            column: 52
          },
          end: {
            line: 178,
            column: 6
          }
        },
        line: 156
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 163,
            column: 23
          },
          end: {
            line: 163,
            column: 24
          }
        },
        loc: {
          start: {
            line: 163,
            column: 45
          },
          end: {
            line: 165,
            column: 25
          }
        },
        line: 163
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 169,
            column: 19
          },
          end: {
            line: 169,
            column: 20
          }
        },
        loc: {
          start: {
            line: 169,
            column: 41
          },
          end: {
            line: 176,
            column: 21
          }
        },
        line: 169
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 173,
            column: 27
          },
          end: {
            line: 173,
            column: 28
          }
        },
        loc: {
          start: {
            line: 173,
            column: 49
          },
          end: {
            line: 175,
            column: 29
          }
        },
        line: 173
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 179,
            column: 21
          },
          end: {
            line: 179,
            column: 22
          }
        },
        loc: {
          start: {
            line: 179,
            column: 51
          },
          end: {
            line: 207,
            column: 6
          }
        },
        line: 179
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 184,
            column: 19
          },
          end: {
            line: 184,
            column: 20
          }
        },
        loc: {
          start: {
            line: 184,
            column: 41
          },
          end: {
            line: 194,
            column: 21
          }
        },
        line: 184
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 208,
            column: 26
          },
          end: {
            line: 208,
            column: 27
          }
        },
        loc: {
          start: {
            line: 208,
            column: 44
          },
          end: {
            line: 263,
            column: 6
          }
        },
        line: 208
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 226,
            column: 23
          },
          end: {
            line: 226,
            column: 24
          }
        },
        loc: {
          start: {
            line: 226,
            column: 45
          },
          end: {
            line: 249,
            column: 25
          }
        },
        line: 226
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 264,
            column: 24
          },
          end: {
            line: 264,
            column: 25
          }
        },
        loc: {
          start: {
            line: 264,
            column: 42
          },
          end: {
            line: 288,
            column: 1
          }
        },
        line: 264
      },
      "26": {
        name: "LazyWrapper",
        decl: {
          start: {
            line: 289,
            column: 9
          },
          end: {
            line: 289,
            column: 20
          }
        },
        loc: {
          start: {
            line: 289,
            column: 138
          },
          end: {
            line: 311,
            column: 1
          }
        },
        line: 289
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 294,
            column: 29
          },
          end: {
            line: 294,
            column: 30
          }
        },
        loc: {
          start: {
            line: 294,
            column: 33
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 294
      },
      "28": {
        name: "createLazyComponent",
        decl: {
          start: {
            line: 312,
            column: 9
          },
          end: {
            line: 312,
            column: 28
          }
        },
        loc: {
          start: {
            line: 312,
            column: 53
          },
          end: {
            line: 369,
            column: 1
          }
        },
        line: 312
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 315,
            column: 57
          },
          end: {
            line: 315,
            column: 58
          }
        },
        loc: {
          start: {
            line: 315,
            column: 61
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 315
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 319,
            column: 13
          },
          end: {
            line: 319,
            column: 14
          }
        },
        loc: {
          start: {
            line: 319,
            column: 23
          },
          end: {
            line: 341,
            column: 13
          }
        },
        line: 319
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 336,
            column: 46
          },
          end: {
            line: 336,
            column: 47
          }
        },
        loc: {
          start: {
            line: 336,
            column: 57
          },
          end: {
            line: 336,
            column: 105
          }
        },
        line: 336
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 343,
            column: 24
          },
          end: {
            line: 343,
            column: 25
          }
        },
        loc: {
          start: {
            line: 343,
            column: 37
          },
          end: {
            line: 347,
            column: 13
          }
        },
        line: 343
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 344,
            column: 27
          },
          end: {
            line: 344,
            column: 28
          }
        },
        loc: {
          start: {
            line: 344,
            column: 31
          },
          end: {
            line: 346,
            column: 17
          }
        },
        line: 344
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 353,
            column: 19
          },
          end: {
            line: 353,
            column: 20
          }
        },
        loc: {
          start: {
            line: 353,
            column: 23
          },
          end: {
            line: 357,
            column: 9
          }
        },
        line: 353
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 354,
            column: 29
          },
          end: {
            line: 354,
            column: 30
          }
        },
        loc: {
          start: {
            line: 354,
            column: 38
          },
          end: {
            line: 356,
            column: 13
          }
        },
        line: 354
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 360,
            column: 51
          },
          end: {
            line: 360,
            column: 52
          }
        },
        loc: {
          start: {
            line: 360,
            column: 79
          },
          end: {
            line: 368,
            column: 10
          }
        },
        line: 360
      },
      "37": {
        name: "usePreloadComponent",
        decl: {
          start: {
            line: 370,
            column: 9
          },
          end: {
            line: 370,
            column: 28
          }
        },
        loc: {
          start: {
            line: 370,
            column: 57
          },
          end: {
            line: 384,
            column: 1
          }
        },
        line: 370
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 371,
            column: 29
          },
          end: {
            line: 371,
            column: 30
          }
        },
        loc: {
          start: {
            line: 371,
            column: 33
          },
          end: {
            line: 380,
            column: 5
          }
        },
        line: 371
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 373,
            column: 44
          },
          end: {
            line: 373,
            column: 45
          }
        },
        loc: {
          start: {
            line: 373,
            column: 48
          },
          end: {
            line: 377,
            column: 13
          }
        },
        line: 373
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 374,
            column: 33
          },
          end: {
            line: 374,
            column: 34
          }
        },
        loc: {
          start: {
            line: 374,
            column: 42
          },
          end: {
            line: 376,
            column: 17
          }
        },
        line: 374
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 378,
            column: 19
          },
          end: {
            line: 378,
            column: 20
          }
        },
        loc: {
          start: {
            line: 378,
            column: 23
          },
          end: {
            line: 378,
            column: 49
          }
        },
        line: 378
      },
      "42": {
        name: "useIntersectionLazyLoad",
        decl: {
          start: {
            line: 385,
            column: 9
          },
          end: {
            line: 385,
            column: 32
          }
        },
        loc: {
          start: {
            line: 385,
            column: 52
          },
          end: {
            line: 413,
            column: 1
          }
        },
        line: 385
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 388,
            column: 29
          },
          end: {
            line: 388,
            column: 30
          }
        },
        loc: {
          start: {
            line: 388,
            column: 33
          },
          end: {
            line: 404,
            column: 5
          }
        },
        line: 388
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 391,
            column: 50
          },
          end: {
            line: 391,
            column: 51
          }
        },
        loc: {
          start: {
            line: 391,
            column: 61
          },
          end: {
            line: 397,
            column: 9
          }
        },
        line: 391
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 403,
            column: 15
          },
          end: {
            line: 403,
            column: 16
          }
        },
        loc: {
          start: {
            line: 403,
            column: 19
          },
          end: {
            line: 403,
            column: 40
          }
        },
        line: 403
      },
      "46": {
        name: "IntersectionLazy",
        decl: {
          start: {
            line: 414,
            column: 9
          },
          end: {
            line: 414,
            column: 25
          }
        },
        loc: {
          start: {
            line: 414,
            column: 112
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 414
      },
      "47": {
        name: "createRouteComponent",
        decl: {
          start: {
            line: 429,
            column: 9
          },
          end: {
            line: 429,
            column: 29
          }
        },
        loc: {
          start: {
            line: 429,
            column: 40
          },
          end: {
            line: 438,
            column: 1
          }
        },
        line: 429
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 15
          },
          end: {
            line: 45,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 29
          },
          end: {
            line: 45,
            column: 45
          }
        }, {
          start: {
            line: 45,
            column: 48
          },
          end: {
            line: 45,
            column: 65
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 27
          }
        }, {
          start: {
            line: 49,
            column: 31
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 24
          },
          end: {
            line: 52,
            column: 47
          }
        }, {
          start: {
            line: 52,
            column: 51
          },
          end: {
            line: 52,
            column: 76
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 58,
            column: 17
          },
          end: {
            line: 58,
            column: 31
          }
        }],
        line: 58
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 32
          },
          end: {
            line: 64,
            column: 53
          }
        }, {
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 64,
            column: 88
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 73,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 12
          },
          end: {
            line: 66,
            column: 29
          }
        }, {
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 79
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 67,
            column: 47
          },
          end: {
            line: 67,
            column: 88
          }
        }, {
          start: {
            line: 67,
            column: 91
          },
          end: {
            line: 67,
            column: 95
          }
        }],
        line: 67
      },
      "12": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }],
        line: 68
      },
      "13": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 20
          }
        }, {
          start: {
            line: 68,
            column: 25
          },
          end: {
            line: 68,
            column: 33
          }
        }, {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 45
          }
        }],
        line: 68
      },
      "14": {
        loc: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "15": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "16": {
        loc: {
          start: {
            line: 107,
            column: 19
          },
          end: {
            line: 128,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 19
          },
          end: {
            line: 107,
            column: 38
          }
        }, {
          start: {
            line: 107,
            column: 56
          },
          end: {
            line: 128,
            column: 14
          }
        }],
        line: 107
      },
      "17": {
        loc: {
          start: {
            line: 124,
            column: 38
          },
          end: {
            line: 124,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 38
          },
          end: {
            line: 124,
            column: 63
          }
        }, {
          start: {
            line: 124,
            column: 67
          },
          end: {
            line: 124,
            column: 97
          }
        }],
        line: 124
      },
      "18": {
        loc: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 134,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 134,
            column: 31
          },
          end: {
            line: 134,
            column: 32
          }
        }],
        line: 134
      },
      "19": {
        loc: {
          start: {
            line: 156,
            column: 25
          },
          end: {
            line: 156,
            column: 33
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 156,
            column: 33
          }
        }],
        line: 156
      },
      "20": {
        loc: {
          start: {
            line: 179,
            column: 24
          },
          end: {
            line: 179,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 179,
            column: 31
          },
          end: {
            line: 179,
            column: 32
          }
        }],
        line: 179
      },
      "21": {
        loc: {
          start: {
            line: 265,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 269,
            column: 15
          }
        }, {
          start: {
            line: 270,
            column: 8
          },
          end: {
            line: 273,
            column: 15
          }
        }, {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 277,
            column: 15
          }
        }, {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 279,
            column: 77
          }
        }, {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 286,
            column: 15
          }
        }],
        line: 265
      },
      "22": {
        loc: {
          start: {
            line: 289,
            column: 80
          },
          end: {
            line: 289,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 289,
            column: 91
          },
          end: {
            line: 289,
            column: 99
          }
        }],
        line: 289
      },
      "23": {
        loc: {
          start: {
            line: 289,
            column: 101
          },
          end: {
            line: 289,
            column: 117
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 289,
            column: 116
          },
          end: {
            line: 289,
            column: 117
          }
        }],
        line: 289
      },
      "24": {
        loc: {
          start: {
            line: 290,
            column: 28
          },
          end: {
            line: 293,
            column: 6
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 290,
            column: 28
          },
          end: {
            line: 290,
            column: 36
          }
        }, {
          start: {
            line: 290,
            column: 54
          },
          end: {
            line: 293,
            column: 6
          }
        }],
        line: 290
      },
      "25": {
        loc: {
          start: {
            line: 312,
            column: 39
          },
          end: {
            line: 312,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 312,
            column: 49
          },
          end: {
            line: 312,
            column: 51
          }
        }],
        line: 312
      },
      "26": {
        loc: {
          start: {
            line: 313,
            column: 37
          },
          end: {
            line: 313,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 313,
            column: 47
          },
          end: {
            line: 313,
            column: 52
          }
        }],
        line: 313
      },
      "27": {
        loc: {
          start: {
            line: 313,
            column: 54
          },
          end: {
            line: 313,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 313,
            column: 67
          },
          end: {
            line: 313,
            column: 68
          }
        }],
        line: 313
      },
      "28": {
        loc: {
          start: {
            line: 313,
            column: 70
          },
          end: {
            line: 313,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 313,
            column: 80
          },
          end: {
            line: 313,
            column: 85
          }
        }],
        line: 313
      },
      "29": {
        loc: {
          start: {
            line: 334,
            column: 24
          },
          end: {
            line: 337,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 24
          },
          end: {
            line: 337,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "30": {
        loc: {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 358,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 351
      },
      "31": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 351,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 351,
            column: 15
          }
        }, {
          start: {
            line: 351,
            column: 19
          },
          end: {
            line: 351,
            column: 48
          }
        }],
        line: 351
      },
      "32": {
        loc: {
          start: {
            line: 370,
            column: 39
          },
          end: {
            line: 370,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 370,
            column: 51
          },
          end: {
            line: 370,
            column: 55
          }
        }],
        line: 370
      },
      "33": {
        loc: {
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 372,
            column: 8
          },
          end: {
            line: 379,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 372
      },
      "34": {
        loc: {
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 372,
            column: 12
          },
          end: {
            line: 372,
            column: 21
          }
        }, {
          start: {
            line: 372,
            column: 25
          },
          end: {
            line: 372,
            column: 54
          }
        }],
        line: 372
      },
      "35": {
        loc: {
          start: {
            line: 385,
            column: 38
          },
          end: {
            line: 385,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 385,
            column: 48
          },
          end: {
            line: 385,
            column: 50
          }
        }],
        line: 385
      },
      "36": {
        loc: {
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 390,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 390,
            column: 8
          },
          end: {
            line: 390,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 390
      },
      "37": {
        loc: {
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 390,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 390,
            column: 12
          },
          end: {
            line: 390,
            column: 20
          }
        }, {
          start: {
            line: 390,
            column: 24
          },
          end: {
            line: 390,
            column: 38
          }
        }],
        line: 390
      },
      "38": {
        loc: {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 396,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 392
      },
      "39": {
        loc: {
          start: {
            line: 414,
            column: 59
          },
          end: {
            line: 414,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 414,
            column: 71
          },
          end: {
            line: 414,
            column: 74
          }
        }],
        line: 414
      },
      "40": {
        loc: {
          start: {
            line: 414,
            column: 76
          },
          end: {
            line: 414,
            column: 95
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 414,
            column: 89
          },
          end: {
            line: 414,
            column: 95
          }
        }],
        line: 414
      },
      "41": {
        loc: {
          start: {
            line: 414,
            column: 97
          },
          end: {
            line: 414,
            column: 108
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 414,
            column: 104
          },
          end: {
            line: 414,
            column: 108
          }
        }],
        line: 414
      },
      "42": {
        loc: {
          start: {
            line: 420,
            column: 25
          },
          end: {
            line: 420,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 420,
            column: 32
          },
          end: {
            line: 420,
            column: 46
          }
        }, {
          start: {
            line: 420,
            column: 49
          },
          end: {
            line: 420,
            column: 63
          }
        }],
        line: 420
      },
      "43": {
        loc: {
          start: {
            line: 424,
            column: 18
          },
          end: {
            line: 426,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 424,
            column: 33
          },
          end: {
            line: 424,
            column: 41
          }
        }, {
          start: {
            line: 424,
            column: 44
          },
          end: {
            line: 426,
            column: 10
          }
        }],
        line: 424
      },
      "44": {
        loc: {
          start: {
            line: 424,
            column: 44
          },
          end: {
            line: 426,
            column: 10
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 424,
            column: 44
          },
          end: {
            line: 424,
            column: 52
          }
        }, {
          start: {
            line: 424,
            column: 70
          },
          end: {
            line: 426,
            column: 10
          }
        }],
        line: 424
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0, 0, 0, 0, 0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0],
      "28": [0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0],
      "41": [0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\LazyWrapper.tsx"],
      sourcesContent: ["'use client'\n\nimport React, { Suspense, lazy, ComponentType, ReactNode } from 'react'\nimport { Skeleton } from '../../../components/ui/skeleton'\nimport { Card, CardContent, CardHeader } from '@/components/ui/card'\nimport { Loader2 } from 'lucide-react'\nimport { performanceOptimizationService } from '@/services/performanceOptimization'\n\ninterface LazyWrapperProps {\n  children: ReactNode\n  fallback?: ReactNode\n  errorFallback?: ReactNode\n  className?: string\n  minHeight?: string | number\n  skeleton?: 'card' | 'table' | 'form' | 'dashboard' | 'custom'\n  skeletonRows?: number\n  onLoad?: () => void\n  onError?: (error: Error) => void\n}\n\ninterface LazyComponentProps {\n  importFn: () => Promise<{ default: ComponentType<any> }>\n  fallback?: ReactNode\n  errorFallback?: ReactNode\n  preload?: boolean\n  retryCount?: number\n  timeout?: number\n}\n\n// Error Boundary for lazy components\nclass LazyErrorBoundary extends React.Component<\n  { children: ReactNode; fallback?: ReactNode; onError?: (error: Error) => void },\n  { hasError: boolean; error?: Error }\n> {\n  constructor(props: any) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error: Error) {\n    return { hasError: true, error }\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error('Lazy component error:', error, errorInfo)\n    this.props.onError?.(error)\n    \n    // Log performance metric for failed component loads\n    console.error('Component load error metrics:', {\n      error: error.message,\n      stack: error.stack,\n      timestamp: Date.now()\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return this.props.fallback || (\n        <Card className=\"border-red-200\">\n          <CardHeader>\n            <div className=\"flex items-center gap-2 text-red-600\">\n              <Loader2 className=\"h-4 w-4\" />\n              Failed to load component\n            </div>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-sm text-muted-foreground\">\n              {this.state.error?.message || 'An unexpected error occurred'}\n            </p>\n          </CardContent>\n        </Card>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\n// Skeleton components for different layouts\nconst CardSkeleton = ({ rows = 3 }: { rows?: number }) => (\n  <Card>\n    <CardHeader>\n      <Skeleton className=\"h-6 w-3/4\" />\n      <Skeleton className=\"h-4 w-1/2\" />\n    </CardHeader>\n    <CardContent className=\"space-y-3\">\n      {Array.from({ length: rows }).map((_, i) => (\n        <Skeleton key={i} className=\"h-4 w-full\" />\n      ))}\n    </CardContent>\n  </Card>\n)\n\nconst TableSkeleton = ({ rows = 5 }: { rows?: number }) => (\n  <div className=\"space-y-3\">\n    <div className=\"flex space-x-4\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <Skeleton key={i} className=\"h-8 flex-1\" />\n      ))}\n    </div>\n    {Array.from({ length: rows }).map((_, i) => (\n      <div key={i} className=\"flex space-x-4\">\n        {Array.from({ length: 4 }).map((_, j) => (\n          <Skeleton key={j} className=\"h-6 flex-1\" />\n        ))}\n      </div>\n    ))}\n  </div>\n)\n\nconst FormSkeleton = ({ rows = 4 }: { rows?: number }) => (\n  <div className=\"space-y-4\">\n    {Array.from({ length: rows }).map((_, i) => (\n      <div key={i} className=\"space-y-2\">\n        <Skeleton className=\"h-4 w-1/4\" />\n        <Skeleton className=\"h-10 w-full\" />\n      </div>\n    ))}\n    <div className=\"flex justify-end space-x-2\">\n      <Skeleton className=\"h-10 w-20\" />\n      <Skeleton className=\"h-10 w-20\" />\n    </div>\n  </div>\n)\n\nconst DashboardSkeleton = () => (\n  <div className=\"space-y-6\">\n    {/* Header */}\n    <div className=\"flex justify-between items-center\">\n      <Skeleton className=\"h-8 w-48\" />\n      <Skeleton className=\"h-10 w-32\" />\n    </div>\n    \n    {/* Stats Cards */}\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n      {Array.from({ length: 4 }).map((_, i) => (\n        <Card key={i}>\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"space-y-2\">\n                <Skeleton className=\"h-4 w-20\" />\n                <Skeleton className=\"h-8 w-16\" />\n              </div>\n              <Skeleton className=\"h-8 w-8 rounded\" />\n            </div>\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n    \n    {/* Main Content */}\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n      <CardSkeleton rows={6} />\n      <CardSkeleton rows={6} />\n    </div>\n  </div>\n)\n\nconst LoadingSkeleton = ({ type, rows }: { type: LazyWrapperProps['skeleton']; rows?: number }) => {\n  switch (type) {\n    case 'card':\n      return <CardSkeleton rows={rows} />\n    case 'table':\n      return <TableSkeleton rows={rows} />\n    case 'form':\n      return <FormSkeleton rows={rows} />\n    case 'dashboard':\n      return <DashboardSkeleton />\n    default:\n      return (\n        <div className=\"flex items-center justify-center p-8\">\n          <Loader2 className=\"h-6 w-6 animate-spin\" />\n        </div>\n      )\n  }\n}\n\n// Main LazyWrapper component\nexport function LazyWrapper({\n  children,\n  fallback,\n  errorFallback,\n  className,\n  minHeight,\n  skeleton = 'custom',\n  skeletonRows = 3,\n  onLoad,\n  onError\n}: LazyWrapperProps) {\n  const defaultFallback = fallback || <LoadingSkeleton type={skeleton} rows={skeletonRows} />\n\n  React.useEffect(() => {\n    onLoad?.()\n  }, [])\n\n  return (\n    <LazyErrorBoundary fallback={errorFallback} onError={onError}>\n      <div className={className} style={{ minHeight }}>\n        <Suspense fallback={defaultFallback}>\n          {children}\n        </Suspense>\n      </div>\n    </LazyErrorBoundary>\n  )\n}\n\n// Higher-order component for creating lazy components\nexport function createLazyComponent<T = {}>(\n  importFn: () => Promise<{ default: ComponentType<T> }>,\n  options: Omit<LazyComponentProps, 'importFn'> = {}\n) {\n  const {\n    fallback,\n    errorFallback,\n    preload = false,\n    retryCount = 3,\n    timeout = 10000\n  } = options\n\n  // Create lazy component with retry logic\n  const LazyComponent = lazy(() => {\n    const startTime = Date.now()\n    \n    return Promise.race([\n      // Main import with retry logic\n      (async () => {\n        let lastError: Error = new Error('Component load failed')\n        \n        for (let attempt = 1; attempt <= retryCount; attempt++) {\n          try {\n            const module = await importFn()\n            \n            // Log successful load\n            console.log('Component load success:', {\n              loadTime: Date.now() - startTime,\n              attempt,\n              timestamp: Date.now()\n            })\n            \n            return module\n          } catch (error) {\n            lastError = error as Error\n            console.warn(`Component load attempt ${attempt} failed:`, error)\n            \n            if (attempt < retryCount) {\n              // Exponential backoff\n              await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempt) * 1000))\n            }\n          }\n        }\n        \n        throw lastError\n      })(),\n      \n      // Timeout\n      new Promise<never>((_, reject) => {\n        setTimeout(() => {\n          reject(new Error(`Component load timeout after ${timeout}ms`))\n        }, timeout)\n      })\n    ])\n  })\n\n  // Preload if requested\n  if (preload && typeof window !== 'undefined') {\n    // Preload after a short delay to not block initial render\n    setTimeout(() => {\n      importFn().catch(error => {\n        console.warn('Preload failed:', error)\n      })\n    }, 100)\n  }\n\n  // Return wrapped component\n  return React.forwardRef<any, T>((props, ref) => (\n    <LazyWrapper\n      fallback={fallback}\n      errorFallback={errorFallback}\n      skeleton=\"card\"\n    >\n      <LazyComponent {...(props as any)} ref={ref} />\n    </LazyWrapper>\n  ))\n}\n\n// Hook for preloading components\nexport function usePreloadComponent(\n  importFn: () => Promise<{ default: ComponentType<any> }>,\n  condition: boolean = true\n) {\n  React.useEffect(() => {\n    if (condition && typeof window !== 'undefined') {\n      const preloadTimer = setTimeout(() => {\n        importFn().catch(error => {\n          console.warn('Component preload failed:', error)\n        })\n      }, 100)\n\n      return () => clearTimeout(preloadTimer)\n    }\n  }, [importFn, condition])\n}\n\n// Intersection Observer based lazy loading\nexport function useIntersectionLazyLoad(\n  ref: React.RefObject<HTMLElement | null>,\n  options: IntersectionObserverInit = {}\n) {\n  const [isIntersecting, setIsIntersecting] = React.useState(false)\n  const [hasIntersected, setHasIntersected] = React.useState(false)\n\n  React.useEffect(() => {\n    const element = ref.current\n    if (!element || hasIntersected) return\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsIntersecting(true)\n          setHasIntersected(true)\n          observer.disconnect()\n        }\n      },\n      {\n        threshold: 0.1,\n        rootMargin: '50px',\n        ...options\n      }\n    )\n\n    observer.observe(element)\n\n    return () => observer.disconnect()\n  }, [ref, hasIntersected, options])\n\n  return { isIntersecting, hasIntersected }\n}\n\n// Component for intersection-based lazy loading\ninterface IntersectionLazyProps {\n  children: ReactNode\n  fallback?: ReactNode\n  className?: string\n  threshold?: number\n  rootMargin?: string\n  once?: boolean\n}\n\nexport function IntersectionLazy({\n  children,\n  fallback,\n  className,\n  threshold = 0.1,\n  rootMargin = '50px',\n  once = true\n}: IntersectionLazyProps) {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const { isIntersecting, hasIntersected } = useIntersectionLazyLoad(ref, {\n    threshold,\n    rootMargin\n  })\n\n  const shouldRender = once ? hasIntersected : isIntersecting\n\n  return (\n    <div ref={ref} className={className}>\n      {shouldRender ? children : (fallback || <LoadingSkeleton type=\"custom\" />)}\n    </div>\n  )\n}\n\n// Utility for creating route-based code splitting\nexport function createRouteComponent(\n  importFn: () => Promise<{ default: ComponentType<any> }>\n) {\n  return createLazyComponent(importFn, {\n    preload: false,\n    retryCount: 3,\n    timeout: 15000,\n    fallback: <LoadingSkeleton type=\"dashboard\" />\n  })\n}\n\nexport default LazyWrapper"],
      names: ["IntersectionLazy", "LazyWrapper", "createLazyComponent", "createRouteComponent", "useIntersectionLazyLoad", "usePreloadComponent", "LazyErrorBoundary", "React", "Component", "props", "state", "hasError", "getDerivedStateFromError", "error", "componentDidCatch", "errorInfo", "console", "onError", "message", "stack", "timestamp", "Date", "now", "render", "fallback", "Card", "className", "CardHeader", "div", "Loader2", "CardContent", "p", "children", "CardSkeleton", "rows", "Skeleton", "Array", "from", "length", "map", "_", "i", "TableSkeleton", "j", "FormSkeleton", "DashboardSkeleton", "LoadingSkeleton", "type", "errorFallback", "minHeight", "skeleton", "skeletonRows", "onLoad", "defaultFallback", "useEffect", "style", "Suspense", "importFn", "options", "preload", "retryCount", "timeout", "LazyComponent", "lazy", "startTime", "Promise", "race", "lastError", "Error", "attempt", "module", "log", "loadTime", "warn", "resolve", "setTimeout", "Math", "pow", "reject", "window", "catch", "forwardRef", "ref", "condition", "preloadTimer", "clearTimeout", "isIntersecting", "setIsIntersecting", "useState", "hasIntersected", "setHasIntersected", "element", "current", "observer", "IntersectionObserver", "entry", "disconnect", "threshold", "rootMargin", "observe", "once", "useRef", "shouldRender"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fc503aea0a3af3288efc7bab91ca511ea0087d01"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_y1fled6i9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_y1fled6i9();
cov_y1fled6i9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[0]++;
  cov_y1fled6i9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_y1fled6i9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_y1fled6i9().s[3]++;
_export(exports, {
  get IntersectionLazy() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[1]++;
    cov_y1fled6i9().s[4]++;
    return IntersectionLazy;
  },
  get LazyWrapper() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[2]++;
    cov_y1fled6i9().s[5]++;
    return LazyWrapper;
  },
  get createLazyComponent() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[3]++;
    cov_y1fled6i9().s[6]++;
    return createLazyComponent;
  },
  get createRouteComponent() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[4]++;
    cov_y1fled6i9().s[7]++;
    return createRouteComponent;
  },
  get default() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[5]++;
    cov_y1fled6i9().s[8]++;
    return _default;
  },
  get useIntersectionLazyLoad() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[6]++;
    cov_y1fled6i9().s[9]++;
    return useIntersectionLazyLoad;
  },
  get usePreloadComponent() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[7]++;
    cov_y1fled6i9().s[10]++;
    return usePreloadComponent;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_y1fled6i9().s[11]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_y1fled6i9().s[12]++, _interop_require_wildcard(require("react")));
const _skeleton =
/* istanbul ignore next */
(cov_y1fled6i9().s[13]++, require("../../../components/ui/skeleton"));
const _card =
/* istanbul ignore next */
(cov_y1fled6i9().s[14]++, require("./card"));
const _lucidereact =
/* istanbul ignore next */
(cov_y1fled6i9().s[15]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[8]++;
  cov_y1fled6i9().s[16]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_y1fled6i9().b[0][0]++;
    cov_y1fled6i9().s[17]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_y1fled6i9().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[18]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[19]++, new WeakMap());
  /* istanbul ignore next */
  cov_y1fled6i9().s[20]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_y1fled6i9().f[9]++;
    cov_y1fled6i9().s[21]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_y1fled6i9().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_y1fled6i9().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[10]++;
  cov_y1fled6i9().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_y1fled6i9().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_y1fled6i9().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_y1fled6i9().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_y1fled6i9().b[2][0]++;
    cov_y1fled6i9().s[23]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_y1fled6i9().b[2][1]++;
  }
  cov_y1fled6i9().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_y1fled6i9().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_y1fled6i9().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_y1fled6i9().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_y1fled6i9().b[4][0]++;
    cov_y1fled6i9().s[25]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_y1fled6i9().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[26]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_y1fled6i9().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_y1fled6i9().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_y1fled6i9().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_y1fled6i9().b[6][0]++;
    cov_y1fled6i9().s[28]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_y1fled6i9().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[29]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[30]++,
  /* istanbul ignore next */
  (cov_y1fled6i9().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_y1fled6i9().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_y1fled6i9().s[31]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_y1fled6i9().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_y1fled6i9().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_y1fled6i9().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_y1fled6i9().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_y1fled6i9().s[33]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_y1fled6i9().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_y1fled6i9().b[11][1]++, null));
      /* istanbul ignore next */
      cov_y1fled6i9().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_y1fled6i9().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_y1fled6i9().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_y1fled6i9().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_y1fled6i9().b[12][0]++;
        cov_y1fled6i9().s[35]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_y1fled6i9().b[12][1]++;
        cov_y1fled6i9().s[36]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_y1fled6i9().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_y1fled6i9().s[37]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_y1fled6i9().s[38]++;
  if (cache) {
    /* istanbul ignore next */
    cov_y1fled6i9().b[14][0]++;
    cov_y1fled6i9().s[39]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_y1fled6i9().b[14][1]++;
  }
  cov_y1fled6i9().s[40]++;
  return newObj;
}
// Error Boundary for lazy components
class LazyErrorBoundary extends
/* istanbul ignore next */
(_react.default.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_y1fled6i9().f[11]++;
    cov_y1fled6i9().s[41]++;
    super(props);
    /* istanbul ignore next */
    cov_y1fled6i9().s[42]++;
    this.state = {
      hasError: false
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_y1fled6i9().f[12]++;
    cov_y1fled6i9().s[43]++;
    return {
      hasError: true,
      error
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_y1fled6i9().f[13]++;
    cov_y1fled6i9().s[44]++;
    console.error('Lazy component error:', error, errorInfo);
    /* istanbul ignore next */
    cov_y1fled6i9().s[45]++;
    this.props.onError?.(error);
    // Log performance metric for failed component loads
    /* istanbul ignore next */
    cov_y1fled6i9().s[46]++;
    console.error('Component load error metrics:', {
      error: error.message,
      stack: error.stack,
      timestamp: Date.now()
    });
  }
  render() {
    /* istanbul ignore next */
    cov_y1fled6i9().f[14]++;
    cov_y1fled6i9().s[47]++;
    if (this.state.hasError) {
      /* istanbul ignore next */
      cov_y1fled6i9().b[15][0]++;
      cov_y1fled6i9().s[48]++;
      return /* istanbul ignore next */(cov_y1fled6i9().b[16][0]++, this.props.fallback) ||
      /* istanbul ignore next */
      (cov_y1fled6i9().b[16][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        className: "border-red-200",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2 text-red-600",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
              className: "h-4 w-4"
            }), "Failed to load component"]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-sm text-muted-foreground",
            children:
            /* istanbul ignore next */
            (cov_y1fled6i9().b[17][0]++, this.state.error?.message) ||
            /* istanbul ignore next */
            (cov_y1fled6i9().b[17][1]++, 'An unexpected error occurred')
          })
        })]
      }));
    } else
    /* istanbul ignore next */
    {
      cov_y1fled6i9().b[15][1]++;
    }
    cov_y1fled6i9().s[49]++;
    return this.props.children;
  }
}
// Skeleton components for different layouts
/* istanbul ignore next */
cov_y1fled6i9().s[50]++;
const CardSkeleton = ({
  rows =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[18][0]++, 3)
}) => {
  /* istanbul ignore next */
  cov_y1fled6i9().f[15]++;
  cov_y1fled6i9().s[51]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
        className: "h-6 w-3/4"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
        className: "h-4 w-1/2"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
      className: "space-y-3",
      children: Array.from({
        length: rows
      }).map((_, i) => {
        /* istanbul ignore next */
        cov_y1fled6i9().f[16]++;
        cov_y1fled6i9().s[52]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-4 w-full"
        }, i);
      })
    })]
  });
};
/* istanbul ignore next */
cov_y1fled6i9().s[53]++;
const TableSkeleton = ({
  rows =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[19][0]++, 5)
}) => {
  /* istanbul ignore next */
  cov_y1fled6i9().f[17]++;
  cov_y1fled6i9().s[54]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-3",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex space-x-4",
      children: Array.from({
        length: 4
      }).map((_, i) => {
        /* istanbul ignore next */
        cov_y1fled6i9().f[18]++;
        cov_y1fled6i9().s[55]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-8 flex-1"
        }, i);
      })
    }), Array.from({
      length: rows
    }).map((_, i) => {
      /* istanbul ignore next */
      cov_y1fled6i9().f[19]++;
      cov_y1fled6i9().s[56]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex space-x-4",
        children: Array.from({
          length: 4
        }).map((_, j) => {
          /* istanbul ignore next */
          cov_y1fled6i9().f[20]++;
          cov_y1fled6i9().s[57]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
            className: "h-6 flex-1"
          }, j);
        })
      }, i);
    })]
  });
};
/* istanbul ignore next */
cov_y1fled6i9().s[58]++;
const FormSkeleton = ({
  rows =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[20][0]++, 4)
}) => {
  /* istanbul ignore next */
  cov_y1fled6i9().f[21]++;
  cov_y1fled6i9().s[59]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-4",
    children: [Array.from({
      length: rows
    }).map((_, i) => {
      /* istanbul ignore next */
      cov_y1fled6i9().f[22]++;
      cov_y1fled6i9().s[60]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-4 w-1/4"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
          className: "h-10 w-full"
        })]
      }, i);
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-end space-x-2",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
        className: "h-10 w-20"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
        className: "h-10 w-20"
      })]
    })]
  });
};
/* istanbul ignore next */
cov_y1fled6i9().s[61]++;
const DashboardSkeleton = () => {
  /* istanbul ignore next */
  cov_y1fled6i9().f[23]++;
  cov_y1fled6i9().s[62]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
        className: "h-8 w-48"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
        className: "h-10 w-32"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
      children: Array.from({
        length: 4
      }).map((_, i) => {
        /* istanbul ignore next */
        cov_y1fled6i9().f[24]++;
        cov_y1fled6i9().s[63]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            className: "p-6",
            children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center justify-between",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-2",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                  className: "h-4 w-20"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                  className: "h-8 w-16"
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                className: "h-8 w-8 rounded"
              })]
            })
          })
        }, i);
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-2 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(CardSkeleton, {
        rows: 6
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(CardSkeleton, {
        rows: 6
      })]
    })]
  });
};
/* istanbul ignore next */
cov_y1fled6i9().s[64]++;
const LoadingSkeleton = ({
  type,
  rows
}) => {
  /* istanbul ignore next */
  cov_y1fled6i9().f[25]++;
  cov_y1fled6i9().s[65]++;
  switch (type) {
    case 'card':
      /* istanbul ignore next */
      cov_y1fled6i9().b[21][0]++;
      cov_y1fled6i9().s[66]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(CardSkeleton, {
        rows: rows
      });
    case 'table':
      /* istanbul ignore next */
      cov_y1fled6i9().b[21][1]++;
      cov_y1fled6i9().s[67]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(TableSkeleton, {
        rows: rows
      });
    case 'form':
      /* istanbul ignore next */
      cov_y1fled6i9().b[21][2]++;
      cov_y1fled6i9().s[68]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(FormSkeleton, {
        rows: rows
      });
    case 'dashboard':
      /* istanbul ignore next */
      cov_y1fled6i9().b[21][3]++;
      cov_y1fled6i9().s[69]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(DashboardSkeleton, {});
    default:
      /* istanbul ignore next */
      cov_y1fled6i9().b[21][4]++;
      cov_y1fled6i9().s[70]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex items-center justify-center p-8",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
          className: "h-6 w-6 animate-spin"
        })
      });
  }
};
function LazyWrapper({
  children,
  fallback,
  errorFallback,
  className,
  minHeight,
  skeleton =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[22][0]++, 'custom'),
  skeletonRows =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[23][0]++, 3),
  onLoad,
  onError
}) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[26]++;
  const defaultFallback =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[71]++,
  /* istanbul ignore next */
  (cov_y1fled6i9().b[24][0]++, fallback) ||
  /* istanbul ignore next */
  (cov_y1fled6i9().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(LoadingSkeleton, {
    type: skeleton,
    rows: skeletonRows
  })));
  /* istanbul ignore next */
  cov_y1fled6i9().s[72]++;
  _react.default.useEffect(() => {
    /* istanbul ignore next */
    cov_y1fled6i9().f[27]++;
    cov_y1fled6i9().s[73]++;
    onLoad?.();
  }, []);
  /* istanbul ignore next */
  cov_y1fled6i9().s[74]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(LazyErrorBoundary, {
    fallback: errorFallback,
    onError: onError,
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: className,
      style: {
        minHeight
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_react.Suspense, {
        fallback: defaultFallback,
        children: children
      })
    })
  });
}
function createLazyComponent(importFn, options =
/* istanbul ignore next */
(cov_y1fled6i9().b[25][0]++, {})) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[28]++;
  const {
    fallback,
    errorFallback,
    preload =
    /* istanbul ignore next */
    (cov_y1fled6i9().b[26][0]++, false),
    retryCount =
    /* istanbul ignore next */
    (cov_y1fled6i9().b[27][0]++, 3),
    timeout =
    /* istanbul ignore next */
    (cov_y1fled6i9().b[28][0]++, 10000)
  } =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[75]++, options);
  // Create lazy component with retry logic
  const LazyComponent =
  /* istanbul ignore next */
  (/*#__PURE__*/cov_y1fled6i9().s[76]++, (0, _react.lazy)(() => {
    /* istanbul ignore next */
    cov_y1fled6i9().f[29]++;
    const startTime =
    /* istanbul ignore next */
    (cov_y1fled6i9().s[77]++, Date.now());
    /* istanbul ignore next */
    cov_y1fled6i9().s[78]++;
    return Promise.race([
    // Main import with retry logic
    (async () => {
      /* istanbul ignore next */
      cov_y1fled6i9().f[30]++;
      let lastError =
      /* istanbul ignore next */
      (cov_y1fled6i9().s[79]++, new Error('Component load failed'));
      /* istanbul ignore next */
      cov_y1fled6i9().s[80]++;
      for (let attempt =
      /* istanbul ignore next */
      (cov_y1fled6i9().s[81]++, 1); attempt <= retryCount; attempt++) {
        /* istanbul ignore next */
        cov_y1fled6i9().s[82]++;
        try {
          const module =
          /* istanbul ignore next */
          (cov_y1fled6i9().s[83]++, await importFn());
          // Log successful load
          /* istanbul ignore next */
          cov_y1fled6i9().s[84]++;
          console.log('Component load success:', {
            loadTime: Date.now() - startTime,
            attempt,
            timestamp: Date.now()
          });
          /* istanbul ignore next */
          cov_y1fled6i9().s[85]++;
          return module;
        } catch (error) {
          /* istanbul ignore next */
          cov_y1fled6i9().s[86]++;
          lastError = error;
          /* istanbul ignore next */
          cov_y1fled6i9().s[87]++;
          console.warn(`Component load attempt ${attempt} failed:`, error);
          /* istanbul ignore next */
          cov_y1fled6i9().s[88]++;
          if (attempt < retryCount) {
            /* istanbul ignore next */
            cov_y1fled6i9().b[29][0]++;
            cov_y1fled6i9().s[89]++;
            // Exponential backoff
            await new Promise(resolve => {
              /* istanbul ignore next */
              cov_y1fled6i9().f[31]++;
              cov_y1fled6i9().s[90]++;
              return setTimeout(resolve, Math.pow(2, attempt) * 1000);
            });
          } else
          /* istanbul ignore next */
          {
            cov_y1fled6i9().b[29][1]++;
          }
        }
      }
      /* istanbul ignore next */
      cov_y1fled6i9().s[91]++;
      throw lastError;
    })(),
    // Timeout
    new Promise((_, reject) => {
      /* istanbul ignore next */
      cov_y1fled6i9().f[32]++;
      cov_y1fled6i9().s[92]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_y1fled6i9().f[33]++;
        cov_y1fled6i9().s[93]++;
        reject(new Error(`Component load timeout after ${timeout}ms`));
      }, timeout);
    })]);
  }));
  // Preload if requested
  /* istanbul ignore next */
  cov_y1fled6i9().s[94]++;
  if (
  /* istanbul ignore next */
  (cov_y1fled6i9().b[31][0]++, preload) &&
  /* istanbul ignore next */
  (cov_y1fled6i9().b[31][1]++, typeof window !== 'undefined')) {
    /* istanbul ignore next */
    cov_y1fled6i9().b[30][0]++;
    cov_y1fled6i9().s[95]++;
    // Preload after a short delay to not block initial render
    setTimeout(() => {
      /* istanbul ignore next */
      cov_y1fled6i9().f[34]++;
      cov_y1fled6i9().s[96]++;
      importFn().catch(error => {
        /* istanbul ignore next */
        cov_y1fled6i9().f[35]++;
        cov_y1fled6i9().s[97]++;
        console.warn('Preload failed:', error);
      });
    }, 100);
  } else
  /* istanbul ignore next */
  {
    cov_y1fled6i9().b[30][1]++;
  }
  // Return wrapped component
  cov_y1fled6i9().s[98]++;
  return /*#__PURE__*/_react.default.forwardRef((props, ref) => {
    /* istanbul ignore next */
    cov_y1fled6i9().f[36]++;
    cov_y1fled6i9().s[99]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(LazyWrapper, {
      fallback: fallback,
      errorFallback: errorFallback,
      skeleton: "card",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(LazyComponent, {
        ...props,
        ref: ref
      })
    });
  });
}
function usePreloadComponent(importFn, condition =
/* istanbul ignore next */
(cov_y1fled6i9().b[32][0]++, true)) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[37]++;
  cov_y1fled6i9().s[100]++;
  _react.default.useEffect(() => {
    /* istanbul ignore next */
    cov_y1fled6i9().f[38]++;
    cov_y1fled6i9().s[101]++;
    if (
    /* istanbul ignore next */
    (cov_y1fled6i9().b[34][0]++, condition) &&
    /* istanbul ignore next */
    (cov_y1fled6i9().b[34][1]++, typeof window !== 'undefined')) {
      /* istanbul ignore next */
      cov_y1fled6i9().b[33][0]++;
      const preloadTimer =
      /* istanbul ignore next */
      (cov_y1fled6i9().s[102]++, setTimeout(() => {
        /* istanbul ignore next */
        cov_y1fled6i9().f[39]++;
        cov_y1fled6i9().s[103]++;
        importFn().catch(error => {
          /* istanbul ignore next */
          cov_y1fled6i9().f[40]++;
          cov_y1fled6i9().s[104]++;
          console.warn('Component preload failed:', error);
        });
      }, 100));
      /* istanbul ignore next */
      cov_y1fled6i9().s[105]++;
      return () => {
        /* istanbul ignore next */
        cov_y1fled6i9().f[41]++;
        cov_y1fled6i9().s[106]++;
        return clearTimeout(preloadTimer);
      };
    } else
    /* istanbul ignore next */
    {
      cov_y1fled6i9().b[33][1]++;
    }
  }, [importFn, condition]);
}
function useIntersectionLazyLoad(ref, options =
/* istanbul ignore next */
(cov_y1fled6i9().b[35][0]++, {})) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[42]++;
  const [isIntersecting, setIsIntersecting] =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[107]++, _react.default.useState(false));
  const [hasIntersected, setHasIntersected] =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[108]++, _react.default.useState(false));
  /* istanbul ignore next */
  cov_y1fled6i9().s[109]++;
  _react.default.useEffect(() => {
    /* istanbul ignore next */
    cov_y1fled6i9().f[43]++;
    const element =
    /* istanbul ignore next */
    (cov_y1fled6i9().s[110]++, ref.current);
    /* istanbul ignore next */
    cov_y1fled6i9().s[111]++;
    if (
    /* istanbul ignore next */
    (cov_y1fled6i9().b[37][0]++, !element) ||
    /* istanbul ignore next */
    (cov_y1fled6i9().b[37][1]++, hasIntersected)) {
      /* istanbul ignore next */
      cov_y1fled6i9().b[36][0]++;
      cov_y1fled6i9().s[112]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_y1fled6i9().b[36][1]++;
    }
    const observer =
    /* istanbul ignore next */
    (cov_y1fled6i9().s[113]++, new IntersectionObserver(([entry]) => {
      /* istanbul ignore next */
      cov_y1fled6i9().f[44]++;
      cov_y1fled6i9().s[114]++;
      if (entry.isIntersecting) {
        /* istanbul ignore next */
        cov_y1fled6i9().b[38][0]++;
        cov_y1fled6i9().s[115]++;
        setIsIntersecting(true);
        /* istanbul ignore next */
        cov_y1fled6i9().s[116]++;
        setHasIntersected(true);
        /* istanbul ignore next */
        cov_y1fled6i9().s[117]++;
        observer.disconnect();
      } else
      /* istanbul ignore next */
      {
        cov_y1fled6i9().b[38][1]++;
      }
    }, {
      threshold: 0.1,
      rootMargin: '50px',
      ...options
    }));
    /* istanbul ignore next */
    cov_y1fled6i9().s[118]++;
    observer.observe(element);
    /* istanbul ignore next */
    cov_y1fled6i9().s[119]++;
    return () => {
      /* istanbul ignore next */
      cov_y1fled6i9().f[45]++;
      cov_y1fled6i9().s[120]++;
      return observer.disconnect();
    };
  }, [ref, hasIntersected, options]);
  /* istanbul ignore next */
  cov_y1fled6i9().s[121]++;
  return {
    isIntersecting,
    hasIntersected
  };
}
function IntersectionLazy({
  children,
  fallback,
  className,
  threshold =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[39][0]++, 0.1),
  rootMargin =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[40][0]++, '50px'),
  once =
  /* istanbul ignore next */
  (cov_y1fled6i9().b[41][0]++, true)
}) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[46]++;
  const ref =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[122]++, _react.default.useRef(null));
  const {
    isIntersecting,
    hasIntersected
  } =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[123]++, useIntersectionLazyLoad(ref, {
    threshold,
    rootMargin
  }));
  const shouldRender =
  /* istanbul ignore next */
  (cov_y1fled6i9().s[124]++, once ?
  /* istanbul ignore next */
  (cov_y1fled6i9().b[42][0]++, hasIntersected) :
  /* istanbul ignore next */
  (cov_y1fled6i9().b[42][1]++, isIntersecting));
  /* istanbul ignore next */
  cov_y1fled6i9().s[125]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    ref: ref,
    className: className,
    children: shouldRender ?
    /* istanbul ignore next */
    (cov_y1fled6i9().b[43][0]++, children) :
    /* istanbul ignore next */
    (cov_y1fled6i9().b[43][1]++,
    /* istanbul ignore next */
    (cov_y1fled6i9().b[44][0]++, fallback) ||
    /* istanbul ignore next */
    (cov_y1fled6i9().b[44][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(LoadingSkeleton, {
      type: "custom"
    })))
  });
}
function createRouteComponent(importFn) {
  /* istanbul ignore next */
  cov_y1fled6i9().f[47]++;
  cov_y1fled6i9().s[126]++;
  return createLazyComponent(importFn, {
    preload: false,
    retryCount: 3,
    timeout: 15000,
    fallback: /*#__PURE__*/(0, _jsxruntime.jsx)(LoadingSkeleton, {
      type: "dashboard"
    })
  });
}
const _default =
/* istanbul ignore next */
(cov_y1fled6i9().s[127]++, LazyWrapper);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,