e2ba3ab2b402680ba0210dd449b9a4fa
"use strict";

/* istanbul ignore next */
function cov_1c23cztmkj() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\OptimizedImage.tsx";
  var hash = "1315a3f5b151b95e37d18b4b70a3083cd187dda4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\OptimizedImage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 30
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 37
        }
      },
      "10": {
        start: {
          line: 31,
          column: 20
        },
        end: {
          line: 31,
          column: 48
        }
      },
      "11": {
        start: {
          line: 32,
          column: 29
        },
        end: {
          line: 32,
          column: 72
        }
      },
      "12": {
        start: {
          line: 33,
          column: 33
        },
        end: {
          line: 33,
          column: 82
        }
      },
      "13": {
        start: {
          line: 34,
          column: 21
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "14": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "15": {
        start: {
          line: 36,
          column: 39
        },
        end: {
          line: 36,
          column: 51
        }
      },
      "16": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "17": {
        start: {
          line: 38,
          column: 27
        },
        end: {
          line: 38,
          column: 40
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 20
        }
      },
      "19": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "20": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "21": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 19
        }
      },
      "22": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "23": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 10
        }
      },
      "24": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 53
        }
      },
      "25": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "26": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 30
        }
      },
      "27": {
        start: {
          line: 56,
          column: 17
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "28": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 88
        }
      },
      "29": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "30": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "31": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 62,
          column: 95
        }
      },
      "32": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "33": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 57
        }
      },
      "34": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "35": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 25
        }
      },
      "36": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "37": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 31
        }
      },
      "38": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 74,
          column: 18
        }
      },
      "39": {
        start: {
          line: 76,
          column: 23
        },
        end: {
          line: 246,
          column: 1
        }
      },
      "40": {
        start: {
          line: 77,
          column: 36
        },
        end: {
          line: 77,
          column: 63
        }
      },
      "41": {
        start: {
          line: 78,
          column: 36
        },
        end: {
          line: 78,
          column: 75
        }
      },
      "42": {
        start: {
          line: 79,
          column: 36
        },
        end: {
          line: 79,
          column: 63
        }
      },
      "43": {
        start: {
          line: 80,
          column: 40
        },
        end: {
          line: 80,
          column: 64
        }
      },
      "44": {
        start: {
          line: 81,
          column: 19
        },
        end: {
          line: 81,
          column: 43
        }
      },
      "45": {
        start: {
          line: 82,
          column: 24
        },
        end: {
          line: 82,
          column: 48
        }
      },
      "46": {
        start: {
          line: 84,
          column: 32
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "47": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 120
        }
      },
      "48": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "49": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "50": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 30
        }
      },
      "51": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "52": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 108,
          column: 9
        }
      },
      "53": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 106,
          column: 15
        }
      },
      "54": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 105,
          column: 19
        }
      },
      "55": {
        start: {
          line: 101,
          column: 20
        },
        end: {
          line: 104,
          column: 21
        }
      },
      "56": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 102,
          column: 42
        }
      },
      "57": {
        start: {
          line: 103,
          column: 24
        },
        end: {
          line: 103,
          column: 58
        }
      },
      "58": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "59": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 111,
          column: 10
        }
      },
      "60": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 46
        }
      },
      "61": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "62": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "63": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 40
        }
      },
      "64": {
        start: {
          line: 126,
          column: 23
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "65": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 26
        }
      },
      "66": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 19
        }
      },
      "67": {
        start: {
          line: 130,
          column: 24
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "68": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 26
        }
      },
      "69": {
        start: {
          line: 132,
          column: 22
        },
        end: {
          line: 132,
          column: 63
        }
      },
      "70": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 25
        }
      },
      "71": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "72": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 36
        }
      },
      "73": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 31
        }
      },
      "74": {
        start: {
          line: 141,
          column: 27
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "75": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "76": {
        start: {
          line: 142,
          column: 31
        },
        end: {
          line: 142,
          column: 48
        }
      },
      "77": {
        start: {
          line: 143,
          column: 26
        },
        end: {
          line: 148,
          column: 9
        }
      },
      "78": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 158,
          column: 22
        }
      },
      "79": {
        start: {
          line: 150,
          column: 32
        },
        end: {
          line: 150,
          column: 59
        }
      },
      "80": {
        start: {
          line: 151,
          column: 33
        },
        end: {
          line: 151,
          column: 61
        }
      },
      "81": {
        start: {
          line: 152,
          column: 30
        },
        end: {
          line: 156,
          column: 14
        }
      },
      "82": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 46
        }
      },
      "83": {
        start: {
          line: 161,
          column: 33
        },
        end: {
          line: 183,
          column: 5
        }
      },
      "84": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "85": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 171,
          column: 15
        }
      },
      "86": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 182,
          column: 11
        }
      },
      "87": {
        start: {
          line: 185,
          column: 27
        },
        end: {
          line: 200,
          column: 10
        }
      },
      "88": {
        start: {
          line: 185,
          column: 45
        },
        end: {
          line: 200,
          column: 10
        }
      },
      "89": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "90": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 211,
          column: 11
        }
      },
      "91": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 216,
          column: 5
        }
      },
      "92": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 70
        }
      },
      "93": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 245,
          column: 7
        }
      },
      "94": {
        start: {
          line: 247,
          column: 30
        },
        end: {
          line: 254,
          column: 1
        }
      },
      "95": {
        start: {
          line: 248,
          column: 4
        },
        end: {
          line: 253,
          column: 7
        }
      },
      "96": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 252,
          column: 11
        }
      },
      "97": {
        start: {
          line: 255,
          column: 24
        },
        end: {
          line: 272,
          column: 1
        }
      },
      "98": {
        start: {
          line: 256,
          column: 42
        },
        end: {
          line: 256,
          column: 69
        }
      },
      "99": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 270,
          column: 7
        }
      },
      "100": {
        start: {
          line: 258,
          column: 29
        },
        end: {
          line: 258,
          column: 112
        }
      },
      "101": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 31
        }
      },
      "102": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 46
        }
      },
      "103": {
        start: {
          line: 260,
          column: 25
        },
        end: {
          line: 260,
          column: 45
        }
      },
      "104": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 48
        }
      },
      "105": {
        start: {
          line: 261,
          column: 26
        },
        end: {
          line: 261,
          column: 47
        }
      },
      "106": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 262,
          column: 31
        }
      },
      "107": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 266,
          column: 10
        }
      },
      "108": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 30
        }
      },
      "109": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 31
        }
      },
      "110": {
        start: {
          line: 271,
          column: 4
        },
        end: {
          line: 271,
          column: 23
        }
      },
      "111": {
        start: {
          line: 273,
          column: 22
        },
        end: {
          line: 279,
          column: 1
        }
      },
      "112": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "113": {
        start: {
          line: 280,
          column: 28
        },
        end: {
          line: 297,
          column: 1
        }
      },
      "114": {
        start: {
          line: 281,
          column: 25
        },
        end: {
          line: 286,
          column: 6
        }
      },
      "115": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 296,
          column: 7
        }
      },
      "116": {
        start: {
          line: 298,
          column: 17
        },
        end: {
          line: 298,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 27
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 33
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 35,
            column: 9
          },
          end: {
            line: 35,
            column: 33
          }
        },
        loc: {
          start: {
            line: 35,
            column: 47
          },
          end: {
            line: 42,
            column: 1
          }
        },
        line: 35
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 40
          }
        },
        loc: {
          start: {
            line: 39,
            column: 61
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "9": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 34
          }
        },
        loc: {
          start: {
            line: 43,
            column: 53
          },
          end: {
            line: 75,
            column: 1
          }
        },
        line: 43
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 23
          },
          end: {
            line: 76,
            column: 24
          }
        },
        loc: {
          start: {
            line: 76,
            column: 179
          },
          end: {
            line: 246,
            column: 1
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 93,
            column: 26
          },
          end: {
            line: 93,
            column: 27
          }
        },
        loc: {
          start: {
            line: 93,
            column: 30
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 93
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 99,
            column: 117
          },
          end: {
            line: 99,
            column: 118
          }
        },
        loc: {
          start: {
            line: 99,
            column: 128
          },
          end: {
            line: 106,
            column: 13
          }
        },
        line: 99
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 100,
            column: 32
          },
          end: {
            line: 100,
            column: 33
          }
        },
        loc: {
          start: {
            line: 100,
            column: 41
          },
          end: {
            line: 105,
            column: 17
          }
        },
        line: 100
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 109,
            column: 15
          },
          end: {
            line: 109,
            column: 16
          }
        },
        loc: {
          start: {
            line: 109,
            column: 19
          },
          end: {
            line: 111,
            column: 9
          }
        },
        line: 109
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 117,
            column: 26
          },
          end: {
            line: 117,
            column: 27
          }
        },
        loc: {
          start: {
            line: 117,
            column: 30
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 117
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 126,
            column: 23
          },
          end: {
            line: 126,
            column: 24
          }
        },
        loc: {
          start: {
            line: 126,
            column: 27
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 126
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 130,
            column: 24
          },
          end: {
            line: 130,
            column: 25
          }
        },
        loc: {
          start: {
            line: 130,
            column: 33
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 130
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 141,
            column: 27
          },
          end: {
            line: 141,
            column: 28
          }
        },
        loc: {
          start: {
            line: 141,
            column: 31
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 141
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 149,
            column: 30
          }
        },
        loc: {
          start: {
            line: 149,
            column: 40
          },
          end: {
            line: 158,
            column: 9
          }
        },
        line: 149
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 161,
            column: 33
          },
          end: {
            line: 161,
            column: 34
          }
        },
        loc: {
          start: {
            line: 161,
            column: 37
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 161
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 185,
            column: 27
          },
          end: {
            line: 185,
            column: 28
          }
        },
        loc: {
          start: {
            line: 185,
            column: 45
          },
          end: {
            line: 200,
            column: 10
          }
        },
        line: 185
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 247,
            column: 30
          },
          end: {
            line: 247,
            column: 31
          }
        },
        loc: {
          start: {
            line: 247,
            column: 43
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 247
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 248,
            column: 51
          },
          end: {
            line: 248,
            column: 52
          }
        },
        loc: {
          start: {
            line: 248,
            column: 65
          },
          end: {
            line: 253,
            column: 5
          }
        },
        line: 248
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 255,
            column: 24
          },
          end: {
            line: 255,
            column: 25
          }
        },
        loc: {
          start: {
            line: 255,
            column: 40
          },
          end: {
            line: 272,
            column: 1
          }
        },
        line: 255
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 257,
            column: 26
          },
          end: {
            line: 257,
            column: 27
          }
        },
        loc: {
          start: {
            line: 257,
            column: 30
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 257
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 260,
            column: 21
          },
          end: {
            line: 260,
            column: 22
          }
        },
        loc: {
          start: {
            line: 260,
            column: 25
          },
          end: {
            line: 260,
            column: 45
          }
        },
        line: 260
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 261,
            column: 22
          },
          end: {
            line: 261,
            column: 23
          }
        },
        loc: {
          start: {
            line: 261,
            column: 26
          },
          end: {
            line: 261,
            column: 47
          }
        },
        line: 261
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 263,
            column: 15
          },
          end: {
            line: 263,
            column: 16
          }
        },
        loc: {
          start: {
            line: 263,
            column: 19
          },
          end: {
            line: 266,
            column: 9
          }
        },
        line: 263
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 273,
            column: 22
          },
          end: {
            line: 273,
            column: 23
          }
        },
        loc: {
          start: {
            line: 273,
            column: 31
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 273
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 280,
            column: 28
          },
          end: {
            line: 280,
            column: 29
          }
        },
        loc: {
          start: {
            line: 280,
            column: 111
          },
          end: {
            line: 297,
            column: 1
          }
        },
        line: 280
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 15
          },
          end: {
            line: 40,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 29
          },
          end: {
            line: 40,
            column: 45
          }
        }, {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 65
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 27
          }
        }, {
          start: {
            line: 44,
            column: 31
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "5": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 20
          }
        }, {
          start: {
            line: 47,
            column: 24
          },
          end: {
            line: 47,
            column: 47
          }
        }, {
          start: {
            line: 47,
            column: 51
          },
          end: {
            line: 47,
            column: 76
          }
        }],
        line: 47
      },
      "6": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "7": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 17
          },
          end: {
            line: 53,
            column: 31
          }
        }],
        line: 53
      },
      "8": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 53
          }
        }, {
          start: {
            line: 59,
            column: 57
          },
          end: {
            line: 59,
            column: 88
          }
        }],
        line: 59
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 61,
            column: 29
          }
        }, {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 61,
            column: 79
          }
        }],
        line: 61
      },
      "11": {
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 62,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 62,
            column: 47
          },
          end: {
            line: 62,
            column: 88
          }
        }, {
          start: {
            line: 62,
            column: 91
          },
          end: {
            line: 62,
            column: 95
          }
        }],
        line: 62
      },
      "12": {
        loc: {
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: 65,
            column: 19
          },
          end: {
            line: 67,
            column: 13
          }
        }],
        line: 63
      },
      "13": {
        loc: {
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 16
          },
          end: {
            line: 63,
            column: 20
          }
        }, {
          start: {
            line: 63,
            column: 25
          },
          end: {
            line: 63,
            column: 33
          }
        }, {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 63,
            column: 45
          }
        }],
        line: 63
      },
      "14": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "15": {
        loc: {
          start: {
            line: 76,
            column: 36
          },
          end: {
            line: 76,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 48
          },
          end: {
            line: 76,
            column: 50
          }
        }],
        line: 76
      },
      "16": {
        loc: {
          start: {
            line: 76,
            column: 67
          },
          end: {
            line: 76,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 77
          },
          end: {
            line: 76,
            column: 79
          }
        }],
        line: 76
      },
      "17": {
        loc: {
          start: {
            line: 76,
            column: 81
          },
          end: {
            line: 76,
            column: 96
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 90
          },
          end: {
            line: 76,
            column: 96
          }
        }],
        line: 76
      },
      "18": {
        loc: {
          start: {
            line: 76,
            column: 98
          },
          end: {
            line: 76,
            column: 109
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 105
          },
          end: {
            line: 76,
            column: 109
          }
        }],
        line: 76
      },
      "19": {
        loc: {
          start: {
            line: 76,
            column: 151
          },
          end: {
            line: 76,
            column: 167
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 76,
            column: 162
          },
          end: {
            line: 76,
            column: 167
          }
        }],
        line: 76
      },
      "20": {
        loc: {
          start: {
            line: 78,
            column: 57
          },
          end: {
            line: 78,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 57
          },
          end: {
            line: 78,
            column: 62
          }
        }, {
          start: {
            line: 78,
            column: 66
          },
          end: {
            line: 78,
            column: 74
          }
        }],
        line: 78
      },
      "21": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "22": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 17
          }
        }, {
          start: {
            line: 94,
            column: 21
          },
          end: {
            line: 94,
            column: 29
          }
        }],
        line: 94
      },
      "23": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 108,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "24": {
        loc: {
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 20
          },
          end: {
            line: 104,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "25": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "26": {
        loc: {
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 12
          },
          end: {
            line: 118,
            column: 20
          }
        }, {
          start: {
            line: 118,
            column: 24
          },
          end: {
            line: 118,
            column: 35
          }
        }],
        line: 118
      },
      "27": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "28": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 135,
            column: 20
          }
        }, {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 47
          }
        }],
        line: 135
      },
      "29": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 48
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 48
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "30": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 142,
            column: 18
          }
        }, {
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 142,
            column: 29
          }
        }],
        line: 142
      },
      "31": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "32": {
        loc: {
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "33": {
        loc: {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 216,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 214
      },
      "34": {
        loc: {
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 214,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 8
          },
          end: {
            line: 214,
            column: 16
          }
        }, {
          start: {
            line: 214,
            column: 20
          },
          end: {
            line: 214,
            column: 29
          }
        }],
        line: 214
      },
      "35": {
        loc: {
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 12
          },
          end: {
            line: 224,
            column: 21
          }
        }, {
          start: {
            line: 224,
            column: 39
          },
          end: {
            line: 224,
            column: 85
          }
        }],
        line: 224
      },
      "36": {
        loc: {
          start: {
            line: 231,
            column: 75
          },
          end: {
            line: 231,
            column: 113
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 231,
            column: 86
          },
          end: {
            line: 231,
            column: 99
          }
        }, {
          start: {
            line: 231,
            column: 102
          },
          end: {
            line: 231,
            column: 113
          }
        }],
        line: 231
      },
      "37": {
        loc: {
          start: {
            line: 235,
            column: 30
          },
          end: {
            line: 235,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 235,
            column: 41
          },
          end: {
            line: 235,
            column: 49
          }
        }, {
          start: {
            line: 235,
            column: 52
          },
          end: {
            line: 235,
            column: 62
          }
        }],
        line: 235
      },
      "38": {
        loc: {
          start: {
            line: 241,
            column: 25
          },
          end: {
            line: 241,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 36
          },
          end: {
            line: 241,
            column: 43
          }
        }, {
          start: {
            line: 241,
            column: 46
          },
          end: {
            line: 241,
            column: 52
          }
        }],
        line: 241
      },
      "39": {
        loc: {
          start: {
            line: 280,
            column: 36
          },
          end: {
            line: 280,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 280,
            column: 48
          },
          end: {
            line: 280,
            column: 50
          }
        }],
        line: 280
      },
      "40": {
        loc: {
          start: {
            line: 280,
            column: 62
          },
          end: {
            line: 280,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 280,
            column: 72
          },
          end: {
            line: 280,
            column: 74
          }
        }],
        line: 280
      },
      "41": {
        loc: {
          start: {
            line: 280,
            column: 76
          },
          end: {
            line: 280,
            column: 91
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 280,
            column: 85
          },
          end: {
            line: 280,
            column: 91
          }
        }],
        line: 280
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0],
      "41": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\ui\\OptimizedImage.tsx"],
      sourcesContent: ["import React, { useState, useRef, useEffect } from 'react'\nimport { performanceOptimizationService, ImageOptimizationOptions } from '../../services/performanceOptimization'\nimport { Loader2, AlertTriangle } from 'lucide-react'\n\ninterface OptimizedImageProps {\n  src: string\n  alt: string\n  className?: string\n  width?: number\n  height?: number\n  quality?: number\n  format?: 'webp' | 'avif' | 'jpeg' | 'png'\n  lazy?: boolean\n  placeholder?: string\n  fallback?: string\n  onLoad?: () => void\n  onError?: (error: Error) => void\n  priority?: boolean // For above-the-fold images\n  sizes?: string // Responsive sizes\n}\n\nexport const OptimizedImage: React.FC<OptimizedImageProps> = ({\n  src,\n  alt,\n  className = '',\n  width,\n  height,\n  quality = 80,\n  format = 'webp',\n  lazy = true,\n  placeholder,\n  fallback,\n  onLoad,\n  onError,\n  priority = false,\n  sizes\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [isInView, setIsInView] = useState(!lazy || priority)\n  const [hasError, setHasError] = useState(false)\n  const [currentSrc, setCurrentSrc] = useState<string>('')\n  const imgRef = useRef<HTMLImageElement>(null)\n  const observerRef = useRef<IntersectionObserver | null>(null)\n\n  // Generate optimized image URL\n  const optimizationOptions: Partial<ImageOptimizationOptions> = {\n    quality,\n    format,\n    width,\n    height,\n    lazy\n  }\n\n  const optimizedSrc = performanceOptimizationService.optimizeImage(src, optimizationOptions)\n\n  // Set up intersection observer for lazy loading\n  useEffect(() => {\n    if (!lazy || priority) {\n      setIsInView(true)\n      return\n    }\n\n    if (imgRef.current) {\n      observerRef.current = performanceOptimizationService.createIntersectionObserver(\n        (entries) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n              setIsInView(true)\n              observerRef.current?.disconnect()\n            }\n          })\n        }\n      )\n\n      observerRef.current.observe(imgRef.current)\n    }\n\n    return () => {\n      observerRef.current?.disconnect()\n    }\n  }, [lazy, priority])\n\n  // Handle image loading\n  useEffect(() => {\n    if (isInView && !currentSrc) {\n      setCurrentSrc(optimizedSrc)\n    }\n  }, [isInView, optimizedSrc, currentSrc])\n\n  const handleLoad = () => {\n    setIsLoaded(true)\n    onLoad?.()\n  }\n\n  const handleError = (event: React.SyntheticEvent<HTMLImageElement, Event>) => {\n    setHasError(true)\n    const error = new Error(`Failed to load image: ${src}`)\n    onError?.(error)\n\n    // Try fallback image if provided\n    if (fallback && currentSrc !== fallback) {\n      setCurrentSrc(fallback)\n      setHasError(false)\n    }\n  }\n\n  // Generate responsive srcSet for different screen densities\n  const generateSrcSet = () => {\n    if (!width || !height) return undefined\n\n    const densities = [1, 1.5, 2, 3]\n    return densities\n      .map(density => {\n        const scaledWidth = Math.round(width * density)\n        const scaledHeight = Math.round(height * density)\n        const scaledSrc = performanceOptimizationService.optimizeImage(src, {\n          ...optimizationOptions,\n          width: scaledWidth,\n          height: scaledHeight\n        })\n        return `${scaledSrc} ${density}x`\n      })\n      .join(', ')\n  }\n\n  // Placeholder component\n  const PlaceholderComponent = () => {\n    if (placeholder) {\n      return (\n        <img\n          src={placeholder}\n          alt=\"\"\n          className={`${className} blur-sm transition-all duration-300`}\n          style={{ width, height }}\n        />\n      )\n    }\n\n    return (\n      <div\n        className={`${className} bg-gray-200 flex items-center justify-center transition-all duration-300`}\n        style={{ width, height }}\n      >\n        <Loader2 className=\"h-6 w-6 text-gray-400 animate-spin\" />\n      </div>\n    )\n  }\n\n  // Error component\n  const ErrorComponent = () => (\n    <div\n      className={`${className} bg-gray-100 border-2 border-dashed border-gray-300 flex flex-col items-center justify-center text-gray-500`}\n      style={{ width, height }}\n    >\n      <AlertTriangle className=\"h-6 w-6 mb-2\" />\n      <span className=\"text-sm text-center px-2\">Failed to load image</span>\n    </div>\n  )\n\n  // Don't render anything if not in view and lazy loading\n  if (!isInView) {\n    return (\n      <div\n        ref={imgRef}\n        className={className}\n        style={{ width, height }}\n      >\n        <PlaceholderComponent />\n      </div>\n    )\n  }\n\n  // Show error state\n  if (hasError && !fallback) {\n    return <ErrorComponent />\n  }\n\n  return (\n    <div className=\"relative\" style={{ width, height }}>\n      {/* Placeholder while loading */}\n      {!isLoaded && <PlaceholderComponent />}\n      \n      {/* Main image */}\n      <img\n        ref={imgRef}\n        src={currentSrc}\n        srcSet={generateSrcSet()}\n        sizes={sizes}\n        alt={alt}\n        className={`${className} transition-opacity duration-300 ${\n          isLoaded ? 'opacity-100' : 'opacity-0'\n        }`}\n        style={{\n          width,\n          height,\n          position: isLoaded ? 'static' : 'absolute',\n          top: 0,\n          left: 0\n        }}\n        onLoad={handleLoad}\n        onError={handleError}\n        loading={priority ? 'eager' : 'lazy'}\n        decoding=\"async\"\n      />\n    </div>\n  )\n}\n\n// Higher-order component for automatic optimization\nexport const withImageOptimization = <P extends object>(\n  Component: React.ComponentType<P>\n) => {\n  return React.forwardRef<any, P>((props, ref) => {\n    return <Component {...(props as any)} ref={ref} />\n  })\n}\n\n// Hook for image preloading\nexport const useImagePreload = (src: string, options?: Partial<ImageOptimizationOptions>) => {\n  const [isPreloaded, setIsPreloaded] = useState(false)\n\n  useEffect(() => {\n    const optimizedSrc = performanceOptimizationService.optimizeImage(src, options)\n    \n    const img = new Image()\n    img.onload = () => setIsPreloaded(true)\n    img.onerror = () => setIsPreloaded(false)\n    img.src = optimizedSrc\n\n    return () => {\n      img.onload = null\n      img.onerror = null\n    }\n  }, [src, options])\n\n  return isPreloaded\n}\n\n// Component for critical above-the-fold images\nexport const CriticalImage: React.FC<OptimizedImageProps> = (props) => {\n  return <OptimizedImage {...props} priority={true} lazy={false} />\n}\n\n// Component for background images with optimization\ninterface OptimizedBackgroundProps {\n  src: string\n  className?: string\n  children?: React.ReactNode\n  quality?: number\n  format?: 'webp' | 'avif' | 'jpeg' | 'png'\n  width?: number\n  height?: number\n}\n\nexport const OptimizedBackground: React.FC<OptimizedBackgroundProps> = ({\n  src,\n  className = '',\n  children,\n  quality = 80,\n  format = 'webp',\n  width,\n  height\n}) => {\n  const optimizedSrc = performanceOptimizationService.optimizeImage(src, {\n    quality,\n    format,\n    width,\n    height\n  })\n\n  return (\n    <div\n      className={className}\n      style={{\n        backgroundImage: `url(${optimizedSrc})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      }}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default OptimizedImage"],
      names: ["CriticalImage", "OptimizedBackground", "OptimizedImage", "useImagePreload", "withImageOptimization", "src", "alt", "className", "width", "height", "quality", "format", "lazy", "placeholder", "fallback", "onLoad", "onError", "priority", "sizes", "isLoaded", "setIsLoaded", "useState", "isInView", "setIsInView", "hasError", "setHasError", "currentSrc", "setCurrentSrc", "imgRef", "useRef", "observerRef", "optimizationOptions", "optimizedSrc", "performanceOptimizationService", "optimizeImage", "useEffect", "current", "createIntersectionObserver", "entries", "forEach", "entry", "isIntersecting", "disconnect", "observe", "handleLoad", "handleError", "event", "error", "Error", "generateSrcSet", "undefined", "densities", "map", "density", "scaledWidth", "Math", "round", "scaledHeight", "scaledSrc", "join", "PlaceholderComponent", "img", "style", "div", "Loader2", "ErrorComponent", "AlertTriangle", "span", "ref", "srcSet", "position", "top", "left", "loading", "decoding", "Component", "React", "forwardRef", "props", "options", "isPreloaded", "setIsPreloaded", "Image", "onload", "onerror", "children", "backgroundImage", "backgroundSize", "backgroundPosition", "backgroundRepeat"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1315a3f5b151b95e37d18b4b70a3083cd187dda4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1c23cztmkj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1c23cztmkj();
cov_1c23cztmkj().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[0]++;
  cov_1c23cztmkj().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1c23cztmkj().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1c23cztmkj().s[3]++;
_export(exports, {
  get CriticalImage() {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[1]++;
    cov_1c23cztmkj().s[4]++;
    return CriticalImage;
  },
  get OptimizedBackground() {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[2]++;
    cov_1c23cztmkj().s[5]++;
    return OptimizedBackground;
  },
  get OptimizedImage() {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[3]++;
    cov_1c23cztmkj().s[6]++;
    return OptimizedImage;
  },
  get default() {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[4]++;
    cov_1c23cztmkj().s[7]++;
    return _default;
  },
  get useImagePreload() {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[5]++;
    cov_1c23cztmkj().s[8]++;
    return useImagePreload;
  },
  get withImageOptimization() {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[6]++;
    cov_1c23cztmkj().s[9]++;
    return withImageOptimization;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1c23cztmkj().s[10]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1c23cztmkj().s[11]++, _interop_require_wildcard(require("react")));
const _performanceOptimization =
/* istanbul ignore next */
(cov_1c23cztmkj().s[12]++, require("../../services/performanceOptimization"));
const _lucidereact =
/* istanbul ignore next */
(cov_1c23cztmkj().s[13]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[7]++;
  cov_1c23cztmkj().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1c23cztmkj().b[0][0]++;
    cov_1c23cztmkj().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1c23cztmkj().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_1c23cztmkj().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[8]++;
    cov_1c23cztmkj().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[9]++;
  cov_1c23cztmkj().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1c23cztmkj().b[2][0]++;
    cov_1c23cztmkj().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1c23cztmkj().b[2][1]++;
  }
  cov_1c23cztmkj().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1c23cztmkj().b[4][0]++;
    cov_1c23cztmkj().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1c23cztmkj().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1c23cztmkj().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1c23cztmkj().b[6][0]++;
    cov_1c23cztmkj().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1c23cztmkj().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[28]++,
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1c23cztmkj().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1c23cztmkj().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1c23cztmkj().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1c23cztmkj().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1c23cztmkj().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1c23cztmkj().b[12][0]++;
        cov_1c23cztmkj().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1c23cztmkj().b[12][1]++;
        cov_1c23cztmkj().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1c23cztmkj().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1c23cztmkj().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1c23cztmkj().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1c23cztmkj().b[14][0]++;
    cov_1c23cztmkj().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1c23cztmkj().b[14][1]++;
  }
  cov_1c23cztmkj().s[38]++;
  return newObj;
}
/* istanbul ignore next */
cov_1c23cztmkj().s[39]++;
const OptimizedImage = ({
  src,
  alt,
  className =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[15][0]++, ''),
  width,
  height,
  quality =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[16][0]++, 80),
  format =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[17][0]++, 'webp'),
  lazy =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[18][0]++, true),
  placeholder,
  fallback,
  onLoad,
  onError,
  priority =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[19][0]++, false),
  sizes
}) => {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[10]++;
  const [isLoaded, setIsLoaded] =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[40]++, (0, _react.useState)(false));
  const [isInView, setIsInView] =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[41]++, (0, _react.useState)(
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[20][0]++, !lazy) ||
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[20][1]++, priority)));
  const [hasError, setHasError] =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[42]++, (0, _react.useState)(false));
  const [currentSrc, setCurrentSrc] =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[43]++, (0, _react.useState)(''));
  const imgRef =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[44]++, (0, _react.useRef)(null));
  const observerRef =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[45]++, (0, _react.useRef)(null));
  // Generate optimized image URL
  const optimizationOptions =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[46]++, {
    quality,
    format,
    width,
    height,
    lazy
  });
  const optimizedSrc =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[47]++, _performanceOptimization.performanceOptimizationService.optimizeImage(src, optimizationOptions));
  // Set up intersection observer for lazy loading
  /* istanbul ignore next */
  cov_1c23cztmkj().s[48]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[11]++;
    cov_1c23cztmkj().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[22][0]++, !lazy) ||
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[22][1]++, priority)) {
      /* istanbul ignore next */
      cov_1c23cztmkj().b[21][0]++;
      cov_1c23cztmkj().s[50]++;
      setIsInView(true);
      /* istanbul ignore next */
      cov_1c23cztmkj().s[51]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1c23cztmkj().b[21][1]++;
    }
    cov_1c23cztmkj().s[52]++;
    if (imgRef.current) {
      /* istanbul ignore next */
      cov_1c23cztmkj().b[23][0]++;
      cov_1c23cztmkj().s[53]++;
      observerRef.current = _performanceOptimization.performanceOptimizationService.createIntersectionObserver(entries => {
        /* istanbul ignore next */
        cov_1c23cztmkj().f[12]++;
        cov_1c23cztmkj().s[54]++;
        entries.forEach(entry => {
          /* istanbul ignore next */
          cov_1c23cztmkj().f[13]++;
          cov_1c23cztmkj().s[55]++;
          if (entry.isIntersecting) {
            /* istanbul ignore next */
            cov_1c23cztmkj().b[24][0]++;
            cov_1c23cztmkj().s[56]++;
            setIsInView(true);
            /* istanbul ignore next */
            cov_1c23cztmkj().s[57]++;
            observerRef.current?.disconnect();
          } else
          /* istanbul ignore next */
          {
            cov_1c23cztmkj().b[24][1]++;
          }
        });
      });
      /* istanbul ignore next */
      cov_1c23cztmkj().s[58]++;
      observerRef.current.observe(imgRef.current);
    } else
    /* istanbul ignore next */
    {
      cov_1c23cztmkj().b[23][1]++;
    }
    cov_1c23cztmkj().s[59]++;
    return () => {
      /* istanbul ignore next */
      cov_1c23cztmkj().f[14]++;
      cov_1c23cztmkj().s[60]++;
      observerRef.current?.disconnect();
    };
  }, [lazy, priority]);
  // Handle image loading
  /* istanbul ignore next */
  cov_1c23cztmkj().s[61]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[15]++;
    cov_1c23cztmkj().s[62]++;
    if (
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[26][0]++, isInView) &&
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[26][1]++, !currentSrc)) {
      /* istanbul ignore next */
      cov_1c23cztmkj().b[25][0]++;
      cov_1c23cztmkj().s[63]++;
      setCurrentSrc(optimizedSrc);
    } else
    /* istanbul ignore next */
    {
      cov_1c23cztmkj().b[25][1]++;
    }
  }, [isInView, optimizedSrc, currentSrc]);
  /* istanbul ignore next */
  cov_1c23cztmkj().s[64]++;
  const handleLoad = () => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[16]++;
    cov_1c23cztmkj().s[65]++;
    setIsLoaded(true);
    /* istanbul ignore next */
    cov_1c23cztmkj().s[66]++;
    onLoad?.();
  };
  /* istanbul ignore next */
  cov_1c23cztmkj().s[67]++;
  const handleError = event => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[17]++;
    cov_1c23cztmkj().s[68]++;
    setHasError(true);
    const error =
    /* istanbul ignore next */
    (cov_1c23cztmkj().s[69]++, new Error(`Failed to load image: ${src}`));
    /* istanbul ignore next */
    cov_1c23cztmkj().s[70]++;
    onError?.(error);
    // Try fallback image if provided
    /* istanbul ignore next */
    cov_1c23cztmkj().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[28][0]++, fallback) &&
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[28][1]++, currentSrc !== fallback)) {
      /* istanbul ignore next */
      cov_1c23cztmkj().b[27][0]++;
      cov_1c23cztmkj().s[72]++;
      setCurrentSrc(fallback);
      /* istanbul ignore next */
      cov_1c23cztmkj().s[73]++;
      setHasError(false);
    } else
    /* istanbul ignore next */
    {
      cov_1c23cztmkj().b[27][1]++;
    }
  };
  // Generate responsive srcSet for different screen densities
  /* istanbul ignore next */
  cov_1c23cztmkj().s[74]++;
  const generateSrcSet = () => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[18]++;
    cov_1c23cztmkj().s[75]++;
    if (
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[30][0]++, !width) ||
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[30][1]++, !height)) {
      /* istanbul ignore next */
      cov_1c23cztmkj().b[29][0]++;
      cov_1c23cztmkj().s[76]++;
      return undefined;
    } else
    /* istanbul ignore next */
    {
      cov_1c23cztmkj().b[29][1]++;
    }
    const densities =
    /* istanbul ignore next */
    (cov_1c23cztmkj().s[77]++, [1, 1.5, 2, 3]);
    /* istanbul ignore next */
    cov_1c23cztmkj().s[78]++;
    return densities.map(density => {
      /* istanbul ignore next */
      cov_1c23cztmkj().f[19]++;
      const scaledWidth =
      /* istanbul ignore next */
      (cov_1c23cztmkj().s[79]++, Math.round(width * density));
      const scaledHeight =
      /* istanbul ignore next */
      (cov_1c23cztmkj().s[80]++, Math.round(height * density));
      const scaledSrc =
      /* istanbul ignore next */
      (cov_1c23cztmkj().s[81]++, _performanceOptimization.performanceOptimizationService.optimizeImage(src, {
        ...optimizationOptions,
        width: scaledWidth,
        height: scaledHeight
      }));
      /* istanbul ignore next */
      cov_1c23cztmkj().s[82]++;
      return `${scaledSrc} ${density}x`;
    }).join(', ');
  };
  // Placeholder component
  /* istanbul ignore next */
  cov_1c23cztmkj().s[83]++;
  const PlaceholderComponent = () => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[20]++;
    cov_1c23cztmkj().s[84]++;
    if (placeholder) {
      /* istanbul ignore next */
      cov_1c23cztmkj().b[31][0]++;
      cov_1c23cztmkj().s[85]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("img", {
        src: placeholder,
        alt: "",
        className: `${className} blur-sm transition-all duration-300`,
        style: {
          width,
          height
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1c23cztmkj().b[31][1]++;
    }
    cov_1c23cztmkj().s[86]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: `${className} bg-gray-200 flex items-center justify-center transition-all duration-300`,
      style: {
        width,
        height
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Loader2, {
        className: "h-6 w-6 text-gray-400 animate-spin"
      })
    });
  };
  // Error component
  /* istanbul ignore next */
  cov_1c23cztmkj().s[87]++;
  const ErrorComponent = () => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[21]++;
    cov_1c23cztmkj().s[88]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: `${className} bg-gray-100 border-2 border-dashed border-gray-300 flex flex-col items-center justify-center text-gray-500`,
      style: {
        width,
        height
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.AlertTriangle, {
        className: "h-6 w-6 mb-2"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "text-sm text-center px-2",
        children: "Failed to load image"
      })]
    });
  };
  // Don't render anything if not in view and lazy loading
  /* istanbul ignore next */
  cov_1c23cztmkj().s[89]++;
  if (!isInView) {
    /* istanbul ignore next */
    cov_1c23cztmkj().b[32][0]++;
    cov_1c23cztmkj().s[90]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      ref: imgRef,
      className: className,
      style: {
        width,
        height
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(PlaceholderComponent, {})
    });
  } else
  /* istanbul ignore next */
  {
    cov_1c23cztmkj().b[32][1]++;
  }
  // Show error state
  cov_1c23cztmkj().s[91]++;
  if (
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[34][0]++, hasError) &&
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[34][1]++, !fallback)) {
    /* istanbul ignore next */
    cov_1c23cztmkj().b[33][0]++;
    cov_1c23cztmkj().s[92]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(ErrorComponent, {});
  } else
  /* istanbul ignore next */
  {
    cov_1c23cztmkj().b[33][1]++;
  }
  cov_1c23cztmkj().s[93]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "relative",
    style: {
      width,
      height
    },
    children: [
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[35][0]++, !isLoaded) &&
    /* istanbul ignore next */
    (cov_1c23cztmkj().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(PlaceholderComponent, {})), /*#__PURE__*/(0, _jsxruntime.jsx)("img", {
      ref: imgRef,
      src: currentSrc,
      srcSet: generateSrcSet(),
      sizes: sizes,
      alt: alt,
      className: `${className} transition-opacity duration-300 ${isLoaded ?
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[36][0]++, 'opacity-100') :
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[36][1]++, 'opacity-0')}`,
      style: {
        width,
        height,
        position: isLoaded ?
        /* istanbul ignore next */
        (cov_1c23cztmkj().b[37][0]++, 'static') :
        /* istanbul ignore next */
        (cov_1c23cztmkj().b[37][1]++, 'absolute'),
        top: 0,
        left: 0
      },
      onLoad: handleLoad,
      onError: handleError,
      loading: priority ?
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[38][0]++, 'eager') :
      /* istanbul ignore next */
      (cov_1c23cztmkj().b[38][1]++, 'lazy'),
      decoding: "async"
    })]
  });
};
/* istanbul ignore next */
cov_1c23cztmkj().s[94]++;
const withImageOptimization = Component => {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[22]++;
  cov_1c23cztmkj().s[95]++;
  return /*#__PURE__*/_react.default.forwardRef((props, ref) => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[23]++;
    cov_1c23cztmkj().s[96]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(Component, {
      ...props,
      ref: ref
    });
  });
};
/* istanbul ignore next */
cov_1c23cztmkj().s[97]++;
const useImagePreload = (src, options) => {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[24]++;
  const [isPreloaded, setIsPreloaded] =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[98]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_1c23cztmkj().s[99]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1c23cztmkj().f[25]++;
    const optimizedSrc =
    /* istanbul ignore next */
    (cov_1c23cztmkj().s[100]++, _performanceOptimization.performanceOptimizationService.optimizeImage(src, options));
    const img =
    /* istanbul ignore next */
    (cov_1c23cztmkj().s[101]++, new Image());
    /* istanbul ignore next */
    cov_1c23cztmkj().s[102]++;
    img.onload = () => {
      /* istanbul ignore next */
      cov_1c23cztmkj().f[26]++;
      cov_1c23cztmkj().s[103]++;
      return setIsPreloaded(true);
    };
    /* istanbul ignore next */
    cov_1c23cztmkj().s[104]++;
    img.onerror = () => {
      /* istanbul ignore next */
      cov_1c23cztmkj().f[27]++;
      cov_1c23cztmkj().s[105]++;
      return setIsPreloaded(false);
    };
    /* istanbul ignore next */
    cov_1c23cztmkj().s[106]++;
    img.src = optimizedSrc;
    /* istanbul ignore next */
    cov_1c23cztmkj().s[107]++;
    return () => {
      /* istanbul ignore next */
      cov_1c23cztmkj().f[28]++;
      cov_1c23cztmkj().s[108]++;
      img.onload = null;
      /* istanbul ignore next */
      cov_1c23cztmkj().s[109]++;
      img.onerror = null;
    };
  }, [src, options]);
  /* istanbul ignore next */
  cov_1c23cztmkj().s[110]++;
  return isPreloaded;
};
/* istanbul ignore next */
cov_1c23cztmkj().s[111]++;
const CriticalImage = props => {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[29]++;
  cov_1c23cztmkj().s[112]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(OptimizedImage, {
    ...props,
    priority: true,
    lazy: false
  });
};
/* istanbul ignore next */
cov_1c23cztmkj().s[113]++;
const OptimizedBackground = ({
  src,
  className =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[39][0]++, ''),
  children,
  quality =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[40][0]++, 80),
  format =
  /* istanbul ignore next */
  (cov_1c23cztmkj().b[41][0]++, 'webp'),
  width,
  height
}) => {
  /* istanbul ignore next */
  cov_1c23cztmkj().f[30]++;
  const optimizedSrc =
  /* istanbul ignore next */
  (cov_1c23cztmkj().s[114]++, _performanceOptimization.performanceOptimizationService.optimizeImage(src, {
    quality,
    format,
    width,
    height
  }));
  /* istanbul ignore next */
  cov_1c23cztmkj().s[115]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: className,
    style: {
      backgroundImage: `url(${optimizedSrc})`,
      backgroundSize: 'cover',
      backgroundPosition: 'center',
      backgroundRepeat: 'no-repeat'
    },
    children: children
  });
};
const _default =
/* istanbul ignore next */
(cov_1c23cztmkj().s[116]++, OptimizedImage);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,