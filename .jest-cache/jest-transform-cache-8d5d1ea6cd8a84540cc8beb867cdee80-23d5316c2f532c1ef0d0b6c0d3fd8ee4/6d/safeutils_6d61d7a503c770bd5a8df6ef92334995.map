{"version":3,"names":["cov_1w19yyo650","actualCoverage","s","cn","f","formatCurrency","formatDate","generateId","truncateText","validateEmail","inputs","classes","input","b","push","key","value","Object","entries","join","amount","Intl","NumberFormat","style","currency","format","date","DateTimeFormat","year","month","day","Math","random","toString","substring","email","emailRegex","test","text","maxLength","length"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\lib\\safe-utils.ts"],"sourcesContent":["// Create a safe utility file that doesn't depend on external libraries\nexport function cn(...inputs: (string | undefined | null | boolean | Record<string, boolean>)[]): string {\n  const classes: string[] = []\n\n  for (const input of inputs) {\n    if (!input) continue\n\n    if (typeof input === \"string\") {\n      classes.push(input)\n    } else if (typeof input === \"object\") {\n      for (const [key, value] of Object.entries(input)) {\n        if (value) classes.push(key)\n      }\n    }\n  }\n\n  return classes.join(\" \")\n}\n\nexport const formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(amount)\n}\n\nexport const formatDate = (date: Date): string => {\n  return new Intl.DateTimeFormat(\"en-US\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  }).format(date)\n}\n\nexport const generateId = (): string => {\n  return Math.random().toString(36).substring(2, 11)\n}\n\nexport const validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  return emailRegex.test(email)\n}\n\nexport const truncateText = (text: string, maxLength: number): string => {\n  if (text.length <= maxLength) return text\n  return text.substring(0, maxLength) + \"...\"\n}\n"],"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","ignoreList":[]}