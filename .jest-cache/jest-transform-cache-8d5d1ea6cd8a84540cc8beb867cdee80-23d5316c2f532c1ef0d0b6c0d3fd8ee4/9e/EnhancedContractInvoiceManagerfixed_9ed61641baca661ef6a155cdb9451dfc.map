{"version":3,"names":["_default","EnhancedContractTemplateService","cov_2gn1tkkbar","s","getTemplate","id","f","name","content","EnhancedQuoteConverter","validateConversionOptions","options","errors","paymentStructure","b","push","taxRate","undefined","isValid","length","convertQuoteToContractAndInvoices","quote","contractId","Date","now","contract","contractNumber","quoteId","clientId","clientName","clientEmail","contractTitle","businessName","startDate","endDate","setDate","getDate","totalAmount","total","paymentSchedule","scopeOfWork","projectDetails","title","description","scope","deliverables","timeline","toISOString","type","currency","schedule","percentage","amount","dueDate","status","updatedAt","invoices","map","milestone","index","invoiceNumber","clientAddress","invoiceType","items","quantity","unitPrice","subtotal","tax","amountPaid","amountDue","issueDate","summary","numberOfInvoices","firstInvoiceAmount","estimatedCompletionDate","preservedQuoteData","mockDispatch","action","console","log","useAppContext","state","quotes","createdAt","features","totalHours","finalPrice","contracts","dispatch","useAuth","user","role","useRoleAccess","hasAccess","useToast","showSuccess","message","showError","error","EnhancedContractInvoiceManager","isAdmin","activeTab","setActiveTab","_react","useState","searchTerm","setSearchTerm","statusFilter","setStatusFilter","isLoading","setIsLoading","showConversionModal","setShowConversionModal","conversionFlow","setConversionFlow","step","conversionOptions","paymentTerms","includeDetailedItems","autoGenerateInvoices","userId","enhancedContracts","setEnhancedContracts","unifiedInvoices","setUnifiedInvoices","dashboardStats","useMemo","totalQuotes","totalContracts","totalInvoices","totalRevenue","filter","inv","reduce","acc","pendingPayments","activeProjects","c","conversionRate","averageProjectValue","availableQuotes","hasContract","some","handleStartConversion","useCallback","prev","selectedQuote","processConversion","validation","result","convertedContract","payload","forEach","invoice","standardInvoice","item","price","notes","generatePreview","previewResult","renderDashboard","_jsxruntime","jsx","jsxs","className","toLocaleString","toFixed","renderConversionFlow","onClick","_lucidereact","Plus","X","value","onChange","e","target","disabled","StatusBadge","baseClasses","statusMap","draft","text","bg","sent","paid","overdue","approved","accepted","active","completed","toLowerCase"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\EnhancedContractInvoiceManager.fixed.tsx"],"sourcesContent":["import React, { useState, useCallback, useMemo } from \"react\";\nimport {\n  Plus,\n  Search,\n  Filter,\n  Download,\n  Send,\n  Eye,\n  Edit,\n  Trash2,\n  FileText,\n  Receipt,\n  Calendar,\n  DollarSign,\n  CheckCircle,\n  Clock,\n  AlertCircle,\n  ArrowRight,\n  Link,\n  RefreshCw,\n  Settings,\n  BarChart3,\n  TrendingUp,\n  Users,\n  X,\n} from \"lucide-react\";\n\n// Type/Interface definitions\ninterface Quote {\n  id: string;\n  businessName: string;\n  status: \"draft\" | \"sent\" | \"approved\" | \"rejected\" | \"accepted\";\n  total: number;\n  createdAt: string;\n  quoteId: string;\n  features: string[];\n  totalHours: number;\n  finalPrice: number;\n}\n\ninterface Contract {\n  id: string;\n  quoteId: string;\n  contractTitle: string;\n  status: \"draft\" | \"sent\" | \"signed\" | \"active\" | \"completed\" | \"terminated\";\n  totalAmount: number;\n  createdAt: string;\n}\n\ninterface Invoice {\n  id: string;\n  contractId: string;\n  invoiceNumber: string;\n  status: \"Draft\" | \"Sent\" | \"Paid\" | \"Overdue\";\n  totalAmount: number;\n  dueDate: Date;\n  items: any[];\n  subtotal: number;\n  tax: number;\n  notes?: string;\n  clientName: string;\n  clientEmail: string;\n  clientAddress: string;\n  issueDate: Date;\n  clientId: string;\n}\n\ninterface DashboardStats {\n  totalQuotes: number;\n  totalContracts: number;\n  totalInvoices: number;\n  totalRevenue: number;\n  pendingPayments: number;\n  activeProjects: number;\n  conversionRate: number;\n  averageProjectValue: number;\n}\n\ninterface ConversionFlow {\n  step: \"select_quote\" | \"configure_contract\" | \"setup_payments\" | \"review\" | \"complete\";\n  selectedQuote?: Quote;\n  conversionOptions: ConversionOptions;\n  previewResult?: ConversionResult;\n  errors: string[];\n}\n\ninterface EnhancedContract {\n  id: string;\n  contractNumber: string;\n  quoteId?: string;\n  clientId?: string;\n  clientName: string;\n  clientEmail: string;\n  contractTitle: string;\n  startDate: Date;\n  endDate: Date;\n  totalAmount: number;\n  paymentSchedule: string;\n  scopeOfWork: string;\n  projectDetails: {\n    title: string;\n    description: string;\n    scope: string[];\n    deliverables: string[];\n    timeline: string;\n    startDate: string;\n    endDate: string;\n  };\n  paymentStructure: {\n    type: \"single\" | \"deposit_final\" | \"milestone\" | \"progress\";\n    totalAmount: number;\n    currency: string;\n    schedule: PaymentMilestone[];\n  };\n  updatedAt: string;\n}\n\ninterface UnifiedInvoice {\n  id: string;\n  invoiceNumber: string;\n  contractId?: string;\n  quoteId?: string;\n  clientId?: string;\n  clientName: string;\n  clientEmail: string;\n  clientAddress: string;\n  invoiceType: \"deposit\" | \"milestone\" | \"final\" | \"progress\" | \"custom\";\n  items: any[];\n  subtotal: number;\n  tax: number;\n  totalAmount: number;\n  amountPaid: number;\n  amountDue: number;\n  status: \"draft\" | \"sent\" | \"viewed\" | \"paid\" | \"overdue\" | \"cancelled\";\n  issueDate: Date;\n  dueDate: Date;\n  notes?: string;\n}\n\ninterface ConversionResult {\n  contract: EnhancedContract;\n  invoices: UnifiedInvoice[];\n  paymentSchedule: PaymentMilestone[];\n  summary: {\n    totalAmount: number;\n    numberOfInvoices: number;\n    firstInvoiceAmount: number;\n    estimatedCompletionDate: string;\n    preservedQuoteData: boolean;\n  };\n}\n\ninterface ConversionOptions {\n  templateId?: string;\n  paymentStructure?: \"single\" | \"deposit_final\" | \"milestone\" | \"progress\";\n  customMilestones?: Partial<PaymentMilestone>[];\n  taxRate?: number;\n  paymentTerms?: string;\n  includeDetailedItems?: boolean;\n  autoGenerateInvoices?: boolean;\n  userId?: string;\n}\n\ninterface PaymentMilestone {\n  name: string;\n  percentage: number;\n  amount: number;\n  dueDate: string;\n  status: \"pending\" | \"paid\" | \"invoiced\";\n}\n\n// Mock service implementations\nconst EnhancedContractTemplateService = {\n  getTemplate: (id: string) => ({\n    id,\n    name: \"Standard Web Development Contract\",\n    content: \"This is a standard contract template.\",\n  }),\n};\n\nclass EnhancedQuoteConverter {\n  static validateConversionOptions(options: ConversionOptions) {\n    const errors: string[] = [];\n    if (!options.paymentStructure) {\n      errors.push(\"Payment structure is required.\");\n    }\n    if (options.taxRate === undefined || options.taxRate < 0) {\n      errors.push(\"A valid tax rate is required.\");\n    }\n    return { isValid: errors.length === 0, errors };\n  }\n\n  static convertQuoteToContractAndInvoices(\n    quote: Quote,\n    options: ConversionOptions\n  ): ConversionResult {\n    const contractId = `contract-${Date.now()}`;\n    const contract: EnhancedContract = {\n      id: contractId,\n      contractNumber: `CN-${Date.now()}`,\n      quoteId: quote.id,\n      clientId: \"client-123\",\n      clientName: \"Client Name\",\n      clientEmail: \"client@example.com\",\n      contractTitle: `Web Development for ${quote.businessName}`,\n      startDate: new Date(),\n      endDate: new Date(new Date().setDate(new Date().getDate() + 90)),\n      totalAmount: quote.total,\n      paymentSchedule: \"Milestones\",\n      scopeOfWork: \"Scope of work based on quote.\",\n      projectDetails: {\n        title: `Web Development for ${quote.businessName}`,\n        description: \"Project description.\",\n        scope: [\"Design\", \"Development\", \"Deployment\"],\n        deliverables: [\"Complete website\", \"Source code\"],\n        timeline: \"90 days\",\n        startDate: new Date().toISOString(),\n        endDate: new Date(\n          new Date().setDate(new Date().getDate() + 90)\n        ).toISOString(),\n      },\n      paymentStructure: {\n        type: \"milestone\",\n        totalAmount: quote.total,\n        currency: \"USD\",\n        schedule: [\n          {\n            name: \"Deposit\",\n            percentage: 50,\n            amount: quote.total / 2,\n            dueDate: new Date().toISOString(),\n            status: \"pending\",\n          },\n          {\n            name: \"Final Payment\",\n            percentage: 50,\n            amount: quote.total / 2,\n            dueDate: new Date(\n              new Date().setDate(new Date().getDate() + 90)\n            ).toISOString(),\n            status: \"pending\",\n          },\n        ],\n      },\n      updatedAt: new Date().toISOString(),\n    };\n\n    const invoices: UnifiedInvoice[] = contract.paymentStructure.schedule.map(\n      (milestone, index) => ({\n        id: `inv-${Date.now()}-${index}`,\n        invoiceNumber: `INV-${Date.now()}-${index}`,\n        contractId: contract.id,\n        quoteId: quote.id,\n        clientId: \"client-123\",\n        clientName: \"Client Name\",\n        clientEmail: \"client@example.com\",\n        clientAddress: \"123 Client St, City, State, 12345\",\n        invoiceType: \"milestone\",\n        items: [\n          {\n            id: `item-${index}`,\n            description: milestone.name,\n            quantity: 1,\n            unitPrice: milestone.amount,\n            total: milestone.amount,\n          },\n        ],\n        subtotal: milestone.amount,\n        tax: 0,\n        totalAmount: milestone.amount,\n        amountPaid: 0,\n        amountDue: milestone.amount,\n        status: \"draft\",\n        issueDate: new Date(),\n        dueDate: new Date(milestone.dueDate),\n      })\n    );\n\n    return {\n      contract,\n      invoices,\n      paymentSchedule: contract.paymentStructure.schedule,\n      summary: {\n        totalAmount: contract.totalAmount,\n        numberOfInvoices: invoices.length,\n        firstInvoiceAmount: invoices[0]?.totalAmount || 0,\n        estimatedCompletionDate: contract.projectDetails.endDate,\n        preservedQuoteData: true,\n      },\n    };\n  }\n}\n\n// Mock context/hook implementations\nconst mockDispatch = (action: any) => {\n  console.log(\"Dispatching action:\", action);\n};\n\nconst useAppContext = () => ({\n  state: {\n    quotes: [\n      {\n        id: \"quote-1\",\n        businessName: \"Innovate LLC\",\n        status: \"approved\",\n        total: 5000,\n        createdAt: \"2023-10-01\",\n        quoteId: \"Q-001\",\n        features: [\"Feature A\", \"Feature B\"],\n        totalHours: 100,\n        finalPrice: 5000,\n      },\n      {\n        id: \"quote-2\",\n        businessName: \"Synergy Corp\",\n        status: \"accepted\",\n        total: 8000,\n        createdAt: \"2023-10-05\",\n        quoteId: \"Q-002\",\n        features: [\"Feature C\", \"Feature D\"],\n        totalHours: 150,\n        finalPrice: 8000,\n      },\n    ] as Quote[],\n    contracts: [] as Contract[],\n    invoices: [] as Invoice[],\n  },\n  dispatch: mockDispatch,\n});\n\nconst useAuth = () => ({\n  user: { id: \"user-123\", name: \"Test User\", role: \"admin\" },\n});\n\nconst useRoleAccess = (role: string) => ({\n  hasAccess: role === \"Admin\",\n});\n\nconst useToast = () => ({\n  showSuccess: (message: string) => console.log(`Success: ${message}`),\n  showError: (message: string) => console.error(`Error: ${message}`),\n});\n\n// UnifiedInvoiceSystem component removed - functionality integrated into main component\n\n// Main component implementation\nconst EnhancedContractInvoiceManager: React.FC = () => {\n  const { state, dispatch } = useAppContext();\n  const { user } = useAuth();\n  const { hasAccess: isAdmin } = useRoleAccess(\"Admin\");\n  const { showSuccess, showError } = useToast();\n\n  const [activeTab, setActiveTab] = useState<\n    \"dashboard\" | \"quotes\" | \"contracts\" | \"invoices\" | \"conversion\"\n  >(\"dashboard\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState<string>(\"all\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [showConversionModal, setShowConversionModal] = useState(false);\n\n  const [conversionFlow, setConversionFlow] = useState<ConversionFlow>({\n    step: \"select_quote\",\n    conversionOptions: {\n      paymentStructure: \"milestone\",\n      taxRate: 0.0875,\n      paymentTerms: \"Net 30\",\n      includeDetailedItems: true,\n      autoGenerateInvoices: true,\n      userId: user?.id,\n    },\n    errors: [],\n  });\n\n  const [enhancedContracts, setEnhancedContracts] = useState<EnhancedContract[]>([]);\n  const [unifiedInvoices, setUnifiedInvoices] = useState<UnifiedInvoice[]>([]);\n\n  const dashboardStats = useMemo((): DashboardStats => {\n    const totalQuotes = state.quotes.length;\n    const totalContracts = state.contracts.length;\n    const totalInvoices = state.invoices.length;\n    const totalRevenue = state.invoices\n      .filter((inv) => inv.status === \"Paid\")\n      .reduce((acc, inv) => acc + inv.totalAmount, 0);\n    const pendingPayments = state.invoices\n      .filter((inv) => inv.status === \"Sent\" || inv.status === \"Overdue\")\n      .reduce((acc, inv) => acc + inv.totalAmount, 0);\n    const activeProjects = state.contracts.filter(\n      (c) => c.status === \"active\"\n    ).length;\n    const conversionRate =\n      totalQuotes > 0 ? (totalContracts / totalQuotes) * 100 : 0;\n    const averageProjectValue =\n      totalContracts > 0\n        ? state.contracts.reduce((acc, c) => acc + c.totalAmount, 0) /\n          totalContracts\n        : 0;\n\n    return {\n      totalQuotes,\n      totalContracts,\n      totalInvoices,\n      totalRevenue,\n      pendingPayments,\n      activeProjects,\n      conversionRate,\n      averageProjectValue,\n    };\n  }, [state.quotes, state.contracts, state.invoices]);\n\n  const availableQuotes = useMemo(() => {\n    return state.quotes.filter((quote) => {\n      const hasContract = state.contracts.some(\n        (contract) => contract.quoteId === quote.id\n      );\n      return (\n        (quote.status === \"approved\" || quote.status === \"accepted\") &&\n        !hasContract\n      );\n    });\n  }, [state.quotes, state.contracts]);\n\n  const handleStartConversion = useCallback((quote: Quote) => {\n    setConversionFlow((prev) => ({\n      ...prev,\n      step: \"configure_contract\",\n      selectedQuote: quote,\n      errors: [],\n    }));\n    setShowConversionModal(true);\n  }, []);\n\n  const processConversion = useCallback(async () => {\n    if (!conversionFlow.selectedQuote) return;\n\n    setIsLoading(true);\n    try {\n      const validation = EnhancedQuoteConverter.validateConversionOptions(\n        conversionFlow.conversionOptions\n      );\n      if (!validation.isValid) {\n        setConversionFlow((prev) => ({ ...prev, errors: validation.errors }));\n        setIsLoading(false);\n        return;\n      }\n\n      const result = EnhancedQuoteConverter.convertQuoteToContractAndInvoices(\n        conversionFlow.selectedQuote,\n        conversionFlow.conversionOptions\n      );\n\n      const convertedContract: Contract = {\n        id: result.contract.id,\n        quoteId: result.contract.quoteId || \"\",\n        contractTitle: result.contract.contractTitle,\n        status: \"active\",\n        totalAmount: result.contract.totalAmount,\n        createdAt: new Date().toISOString(),\n      };\n      dispatch({ type: \"ADD_CONTRACT\", payload: convertedContract });\n\n      result.invoices.forEach((invoice) => {\n        const standardInvoice: Invoice = {\n          id: invoice.id,\n          contractId: invoice.contractId || \"\",\n          invoiceNumber: invoice.invoiceNumber,\n          clientId: invoice.clientId || \"\",\n          clientName: invoice.clientName,\n          clientEmail: invoice.clientEmail,\n          clientAddress: invoice.clientAddress,\n          issueDate: invoice.issueDate,\n          dueDate: invoice.dueDate,\n          items: invoice.items.map((item) => ({\n            id: item.id,\n            description: item.description,\n            quantity: item.quantity,\n            price: item.unitPrice,\n            total: item.total,\n          })),\n          subtotal: invoice.subtotal,\n          tax: invoice.tax,\n          totalAmount: invoice.totalAmount,\n          notes: invoice.notes,\n          status:\n            invoice.status === \"draft\"\n              ? \"Draft\"\n              : invoice.status === \"sent\"\n              ? \"Sent\"\n              : invoice.status === \"paid\"\n              ? \"Paid\"\n              : invoice.status === \"overdue\"\n              ? \"Overdue\"\n              : \"Draft\",\n        };\n        dispatch({ type: \"ADD_INVOICE\", payload: standardInvoice });\n      });\n\n      setEnhancedContracts((prev) => [...prev, result.contract]);\n      setUnifiedInvoices((prev) => [...prev, ...result.invoices]);\n\n      setConversionFlow({\n        step: \"select_quote\",\n        conversionOptions: {\n          paymentStructure: \"milestone\",\n          taxRate: 0.0875,\n          paymentTerms: \"Net 30\",\n          includeDetailedItems: true,\n          autoGenerateInvoices: true,\n          userId: user?.id,\n        },\n        errors: [],\n      });\n      setShowConversionModal(false);\n      showSuccess(\"Conversion successful!\");\n    } catch (error) {\n      showError(\"Conversion failed. Please try again.\");\n      setConversionFlow((prev) => ({\n        ...prev,\n        errors: [\"An unexpected error occurred.\"],\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [conversionFlow, dispatch, showError, showSuccess, user?.id]);\n\n  const generatePreview = useCallback(() => {\n    if (!conversionFlow.selectedQuote) return;\n    try {\n      const result = EnhancedQuoteConverter.convertQuoteToContractAndInvoices(\n        conversionFlow.selectedQuote,\n        conversionFlow.conversionOptions\n      );\n      setConversionFlow((prev) => ({\n        ...prev,\n        previewResult: result,\n        step: \"review\",\n      }));\n    } catch (error) {\n      showError(\"Failed to generate preview.\");\n    }\n  }, [conversionFlow, showError]);\n\n  const renderDashboard = () => (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Total Quotes</h3>\n          <p className=\"text-2xl font-semibold\">\n            {dashboardStats.totalQuotes}\n          </p>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">\n            Total Contracts\n          </h3>\n          <p className=\"text-2xl font-semibold\">\n            {dashboardStats.totalContracts}\n          </p>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">Total Revenue</h3>\n          <p className=\"text-2xl font-semibold\">\n            ${dashboardStats.totalRevenue.toLocaleString()}\n          </p>\n        </div>\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h3 className=\"text-sm font-medium text-gray-500\">\n            Conversion Rate\n          </h3>\n          <p className=\"text-2xl font-semibold\">\n            {dashboardStats.conversionRate.toFixed(2)}%\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderConversionFlow = () => (\n    <div className=\"bg-white p-6 rounded-lg shadow\">\n      <h2 className=\"text-xl font-semibold mb-4\">Quote to Contract Conversion</h2>\n      <div className=\"space-y-4\">\n        {availableQuotes.map((quote) => (\n          <div\n            key={quote.id}\n            className=\"flex items-center justify-between p-4 border rounded-lg\"\n          >\n            <div>\n              <p className=\"font-semibold\">{quote.businessName}</p>\n              <p className=\"text-sm text-gray-500\">\n                Total: ${quote.total.toLocaleString()}\n              </p>\n            </div>\n            <button\n              onClick={() => handleStartConversion(quote)}\n              className=\"bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600\"\n            >\n              Convert\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Contract & Invoice Manager</h1>\n        {isAdmin && (\n          <button className=\"bg-blue-500 text-white px-4 py-2 rounded-lg flex items-center\">\n            <Plus className=\"mr-2 h-4 w-4\" /> New\n          </button>\n        )}\n      </div>\n\n      <div className=\"mb-6\">\n        <div className=\"border-b border-gray-200\">\n          <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n            <button\n              onClick={() => setActiveTab(\"dashboard\")}\n              className={`${\n                activeTab === \"dashboard\"\n                  ? \"border-blue-500 text-blue-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Dashboard\n            </button>\n            <button\n              onClick={() => setActiveTab(\"conversion\")}\n              className={`${\n                activeTab === \"conversion\"\n                  ? \"border-blue-500 text-blue-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Quote Conversion\n            </button>\n            <button\n              onClick={() => setActiveTab(\"contracts\")}\n              className={`${\n                activeTab === \"contracts\"\n                  ? \"border-blue-500 text-blue-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Contracts\n            </button>\n            <button\n              onClick={() => setActiveTab(\"invoices\")}\n              className={`${\n                activeTab === \"invoices\"\n                  ? \"border-blue-500 text-blue-600\"\n                  : \"border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n              } whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm`}\n            >\n              Unified Invoices\n            </button>\n          </nav>\n        </div>\n      </div>\n\n      <div>\n        {activeTab === \"dashboard\" && renderDashboard()}\n        {activeTab === \"conversion\" && renderConversionFlow()}\n        {activeTab === \"contracts\" && (\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">\n              Contracts\n            </h2>\n            <p>Contracts management interface will be implemented here.</p>\n          </div>\n        )}\n        {activeTab === \"invoices\" && (\n          <div className=\"p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Invoice Management</h3>\n            <p>Invoice management interface will be implemented here.</p>\n          </div>\n        )}\n      </div>\n\n      {showConversionModal && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50\">\n          <div className=\"relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-medium text-gray-900\">\n                Convert Quote to Contract:{\" \"}\n                {conversionFlow.selectedQuote?.businessName}\n              </h3>\n              <button\n                onClick={() => setShowConversionModal(false)}\n                className=\"text-gray-400 hover:text-gray-600\"\n              >\n                <X className=\"h-6 w-6\" />\n              </button>\n            </div>\n            {conversionFlow.errors.length > 0 && (\n              <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4\">\n                <ul>\n                  {conversionFlow.errors.map((error, index) => (\n                    <li key={index}>{error}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {conversionFlow.step === \"configure_contract\" && (\n              <div>\n                <div className=\"mb-4\">\n                  <label className=\"block text-sm font-medium text-gray-700\">\n                    Payment Structure\n                  </label>\n                  <select\n                    value={conversionFlow.conversionOptions.paymentStructure}\n                    onChange={(e) =>\n                      setConversionFlow((prev) => ({\n                        ...prev,\n                        conversionOptions: {\n                          ...prev.conversionOptions,\n                          paymentStructure: e.target.value as any,\n                        },\n                      }))\n                    }\n                    className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md\"\n                  >\n                    <option value=\"milestone\">Milestone</option>\n                    <option value=\"deposit_final\">Deposit + Final</option>\n                    <option value=\"single\">Single Payment</option>\n                  </select>\n                </div>\n                <div className=\"flex justify-end\">\n                  <button\n                    onClick={generatePreview}\n                    className=\"bg-blue-500 text-white px-4 py-2 rounded-lg\"\n                  >\n                    Generate Preview\n                  </button>\n                </div>\n              </div>\n            )}\n            {conversionFlow.step === \"review\" &&\n              conversionFlow.previewResult && (\n                <div>\n                  <h4 className=\"font-semibold\">Review Conversion</h4>\n                  <p>\n                    Total Amount: $\n                    {conversionFlow.previewResult.summary.totalAmount.toLocaleString()}\n                  </p>\n                  <p>\n                    Number of Invoices:{\" \"}\n                    {conversionFlow.previewResult.summary.numberOfInvoices}\n                  </p>\n                  <div className=\"flex justify-end mt-4\">\n                    <button\n                      onClick={processConversion}\n                      disabled={isLoading}\n                      className=\"bg-green-500 text-white px-4 py-2 rounded-lg\"\n                    >\n                      {isLoading ? \"Processing...\" : \"Confirm & Convert\"}\n                    </button>\n                  </div>\n                </div>\n              )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Sub-components (StatusBadge, etc.)\nconst StatusBadge: React.FC<{ status: string }> = ({ status }) => {\n  const baseClasses = \"px-2 py-1 text-xs font-medium rounded-full\";\n  const statusMap: { [key: string]: { text: string; bg: string } } = {\n    draft: { text: \"text-gray-800\", bg: \"bg-gray-100\" },\n    sent: { text: \"text-blue-800\", bg: \"bg-blue-100\" },\n    paid: { text: \"text-green-800\", bg: \"bg-green-100\" },\n    overdue: { text: \"text-red-800\", bg: \"bg-red-100\" },\n    approved: { text: \"text-green-800\", bg: \"bg-green-100\" },\n    accepted: { text: \"text-green-800\", bg: \"bg-green-100\" },\n    active: { text: \"text-blue-800\", bg: \"bg-blue-100\" },\n    completed: { text: \"text-purple-800\", bg: \"bg-purple-100\" },\n  };\n\n  const { text, bg } =\n    statusMap[status.toLowerCase()] || statusMap[\"draft\"];\n\n  return <span className={`${baseClasses} ${text} ${bg}`}>{status}</span>;\n};\n\nexport default EnhancedContractInvoiceManager;"],"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","ignoreList":[]}