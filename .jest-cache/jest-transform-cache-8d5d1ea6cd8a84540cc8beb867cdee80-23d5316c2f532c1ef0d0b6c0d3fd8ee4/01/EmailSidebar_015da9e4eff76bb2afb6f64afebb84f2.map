{"version":3,"names":["_default","EmailSidebar","activeFolder","activeLabelFilter","onFolderClick","onLabelClick","onCompose","getEmailCountForFolder","getEmailCountForLabel","getColorForLabel","cov_1mlp5e4ihc","f","folders","s","id","name","icon","_jsxruntime","jsx","_lucidereact","Inbox","size","count","SendIcon","Mail","Star","Archive","Trash2","labels","color","jsxs","className","onClick","Plus","map","folder","b","label","style","backgroundColor"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\email\\EmailSidebar.tsx"],"sourcesContent":["\"use client\"\n\nimport React from \"react\"\nimport {\n  Inbox,\n  SendIcon,\n  Mail,\n  Star,\n  Archive,\n  Trash2,\n  Plus,\n} from \"lucide-react\"\n\ninterface Folder {\n  id: string\n  name: string\n  icon: React.ReactNode\n  count?: number\n}\n\ninterface Label {\n  id: string\n  name: string\n  color: string\n}\n\ninterface EmailSidebarProps {\n  activeFolder: string\n  activeLabelFilter: string | null\n  onFolderClick: (folderId: string) => void\n  onLabelClick: (labelId: string) => void\n  onCompose: () => void\n  getEmailCountForFolder: (folderId: string) => number\n  getEmailCountForLabel: (labelId: string) => number\n  getColorForLabel: (color: string) => string\n}\n\nconst EmailSidebar: React.FC<EmailSidebarProps> = ({\n  activeFolder,\n  activeLabelFilter,\n  onFolderClick,\n  onLabelClick,\n  onCompose,\n  getEmailCountForFolder,\n  getEmailCountForLabel,\n  getColorForLabel,\n}) => {\n  const folders: Folder[] = [\n    { id: \"inbox\", name: \"Inbox\", icon: <Inbox size={18} />, count: 12 },\n    { id: \"sent\", name: \"Sent\", icon: <SendIcon size={18} /> },\n    { id: \"drafts\", name: \"Drafts\", icon: <Mail size={18} />, count: 3 },\n    { id: \"starred\", name: \"Starred\", icon: <Star size={18} /> },\n    { id: \"archive\", name: \"Archive\", icon: <Archive size={18} /> },\n    { id: \"trash\", name: \"Trash\", icon: <Trash2 size={18} /> },\n  ]\n\n  const labels: Label[] = [\n    { id: \"important\", name: \"Important\", color: \"red\" },\n    { id: \"work\", name: \"Work\", color: \"blue\" },\n    { id: \"personal\", name: \"Personal\", color: \"green\" },\n    { id: \"clients\", name: \"Clients\", color: \"purple\" },\n  ]\n\n  return (\n    <div className=\"w-64 border-r border-gray-200 bg-gray-50 p-4 flex flex-col\">\n      <button\n        onClick={onCompose}\n        className=\"bg-blue-600 text-white rounded-lg px-4 py-2 flex items-center justify-center gap-2 hover:bg-blue-700 transition-colors\"\n      >\n        <Plus size={18} />\n        <span>Compose</span>\n      </button>\n\n      <div className=\"mt-6 space-y-1\">\n        <p className=\"text-xs font-semibold text-gray-500 uppercase tracking-wider px-3 mb-2\">\n          Folders\n        </p>\n        {folders.map((folder) => (\n          <button\n            key={folder.id}\n            onClick={() => onFolderClick(folder.id)}\n            className={`w-full flex items-center justify-between px-3 py-2 rounded-lg text-sm ${\n              activeFolder === folder.id && !activeLabelFilter\n                ? \"bg-blue-100 text-blue-700 font-medium\"\n                : \"text-gray-700 hover:bg-gray-100\"\n            }`}\n          >\n            <div className=\"flex items-center gap-3\">\n              <span className=\"text-gray-500\">{folder.icon}</span>\n              <span>{folder.name}</span>\n            </div>\n            {folder.count && (\n              <span\n                className={`text-xs px-2 py-0.5 rounded-full ${\n                  activeFolder === folder.id && !activeLabelFilter\n                    ? \"bg-blue-200 text-blue-800\"\n                    : \"bg-gray-200 text-gray-700\"\n                }`}\n              >\n                {getEmailCountForFolder(folder.id)}\n              </span>\n            )}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"mt-6 space-y-1\">\n        <p className=\"text-xs font-semibold text-gray-500 uppercase tracking-wider px-3 mb-2\">\n          Labels\n        </p>\n        {labels.map((label) => (\n          <button\n            key={label.id}\n            onClick={() => onLabelClick(label.id)}\n            className={`w-full flex items-center gap-3 px-3 py-2 rounded-lg text-sm ${\n              activeLabelFilter === label.id\n                ? \"bg-blue-100 text-blue-700 font-medium\"\n                : \"text-gray-700 hover:bg-gray-100\"\n            }`}\n          >\n            <span\n              className=\"w-3 h-3 rounded-full\"\n              style={{ backgroundColor: getColorForLabel(label.color) }}\n            ></span>\n            <span>{label.name}</span>\n            <span className=\"ml-auto text-xs text-gray-500\">\n              {getEmailCountForLabel(label.id)}\n            </span>\n          </button>\n        ))}\n        <button className=\"w-full flex items-center gap-3 px-3 py-2 rounded-lg text-sm text-gray-700 hover:bg-gray-100\">\n          <Plus size={16} className=\"text-gray-500\" />\n          <span>Create new label</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default EmailSidebar"],"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","ignoreList":[]}