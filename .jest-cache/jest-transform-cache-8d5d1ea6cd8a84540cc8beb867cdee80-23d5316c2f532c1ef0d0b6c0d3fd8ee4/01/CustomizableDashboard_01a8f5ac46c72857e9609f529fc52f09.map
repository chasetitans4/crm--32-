{"version":3,"names":["cov_26rib7ari9","actualCoverage","s","_default","CustomizableDashboard","f","state","_AppContext","useAppContext","userId","b","user","id","widgets","setWidgets","_react","useState","layout","setLayout","data","setData","isLoading","setIsLoading","isSaving","setIsSaving","isAddWidgetDialogOpen","setIsAddWidgetDialogOpen","loadConfig","useCallback","res","fetch","ok","config","json","loadData","error","console","useEffect","widgetsToLoad","newData","widget","metric","metricData","onLayoutChange","newLayout","saveConfig","method","headers","body","JSON","stringify","addWidget","type","title","newId","Date","now","toString","newWidget","newLayoutItem","i","x","y","Infinity","w","h","removeWidget","widgetId","filter","l","_jsxruntime","jsx","className","_lucidereact","Loader2","jsxs","AddWidgetDialog","onAddWidget","_button","Button","onClick","disabled","Save","_GridLayout","default","layouts","lg","map","_Widget","setType","setMetric","setTitle","handleSubmit","_dialog","Dialog","DialogTrigger","asChild","Plus","DialogContent","DialogHeader","DialogTitle","_input","Input","placeholder","value","onChange","e","target","_select","Select","onValueChange","defaultValue","SelectTrigger","SelectValue","SelectContent","SelectItem"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\CustomizableDashboard.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport GridLayout from \"./Dashboard/GridLayout\";\nimport \"react-grid-layout-next/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport { useAppContext } from \"../context/AppContext\";\nimport { Button } from \"./ui/button\";\nimport { Loader2, Save, Plus } from \"lucide-react\";\nimport Widget from \"./Dashboard/Widget\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"./ui/dialog\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"./ui/select\";\nimport { Input } from \"./ui/input\";\n\ninterface WidgetConfig {\n  id: string;\n  type: \"kpi\" | \"bar\" | \"line\" | \"pie\";\n  metric: string;\n  title: string;\n}\n\ninterface LayoutItem {\n  i: string;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nconst CustomizableDashboard: React.FC = () => {\n  const { state } = useAppContext();\n  const userId = state.user?.id || \"default\";\n\n  const [widgets, setWidgets] = useState<WidgetConfig[]>([]);\n  const [layout, setLayout] = useState<LayoutItem[]>([]);\n  const [data, setData] = useState<Record<string, any>>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isAddWidgetDialogOpen, setIsAddWidgetDialogOpen] = useState(false);\n\n  const loadConfig = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const res = await fetch(`/api/dashboards?userId=${userId}`);\n      if (res.ok) {\n        const config = await res.json();\n        setWidgets(config.data.widgets || []);\n        setLayout(config.data.layout || []);\n        await loadData(config.data.widgets || []);\n      } else {\n        // Handle no config found, set default\n        setWidgets([]);\n        setLayout([]);\n      }\n    } catch (error) {\n      console.error(\"Failed to load config:\", error);\n    }\n    setIsLoading(false);\n  }, [userId]);\n\n  useEffect(() => {\n    if (userId) {\n      loadConfig();\n    }\n  }, [userId, loadConfig]);\n\n  const loadData = async (widgetsToLoad: WidgetConfig[]) => {\n    const newData: Record<string, any> = {};\n    for (const widget of widgetsToLoad) {\n      try {\n        const res = await fetch(`/api/analytics/${widget.metric}`);\n        const metricData = await res.json();\n        newData[widget.id] = metricData.data;\n      } catch (error) {\n        console.error(`Failed to load data for ${widget.metric}:`, error);\n      }\n    }\n    setData(newData);\n  };\n\n  const onLayoutChange = (newLayout: LayoutItem[]) => {\n    // Avoid saving layout changes on every minor adjustment.\n    // This could be enhanced with a debounce function.\n    setLayout(newLayout);\n  };\n\n  const saveConfig = async () => {\n    setIsSaving(true);\n    try {\n      await fetch(`/api/dashboards`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ userId, widgets, layout }),\n      });\n    } catch (error) {\n      console.error(\"Failed to save config:\", error);\n    }\n    setIsSaving(false);\n  };\n\n  const addWidget = (type: WidgetConfig[\"type\"], metric: string, title: string) => {\n    const newId = Date.now().toString();\n    const newWidget: WidgetConfig = { id: newId, type, metric, title };\n    const newLayoutItem: LayoutItem = { i: newId, x: 0, y: Infinity, w: 4, h: 4 };\n\n    setWidgets([...widgets, newWidget]);\n    setLayout([...layout, newLayoutItem]);\n    setIsAddWidgetDialogOpen(false);\n  };\n  \n  const removeWidget = (widgetId: string) => {\n    setWidgets(widgets.filter(w => w.id !== widgetId));\n    setLayout(layout.filter(l => l.i !== widgetId));\n  };\n\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-screen\">\n        <Loader2 className=\"animate-spin\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h1 className=\"text-2xl font-bold\">Customizable Dashboard</h1>\n        <div className=\"flex items-center gap-2\">\n          <AddWidgetDialog onAddWidget={addWidget} />\n          <Button onClick={saveConfig} disabled={isSaving}>\n            {isSaving ? (\n              <Loader2 className=\"mr-2 animate-spin\" />\n            ) : (\n              <Save className=\"mr-2\" />\n            )}\n            Save Layout\n          </Button>\n        </div>\n      </div>\n      <GridLayout layouts={{ lg: layout }} onLayoutChange={onLayoutChange}>\n        {widgets.map((widget) => (\n          <div key={widget.id}>\n            <Widget widget={widget} data={data[widget.id]} />\n          </div>\n        ))}\n      </GridLayout>\n    </div>\n  );\n};\n\nconst AddWidgetDialog: React.FC<{ onAddWidget: Function }> = ({ onAddWidget }) => {\n  const [type, setType] = useState<WidgetConfig[\"type\"]>(\"bar\");\n  const [metric, setMetric] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  const handleSubmit = () => {\n    if (metric && title) {\n      onAddWidget(type, metric, title);\n    }\n  };\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        <Button>\n          <Plus className=\"mr-2\" /> Add Widget\n        </Button>\n      </DialogTrigger>\n      <DialogContent>\n        <DialogHeader>\n          <DialogTitle>Add a new widget</DialogTitle>\n        </DialogHeader>\n        <div className=\"space-y-4\">\n          <Input\n            placeholder=\"Widget Title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n          <Select onValueChange={(value) => setType(value as any)} defaultValue={type}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Widget Type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"bar\">Bar Chart</SelectItem>\n              <SelectItem value=\"line\">Line Chart</SelectItem>\n              <SelectItem value=\"pie\">Pie Chart</SelectItem>\n            </SelectContent>\n          </Select>\n          <Input\n            placeholder=\"Data Metric (e.g., sales, users)\"\n            value={metric}\n            onChange={(e) => setMetric(e.target.value)}\n          />\n          <Button onClick={handleSubmit}>Add Widget</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default CustomizableDashboard;"],"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","ignoreList":[]}