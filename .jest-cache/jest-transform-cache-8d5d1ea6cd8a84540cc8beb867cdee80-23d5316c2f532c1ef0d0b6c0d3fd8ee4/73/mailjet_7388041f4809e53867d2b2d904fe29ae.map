{"version":3,"names":["MailjetConfigurationError","cov_2rrpsqdt2d","f","s","MailjetError","MailjetValidationError","default","_default","mailjetService","MAILJET_API_URL","MAILJET_REST_API_URL","MAILJET_API_KEY","b","process","env","MAILJET_SECRET_KEY","MAILJET_FROM_EMAIL","MAILJET_FROM_NAME","makeRequest","url","options","response","fetch","headers","ok","Error","status","json","MailjetService","configure","apiKey","secretKey","isConfigured","isReady","getDefaultSender","email","name","getAuthHeaders","credentials","btoa","Authorization","retryRequest","requestFn","context","error","validateEmail","emailRegex","test","sendEmail","Promise","resolve","setTimeout","Messages","Status","CustomID","customId","To","to","Cc","Bcc","getTemplates","id","subject","htmlContent","ownerType","createdAt","Date","toISOString","variables","createTemplate","textContent","newTemplate","now","getEmailStats","messageId","time","sendBulkEmail","emails","success","count","length","stripHtml","html","replace","trim","mapStatus","toLowerCase","testConnection","getAccountInfo","processWebhookEvent","event","MessageID","toString","eventPayload","Payload","getDeliveryStats","fromDate","toDate","createContactList","validateEmails","valid","invalid","push","initializeCRMTemplates","templates","template","restURL","constructor","message","statusCode","errorCode","details","field"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\mailjet.ts"],"sourcesContent":["const MAILJET_API_URL = \"https://api.mailjet.com/v3.1\"\r\nconst MAILJET_REST_API_URL = \"https://api.mailjet.com/v3/REST\"\r\n\r\n// Add environment variable support with validation\r\n// Security: Server-side only credentials, never expose via NEXT_PUBLIC_\r\nconst MAILJET_API_KEY = process.env.MAILJET_API_KEY || \"\"\r\nconst MAILJET_SECRET_KEY = process.env.MAILJET_SECRET_KEY || \"\"\r\nconst MAILJET_FROM_EMAIL = process.env.MAILJET_FROM_EMAIL || \"noreply@company.com\"\r\nconst MAILJET_FROM_NAME = process.env.MAILJET_FROM_NAME || \"CRM System\"\r\n\r\n// Validate required environment variables\r\nif (!MAILJET_API_KEY || !MAILJET_SECRET_KEY) {\r\n  // Silent warning - Mailjet API credentials not configured\r\n}\r\n\r\nconst makeRequest = async (url: string, options: RequestInit = {}) => {\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...options.headers,\r\n    },\r\n  })\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`)\r\n  }\r\n\r\n  return response.json()\r\n}\r\n\r\nexport interface EmailTemplate {\r\n  id: number\r\n  name: string\r\n  subject: string\r\n  htmlContent: string\r\n  textContent?: string\r\n  ownerType: string\r\n  createdAt: string\r\n  variables?: string[]\r\n}\r\n\r\nexport interface EmailStats {\r\n  messageId: string\r\n  email: string\r\n  status: string\r\n  time: string\r\n  eventPayload?: string\r\n}\r\n\r\nexport interface EmailOptions {\r\n  from: {\r\n    email: string\r\n    name: string\r\n  }\r\n  to: Array<{\r\n    email: string\r\n    name?: string\r\n    variables?: Record<string, any>\r\n  }>\r\n  subject: string\r\n  htmlPart?: string\r\n  textPart?: string\r\n  templateId?: number\r\n  variables?: Record<string, any>\r\n  customId?: string\r\n  eventPayload?: string\r\n  attachments?: any[]\r\n}\r\n\r\nexport interface EmailRecipient {\r\n  email: string\r\n  name?: string\r\n  variables?: Record<string, any>\r\n}\r\n\r\nclass MailjetService {\r\n  private apiKey = \"\"\r\n  private secretKey = \"\"\r\n  private isConfigured = false\r\n  private restURL = MAILJET_REST_API_URL\r\n\r\n  configure(apiKey: string, secretKey: string): void {\r\n    this.apiKey = apiKey\r\n    this.secretKey = secretKey\r\n    this.isConfigured = true\r\n  }\r\n\r\n  isReady(): boolean {\r\n    return this.isConfigured && !!this.apiKey && !!this.secretKey\r\n  }\r\n\r\n  getDefaultSender(): { email: string; name: string } {\r\n    return {\r\n      email: MAILJET_FROM_EMAIL,\r\n      name: MAILJET_FROM_NAME,\r\n    }\r\n  }\r\n\r\n  private getAuthHeaders() {\r\n    const credentials = btoa(`${this.apiKey}:${this.secretKey}`)\r\n    return {\r\n      Authorization: `Basic ${credentials}`,\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  }\r\n\r\n  private async retryRequest<T>(requestFn: () => Promise<T>, context: string): Promise<T> {\r\n    try {\r\n      return await requestFn()\r\n    } catch (error) {\r\n      // Silent error handling - Operation failed\r\n      throw error\r\n    }\r\n  }\r\n\r\n  private validateEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    return emailRegex.test(email)\r\n  }\r\n\r\n  async sendEmail(options: EmailOptions): Promise<any> {\r\n    if (!this.isReady()) {\r\n      throw new Error(\"Mailjet service not configured\")\r\n    }\r\n\r\n    // Mock implementation for now\r\n    // Silent logging - Sending email\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          Messages: [\r\n            {\r\n              Status: \"success\",\r\n              CustomID: options.customId,\r\n              To: options.to,\r\n              Cc: [],\r\n              Bcc: [],\r\n            },\r\n          ],\r\n        })\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  async getTemplates(): Promise<EmailTemplate[]> {\r\n    if (!this.isReady()) {\r\n      return []\r\n    }\r\n\r\n    // Mock templates\r\n    return [\r\n      {\r\n        id: 1,\r\n        name: \"Welcome Email\",\r\n        subject: \"Welcome to our platform!\",\r\n        htmlContent: \"<h1>Welcome!</h1><p>Thank you for joining us.</p>\",\r\n        ownerType: \"user\",\r\n        createdAt: new Date().toISOString(),\r\n        variables: [\"client_name\", \"company_name\"],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Project Update\",\r\n        subject: \"Project Update: {{project_name}}\",\r\n        htmlContent: \"<h1>Project Update</h1><p>Your project {{project_name}} has been updated.</p>\",\r\n        ownerType: \"user\",\r\n        createdAt: new Date().toISOString(),\r\n        variables: [\"project_name\", \"client_name\"],\r\n      },\r\n    ]\r\n  }\r\n\r\n  async createTemplate(\r\n    name: string,\r\n    subject: string,\r\n    htmlContent: string,\r\n    textContent?: string,\r\n  ): Promise<EmailTemplate> {\r\n    if (!this.isReady()) {\r\n      throw new Error(\"Mailjet service not configured\")\r\n    }\r\n\r\n    const newTemplate: EmailTemplate = {\r\n      id: Date.now(),\r\n      name,\r\n      subject,\r\n      htmlContent,\r\n      textContent,\r\n      ownerType: \"user\",\r\n      createdAt: new Date().toISOString(),\r\n      variables: [],\r\n    }\r\n\r\n    // Silent logging - Created template\r\n    return newTemplate\r\n  }\r\n\r\n  async getEmailStats(): Promise<EmailStats[]> {\r\n    if (!this.isReady()) {\r\n      return []\r\n    }\r\n\r\n    return [\r\n      {\r\n        messageId: \"msg_001\",\r\n        email: \"test@example.com\",\r\n        status: \"sent\",\r\n        time: new Date().toISOString(),\r\n      },\r\n      {\r\n        messageId: \"msg_002\",\r\n        email: \"user@example.com\",\r\n        status: \"opened\",\r\n        time: new Date().toISOString(),\r\n      },\r\n    ]\r\n  }\r\n\r\n  async sendBulkEmail(emails: EmailOptions[]): Promise<any> {\r\n    if (!this.isReady()) {\r\n      throw new Error(\"Mailjet service not configured\")\r\n    }\r\n\r\n    // Silent logging - Sending bulk emails\r\n    return { success: true, count: emails.length }\r\n  }\r\n\r\n  private stripHtml(html: string): string {\r\n    return html\r\n      .replace(/<[^>]*>/g, \"\")\r\n      .replace(/\\s+/g, \" \")\r\n      .trim()\r\n  }\r\n\r\n  private mapStatus(status: string): EmailStats[\"status\"] {\r\n    return status.toLowerCase()\r\n  }\r\n\r\n  async testConnection(): Promise<boolean> {\r\n    return this.isConfigured\r\n  }\r\n\r\n  async getAccountInfo(): Promise<any> {\r\n    if (!this.isConfigured) {\r\n      return null\r\n    }\r\n    return { name: \"Mock Account\", email: this.getDefaultSender().email }\r\n  }\r\n\r\n  processWebhookEvent(event: any): EmailStats | null {\r\n    try {\r\n      if (!event || !event.email || !event.event) {\r\n        return null\r\n      }\r\n\r\n      return {\r\n        messageId: event.MessageID?.toString() || \"\",\r\n        email: event.email,\r\n        status: this.mapStatus(event.event),\r\n        time: event.time ? new Date(event.time * 1000).toISOString() : new Date().toISOString(),\r\n        eventPayload: event.Payload,\r\n      }\r\n    } catch (error) {\r\n      // Silent error handling - Error processing webhook event\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getDeliveryStats(fromDate?: string, toDate?: string): Promise<any> {\r\n    if (!this.isConfigured) {\r\n      return null\r\n    }\r\n    return []\r\n  }\r\n\r\n  async createContactList(name: string): Promise<any> {\r\n    if (!this.isConfigured) {\r\n      throw new Error(\"Mailjet not configured\")\r\n    }\r\n    return { id: Date.now(), name }\r\n  }\r\n\r\n  async validateEmails(emails: string[]): Promise<{ valid: string[]; invalid: string[] }> {\r\n    const valid: string[] = []\r\n    const invalid: string[] = []\r\n\r\n    for (const email of emails) {\r\n      if (this.validateEmail(email)) {\r\n        valid.push(email)\r\n      } else {\r\n        invalid.push(email)\r\n      }\r\n    }\r\n\r\n    return { valid, invalid }\r\n  }\r\n\r\n  // Predefined email templates for CRM\r\n  async initializeCRMTemplates(): Promise<void> {\r\n    const templates = [\r\n      {\r\n        name: \"Welcome Client\",\r\n        subject: \"Welcome to {{company_name}}!\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Welcome {{client_name}}!</h1>\r\n            <p>Thank you for choosing {{company_name}}. We're excited to work with you on your upcoming project.</p>\r\n            <p>Your dedicated account manager is {{account_manager}} and they will be in touch shortly to discuss next steps.</p>\r\n            <p>If you have any questions, please don't hesitate to reach out.</p>\r\n            <p>Best regards,<br>The {{company_name}} Team</p>\r\n          </div>\r\n        `,\r\n      },\r\n      {\r\n        name: \"Project Update\",\r\n        subject: \"Project Update: {{project_name}}\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Project Update</h1>\r\n            <p>Hi {{client_name}},</p>\r\n            <p>Here's an update on your project: <strong>{{project_name}}</strong></p>\r\n            <p><strong>Status:</strong> {{project_status}}</p>\r\n            <p><strong>Progress:</strong> {{progress_percentage}}% complete</p>\r\n            <p>{{update_message}}</p>\r\n            <p>Next milestone: {{next_milestone}}</p>\r\n            <p>Best regards,<br>{{account_manager}}</p>\r\n          </div>\r\n        `,\r\n      },\r\n      {\r\n        name: \"Invoice Notification\",\r\n        subject: \"Invoice {{invoice_number}} from {{company_name}}\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Invoice {{invoice_number}}</h1>\r\n            <p>Hi {{client_name}},</p>\r\n            <p>Please find attached invoice {{invoice_number}} for the amount of {{invoice_amount}}.</p>\r\n            <p><strong>Due Date:</strong> {{due_date}}</p>\r\n            <p>You can pay this invoice online by clicking the link below:</p>\r\n            <a href=\\\"{{payment_link}}\\\" style=\\\"background: #3b82f6; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\\\">Pay Invoice</a>\r\n            <p>Thank you for your business!</p>\r\n            <p>Best regards,<br>{{company_name}} Billing</p>\r\n          </div>\r\n        `,\r\n      },\r\n      {\r\n        name: \"Meeting Reminder\",\r\n        subject: \"Meeting Reminder: {{meeting_title}}\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Meeting Reminder</h1>\r\n            <p>Hi {{client_name}},</p>\r\n            <p>This is a reminder about our upcoming meeting:</p>\r\n            <p><strong>Title:</strong> {{meeting_title}}</p>\r\n            <p><strong>Date:</strong> {{meeting_date}}</p>\r\n            <p><strong>Time:</strong> {{meeting_time}}</p>\r\n            <p><strong>Location:</strong> {{meeting_location}}</p>\r\n            <p>{{meeting_agenda}}</p>\r\n            <p>Looking forward to speaking with you!</p>\r\n            <p>Best regards,<br>{{account_manager}}</p>\r\n          </div>\r\n        `,\r\n      },\r\n    ]\r\n\r\n    for (const template of templates) {\r\n      try {\r\n        await this.createTemplate(template.name, template.subject, template.htmlContent)\r\n      } catch (error) {\r\n        // Silent logging - Template may already exist\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Enhanced error types\r\nexport class MailjetError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public statusCode?: number,\r\n    public errorCode?: string,\r\n    public details?: any,\r\n  ) {\r\n    super(message)\r\n    this.name = \"MailjetError\"\r\n  }\r\n}\r\n\r\nexport class MailjetConfigurationError extends MailjetError {\r\n  constructor(message: string) {\r\n    super(message, 0, \"CONFIGURATION_ERROR\")\r\n    this.name = \"MailjetConfigurationError\"\r\n  }\r\n}\r\n\r\nexport class MailjetValidationError extends MailjetError {\r\n  constructor(message: string, field?: string) {\r\n    super(message, 400, \"VALIDATION_ERROR\", { field })\r\n    this.name = \"MailjetValidationError\"\r\n  }\r\n}\r\n\r\nexport const mailjetService = new MailjetService()\r\nexport default mailjetService\r\n"],"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","ignoreList":[]}