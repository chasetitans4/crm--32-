d141bb4ad9b2367b10d4a3f72f66e8e5
"use strict";

/* istanbul ignore next */
function cov_2rrpsqdt2d() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\mailjet.ts";
  var hash = "80bf438802c1d0162772a6c14b7ce15b169a3aa9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\mailjet.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 27,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 24
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "9": {
        start: {
          line: 28,
          column: 24
        },
        end: {
          line: 28,
          column: 54
        }
      },
      "10": {
        start: {
          line: 29,
          column: 29
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "11": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "12": {
        start: {
          line: 33,
          column: 27
        },
        end: {
          line: 33,
          column: 63
        }
      },
      "13": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 82
        }
      },
      "14": {
        start: {
          line: 35,
          column: 26
        },
        end: {
          line: 35,
          column: 71
        }
      },
      "15": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 39,
          column: 1
        }
      },
      "16": {
        start: {
          line: 40,
          column: 20
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "17": {
        start: {
          line: 41,
          column: 21
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "18": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 66
        }
      },
      "20": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 27
        }
      },
      "21": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 29
        }
      },
      "22": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 35
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 33
        }
      },
      "24": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 70
        }
      },
      "25": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "26": {
        start: {
          line: 69,
          column: 28
        },
        end: {
          line: 69,
          column: 68
        }
      },
      "27": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 73,
          column: 10
        }
      },
      "28": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "29": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 37
        }
      },
      "30": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 24
        }
      },
      "31": {
        start: {
          line: 84,
          column: 27
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "32": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 38
        }
      },
      "33": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "34": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 62
        }
      },
      "35": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "36": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 106,
          column: 21
        }
      },
      "37": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 105,
          column: 19
        }
      },
      "38": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "39": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 22
        }
      },
      "40": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 139,
          column: 10
        }
      },
      "41": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "42": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 62
        }
      },
      "43": {
        start: {
          line: 145,
          column: 28
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "44": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 27
        }
      },
      "45": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 161,
          column: 9
        }
      },
      "46": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 22
        }
      },
      "47": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 175,
          column: 10
        }
      },
      "48": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 180,
          column: 9
        }
      },
      "49": {
        start: {
          line: 179,
          column: 12
        },
        end: {
          line: 179,
          column: 62
        }
      },
      "50": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 185,
          column: 10
        }
      },
      "51": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 188,
          column: 72
        }
      },
      "52": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 36
        }
      },
      "53": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 33
        }
      },
      "54": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "55": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 24
        }
      },
      "56": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "57": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 220,
          column: 9
        }
      },
      "58": {
        start: {
          line: 207,
          column: 12
        },
        end: {
          line: 209,
          column: 13
        }
      },
      "59": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 28
        }
      },
      "60": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 216,
          column: 14
        }
      },
      "61": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "62": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "63": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 24
        }
      },
      "64": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 18
        }
      },
      "65": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "66": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 54
        }
      },
      "67": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 235,
          column: 10
        }
      },
      "68": {
        start: {
          line: 238,
          column: 22
        },
        end: {
          line: 238,
          column: 24
        }
      },
      "69": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 239,
          column: 26
        }
      },
      "70": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 246,
          column: 9
        }
      },
      "71": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "72": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 34
        }
      },
      "73": {
        start: {
          line: 244,
          column: 16
        },
        end: {
          line: 244,
          column: 36
        }
      },
      "74": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 250,
          column: 10
        }
      },
      "75": {
        start: {
          line: 254,
          column: 26
        },
        end: {
          line: 318,
          column: 9
        }
      },
      "76": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "77": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 324,
          column: 13
        }
      },
      "78": {
        start: {
          line: 321,
          column: 16
        },
        end: {
          line: 321,
          column: 97
        }
      },
      "79": {
        start: {
          line: 328,
          column: 8
        },
        end: {
          line: 328,
          column: 25
        }
      },
      "80": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 28
        }
      },
      "81": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 330,
          column: 34
        }
      },
      "82": {
        start: {
          line: 331,
          column: 8
        },
        end: {
          line: 331,
          column: 44
        }
      },
      "83": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 336,
          column: 105
        }
      },
      "84": {
        start: {
          line: 337,
          column: 8
        },
        end: {
          line: 337,
          column: 35
        }
      },
      "85": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 342,
          column: 49
        }
      },
      "86": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 343,
          column: 48
        }
      },
      "87": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 350,
          column: 11
        }
      },
      "88": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 351,
          column: 45
        }
      },
      "89": {
        start: {
          line: 354,
          column: 23
        },
        end: {
          line: 354,
          column: 43
        }
      },
      "90": {
        start: {
          line: 355,
          column: 17
        },
        end: {
          line: 355,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 37
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 19
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 20
          },
          end: {
            line: 40,
            column: 21
          }
        },
        loc: {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 52,
            column: 1
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 33
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        loc: {
          start: {
            line: 59,
            column: 14
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        loc: {
          start: {
            line: 62,
            column: 23
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 62
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 5
          }
        },
        loc: {
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 68
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 43
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 75
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 5
          }
        },
        loc: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 83
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        loc: {
          start: {
            line: 87,
            column: 29
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 87
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 93,
            column: 27
          },
          end: {
            line: 93,
            column: 28
          }
        },
        loc: {
          start: {
            line: 93,
            column: 38
          },
          end: {
            line: 107,
            column: 9
          }
        },
        line: 93
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 94,
            column: 23
          },
          end: {
            line: 94,
            column: 24
          }
        },
        loc: {
          start: {
            line: 94,
            column: 27
          },
          end: {
            line: 106,
            column: 13
          }
        },
        line: 94
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 109,
            column: 5
          }
        },
        loc: {
          start: {
            line: 109,
            column: 25
          },
          end: {
            line: 140,
            column: 5
          }
        },
        line: 109
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 5
          }
        },
        loc: {
          start: {
            line: 141,
            column: 66
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 141
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 5
          }
        },
        loc: {
          start: {
            line: 158,
            column: 26
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 158
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 177,
            column: 4
          },
          end: {
            line: 177,
            column: 5
          }
        },
        loc: {
          start: {
            line: 177,
            column: 32
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 177
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 187,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        loc: {
          start: {
            line: 187,
            column: 20
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 187
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 190,
            column: 4
          },
          end: {
            line: 190,
            column: 5
          }
        },
        loc: {
          start: {
            line: 190,
            column: 22
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 190
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 193,
            column: 5
          }
        },
        loc: {
          start: {
            line: 193,
            column: 27
          },
          end: {
            line: 195,
            column: 5
          }
        },
        line: 193
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 196,
            column: 4
          },
          end: {
            line: 196,
            column: 5
          }
        },
        loc: {
          start: {
            line: 196,
            column: 27
          },
          end: {
            line: 204,
            column: 5
          }
        },
        line: 196
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 5
          }
        },
        loc: {
          start: {
            line: 205,
            column: 31
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 205
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 222,
            column: 4
          },
          end: {
            line: 222,
            column: 5
          }
        },
        loc: {
          start: {
            line: 222,
            column: 45
          },
          end: {
            line: 227,
            column: 5
          }
        },
        line: 222
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 228,
            column: 4
          },
          end: {
            line: 228,
            column: 5
          }
        },
        loc: {
          start: {
            line: 228,
            column: 34
          },
          end: {
            line: 236,
            column: 5
          }
        },
        line: 228
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        loc: {
          start: {
            line: 237,
            column: 33
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 237
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 253,
            column: 5
          }
        },
        loc: {
          start: {
            line: 253,
            column: 35
          },
          end: {
            line: 326,
            column: 5
          }
        },
        line: 253
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 327,
            column: 5
          }
        },
        loc: {
          start: {
            line: 327,
            column: 17
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 327
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 335,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        loc: {
          start: {
            line: 335,
            column: 56
          },
          end: {
            line: 338,
            column: 5
          }
        },
        line: 335
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 341,
            column: 4
          },
          end: {
            line: 341,
            column: 5
          }
        },
        loc: {
          start: {
            line: 341,
            column: 24
          },
          end: {
            line: 344,
            column: 5
          }
        },
        line: 341
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 347,
            column: 4
          },
          end: {
            line: 347,
            column: 5
          }
        },
        loc: {
          start: {
            line: 347,
            column: 31
          },
          end: {
            line: 352,
            column: 5
          }
        },
        line: 347
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 51
          }
        }, {
          start: {
            line: 32,
            column: 55
          },
          end: {
            line: 32,
            column: 57
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 33,
            column: 27
          },
          end: {
            line: 33,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 27
          },
          end: {
            line: 33,
            column: 57
          }
        }, {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 33,
            column: 63
          }
        }],
        line: 33
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 57
          }
        }, {
          start: {
            line: 34,
            column: 61
          },
          end: {
            line: 34,
            column: 82
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 26
          },
          end: {
            line: 35,
            column: 55
          }
        }, {
          start: {
            line: 35,
            column: 59
          },
          end: {
            line: 35,
            column: 71
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 0
          },
          end: {
            line: 39,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 0
          },
          end: {
            line: 39,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 43
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 44
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 40,
            column: 44
          }
        }],
        line: 40
      },
      "7": {
        loc: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "8": {
        loc: {
          start: {
            line: 60,
            column: 15
          },
          end: {
            line: 60,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 15
          },
          end: {
            line: 60,
            column: 32
          }
        }, {
          start: {
            line: 60,
            column: 36
          },
          end: {
            line: 60,
            column: 49
          }
        }, {
          start: {
            line: 60,
            column: 53
          },
          end: {
            line: 60,
            column: 69
          }
        }],
        line: 60
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 90,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "11": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "12": {
        loc: {
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 8
          },
          end: {
            line: 161,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "13": {
        loc: {
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 8
          },
          end: {
            line: 180,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "14": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "15": {
        loc: {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "16": {
        loc: {
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 207,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 16
          },
          end: {
            line: 207,
            column: 22
          }
        }, {
          start: {
            line: 207,
            column: 26
          },
          end: {
            line: 207,
            column: 38
          }
        }, {
          start: {
            line: 207,
            column: 42
          },
          end: {
            line: 207,
            column: 54
          }
        }],
        line: 207
      },
      "17": {
        loc: {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 211,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 211,
            column: 54
          }
        }, {
          start: {
            line: 211,
            column: 58
          },
          end: {
            line: 211,
            column: 60
          }
        }],
        line: 211
      },
      "18": {
        loc: {
          start: {
            line: 214,
            column: 22
          },
          end: {
            line: 214,
            column: 103
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 35
          },
          end: {
            line: 214,
            column: 76
          }
        }, {
          start: {
            line: 214,
            column: 79
          },
          end: {
            line: 214,
            column: 103
          }
        }],
        line: 214
      },
      "19": {
        loc: {
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 223,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 223
      },
      "20": {
        loc: {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 229
      },
      "21": {
        loc: {
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 12
          },
          end: {
            line: 245,
            column: 13
          }
        }, {
          start: {
            line: 243,
            column: 19
          },
          end: {
            line: 245,
            column: 13
          }
        }],
        line: 241
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\services\\mailjet.ts"],
      sourcesContent: ["const MAILJET_API_URL = \"https://api.mailjet.com/v3.1\"\r\nconst MAILJET_REST_API_URL = \"https://api.mailjet.com/v3/REST\"\r\n\r\n// Add environment variable support with validation\r\n// Security: Server-side only credentials, never expose via NEXT_PUBLIC_\r\nconst MAILJET_API_KEY = process.env.MAILJET_API_KEY || \"\"\r\nconst MAILJET_SECRET_KEY = process.env.MAILJET_SECRET_KEY || \"\"\r\nconst MAILJET_FROM_EMAIL = process.env.MAILJET_FROM_EMAIL || \"noreply@company.com\"\r\nconst MAILJET_FROM_NAME = process.env.MAILJET_FROM_NAME || \"CRM System\"\r\n\r\n// Validate required environment variables\r\nif (!MAILJET_API_KEY || !MAILJET_SECRET_KEY) {\r\n  // Silent warning - Mailjet API credentials not configured\r\n}\r\n\r\nconst makeRequest = async (url: string, options: RequestInit = {}) => {\r\n  const response = await fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      ...options.headers,\r\n    },\r\n  })\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`HTTP error! status: ${response.status}`)\r\n  }\r\n\r\n  return response.json()\r\n}\r\n\r\nexport interface EmailTemplate {\r\n  id: number\r\n  name: string\r\n  subject: string\r\n  htmlContent: string\r\n  textContent?: string\r\n  ownerType: string\r\n  createdAt: string\r\n  variables?: string[]\r\n}\r\n\r\nexport interface EmailStats {\r\n  messageId: string\r\n  email: string\r\n  status: string\r\n  time: string\r\n  eventPayload?: string\r\n}\r\n\r\nexport interface EmailOptions {\r\n  from: {\r\n    email: string\r\n    name: string\r\n  }\r\n  to: Array<{\r\n    email: string\r\n    name?: string\r\n    variables?: Record<string, any>\r\n  }>\r\n  subject: string\r\n  htmlPart?: string\r\n  textPart?: string\r\n  templateId?: number\r\n  variables?: Record<string, any>\r\n  customId?: string\r\n  eventPayload?: string\r\n  attachments?: any[]\r\n}\r\n\r\nexport interface EmailRecipient {\r\n  email: string\r\n  name?: string\r\n  variables?: Record<string, any>\r\n}\r\n\r\nclass MailjetService {\r\n  private apiKey = \"\"\r\n  private secretKey = \"\"\r\n  private isConfigured = false\r\n  private restURL = MAILJET_REST_API_URL\r\n\r\n  configure(apiKey: string, secretKey: string): void {\r\n    this.apiKey = apiKey\r\n    this.secretKey = secretKey\r\n    this.isConfigured = true\r\n  }\r\n\r\n  isReady(): boolean {\r\n    return this.isConfigured && !!this.apiKey && !!this.secretKey\r\n  }\r\n\r\n  getDefaultSender(): { email: string; name: string } {\r\n    return {\r\n      email: MAILJET_FROM_EMAIL,\r\n      name: MAILJET_FROM_NAME,\r\n    }\r\n  }\r\n\r\n  private getAuthHeaders() {\r\n    const credentials = btoa(`${this.apiKey}:${this.secretKey}`)\r\n    return {\r\n      Authorization: `Basic ${credentials}`,\r\n      \"Content-Type\": \"application/json\",\r\n    }\r\n  }\r\n\r\n  private async retryRequest<T>(requestFn: () => Promise<T>, context: string): Promise<T> {\r\n    try {\r\n      return await requestFn()\r\n    } catch (error) {\r\n      // Silent error handling - Operation failed\r\n      throw error\r\n    }\r\n  }\r\n\r\n  private validateEmail(email: string): boolean {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    return emailRegex.test(email)\r\n  }\r\n\r\n  async sendEmail(options: EmailOptions): Promise<any> {\r\n    if (!this.isReady()) {\r\n      throw new Error(\"Mailjet service not configured\")\r\n    }\r\n\r\n    // Mock implementation for now\r\n    // Silent logging - Sending email\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          Messages: [\r\n            {\r\n              Status: \"success\",\r\n              CustomID: options.customId,\r\n              To: options.to,\r\n              Cc: [],\r\n              Bcc: [],\r\n            },\r\n          ],\r\n        })\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  async getTemplates(): Promise<EmailTemplate[]> {\r\n    if (!this.isReady()) {\r\n      return []\r\n    }\r\n\r\n    // Mock templates\r\n    return [\r\n      {\r\n        id: 1,\r\n        name: \"Welcome Email\",\r\n        subject: \"Welcome to our platform!\",\r\n        htmlContent: \"<h1>Welcome!</h1><p>Thank you for joining us.</p>\",\r\n        ownerType: \"user\",\r\n        createdAt: new Date().toISOString(),\r\n        variables: [\"client_name\", \"company_name\"],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Project Update\",\r\n        subject: \"Project Update: {{project_name}}\",\r\n        htmlContent: \"<h1>Project Update</h1><p>Your project {{project_name}} has been updated.</p>\",\r\n        ownerType: \"user\",\r\n        createdAt: new Date().toISOString(),\r\n        variables: [\"project_name\", \"client_name\"],\r\n      },\r\n    ]\r\n  }\r\n\r\n  async createTemplate(\r\n    name: string,\r\n    subject: string,\r\n    htmlContent: string,\r\n    textContent?: string,\r\n  ): Promise<EmailTemplate> {\r\n    if (!this.isReady()) {\r\n      throw new Error(\"Mailjet service not configured\")\r\n    }\r\n\r\n    const newTemplate: EmailTemplate = {\r\n      id: Date.now(),\r\n      name,\r\n      subject,\r\n      htmlContent,\r\n      textContent,\r\n      ownerType: \"user\",\r\n      createdAt: new Date().toISOString(),\r\n      variables: [],\r\n    }\r\n\r\n    // Silent logging - Created template\r\n    return newTemplate\r\n  }\r\n\r\n  async getEmailStats(): Promise<EmailStats[]> {\r\n    if (!this.isReady()) {\r\n      return []\r\n    }\r\n\r\n    return [\r\n      {\r\n        messageId: \"msg_001\",\r\n        email: \"test@example.com\",\r\n        status: \"sent\",\r\n        time: new Date().toISOString(),\r\n      },\r\n      {\r\n        messageId: \"msg_002\",\r\n        email: \"user@example.com\",\r\n        status: \"opened\",\r\n        time: new Date().toISOString(),\r\n      },\r\n    ]\r\n  }\r\n\r\n  async sendBulkEmail(emails: EmailOptions[]): Promise<any> {\r\n    if (!this.isReady()) {\r\n      throw new Error(\"Mailjet service not configured\")\r\n    }\r\n\r\n    // Silent logging - Sending bulk emails\r\n    return { success: true, count: emails.length }\r\n  }\r\n\r\n  private stripHtml(html: string): string {\r\n    return html\r\n      .replace(/<[^>]*>/g, \"\")\r\n      .replace(/\\s+/g, \" \")\r\n      .trim()\r\n  }\r\n\r\n  private mapStatus(status: string): EmailStats[\"status\"] {\r\n    return status.toLowerCase()\r\n  }\r\n\r\n  async testConnection(): Promise<boolean> {\r\n    return this.isConfigured\r\n  }\r\n\r\n  async getAccountInfo(): Promise<any> {\r\n    if (!this.isConfigured) {\r\n      return null\r\n    }\r\n    return { name: \"Mock Account\", email: this.getDefaultSender().email }\r\n  }\r\n\r\n  processWebhookEvent(event: any): EmailStats | null {\r\n    try {\r\n      if (!event || !event.email || !event.event) {\r\n        return null\r\n      }\r\n\r\n      return {\r\n        messageId: event.MessageID?.toString() || \"\",\r\n        email: event.email,\r\n        status: this.mapStatus(event.event),\r\n        time: event.time ? new Date(event.time * 1000).toISOString() : new Date().toISOString(),\r\n        eventPayload: event.Payload,\r\n      }\r\n    } catch (error) {\r\n      // Silent error handling - Error processing webhook event\r\n      return null\r\n    }\r\n  }\r\n\r\n  async getDeliveryStats(fromDate?: string, toDate?: string): Promise<any> {\r\n    if (!this.isConfigured) {\r\n      return null\r\n    }\r\n    return []\r\n  }\r\n\r\n  async createContactList(name: string): Promise<any> {\r\n    if (!this.isConfigured) {\r\n      throw new Error(\"Mailjet not configured\")\r\n    }\r\n    return { id: Date.now(), name }\r\n  }\r\n\r\n  async validateEmails(emails: string[]): Promise<{ valid: string[]; invalid: string[] }> {\r\n    const valid: string[] = []\r\n    const invalid: string[] = []\r\n\r\n    for (const email of emails) {\r\n      if (this.validateEmail(email)) {\r\n        valid.push(email)\r\n      } else {\r\n        invalid.push(email)\r\n      }\r\n    }\r\n\r\n    return { valid, invalid }\r\n  }\r\n\r\n  // Predefined email templates for CRM\r\n  async initializeCRMTemplates(): Promise<void> {\r\n    const templates = [\r\n      {\r\n        name: \"Welcome Client\",\r\n        subject: \"Welcome to {{company_name}}!\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Welcome {{client_name}}!</h1>\r\n            <p>Thank you for choosing {{company_name}}. We're excited to work with you on your upcoming project.</p>\r\n            <p>Your dedicated account manager is {{account_manager}} and they will be in touch shortly to discuss next steps.</p>\r\n            <p>If you have any questions, please don't hesitate to reach out.</p>\r\n            <p>Best regards,<br>The {{company_name}} Team</p>\r\n          </div>\r\n        `,\r\n      },\r\n      {\r\n        name: \"Project Update\",\r\n        subject: \"Project Update: {{project_name}}\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Project Update</h1>\r\n            <p>Hi {{client_name}},</p>\r\n            <p>Here's an update on your project: <strong>{{project_name}}</strong></p>\r\n            <p><strong>Status:</strong> {{project_status}}</p>\r\n            <p><strong>Progress:</strong> {{progress_percentage}}% complete</p>\r\n            <p>{{update_message}}</p>\r\n            <p>Next milestone: {{next_milestone}}</p>\r\n            <p>Best regards,<br>{{account_manager}}</p>\r\n          </div>\r\n        `,\r\n      },\r\n      {\r\n        name: \"Invoice Notification\",\r\n        subject: \"Invoice {{invoice_number}} from {{company_name}}\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Invoice {{invoice_number}}</h1>\r\n            <p>Hi {{client_name}},</p>\r\n            <p>Please find attached invoice {{invoice_number}} for the amount of {{invoice_amount}}.</p>\r\n            <p><strong>Due Date:</strong> {{due_date}}</p>\r\n            <p>You can pay this invoice online by clicking the link below:</p>\r\n            <a href=\\\"{{payment_link}}\\\" style=\\\"background: #3b82f6; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\\\">Pay Invoice</a>\r\n            <p>Thank you for your business!</p>\r\n            <p>Best regards,<br>{{company_name}} Billing</p>\r\n          </div>\r\n        `,\r\n      },\r\n      {\r\n        name: \"Meeting Reminder\",\r\n        subject: \"Meeting Reminder: {{meeting_title}}\",\r\n        htmlContent: `\r\n          <div style=\\\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\\\">\r\n            <h1 style=\\\"color: #3b82f6;\\\">Meeting Reminder</h1>\r\n            <p>Hi {{client_name}},</p>\r\n            <p>This is a reminder about our upcoming meeting:</p>\r\n            <p><strong>Title:</strong> {{meeting_title}}</p>\r\n            <p><strong>Date:</strong> {{meeting_date}}</p>\r\n            <p><strong>Time:</strong> {{meeting_time}}</p>\r\n            <p><strong>Location:</strong> {{meeting_location}}</p>\r\n            <p>{{meeting_agenda}}</p>\r\n            <p>Looking forward to speaking with you!</p>\r\n            <p>Best regards,<br>{{account_manager}}</p>\r\n          </div>\r\n        `,\r\n      },\r\n    ]\r\n\r\n    for (const template of templates) {\r\n      try {\r\n        await this.createTemplate(template.name, template.subject, template.htmlContent)\r\n      } catch (error) {\r\n        // Silent logging - Template may already exist\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Enhanced error types\r\nexport class MailjetError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public statusCode?: number,\r\n    public errorCode?: string,\r\n    public details?: any,\r\n  ) {\r\n    super(message)\r\n    this.name = \"MailjetError\"\r\n  }\r\n}\r\n\r\nexport class MailjetConfigurationError extends MailjetError {\r\n  constructor(message: string) {\r\n    super(message, 0, \"CONFIGURATION_ERROR\")\r\n    this.name = \"MailjetConfigurationError\"\r\n  }\r\n}\r\n\r\nexport class MailjetValidationError extends MailjetError {\r\n  constructor(message: string, field?: string) {\r\n    super(message, 400, \"VALIDATION_ERROR\", { field })\r\n    this.name = \"MailjetValidationError\"\r\n  }\r\n}\r\n\r\nexport const mailjetService = new MailjetService()\r\nexport default mailjetService\r\n"],
      names: ["MailjetConfigurationError", "MailjetError", "MailjetValidationError", "mailjetService", "MAILJET_API_URL", "MAILJET_REST_API_URL", "MAILJET_API_KEY", "process", "env", "MAILJET_SECRET_KEY", "MAILJET_FROM_EMAIL", "MAILJET_FROM_NAME", "makeRequest", "url", "options", "response", "fetch", "headers", "ok", "Error", "status", "json", "MailjetService", "configure", "apiKey", "secretKey", "isConfigured", "isReady", "getDefaultSender", "email", "name", "getAuthHeaders", "credentials", "btoa", "Authorization", "retryRequest", "requestFn", "context", "error", "validateEmail", "emailRegex", "test", "sendEmail", "Promise", "resolve", "setTimeout", "Messages", "Status", "CustomID", "customId", "To", "to", "Cc", "Bcc", "getTemplates", "id", "subject", "htmlContent", "ownerType", "createdAt", "Date", "toISOString", "variables", "createTemplate", "textContent", "newTemplate", "now", "getEmailStats", "messageId", "time", "sendBulkEmail", "emails", "success", "count", "length", "stripHtml", "html", "replace", "trim", "mapStatus", "toLowerCase", "testConnection", "getAccountInfo", "processWebhookEvent", "event", "MessageID", "toString", "eventPayload", "Payload", "getDeliveryStats", "fromDate", "toDate", "createContactList", "validateEmails", "valid", "invalid", "push", "initializeCRMTemplates", "templates", "template", "restURL", "message", "statusCode", "errorCode", "details", "field"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "80bf438802c1d0162772a6c14b7ce15b169a3aa9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rrpsqdt2d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rrpsqdt2d();
cov_2rrpsqdt2d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2rrpsqdt2d().f[0]++;
  cov_2rrpsqdt2d().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2rrpsqdt2d().s[3]++;
_export(exports, {
  get MailjetConfigurationError() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[1]++;
    cov_2rrpsqdt2d().s[4]++;
    return MailjetConfigurationError;
  },
  get MailjetError() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[2]++;
    cov_2rrpsqdt2d().s[5]++;
    return MailjetError;
  },
  get MailjetValidationError() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[3]++;
    cov_2rrpsqdt2d().s[6]++;
    return MailjetValidationError;
  },
  get default() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[4]++;
    cov_2rrpsqdt2d().s[7]++;
    return _default;
  },
  get mailjetService() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[5]++;
    cov_2rrpsqdt2d().s[8]++;
    return mailjetService;
  }
});
const MAILJET_API_URL =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[9]++, "https://api.mailjet.com/v3.1");
const MAILJET_REST_API_URL =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[10]++, "https://api.mailjet.com/v3/REST");
// Add environment variable support with validation
// Security: Server-side only credentials, never expose via NEXT_PUBLIC_
const MAILJET_API_KEY =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[11]++,
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[0][0]++, process.env.MAILJET_API_KEY) ||
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[0][1]++, ""));
const MAILJET_SECRET_KEY =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[12]++,
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[1][0]++, process.env.MAILJET_SECRET_KEY) ||
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[1][1]++, ""));
const MAILJET_FROM_EMAIL =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[13]++,
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[2][0]++, process.env.MAILJET_FROM_EMAIL) ||
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[2][1]++, "noreply@company.com"));
const MAILJET_FROM_NAME =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[14]++,
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[3][0]++, process.env.MAILJET_FROM_NAME) ||
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[3][1]++, "CRM System"));
// Validate required environment variables
/* istanbul ignore next */
cov_2rrpsqdt2d().s[15]++;
if (
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[5][0]++, !MAILJET_API_KEY) ||
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[5][1]++, !MAILJET_SECRET_KEY)) {
  /* istanbul ignore next */
  cov_2rrpsqdt2d().b[4][0]++;
} // Silent warning - Mailjet API credentials not configured
else
/* istanbul ignore next */
{
  cov_2rrpsqdt2d().b[4][1]++;
}
cov_2rrpsqdt2d().s[16]++;
const makeRequest = async (url, options =
/* istanbul ignore next */
(cov_2rrpsqdt2d().b[6][0]++, {})) => {
  /* istanbul ignore next */
  cov_2rrpsqdt2d().f[6]++;
  const response =
  /* istanbul ignore next */
  (cov_2rrpsqdt2d().s[17]++, await fetch(url, {
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options.headers
    }
  }));
  /* istanbul ignore next */
  cov_2rrpsqdt2d().s[18]++;
  if (!response.ok) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().b[7][0]++;
    cov_2rrpsqdt2d().s[19]++;
    throw new Error(`HTTP error! status: ${response.status}`);
  } else
  /* istanbul ignore next */
  {
    cov_2rrpsqdt2d().b[7][1]++;
  }
  cov_2rrpsqdt2d().s[20]++;
  return response.json();
};
class MailjetService {
  configure(apiKey, secretKey) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[7]++;
    cov_2rrpsqdt2d().s[21]++;
    this.apiKey = apiKey;
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[22]++;
    this.secretKey = secretKey;
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[23]++;
    this.isConfigured = true;
  }
  isReady() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[8]++;
    cov_2rrpsqdt2d().s[24]++;
    return /* istanbul ignore next */(cov_2rrpsqdt2d().b[8][0]++, this.isConfigured) &&
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().b[8][1]++, !!this.apiKey) &&
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().b[8][2]++, !!this.secretKey);
  }
  getDefaultSender() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[9]++;
    cov_2rrpsqdt2d().s[25]++;
    return {
      email: MAILJET_FROM_EMAIL,
      name: MAILJET_FROM_NAME
    };
  }
  getAuthHeaders() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[10]++;
    const credentials =
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().s[26]++, btoa(`${this.apiKey}:${this.secretKey}`));
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[27]++;
    return {
      Authorization: `Basic ${credentials}`,
      "Content-Type": "application/json"
    };
  }
  async retryRequest(requestFn, context) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[11]++;
    cov_2rrpsqdt2d().s[28]++;
    try {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().s[29]++;
      return await requestFn();
    } catch (error) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().s[30]++;
      // Silent error handling - Operation failed
      throw error;
    }
  }
  validateEmail(email) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[12]++;
    const emailRegex =
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().s[31]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[32]++;
    return emailRegex.test(email);
  }
  async sendEmail(options) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[13]++;
    cov_2rrpsqdt2d().s[33]++;
    if (!this.isReady()) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[9][0]++;
      cov_2rrpsqdt2d().s[34]++;
      throw new Error("Mailjet service not configured");
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[9][1]++;
    }
    // Mock implementation for now
    // Silent logging - Sending email
    cov_2rrpsqdt2d().s[35]++;
    return new Promise(resolve => {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().f[14]++;
      cov_2rrpsqdt2d().s[36]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_2rrpsqdt2d().f[15]++;
        cov_2rrpsqdt2d().s[37]++;
        resolve({
          Messages: [{
            Status: "success",
            CustomID: options.customId,
            To: options.to,
            Cc: [],
            Bcc: []
          }]
        });
      }, 1000);
    });
  }
  async getTemplates() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[16]++;
    cov_2rrpsqdt2d().s[38]++;
    if (!this.isReady()) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[10][0]++;
      cov_2rrpsqdt2d().s[39]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[10][1]++;
    }
    // Mock templates
    cov_2rrpsqdt2d().s[40]++;
    return [{
      id: 1,
      name: "Welcome Email",
      subject: "Welcome to our platform!",
      htmlContent: "<h1>Welcome!</h1><p>Thank you for joining us.</p>",
      ownerType: "user",
      createdAt: new Date().toISOString(),
      variables: ["client_name", "company_name"]
    }, {
      id: 2,
      name: "Project Update",
      subject: "Project Update: {{project_name}}",
      htmlContent: "<h1>Project Update</h1><p>Your project {{project_name}} has been updated.</p>",
      ownerType: "user",
      createdAt: new Date().toISOString(),
      variables: ["project_name", "client_name"]
    }];
  }
  async createTemplate(name, subject, htmlContent, textContent) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[17]++;
    cov_2rrpsqdt2d().s[41]++;
    if (!this.isReady()) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[11][0]++;
      cov_2rrpsqdt2d().s[42]++;
      throw new Error("Mailjet service not configured");
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[11][1]++;
    }
    const newTemplate =
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().s[43]++, {
      id: Date.now(),
      name,
      subject,
      htmlContent,
      textContent,
      ownerType: "user",
      createdAt: new Date().toISOString(),
      variables: []
    });
    // Silent logging - Created template
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[44]++;
    return newTemplate;
  }
  async getEmailStats() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[18]++;
    cov_2rrpsqdt2d().s[45]++;
    if (!this.isReady()) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[12][0]++;
      cov_2rrpsqdt2d().s[46]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[12][1]++;
    }
    cov_2rrpsqdt2d().s[47]++;
    return [{
      messageId: "msg_001",
      email: "test@example.com",
      status: "sent",
      time: new Date().toISOString()
    }, {
      messageId: "msg_002",
      email: "user@example.com",
      status: "opened",
      time: new Date().toISOString()
    }];
  }
  async sendBulkEmail(emails) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[19]++;
    cov_2rrpsqdt2d().s[48]++;
    if (!this.isReady()) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[13][0]++;
      cov_2rrpsqdt2d().s[49]++;
      throw new Error("Mailjet service not configured");
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[13][1]++;
    }
    // Silent logging - Sending bulk emails
    cov_2rrpsqdt2d().s[50]++;
    return {
      success: true,
      count: emails.length
    };
  }
  stripHtml(html) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[20]++;
    cov_2rrpsqdt2d().s[51]++;
    return html.replace(/<[^>]*>/g, "").replace(/\s+/g, " ").trim();
  }
  mapStatus(status) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[21]++;
    cov_2rrpsqdt2d().s[52]++;
    return status.toLowerCase();
  }
  async testConnection() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[22]++;
    cov_2rrpsqdt2d().s[53]++;
    return this.isConfigured;
  }
  async getAccountInfo() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[23]++;
    cov_2rrpsqdt2d().s[54]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[14][0]++;
      cov_2rrpsqdt2d().s[55]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[14][1]++;
    }
    cov_2rrpsqdt2d().s[56]++;
    return {
      name: "Mock Account",
      email: this.getDefaultSender().email
    };
  }
  processWebhookEvent(event) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[24]++;
    cov_2rrpsqdt2d().s[57]++;
    try {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().s[58]++;
      if (
      /* istanbul ignore next */
      (cov_2rrpsqdt2d().b[16][0]++, !event) ||
      /* istanbul ignore next */
      (cov_2rrpsqdt2d().b[16][1]++, !event.email) ||
      /* istanbul ignore next */
      (cov_2rrpsqdt2d().b[16][2]++, !event.event)) {
        /* istanbul ignore next */
        cov_2rrpsqdt2d().b[15][0]++;
        cov_2rrpsqdt2d().s[59]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_2rrpsqdt2d().b[15][1]++;
      }
      cov_2rrpsqdt2d().s[60]++;
      return {
        messageId:
        /* istanbul ignore next */
        (cov_2rrpsqdt2d().b[17][0]++, event.MessageID?.toString()) ||
        /* istanbul ignore next */
        (cov_2rrpsqdt2d().b[17][1]++, ""),
        email: event.email,
        status: this.mapStatus(event.event),
        time: event.time ?
        /* istanbul ignore next */
        (cov_2rrpsqdt2d().b[18][0]++, new Date(event.time * 1000).toISOString()) :
        /* istanbul ignore next */
        (cov_2rrpsqdt2d().b[18][1]++, new Date().toISOString()),
        eventPayload: event.Payload
      };
    } catch (error) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().s[61]++;
      // Silent error handling - Error processing webhook event
      return null;
    }
  }
  async getDeliveryStats(fromDate, toDate) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[25]++;
    cov_2rrpsqdt2d().s[62]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[19][0]++;
      cov_2rrpsqdt2d().s[63]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[19][1]++;
    }
    cov_2rrpsqdt2d().s[64]++;
    return [];
  }
  async createContactList(name) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[26]++;
    cov_2rrpsqdt2d().s[65]++;
    if (!this.isConfigured) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().b[20][0]++;
      cov_2rrpsqdt2d().s[66]++;
      throw new Error("Mailjet not configured");
    } else
    /* istanbul ignore next */
    {
      cov_2rrpsqdt2d().b[20][1]++;
    }
    cov_2rrpsqdt2d().s[67]++;
    return {
      id: Date.now(),
      name
    };
  }
  async validateEmails(emails) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[27]++;
    const valid =
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().s[68]++, []);
    const invalid =
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().s[69]++, []);
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[70]++;
    for (const email of emails) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().s[71]++;
      if (this.validateEmail(email)) {
        /* istanbul ignore next */
        cov_2rrpsqdt2d().b[21][0]++;
        cov_2rrpsqdt2d().s[72]++;
        valid.push(email);
      } else {
        /* istanbul ignore next */
        cov_2rrpsqdt2d().b[21][1]++;
        cov_2rrpsqdt2d().s[73]++;
        invalid.push(email);
      }
    }
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[74]++;
    return {
      valid,
      invalid
    };
  }
  // Predefined email templates for CRM
  async initializeCRMTemplates() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[28]++;
    const templates =
    /* istanbul ignore next */
    (cov_2rrpsqdt2d().s[75]++, [{
      name: "Welcome Client",
      subject: "Welcome to {{company_name}}!",
      htmlContent: `
          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">
            <h1 style=\"color: #3b82f6;\">Welcome {{client_name}}!</h1>
            <p>Thank you for choosing {{company_name}}. We're excited to work with you on your upcoming project.</p>
            <p>Your dedicated account manager is {{account_manager}} and they will be in touch shortly to discuss next steps.</p>
            <p>If you have any questions, please don't hesitate to reach out.</p>
            <p>Best regards,<br>The {{company_name}} Team</p>
          </div>
        `
    }, {
      name: "Project Update",
      subject: "Project Update: {{project_name}}",
      htmlContent: `
          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">
            <h1 style=\"color: #3b82f6;\">Project Update</h1>
            <p>Hi {{client_name}},</p>
            <p>Here's an update on your project: <strong>{{project_name}}</strong></p>
            <p><strong>Status:</strong> {{project_status}}</p>
            <p><strong>Progress:</strong> {{progress_percentage}}% complete</p>
            <p>{{update_message}}</p>
            <p>Next milestone: {{next_milestone}}</p>
            <p>Best regards,<br>{{account_manager}}</p>
          </div>
        `
    }, {
      name: "Invoice Notification",
      subject: "Invoice {{invoice_number}} from {{company_name}}",
      htmlContent: `
          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">
            <h1 style=\"color: #3b82f6;\">Invoice {{invoice_number}}</h1>
            <p>Hi {{client_name}},</p>
            <p>Please find attached invoice {{invoice_number}} for the amount of {{invoice_amount}}.</p>
            <p><strong>Due Date:</strong> {{due_date}}</p>
            <p>You can pay this invoice online by clicking the link below:</p>
            <a href=\"{{payment_link}}\" style=\"background: #3b82f6; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;\">Pay Invoice</a>
            <p>Thank you for your business!</p>
            <p>Best regards,<br>{{company_name}} Billing</p>
          </div>
        `
    }, {
      name: "Meeting Reminder",
      subject: "Meeting Reminder: {{meeting_title}}",
      htmlContent: `
          <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;\">
            <h1 style=\"color: #3b82f6;\">Meeting Reminder</h1>
            <p>Hi {{client_name}},</p>
            <p>This is a reminder about our upcoming meeting:</p>
            <p><strong>Title:</strong> {{meeting_title}}</p>
            <p><strong>Date:</strong> {{meeting_date}}</p>
            <p><strong>Time:</strong> {{meeting_time}}</p>
            <p><strong>Location:</strong> {{meeting_location}}</p>
            <p>{{meeting_agenda}}</p>
            <p>Looking forward to speaking with you!</p>
            <p>Best regards,<br>{{account_manager}}</p>
          </div>
        `
    }]);
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[76]++;
    for (const template of templates) {
      /* istanbul ignore next */
      cov_2rrpsqdt2d().s[77]++;
      try {
        /* istanbul ignore next */
        cov_2rrpsqdt2d().s[78]++;
        await this.createTemplate(template.name, template.subject, template.htmlContent);
      } catch (error) {
        // Silent logging - Template may already exist
      }
    }
  }
  constructor() {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[29]++;
    cov_2rrpsqdt2d().s[79]++;
    this.apiKey = "";
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[80]++;
    this.secretKey = "";
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[81]++;
    this.isConfigured = false;
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[82]++;
    this.restURL = MAILJET_REST_API_URL;
  }
}
class MailjetError extends Error {
  constructor(message, statusCode, errorCode, details) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[30]++;
    cov_2rrpsqdt2d().s[83]++;
    super(message), this.statusCode = statusCode, this.errorCode = errorCode, this.details = details;
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[84]++;
    this.name = "MailjetError";
  }
}
class MailjetConfigurationError extends MailjetError {
  constructor(message) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[31]++;
    cov_2rrpsqdt2d().s[85]++;
    super(message, 0, "CONFIGURATION_ERROR");
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[86]++;
    this.name = "MailjetConfigurationError";
  }
}
class MailjetValidationError extends MailjetError {
  constructor(message, field) {
    /* istanbul ignore next */
    cov_2rrpsqdt2d().f[32]++;
    cov_2rrpsqdt2d().s[87]++;
    super(message, 400, "VALIDATION_ERROR", {
      field
    });
    /* istanbul ignore next */
    cov_2rrpsqdt2d().s[88]++;
    this.name = "MailjetValidationError";
  }
}
const mailjetService =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[89]++, new MailjetService());
const _default =
/* istanbul ignore next */
(cov_2rrpsqdt2d().s[90]++, mailjetService);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,