4288a6c3db8a39f67243fab4879aef41
"use strict";

/* istanbul ignore next */
function cov_1vli5znnne() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\security.ts";
  var hash = "369551cdcb33cd39f866f84cb37344f7fb8ebf3b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\security.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 81,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 26
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 29
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 26
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 42
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 34
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 34
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 28
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 26
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 32
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 27
        }
      },
      "20": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 28
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "22": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 33
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 31
        }
      },
      "24": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 34
        }
      },
      "25": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 40
        }
      },
      "26": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "27": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 83,
          column: 1
        }
      },
      "28": {
        start: {
          line: 84,
          column: 20
        },
        end: {
          line: 84,
          column: 43
        }
      },
      "29": {
        start: {
          line: 85,
          column: 20
        },
        end: {
          line: 85,
          column: 43
        }
      },
      "30": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "31": {
        start: {
          line: 87,
          column: 39
        },
        end: {
          line: 87,
          column: 51
        }
      },
      "32": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 88,
          column: 41
        }
      },
      "33": {
        start: {
          line: 89,
          column: 27
        },
        end: {
          line: 89,
          column: 40
        }
      },
      "34": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 92,
          column: 20
        }
      },
      "35": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 66
        }
      },
      "36": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "37": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 19
        }
      },
      "38": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "39": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 101,
          column: 10
        }
      },
      "40": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 53
        }
      },
      "41": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "42": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 30
        }
      },
      "43": {
        start: {
          line: 107,
          column: 17
        },
        end: {
          line: 109,
          column: 5
        }
      },
      "44": {
        start: {
          line: 110,
          column: 32
        },
        end: {
          line: 110,
          column: 88
        }
      },
      "45": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "46": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "47": {
        start: {
          line: 113,
          column: 23
        },
        end: {
          line: 113,
          column: 95
        }
      },
      "48": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "49": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 57
        }
      },
      "50": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 39
        }
      },
      "51": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 25
        }
      },
      "52": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "53": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 31
        }
      },
      "54": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 18
        }
      },
      "55": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 20
        }
      },
      "56": {
        start: {
          line: 129,
          column: 0
        },
        end: {
          line: 133,
          column: 1
        }
      },
      "57": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "58": {
        start: {
          line: 130,
          column: 45
        },
        end: {
          line: 130,
          column: 92
        }
      },
      "59": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 45
        }
      },
      "60": {
        start: {
          line: 134,
          column: 19
        },
        end: {
          line: 136,
          column: 1
        }
      },
      "61": {
        start: {
          line: 137,
          column: 20
        },
        end: {
          line: 140,
          column: 2
        }
      },
      "62": {
        start: {
          line: 141,
          column: 26
        },
        end: {
          line: 178,
          column: 1
        }
      },
      "63": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "64": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 18
        }
      },
      "65": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "66": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 52
        }
      },
      "67": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 177,
          column: 7
        }
      },
      "68": {
        start: {
          line: 179,
          column: 21
        },
        end: {
          line: 243,
          column: 1
        }
      },
      "69": {
        start: {
          line: 180,
          column: 4
        },
        end: {
          line: 182,
          column: 5
        }
      },
      "70": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 18
        }
      },
      "71": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "72": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 185,
          column: 95
        }
      },
      "73": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 242,
          column: 7
        }
      },
      "74": {
        start: {
          line: 244,
          column: 19
        },
        end: {
          line: 254,
          column: 1
        }
      },
      "75": {
        start: {
          line: 245,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "76": {
        start: {
          line: 246,
          column: 23
        },
        end: {
          line: 246,
          column: 35
        }
      },
      "77": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 250,
          column: 36
        }
      },
      "78": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 21
        }
      },
      "79": {
        start: {
          line: 255,
          column: 21
        },
        end: {
          line: 258,
          column: 1
        }
      },
      "80": {
        start: {
          line: 256,
          column: 23
        },
        end: {
          line: 256,
          column: 51
        }
      },
      "81": {
        start: {
          line: 257,
          column: 4
        },
        end: {
          line: 257,
          column: 57
        }
      },
      "82": {
        start: {
          line: 259,
          column: 33
        },
        end: {
          line: 284,
          column: 1
        }
      },
      "83": {
        start: {
          line: 260,
          column: 19
        },
        end: {
          line: 260,
          column: 68
        }
      },
      "84": {
        start: {
          line: 261,
          column: 4
        },
        end: {
          line: 271,
          column: 5
        }
      },
      "85": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 270,
          column: 10
        }
      },
      "86": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 273,
          column: 17
        }
      },
      "87": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 274,
          column: 41
        }
      },
      "88": {
        start: {
          line: 274,
          column: 30
        },
        end: {
          line: 274,
          column: 41
        }
      },
      "89": {
        start: {
          line: 275,
          column: 4
        },
        end: {
          line: 275,
          column: 43
        }
      },
      "90": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 275,
          column: 43
        }
      },
      "91": {
        start: {
          line: 276,
          column: 4
        },
        end: {
          line: 276,
          column: 43
        }
      },
      "92": {
        start: {
          line: 276,
          column: 32
        },
        end: {
          line: 276,
          column: 43
        }
      },
      "93": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 277,
          column: 40
        }
      },
      "94": {
        start: {
          line: 277,
          column: 29
        },
        end: {
          line: 277,
          column: 40
        }
      },
      "95": {
        start: {
          line: 278,
          column: 4
        },
        end: {
          line: 278,
          column: 73
        }
      },
      "96": {
        start: {
          line: 278,
          column: 62
        },
        end: {
          line: 278,
          column: 73
        }
      },
      "97": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 283,
          column: 6
        }
      },
      "98": {
        start: {
          line: 285,
          column: 26
        },
        end: {
          line: 296,
          column: 1
        }
      },
      "99": {
        start: {
          line: 286,
          column: 18
        },
        end: {
          line: 286,
          column: 36
        }
      },
      "100": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 294,
          column: 5
        }
      },
      "101": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 38
        }
      },
      "102": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "103": {
        start: {
          line: 291,
          column: 20
        },
        end: {
          line: 291,
          column: 21
        }
      },
      "104": {
        start: {
          line: 292,
          column: 12
        },
        end: {
          line: 292,
          column: 55
        }
      },
      "105": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 295,
          column: 82
        }
      },
      "106": {
        start: {
          line: 295,
          column: 37
        },
        end: {
          line: 295,
          column: 71
        }
      },
      "107": {
        start: {
          line: 297,
          column: 28
        },
        end: {
          line: 304,
          column: 1
        }
      },
      "108": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "109": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 21
        }
      },
      "110": {
        start: {
          line: 302,
          column: 23
        },
        end: {
          line: 302,
          column: 40
        }
      },
      "111": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 303,
          column: 34
        }
      },
      "112": {
        start: {
          line: 305,
          column: 28
        },
        end: {
          line: 314,
          column: 1
        }
      },
      "113": {
        start: {
          line: 306,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "114": {
        start: {
          line: 307,
          column: 8
        },
        end: {
          line: 307,
          column: 18
        }
      },
      "115": {
        start: {
          line: 310,
          column: 4
        },
        end: {
          line: 313,
          column: 5
        }
      },
      "116": {
        start: {
          line: 315,
          column: 27
        },
        end: {
          line: 368,
          column: 1
        }
      },
      "117": {
        start: {
          line: 316,
          column: 19
        },
        end: {
          line: 316,
          column: 21
        }
      },
      "118": {
        start: {
          line: 317,
          column: 20
        },
        end: {
          line: 317,
          column: 36
        }
      },
      "119": {
        start: {
          line: 319,
          column: 25
        },
        end: {
          line: 327,
          column: 5
        }
      },
      "120": {
        start: {
          line: 328,
          column: 4
        },
        end: {
          line: 330,
          column: 5
        }
      },
      "121": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 56
        }
      },
      "122": {
        start: {
          line: 331,
          column: 4
        },
        end: {
          line: 333,
          column: 5
        }
      },
      "123": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 45
        }
      },
      "124": {
        start: {
          line: 335,
          column: 22
        },
        end: {
          line: 335,
          column: 63
        }
      },
      "125": {
        start: {
          line: 336,
          column: 24
        },
        end: {
          line: 359,
          column: 5
        }
      },
      "126": {
        start: {
          line: 360,
          column: 31
        },
        end: {
          line: 360,
          column: 53
        }
      },
      "127": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 363,
          column: 5
        }
      },
      "128": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 362,
          column: 63
        }
      },
      "129": {
        start: {
          line: 364,
          column: 4
        },
        end: {
          line: 367,
          column: 6
        }
      },
      "130": {
        start: {
          line: 369,
          column: 19
        },
        end: {
          line: 376,
          column: 1
        }
      },
      "131": {
        start: {
          line: 370,
          column: 4
        },
        end: {
          line: 372,
          column: 5
        }
      },
      "132": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 371,
          column: 18
        }
      },
      "133": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 45
        }
      },
      "134": {
        start: {
          line: 374,
          column: 4
        },
        end: {
          line: 374,
          column: 27
        }
      },
      "135": {
        start: {
          line: 375,
          column: 4
        },
        end: {
          line: 375,
          column: 25
        }
      },
      "136": {
        start: {
          line: 377,
          column: 35
        },
        end: {
          line: 393,
          column: 1
        }
      },
      "137": {
        start: {
          line: 378,
          column: 18
        },
        end: {
          line: 378,
          column: 82
        }
      },
      "138": {
        start: {
          line: 379,
          column: 17
        },
        end: {
          line: 379,
          column: 19
        }
      },
      "139": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "140": {
        start: {
          line: 381,
          column: 22
        },
        end: {
          line: 381,
          column: 44
        }
      },
      "141": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 382,
          column: 38
        }
      },
      "142": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 385,
          column: 9
        }
      },
      "143": {
        start: {
          line: 383,
          column: 20
        },
        end: {
          line: 383,
          column: 21
        }
      },
      "144": {
        start: {
          line: 384,
          column: 12
        },
        end: {
          line: 384,
          column: 53
        }
      },
      "145": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 390,
          column: 9
        }
      },
      "146": {
        start: {
          line: 388,
          column: 20
        },
        end: {
          line: 388,
          column: 21
        }
      },
      "147": {
        start: {
          line: 389,
          column: 12
        },
        end: {
          line: 389,
          column: 70
        }
      },
      "148": {
        start: {
          line: 392,
          column: 4
        },
        end: {
          line: 392,
          column: 18
        }
      },
      "149": {
        start: {
          line: 395,
          column: 30
        },
        end: {
          line: 405,
          column: 4
        }
      },
      "150": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 398,
          column: 5
        }
      },
      "151": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 397,
          column: 68
        }
      },
      "152": {
        start: {
          line: 399,
          column: 4
        },
        end: {
          line: 399,
          column: 52
        }
      },
      "153": {
        start: {
          line: 401,
          column: 4
        },
        end: {
          line: 403,
          column: 5
        }
      },
      "154": {
        start: {
          line: 402,
          column: 8
        },
        end: {
          line: 402,
          column: 80
        }
      },
      "155": {
        start: {
          line: 404,
          column: 4
        },
        end: {
          line: 404,
          column: 52
        }
      },
      "156": {
        start: {
          line: 406,
          column: 22
        },
        end: {
          line: 421,
          column: 1
        }
      },
      "157": {
        start: {
          line: 407,
          column: 4
        },
        end: {
          line: 420,
          column: 5
        }
      },
      "158": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 412,
          column: 11
        }
      },
      "159": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 414,
          column: 84
        }
      },
      "160": {
        start: {
          line: 416,
          column: 8
        },
        end: {
          line: 418,
          column: 9
        }
      },
      "161": {
        start: {
          line: 417,
          column: 12
        },
        end: {
          line: 417,
          column: 62
        }
      },
      "162": {
        start: {
          line: 419,
          column: 8
        },
        end: {
          line: 419,
          column: 28
        }
      },
      "163": {
        start: {
          line: 422,
          column: 22
        },
        end: {
          line: 452,
          column: 1
        }
      },
      "164": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 451,
          column: 5
        }
      },
      "165": {
        start: {
          line: 425,
          column: 8
        },
        end: {
          line: 428,
          column: 9
        }
      },
      "166": {
        start: {
          line: 426,
          column: 27
        },
        end: {
          line: 426,
          column: 94
        }
      },
      "167": {
        start: {
          line: 427,
          column: 12
        },
        end: {
          line: 427,
          column: 33
        }
      },
      "168": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 440,
          column: 9
        }
      },
      "169": {
        start: {
          line: 431,
          column: 12
        },
        end: {
          line: 439,
          column: 13
        }
      },
      "170": {
        start: {
          line: 432,
          column: 32
        },
        end: {
          line: 432,
          column: 53
        }
      },
      "171": {
        start: {
          line: 433,
          column: 30
        },
        end: {
          line: 433,
          column: 48
        }
      },
      "172": {
        start: {
          line: 434,
          column: 16
        },
        end: {
          line: 436,
          column: 17
        }
      },
      "173": {
        start: {
          line: 435,
          column: 20
        },
        end: {
          line: 435,
          column: 36
        }
      },
      "174": {
        start: {
          line: 442,
          column: 8
        },
        end: {
          line: 447,
          column: 9
        }
      },
      "175": {
        start: {
          line: 443,
          column: 12
        },
        end: {
          line: 443,
          column: 41
        }
      },
      "176": {
        start: {
          line: 445,
          column: 12
        },
        end: {
          line: 446,
          column: 13
        }
      },
      "177": {
        start: {
          line: 449,
          column: 8
        },
        end: {
          line: 449,
          column: 51
        }
      },
      "178": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 450,
          column: 53
        }
      },
      "179": {
        start: {
          line: 453,
          column: 26
        },
        end: {
          line: 459,
          column: 1
        }
      },
      "180": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 94
        }
      },
      "181": {
        start: {
          line: 455,
          column: 4
        },
        end: {
          line: 457,
          column: 5
        }
      },
      "182": {
        start: {
          line: 456,
          column: 8
        },
        end: {
          line: 456,
          column: 58
        }
      },
      "183": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 458,
          column: 24
        }
      },
      "184": {
        start: {
          line: 460,
          column: 26
        },
        end: {
          line: 478,
          column: 1
        }
      },
      "185": {
        start: {
          line: 461,
          column: 4
        },
        end: {
          line: 461,
          column: 94
        }
      },
      "186": {
        start: {
          line: 462,
          column: 4
        },
        end: {
          line: 472,
          column: 5
        }
      },
      "187": {
        start: {
          line: 463,
          column: 8
        },
        end: {
          line: 471,
          column: 9
        }
      },
      "188": {
        start: {
          line: 464,
          column: 28
        },
        end: {
          line: 464,
          column: 49
        }
      },
      "189": {
        start: {
          line: 465,
          column: 26
        },
        end: {
          line: 465,
          column: 44
        }
      },
      "190": {
        start: {
          line: 466,
          column: 12
        },
        end: {
          line: 468,
          column: 13
        }
      },
      "191": {
        start: {
          line: 467,
          column: 16
        },
        end: {
          line: 467,
          column: 32
        }
      },
      "192": {
        start: {
          line: 473,
          column: 4
        },
        end: {
          line: 477,
          column: 5
        }
      },
      "193": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 474,
          column: 37
        }
      },
      "194": {
        start: {
          line: 476,
          column: 8
        },
        end: {
          line: 476,
          column: 31
        }
      },
      "195": {
        start: {
          line: 479,
          column: 27
        },
        end: {
          line: 493,
          column: 1
        }
      },
      "196": {
        start: {
          line: 480,
          column: 4
        },
        end: {
          line: 492,
          column: 5
        }
      },
      "197": {
        start: {
          line: 482,
          column: 8
        },
        end: {
          line: 487,
          column: 9
        }
      },
      "198": {
        start: {
          line: 484,
          column: 29
        },
        end: {
          line: 484,
          column: 77
        }
      },
      "199": {
        start: {
          line: 485,
          column: 25
        },
        end: {
          line: 485,
          column: 46
        }
      },
      "200": {
        start: {
          line: 486,
          column: 12
        },
        end: {
          line: 486,
          column: 40
        }
      },
      "201": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 32
        }
      },
      "202": {
        start: {
          line: 491,
          column: 8
        },
        end: {
          line: 491,
          column: 25
        }
      },
      "203": {
        start: {
          line: 494,
          column: 32
        },
        end: {
          line: 538,
          column: 1
        }
      },
      "204": {
        start: {
          line: 495,
          column: 19
        },
        end: {
          line: 495,
          column: 21
        }
      },
      "205": {
        start: {
          line: 496,
          column: 4
        },
        end: {
          line: 502,
          column: 5
        }
      },
      "206": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 497,
          column: 54
        }
      },
      "207": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 501,
          column: 10
        }
      },
      "208": {
        start: {
          line: 503,
          column: 23
        },
        end: {
          line: 503,
          column: 30
        }
      },
      "209": {
        start: {
          line: 505,
          column: 27
        },
        end: {
          line: 509,
          column: 5
        }
      },
      "210": {
        start: {
          line: 510,
          column: 4
        },
        end: {
          line: 514,
          column: 5
        }
      },
      "211": {
        start: {
          line: 511,
          column: 8
        },
        end: {
          line: 513,
          column: 9
        }
      },
      "212": {
        start: {
          line: 512,
          column: 12
        },
        end: {
          line: 512,
          column: 69
        }
      },
      "213": {
        start: {
          line: 516,
          column: 4
        },
        end: {
          line: 518,
          column: 5
        }
      },
      "214": {
        start: {
          line: 517,
          column: 8
        },
        end: {
          line: 517,
          column: 62
        }
      },
      "215": {
        start: {
          line: 520,
          column: 4
        },
        end: {
          line: 522,
          column: 5
        }
      },
      "216": {
        start: {
          line: 521,
          column: 8
        },
        end: {
          line: 521,
          column: 69
        }
      },
      "217": {
        start: {
          line: 524,
          column: 30
        },
        end: {
          line: 530,
          column: 5
        }
      },
      "218": {
        start: {
          line: 531,
          column: 4
        },
        end: {
          line: 533,
          column: 5
        }
      },
      "219": {
        start: {
          line: 532,
          column: 8
        },
        end: {
          line: 532,
          column: 40
        }
      },
      "220": {
        start: {
          line: 534,
          column: 4
        },
        end: {
          line: 537,
          column: 6
        }
      },
      "221": {
        start: {
          line: 539,
          column: 27
        },
        end: {
          line: 548,
          column: 1
        }
      },
      "222": {
        start: {
          line: 540,
          column: 4
        },
        end: {
          line: 547,
          column: 6
        }
      },
      "223": {
        start: {
          line: 549,
          column: 23
        },
        end: {
          line: 552,
          column: 1
        }
      },
      "224": {
        start: {
          line: 550,
          column: 16
        },
        end: {
          line: 550,
          column: 37
        }
      },
      "225": {
        start: {
          line: 551,
          column: 4
        },
        end: {
          line: 551,
          column: 38
        }
      },
      "226": {
        start: {
          line: 553,
          column: 25
        },
        end: {
          line: 574,
          column: 1
        }
      },
      "227": {
        start: {
          line: 554,
          column: 21
        },
        end: {
          line: 558,
          column: 5
        }
      },
      "228": {
        start: {
          line: 560,
          column: 4
        },
        end: {
          line: 560,
          column: 45
        }
      },
      "229": {
        start: {
          line: 562,
          column: 4
        },
        end: {
          line: 573,
          column: 5
        }
      },
      "230": {
        start: {
          line: 563,
          column: 8
        },
        end: {
          line: 572,
          column: 11
        }
      },
      "231": {
        start: {
          line: 571,
          column: 12
        },
        end: {
          line: 571,
          column: 65
        }
      },
      "232": {
        start: {
          line: 575,
          column: 24
        },
        end: {
          line: 588,
          column: 1
        }
      },
      "233": {
        start: {
          line: 577,
          column: 8
        },
        end: {
          line: 577,
          column: 42
        }
      },
      "234": {
        start: {
          line: 580,
          column: 8
        },
        end: {
          line: 580,
          column: 46
        }
      },
      "235": {
        start: {
          line: 583,
          column: 8
        },
        end: {
          line: 583,
          column: 40
        }
      },
      "236": {
        start: {
          line: 586,
          column: 8
        },
        end: {
          line: 586,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 22
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 25
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 22
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 38
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 30
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 24
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 28
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 24
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 31
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 29
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 66
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 27
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 69
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        loc: {
          start: {
            line: 72,
            column: 30
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 72
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 75,
            column: 4
          },
          end: {
            line: 75,
            column: 5
          }
        },
        loc: {
          start: {
            line: 75,
            column: 36
          },
          end: {
            line: 77,
            column: 5
          }
        },
        line: 75
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        loc: {
          start: {
            line: 78,
            column: 35
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 78
      },
      "24": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 86,
            column: 9
          },
          end: {
            line: 86,
            column: 33
          }
        },
        loc: {
          start: {
            line: 86,
            column: 47
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 86
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 90,
            column: 39
          },
          end: {
            line: 90,
            column: 40
          }
        },
        loc: {
          start: {
            line: 90,
            column: 61
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 90
      },
      "26": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 94,
            column: 9
          },
          end: {
            line: 94,
            column: 34
          }
        },
        loc: {
          start: {
            line: 94,
            column: 53
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 94
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 130,
            column: 27
          },
          end: {
            line: 130,
            column: 28
          }
        },
        loc: {
          start: {
            line: 130,
            column: 45
          },
          end: {
            line: 130,
            column: 92
          }
        },
        line: 130
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 130,
            column: 99
          },
          end: {
            line: 130,
            column: 100
          }
        },
        loc: {
          start: {
            line: 130,
            column: 109
          },
          end: {
            line: 132,
            column: 5
          }
        },
        line: 130
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 141,
            column: 26
          },
          end: {
            line: 141,
            column: 27
          }
        },
        loc: {
          start: {
            line: 141,
            column: 35
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 141
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 179,
            column: 21
          },
          end: {
            line: 179,
            column: 22
          }
        },
        loc: {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 179
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 244,
            column: 19
          },
          end: {
            line: 244,
            column: 20
          }
        },
        loc: {
          start: {
            line: 244,
            column: 26
          },
          end: {
            line: 254,
            column: 1
          }
        },
        line: 244
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 255,
            column: 21
          },
          end: {
            line: 255,
            column: 22
          }
        },
        loc: {
          start: {
            line: 255,
            column: 30
          },
          end: {
            line: 258,
            column: 1
          }
        },
        line: 255
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 259,
            column: 33
          },
          end: {
            line: 259,
            column: 34
          }
        },
        loc: {
          start: {
            line: 259,
            column: 45
          },
          end: {
            line: 284,
            column: 1
          }
        },
        line: 259
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 285,
            column: 26
          },
          end: {
            line: 285,
            column: 27
          }
        },
        loc: {
          start: {
            line: 285,
            column: 30
          },
          end: {
            line: 296,
            column: 1
          }
        },
        line: 285
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 295,
            column: 29
          },
          end: {
            line: 295,
            column: 30
          }
        },
        loc: {
          start: {
            line: 295,
            column: 37
          },
          end: {
            line: 295,
            column: 71
          }
        },
        line: 295
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 297,
            column: 28
          },
          end: {
            line: 297,
            column: 29
          }
        },
        loc: {
          start: {
            line: 297,
            column: 37
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 297
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 305,
            column: 28
          },
          end: {
            line: 305,
            column: 29
          }
        },
        loc: {
          start: {
            line: 305,
            column: 37
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 305
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 315,
            column: 27
          },
          end: {
            line: 315,
            column: 28
          }
        },
        loc: {
          start: {
            line: 315,
            column: 35
          },
          end: {
            line: 368,
            column: 1
          }
        },
        line: 315
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 369,
            column: 19
          },
          end: {
            line: 369,
            column: 20
          }
        },
        loc: {
          start: {
            line: 369,
            column: 27
          },
          end: {
            line: 376,
            column: 1
          }
        },
        line: 369
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 377,
            column: 35
          },
          end: {
            line: 377,
            column: 36
          }
        },
        loc: {
          start: {
            line: 377,
            column: 50
          },
          end: {
            line: 393,
            column: 1
          }
        },
        line: 377
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 395,
            column: 93
          },
          end: {
            line: 395,
            column: 94
          }
        },
        loc: {
          start: {
            line: 395,
            column: 97
          },
          end: {
            line: 400,
            column: 1
          }
        },
        line: 395
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 400,
            column: 50
          },
          end: {
            line: 400,
            column: 51
          }
        },
        loc: {
          start: {
            line: 400,
            column: 54
          },
          end: {
            line: 405,
            column: 1
          }
        },
        line: 400
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 406,
            column: 22
          },
          end: {
            line: 406,
            column: 23
          }
        },
        loc: {
          start: {
            line: 406,
            column: 38
          },
          end: {
            line: 421,
            column: 1
          }
        },
        line: 406
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 422,
            column: 22
          },
          end: {
            line: 422,
            column: 23
          }
        },
        loc: {
          start: {
            line: 422,
            column: 47
          },
          end: {
            line: 452,
            column: 1
          }
        },
        line: 422
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 453,
            column: 26
          },
          end: {
            line: 453,
            column: 27
          }
        },
        loc: {
          start: {
            line: 453,
            column: 36
          },
          end: {
            line: 459,
            column: 1
          }
        },
        line: 453
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 460,
            column: 26
          },
          end: {
            line: 460,
            column: 27
          }
        },
        loc: {
          start: {
            line: 460,
            column: 45
          },
          end: {
            line: 478,
            column: 1
          }
        },
        line: 460
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 479,
            column: 27
          },
          end: {
            line: 479,
            column: 28
          }
        },
        loc: {
          start: {
            line: 479,
            column: 37
          },
          end: {
            line: 493,
            column: 1
          }
        },
        line: 479
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 494,
            column: 32
          },
          end: {
            line: 494,
            column: 33
          }
        },
        loc: {
          start: {
            line: 494,
            column: 43
          },
          end: {
            line: 538,
            column: 1
          }
        },
        line: 494
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 539,
            column: 27
          },
          end: {
            line: 539,
            column: 28
          }
        },
        loc: {
          start: {
            line: 539,
            column: 31
          },
          end: {
            line: 548,
            column: 1
          }
        },
        line: 539
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 549,
            column: 23
          },
          end: {
            line: 549,
            column: 24
          }
        },
        loc: {
          start: {
            line: 549,
            column: 41
          },
          end: {
            line: 552,
            column: 1
          }
        },
        line: 549
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 553,
            column: 25
          },
          end: {
            line: 553,
            column: 26
          }
        },
        loc: {
          start: {
            line: 553,
            column: 34
          },
          end: {
            line: 574,
            column: 1
          }
        },
        line: 553
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 570,
            column: 17
          },
          end: {
            line: 570,
            column: 18
          }
        },
        loc: {
          start: {
            line: 570,
            column: 26
          },
          end: {
            line: 572,
            column: 9
          }
        },
        line: 570
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 576,
            column: 23
          },
          end: {
            line: 576,
            column: 24
          }
        },
        loc: {
          start: {
            line: 576,
            column: 32
          },
          end: {
            line: 578,
            column: 5
          }
        },
        line: 576
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 579,
            column: 21
          },
          end: {
            line: 579,
            column: 22
          }
        },
        loc: {
          start: {
            line: 579,
            column: 34
          },
          end: {
            line: 581,
            column: 5
          }
        },
        line: 579
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 582,
            column: 19
          },
          end: {
            line: 582,
            column: 20
          }
        },
        loc: {
          start: {
            line: 582,
            column: 28
          },
          end: {
            line: 584,
            column: 5
          }
        },
        line: 582
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 585,
            column: 23
          },
          end: {
            line: 585,
            column: 24
          }
        },
        loc: {
          start: {
            line: 585,
            column: 27
          },
          end: {
            line: 587,
            column: 5
          }
        },
        line: 585
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 4
          },
          end: {
            line: 87,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "1": {
        loc: {
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 29
          },
          end: {
            line: 91,
            column: 45
          }
        }, {
          start: {
            line: 91,
            column: 48
          },
          end: {
            line: 91,
            column: 65
          }
        }],
        line: 91
      },
      "2": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 97,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "3": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 20
          }
        }, {
          start: {
            line: 95,
            column: 24
          },
          end: {
            line: 95,
            column: 27
          }
        }, {
          start: {
            line: 95,
            column: 31
          },
          end: {
            line: 95,
            column: 45
          }
        }],
        line: 95
      },
      "4": {
        loc: {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 102,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 20
          }
        }, {
          start: {
            line: 98,
            column: 24
          },
          end: {
            line: 98,
            column: 47
          }
        }, {
          start: {
            line: 98,
            column: 51
          },
          end: {
            line: 98,
            column: 76
          }
        }],
        line: 98
      },
      "6": {
        loc: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 106,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "7": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: 104,
            column: 17
          },
          end: {
            line: 104,
            column: 31
          }
        }],
        line: 104
      },
      "8": {
        loc: {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 53
          }
        }, {
          start: {
            line: 110,
            column: 57
          },
          end: {
            line: 110,
            column: 88
          }
        }],
        line: 110
      },
      "9": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "10": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 29
          }
        }, {
          start: {
            line: 112,
            column: 33
          },
          end: {
            line: 112,
            column: 79
          }
        }],
        line: 112
      },
      "11": {
        loc: {
          start: {
            line: 113,
            column: 23
          },
          end: {
            line: 113,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 113,
            column: 47
          },
          end: {
            line: 113,
            column: 88
          }
        }, {
          start: {
            line: 113,
            column: 91
          },
          end: {
            line: 113,
            column: 95
          }
        }],
        line: 113
      },
      "12": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: 116,
            column: 19
          },
          end: {
            line: 118,
            column: 13
          }
        }],
        line: 114
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 114,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 16
          },
          end: {
            line: 114,
            column: 20
          }
        }, {
          start: {
            line: 114,
            column: 25
          },
          end: {
            line: 114,
            column: 33
          }
        }, {
          start: {
            line: 114,
            column: 37
          },
          end: {
            line: 114,
            column: 45
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 122
      },
      "15": {
        loc: {
          start: {
            line: 129,
            column: 0
          },
          end: {
            line: 133,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 0
          },
          end: {
            line: 133,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "16": {
        loc: {
          start: {
            line: 131,
            column: 20
          },
          end: {
            line: 131,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 20
          },
          end: {
            line: 131,
            column: 34
          }
        }, {
          start: {
            line: 131,
            column: 38
          },
          end: {
            line: 131,
            column: 44
          }
        }],
        line: 131
      },
      "17": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 144,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "18": {
        loc: {
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 4
          },
          end: {
            line: 148,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "19": {
        loc: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      },
      "20": {
        loc: {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 186,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "21": {
        loc: {
          start: {
            line: 257,
            column: 11
          },
          end: {
            line: 257,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 257,
            column: 11
          },
          end: {
            line: 257,
            column: 33
          }
        }, {
          start: {
            line: 257,
            column: 37
          },
          end: {
            line: 257,
            column: 56
          }
        }],
        line: 257
      },
      "22": {
        loc: {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 271,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 261
      },
      "23": {
        loc: {
          start: {
            line: 264,
            column: 20
          },
          end: {
            line: 268,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 264,
            column: 35
          },
          end: {
            line: 266,
            column: 13
          }
        }, {
          start: {
            line: 266,
            column: 16
          },
          end: {
            line: 268,
            column: 13
          }
        }],
        line: 264
      },
      "24": {
        loc: {
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 4
          },
          end: {
            line: 274,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "25": {
        loc: {
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 4
          },
          end: {
            line: 275,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "26": {
        loc: {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 276,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      },
      "27": {
        loc: {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 277
      },
      "28": {
        loc: {
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 73
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 4
          },
          end: {
            line: 278,
            column: 73
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "29": {
        loc: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 294,
            column: 5
          }
        }, {
          start: {
            line: 289,
            column: 11
          },
          end: {
            line: 294,
            column: 5
          }
        }],
        line: 287
      },
      "30": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 287,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 287,
            column: 37
          }
        }, {
          start: {
            line: 287,
            column: 41
          },
          end: {
            line: 287,
            column: 63
          }
        }],
        line: 287
      },
      "31": {
        loc: {
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 4
          },
          end: {
            line: 300,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "32": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 298,
            column: 43
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 298,
            column: 14
          }
        }, {
          start: {
            line: 298,
            column: 18
          },
          end: {
            line: 298,
            column: 43
          }
        }],
        line: 298
      },
      "33": {
        loc: {
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 4
          },
          end: {
            line: 308,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "34": {
        loc: {
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 328,
            column: 4
          },
          end: {
            line: 330,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 328
      },
      "35": {
        loc: {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 333,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "36": {
        loc: {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 363,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 361
      },
      "37": {
        loc: {
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 361,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 361,
            column: 8
          },
          end: {
            line: 361,
            column: 26
          }
        }, {
          start: {
            line: 361,
            column: 30
          },
          end: {
            line: 361,
            column: 39
          }
        }, {
          start: {
            line: 361,
            column: 43
          },
          end: {
            line: 361,
            column: 82
          }
        }],
        line: 361
      },
      "38": {
        loc: {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 372,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 370
      },
      "39": {
        loc: {
          start: {
            line: 377,
            column: 36
          },
          end: {
            line: 377,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 377,
            column: 45
          },
          end: {
            line: 377,
            column: 47
          }
        }],
        line: 377
      },
      "40": {
        loc: {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 391,
            column: 5
          }
        }, {
          start: {
            line: 386,
            column: 11
          },
          end: {
            line: 391,
            column: 5
          }
        }],
        line: 380
      },
      "41": {
        loc: {
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 380,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 380,
            column: 8
          },
          end: {
            line: 380,
            column: 37
          }
        }, {
          start: {
            line: 380,
            column: 41
          },
          end: {
            line: 380,
            column: 63
          }
        }],
        line: 380
      },
      "42": {
        loc: {
          start: {
            line: 395,
            column: 30
          },
          end: {
            line: 405,
            column: 4
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 395,
            column: 62
          },
          end: {
            line: 400,
            column: 4
          }
        }, {
          start: {
            line: 400,
            column: 7
          },
          end: {
            line: 405,
            column: 4
          }
        }],
        line: 395
      },
      "43": {
        loc: {
          start: {
            line: 395,
            column: 62
          },
          end: {
            line: 400,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 395,
            column: 62
          },
          end: {
            line: 395,
            column: 88
          }
        }, {
          start: {
            line: 395,
            column: 92
          },
          end: {
            line: 400,
            column: 4
          }
        }],
        line: 395
      },
      "44": {
        loc: {
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 396,
            column: 4
          },
          end: {
            line: 398,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 396
      },
      "45": {
        loc: {
          start: {
            line: 400,
            column: 7
          },
          end: {
            line: 405,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 400,
            column: 7
          },
          end: {
            line: 400,
            column: 45
          }
        }, {
          start: {
            line: 400,
            column: 49
          },
          end: {
            line: 405,
            column: 4
          }
        }],
        line: 400
      },
      "46": {
        loc: {
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 401,
            column: 4
          },
          end: {
            line: 403,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 401
      },
      "47": {
        loc: {
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 8
          },
          end: {
            line: 418,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "48": {
        loc: {
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 416,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 416,
            column: 41
          }
        }, {
          start: {
            line: 416,
            column: 45
          },
          end: {
            line: 416,
            column: 58
          }
        }],
        line: 416
      },
      "49": {
        loc: {
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 425,
            column: 8
          },
          end: {
            line: 428,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 425
      },
      "50": {
        loc: {
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 440,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 430,
            column: 8
          },
          end: {
            line: 440,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 430
      },
      "51": {
        loc: {
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 430,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 430,
            column: 12
          },
          end: {
            line: 430,
            column: 41
          }
        }, {
          start: {
            line: 430,
            column: 45
          },
          end: {
            line: 430,
            column: 58
          }
        }],
        line: 430
      },
      "52": {
        loc: {
          start: {
            line: 434,
            column: 16
          },
          end: {
            line: 436,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 434,
            column: 16
          },
          end: {
            line: 436,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 434
      },
      "53": {
        loc: {
          start: {
            line: 434,
            column: 20
          },
          end: {
            line: 434,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 434,
            column: 20
          },
          end: {
            line: 434,
            column: 38
          }
        }, {
          start: {
            line: 434,
            column: 42
          },
          end: {
            line: 434,
            column: 76
          }
        }],
        line: 434
      },
      "54": {
        loc: {
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 455,
            column: 4
          },
          end: {
            line: 457,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 455
      },
      "55": {
        loc: {
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 455,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 455,
            column: 8
          },
          end: {
            line: 455,
            column: 37
          }
        }, {
          start: {
            line: 455,
            column: 41
          },
          end: {
            line: 455,
            column: 54
          }
        }],
        line: 455
      },
      "56": {
        loc: {
          start: {
            line: 462,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 4
          },
          end: {
            line: 472,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "57": {
        loc: {
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 462,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 462,
            column: 37
          }
        }, {
          start: {
            line: 462,
            column: 41
          },
          end: {
            line: 462,
            column: 54
          }
        }],
        line: 462
      },
      "58": {
        loc: {
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 466,
            column: 12
          },
          end: {
            line: 468,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 466
      },
      "59": {
        loc: {
          start: {
            line: 466,
            column: 16
          },
          end: {
            line: 466,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 466,
            column: 16
          },
          end: {
            line: 466,
            column: 34
          }
        }, {
          start: {
            line: 466,
            column: 38
          },
          end: {
            line: 466,
            column: 72
          }
        }],
        line: 466
      },
      "60": {
        loc: {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 487,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 482
      },
      "61": {
        loc: {
          start: {
            line: 486,
            column: 19
          },
          end: {
            line: 486,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 486,
            column: 19
          },
          end: {
            line: 486,
            column: 26
          }
        }, {
          start: {
            line: 486,
            column: 30
          },
          end: {
            line: 486,
            column: 39
          }
        }],
        line: 486
      },
      "62": {
        loc: {
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 502,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "63": {
        loc: {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 496,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 496,
            column: 16
          }
        }, {
          start: {
            line: 496,
            column: 20
          },
          end: {
            line: 496,
            column: 47
          }
        }, {
          start: {
            line: 496,
            column: 51
          },
          end: {
            line: 496,
            column: 67
          }
        }],
        line: 496
      },
      "64": {
        loc: {
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 511,
            column: 8
          },
          end: {
            line: 513,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 511
      },
      "65": {
        loc: {
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 511,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 511,
            column: 12
          },
          end: {
            line: 511,
            column: 30
          }
        }, {
          start: {
            line: 511,
            column: 34
          },
          end: {
            line: 511,
            column: 71
          }
        }],
        line: 511
      },
      "66": {
        loc: {
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 518,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 516,
            column: 4
          },
          end: {
            line: 518,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 516
      },
      "67": {
        loc: {
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 516,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 516,
            column: 8
          },
          end: {
            line: 516,
            column: 24
          }
        }, {
          start: {
            line: 516,
            column: 28
          },
          end: {
            line: 516,
            column: 64
          }
        }, {
          start: {
            line: 516,
            column: 68
          },
          end: {
            line: 516,
            column: 97
          }
        }],
        line: 516
      },
      "68": {
        loc: {
          start: {
            line: 520,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "69": {
        loc: {
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 520,
            column: 116
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 520,
            column: 30
          }
        }, {
          start: {
            line: 520,
            column: 34
          },
          end: {
            line: 520,
            column: 76
          }
        }, {
          start: {
            line: 520,
            column: 80
          },
          end: {
            line: 520,
            column: 116
          }
        }],
        line: 520
      },
      "70": {
        loc: {
          start: {
            line: 531,
            column: 4
          },
          end: {
            line: 533,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 531,
            column: 4
          },
          end: {
            line: 533,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 531
      },
      "71": {
        loc: {
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 531,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 531,
            column: 8
          },
          end: {
            line: 531,
            column: 27
          }
        }, {
          start: {
            line: 531,
            column: 31
          },
          end: {
            line: 531,
            column: 70
          }
        }, {
          start: {
            line: 531,
            column: 74
          },
          end: {
            line: 531,
            column: 122
          }
        }],
        line: 531
      },
      "72": {
        loc: {
          start: {
            line: 562,
            column: 4
          },
          end: {
            line: 573,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 562,
            column: 4
          },
          end: {
            line: 573,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 562
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0, 0],
      "38": [0, 0],
      "39": [0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0, 0],
      "68": [0, 0],
      "69": [0, 0, 0],
      "70": [0, 0],
      "71": [0, 0, 0],
      "72": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\utils\\security.ts"],
      sourcesContent: ["import { RateLimiter } from \"../services/analyticsService\" // Corrected import path\r\n\r\n// Dynamic import for DOMPurify to handle SSR\r\nlet DOMPurify: any = null\r\nif (typeof window !== 'undefined') {\r\n  import('dompurify').then((module: any) => {\r\n    DOMPurify = module.default || module\r\n  })\r\n}\r\n\r\n// Content Security Policy headers\r\nexport const cspHeaders = {\r\n  \"Content-Security-Policy\":\r\n    \"default-src 'self'; \" +\r\n    \"script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; \" +\r\n    \"style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; \" +\r\n    \"img-src 'self' data: https: blob:; \" +\r\n    \"font-src 'self' data: https://fonts.gstatic.com; \" +\r\n    \"connect-src 'self' https://*.supabase.co https://api.github.com https://api.openai.com wss://*.supabase.co; \" +\r\n    \"media-src 'self' data: blob:; \" +\r\n    \"object-src 'none'; \" +\r\n    \"frame-src 'self' https://www.youtube.com https://player.vimeo.com; \" +\r\n    \"frame-ancestors 'none'; \" +\r\n    \"base-uri 'self'; \" +\r\n    \"form-action 'self'; \" +\r\n    \"upgrade-insecure-requests; \" +\r\n    \"block-all-mixed-content;\",\r\n}\r\n\r\n// Rate limiter instance for API calls\r\nexport const rateLimiter = new RateLimiter({\r\n  windowMs: 15 * 60 * 1000, // 15 minutes\r\n  max: 100, // limit each IP to 100 requests per windowMs\r\n})\r\n\r\n// Input sanitization function\r\nexport const sanitizeUserInput = (input: string): string => {\r\n  if (typeof input !== \"string\") {\r\n    return \"\"\r\n  }\r\n  // Fallback sanitization if DOMPurify is not available\r\n  if (!DOMPurify) {\r\n    return input.replace(/<[^>]*>/g, '').trim()\r\n  }\r\n  return DOMPurify.sanitize(input, {\r\n    ALLOWED_TAGS: [\"b\", \"i\", \"em\", \"strong\", \"a\", \"p\", \"br\"],\r\n    ALLOWED_ATTR: [\"href\", \"title\"],\r\n    ALLOW_DATA_ATTR: false,\r\n    FORBID_TAGS: [\"script\", \"object\", \"embed\", \"form\", \"input\"],\r\n    FORBID_ATTR: [\"onerror\", \"onload\", \"onclick\", \"onmouseover\"],\r\n  })\r\n}\r\n\r\n// HTML sanitization for rich content\r\nexport const sanitizeHTML = (html: string): string => {\r\n  if (typeof html !== \"string\") {\r\n    return \"\"\r\n  }\r\n  // Fallback sanitization if DOMPurify is not available\r\n  if (!DOMPurify) {\r\n    return html.replace(/<script[^>]*>.*?<\\/script>/gi, '').replace(/<[^>]*>/g, '').trim()\r\n  }\r\n  return DOMPurify.sanitize(html, {\r\n    ALLOWED_TAGS: [\r\n      \"p\",\r\n      \"br\",\r\n      \"strong\",\r\n      \"em\",\r\n      \"u\",\r\n      \"ol\",\r\n      \"ul\",\r\n      \"li\",\r\n      \"h1\",\r\n      \"h2\",\r\n      \"h3\",\r\n      \"h4\",\r\n      \"h5\",\r\n      \"h6\",\r\n      \"blockquote\",\r\n      \"code\",\r\n      \"pre\",\r\n      \"a\",\r\n      \"img\",\r\n    ],\r\n    ALLOWED_ATTR: {\r\n      \"a\": [\"href\", \"title\", \"target\"],\r\n      \"img\": [\"src\", \"alt\", \"title\", \"width\", \"height\"],\r\n      \"*\": [\"class\"],\r\n    } as Record<string, string[]>,\r\n    ALLOW_DATA_ATTR: false,\r\n    FORBID_TAGS: [\"script\", \"object\", \"embed\", \"form\", \"input\", \"iframe\"],\r\n    FORBID_ATTR: [\"onerror\", \"onload\", \"onclick\", \"onmouseover\", \"style\"],\r\n  })\r\n}\r\n\r\n// URL validation\r\nexport const isValidURL = (url: string): boolean => {\r\n  try {\r\n    const urlObj = new URL(url)\r\n    return [\"http:\", \"https:\"].includes(urlObj.protocol)\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\n// Email validation\r\nexport const isValidEmail = (email: string): boolean => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n  return emailRegex.test(email) && email.length <= 254\r\n}\r\n\r\n// Import standardized password validation\r\nimport { validatePasswordSecure } from './validation'\r\n\r\n// Password strength validation - now uses standardized validation\r\nexport const validatePasswordStrength = (\r\n  password: string,\r\n): {\r\n  isValid: boolean\r\n  errors: string[]\r\n  score: number\r\n} => {\r\n  const result = validatePasswordSecure(password)\r\n  \r\n  if (!result.isValid) {\r\n    return {\r\n      isValid: false,\r\n      errors: result.error ? [result.error] : ['Invalid password'],\r\n      score: 0\r\n    }\r\n  }\r\n  \r\n  // Calculate score based on password strength\r\n  let score = 0\r\n  if (password.length >= 8) score += 1\r\n  if (/[a-z]/.test(password)) score += 1\r\n  if (/[A-Z]/.test(password)) score += 1\r\n  if (/\\d/.test(password)) score += 1\r\n  if (/[!@#$%^&*()_+\\-=[\\]{};':\"\\\\|,.<>/?]/.test(password)) score += 1\r\n  \r\n  return {\r\n    isValid: true,\r\n    errors: [],\r\n    score\r\n  }\r\n}\r\n\r\n// CSRF token generation and validation\r\nexport const generateCSRFToken = (): string => {\r\n  const array = new Uint8Array(32)\r\n  if (typeof crypto !== \"undefined\" && crypto.getRandomValues) {\r\n    crypto.getRandomValues(array)\r\n  } else {\r\n    // Fallback for environments without crypto.getRandomValues\r\n    for (let i = 0; i < array.length; i++) {\r\n      array[i] = Math.floor(Math.random() * 256)\r\n    }\r\n  }\r\n  return Array.from(array, (byte) => byte.toString(16).padStart(2, \"0\")).join(\"\")\r\n}\r\n\r\n// Session token validation\r\nexport const isValidSessionToken = (token: string): boolean => {\r\n  if (!token || typeof token !== \"string\") {\r\n    return false\r\n  }\r\n  // Check token format (should be hex string of specific length)\r\n  const tokenRegex = /^[a-f0-9]{64}$/i\r\n  return tokenRegex.test(token)\r\n}\r\n\r\n// SQL injection prevention for search queries\r\nexport const sanitizeSearchQuery = (query: string): string => {\r\n  if (typeof query !== \"string\") {\r\n    return \"\"\r\n  }\r\n  // Use whitelist approach - only allow alphanumeric, spaces, and safe punctuation\r\n  return query\r\n    .replace(/[^a-zA-Z0-9\\s\\-_.@]/g, \"\") // Only allow safe characters\r\n    .replace(/\\s+/g, \" \") // Normalize whitespace\r\n    .trim()\r\n    .substring(0, 100) // Limit length\r\n}\r\n\r\n// File upload validation\r\nexport const validateFileUpload = (\r\n  file: File,\r\n): {\r\n  isValid: boolean\r\n  errors: string[]\r\n} => {\r\n  const errors: string[] = []\r\n  const maxSize = 10 * 1024 * 1024 // 10MB\r\n  const allowedTypes = [\r\n    \"image/jpeg\",\r\n    \"image/png\",\r\n    \"image/gif\",\r\n    \"application/pdf\",\r\n    \"text/plain\",\r\n    \"application/msword\",\r\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\r\n  ]\r\n  if (file.size > maxSize) {\r\n    errors.push(\"File size must be less than 10MB\")\r\n  }\r\n  if (!allowedTypes.includes(file.type)) {\r\n    errors.push(\"File type not allowed\")\r\n  }\r\n  // Check file extension matches MIME type\r\n  const extension = file.name.split(\".\").pop()?.toLowerCase()\r\n  const mimeTypeMap: Record<string, string[]> = {\r\n    \"image/jpeg\": [\"jpg\", \"jpeg\"],\r\n    \"image/png\": [\"png\"],\r\n    \"image/gif\": [\"gif\"],\r\n    \"application/pdf\": [\"pdf\"],\r\n    \"text/plain\": [\"txt\"],\r\n    \"application/msword\": [\"doc\"],\r\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\": [\"docx\"],\r\n  }\r\n  const expectedExtensions = mimeTypeMap[file.type]\r\n  if (expectedExtensions && extension && !expectedExtensions.includes(extension)) {\r\n    errors.push(\"File extension does not match file type\")\r\n  }\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n  }\r\n}\r\n\r\n// XSS prevention for dynamic content\r\nexport const escapeHTML = (text: string): string => {\r\n  if (typeof text !== \"string\") {\r\n    return \"\"\r\n  }\r\n  const div = document.createElement(\"div\")\r\n  div.textContent = text\r\n  return div.innerHTML\r\n}\r\n\r\n// Secure random string generation\r\nexport const generateSecureRandomString = (length = 32): string => {\r\n  const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"\r\n  let result = \"\"\r\n\r\n  if (typeof crypto !== \"undefined\" && crypto.getRandomValues) {\r\n    const array = new Uint8Array(length)\r\n    crypto.getRandomValues(array)\r\n    for (let i = 0; i < length; i++) {\r\n      result += chars[array[i] % chars.length]\r\n    }\r\n  } else {\r\n    // Fallback for environments without crypto.getRandomValues\r\n    for (let i = 0; i < length; i++) {\r\n      result += chars[Math.floor(Math.random() * chars.length)]\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Import advanced encryption system\r\nimport { advancedEncryption } from './encryption'\r\n\r\n// Legacy encryption key for backward compatibility\r\nconst LEGACY_ENCRYPTION_KEY = typeof window === 'undefined' \r\n  ? process.env.ENCRYPTION_KEY || (() => { \r\n      if (process.env.NODE_ENV === 'production') {\r\n        throw new Error('ENCRYPTION_KEY must be set in production')\r\n      }\r\n      return 'dev-only-legacy-key-not-for-production'\r\n    })()\r\n  : process.env.NEXT_PUBLIC_ENCRYPTION_KEY || (() => {\r\n      if (process.env.NODE_ENV === 'production') {\r\n        throw new Error('NEXT_PUBLIC_ENCRYPTION_KEY must be set in production')\r\n      }\r\n      return 'dev-only-client-key-not-for-production'\r\n    })()\r\n\r\n/**\r\n * Encrypts API keys using AES-256-GCM encryption\r\n * Automatically handles both new and legacy formats\r\n */\r\nexport const encryptApiKey = async (apiKey: string): Promise<string> => {\r\n  try {\r\n    // Use advanced encryption for new data\r\n    return await advancedEncryption.encryptApiKey(apiKey, {\r\n      encryptedAt: new Date().toISOString(),\r\n      source: 'security_module'\r\n    })\r\n  } catch (error) {\r\n    console.error('Advanced encryption failed, falling back to legacy:', error)\r\n    // Fallback to legacy base64 encoding for compatibility\r\n    if (typeof crypto !== \"undefined\" && crypto.subtle) {\r\n      return btoa(apiKey + \":\" + LEGACY_ENCRYPTION_KEY)\r\n    }\r\n    return btoa(apiKey)\r\n  }\r\n}\r\n\r\n/**\r\n * Decrypts API keys, handling both new AES-256-GCM and legacy formats\r\n */\r\nexport const decryptApiKey = async (encryptedApiKey: string): Promise<string> => {\r\n  try {\r\n    // Check if it's new format (JSON structure)\r\n    if (advancedEncryption.isEncrypted(encryptedApiKey)) {\r\n      const result = await advancedEncryption.decryptApiKey(encryptedApiKey)\r\n      return result.apiKey\r\n    }\r\n    \r\n    // Handle legacy format\r\n    if (typeof crypto !== \"undefined\" && crypto.subtle) {\r\n      try {\r\n        const decoded = atob(encryptedApiKey)\r\n        const parts = decoded.split(\":\")\r\n        if (parts.length === 2 && parts[1] === LEGACY_ENCRYPTION_KEY) {\r\n          return parts[0]\r\n        }\r\n      } catch {\r\n        // Continue to fallback\r\n      }\r\n    }\r\n    \r\n    // Final fallback - simple base64 decode\r\n    try {\r\n      return atob(encryptedApiKey)\r\n    } catch {\r\n      return encryptedApiKey // Return as-is if all decoding fails\r\n    }\r\n  } catch (error) {\r\n    console.error('Decryption failed:', error)\r\n    throw new Error('Failed to decrypt API key')\r\n  }\r\n}\r\n\r\n/**\r\n * Synchronous versions for backward compatibility\r\n * Note: These use legacy encryption and should be migrated\r\n */\r\nexport const encryptApiKeySync = (apiKey: string): string => {\r\n  console.warn('\u26A0\uFE0F  Using legacy synchronous encryption. Migrate to async encryptApiKey()')\r\n  if (typeof crypto !== \"undefined\" && crypto.subtle) {\r\n    return btoa(apiKey + \":\" + LEGACY_ENCRYPTION_KEY)\r\n  }\r\n  return btoa(apiKey)\r\n}\r\n\r\nexport const decryptApiKeySync = (encryptedApiKey: string): string => {\r\n  console.warn('\u26A0\uFE0F  Using legacy synchronous decryption. Migrate to async decryptApiKey()')\r\n  if (typeof crypto !== \"undefined\" && crypto.subtle) {\r\n    try {\r\n      const decoded = atob(encryptedApiKey)\r\n      const parts = decoded.split(\":\")\r\n      if (parts.length === 2 && parts[1] === LEGACY_ENCRYPTION_KEY) {\r\n        return parts[0]\r\n      }\r\n    } catch {\r\n      // Continue to fallback\r\n    }\r\n  }\r\n  try {\r\n    return atob(encryptedApiKey)\r\n  } catch {\r\n    return encryptedApiKey\r\n  }\r\n}\r\n\r\n// Get client IP address\r\nexport const getClientIpAddress = async (): Promise<string> => {\r\n  try {\r\n    // Try to get IP from various sources\r\n    if (typeof window !== \"undefined\") {\r\n      // Client-side: use a service to get public IP\r\n      const response = await fetch('https://api.ipify.org?format=json')\r\n      const data = await response.json()\r\n      return data.ip || 'unknown'\r\n    }\r\n    // Server-side: would get from request headers\r\n    return 'server-side-ip'\r\n  } catch {\r\n    return 'unknown'\r\n  }\r\n}\r\n\r\n// Content validation for training modules\r\nexport const validateTrainingContent = (\r\n  content: unknown,\r\n): {\r\n  isValid: boolean\r\n  errors: string[]\r\n} => {\r\n  const errors: string[] = []\r\n  if (!content || typeof content !== \"object\" || content === null) {\r\n    errors.push(\"Content must be a valid object\")\r\n    return { isValid: false, errors }\r\n  }\r\n  \r\n  const contentObj = content as Record<string, unknown>\r\n  \r\n  // Validate required fields\r\n  const requiredFields = [\"title\", \"description\", \"category\"]\r\n  for (const field of requiredFields) {\r\n    if (!contentObj[field] || typeof contentObj[field] !== \"string\") {\r\n      errors.push(`${field} is required and must be a string`)\r\n    }\r\n  }\r\n  // Validate title length\r\n  if (contentObj.title && typeof contentObj.title === \"string\" && contentObj.title.length > 100) {\r\n    errors.push(\"Title must be less than 100 characters\")\r\n  }\r\n  // Validate description length\r\n  if (contentObj.description && typeof contentObj.description === \"string\" && contentObj.description.length > 1000) {\r\n    errors.push(\"Description must be less than 1000 characters\")\r\n  }\r\n  // Validate category\r\n  const allowedCategories = [\"security\", \"compliance\", \"technical\", \"soft-skills\", \"onboarding\"]\r\n  if (contentObj.category && typeof contentObj.category === \"string\" && !allowedCategories.includes(contentObj.category)) {\r\n    errors.push(\"Invalid category\")\r\n  }\r\n  return {\r\n    isValid: errors.length === 0,\r\n    errors,\r\n  }\r\n}\r\n\r\n// Security headers for API responses\r\nexport const getSecurityHeaders = (): Record<string, string> => {\r\n  return {\r\n    \"X-Content-Type-Options\": \"nosniff\",\r\n    \"X-Frame-Options\": \"DENY\",\r\n    \"X-XSS-Protection\": \"1; mode=block\",\r\n    \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\r\n    \"Permissions-Policy\": \"camera=(), microphone=(), geolocation=()\",\r\n    ...cspHeaders,\r\n  }\r\n}\r\n\r\n// Rate limiting check for user actions\r\nexport const checkRateLimit = (userId: string, action: string): boolean => {\r\n  const key = `${userId}:${action}`\r\n  return rateLimiter.isAllowed(key)\r\n}\r\n\r\n// Audit logging for security events\r\nexport const logSecurityEvent = (event: {\r\n  type: \"login\" | \"logout\" | \"failed_login\" | \"permission_denied\" | \"data_access\" | \"data_modification\"\r\n  userId?: string\r\n  ip?: string\r\n  userAgent?: string\r\n  details?: Record<string, unknown>\r\n}): void => {\r\n  const logEntry = {\r\n    ...event,\r\n    timestamp: new Date().toISOString(),\r\n    sessionId: generateSecureRandomString(16),\r\n  }\r\n  // In a real implementation, this would be sent to a secure logging service\r\n  console.log(\"Security Event:\", logEntry)\r\n  // Send to security monitoring service\r\n  if (typeof fetch !== \"undefined\") {\r\n    fetch(\"/api/security/audit\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        ...getSecurityHeaders(),\r\n      },\r\n      body: JSON.stringify(logEntry),\r\n    }).catch((error) => {\r\n      console.warn(\"Failed to log security event:\", error)\r\n    })\r\n  }\r\n}\r\n\r\n// Security service object with required methods\r\nexport const securityService = {\r\n  validateCSRFToken: (token: string): boolean => {\r\n    return isValidSessionToken(token)\r\n  },\r\n  \r\n  validateSession: (sessionId: string): boolean => {\r\n    return isValidSessionToken(sessionId)\r\n  },\r\n  \r\n  sanitizeInput: (input: string): string => {\r\n    return sanitizeUserInput(input)\r\n  },\r\n  \r\n  generateCSPHeader: (): string => {\r\n    return cspHeaders[\"Content-Security-Policy\"]\r\n  }\r\n}\r\n"],
      names: ["checkRateLimit", "cspHeaders", "decryptApiKey", "decryptApiKeySync", "encryptApiKey", "encryptApiKeySync", "escapeHTML", "generateCSRFToken", "generateSecureRandomString", "getClientIpAddress", "getSecurityHeaders", "isValidEmail", "isValidSessionToken", "isValidURL", "logSecurityEvent", "rateLimiter", "sanitizeHTML", "sanitizeSearchQuery", "sanitizeUserInput", "securityService", "validateFileUpload", "validatePasswordStrength", "validateTrainingContent", "DOMPurify", "window", "then", "module", "default", "RateLimiter", "windowMs", "max", "input", "replace", "trim", "sanitize", "ALLOWED_TAGS", "ALLOWED_ATTR", "ALLOW_DATA_ATTR", "FORBID_TAGS", "FORBID_ATTR", "html", "url", "urlObj", "URL", "includes", "protocol", "email", "emailRegex", "test", "length", "password", "result", "validatePasswordSecure", "isValid", "errors", "error", "score", "array", "Uint8Array", "crypto", "getRandomValues", "i", "Math", "floor", "random", "Array", "from", "byte", "toString", "padStart", "join", "token", "tokenRegex", "query", "substring", "file", "maxSize", "allowedTypes", "size", "push", "type", "extension", "name", "split", "pop", "toLowerCase", "mimeTypeMap", "expectedExtensions", "text", "div", "document", "createElement", "textContent", "innerHTML", "chars", "LEGACY_ENCRYPTION_KEY", "process", "env", "ENCRYPTION_KEY", "NODE_ENV", "Error", "NEXT_PUBLIC_ENCRYPTION_KEY", "apiKey", "advancedEncryption", "encryptedAt", "Date", "toISOString", "source", "console", "subtle", "btoa", "encryptedApiKey", "isEncrypted", "decoded", "atob", "parts", "warn", "response", "fetch", "data", "json", "ip", "content", "contentObj", "requiredFields", "field", "title", "description", "allowedCategories", "category", "userId", "action", "key", "isAllowed", "event", "logEntry", "timestamp", "sessionId", "log", "method", "headers", "body", "JSON", "stringify", "catch", "validateCSRFToken", "validateSession", "sanitizeInput", "generateCSPHeader"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "369551cdcb33cd39f866f84cb37344f7fb8ebf3b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1vli5znnne = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1vli5znnne();
cov_1vli5znnne().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1vli5znnne().f[0]++;
  cov_1vli5znnne().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1vli5znnne().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1vli5znnne().s[3]++;
_export(exports, {
  get checkRateLimit() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[1]++;
    cov_1vli5znnne().s[4]++;
    return checkRateLimit;
  },
  get cspHeaders() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[2]++;
    cov_1vli5znnne().s[5]++;
    return cspHeaders;
  },
  get decryptApiKey() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[3]++;
    cov_1vli5znnne().s[6]++;
    return decryptApiKey;
  },
  get decryptApiKeySync() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[4]++;
    cov_1vli5znnne().s[7]++;
    return decryptApiKeySync;
  },
  get encryptApiKey() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[5]++;
    cov_1vli5znnne().s[8]++;
    return encryptApiKey;
  },
  get encryptApiKeySync() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[6]++;
    cov_1vli5znnne().s[9]++;
    return encryptApiKeySync;
  },
  get escapeHTML() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[7]++;
    cov_1vli5znnne().s[10]++;
    return escapeHTML;
  },
  get generateCSRFToken() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[8]++;
    cov_1vli5znnne().s[11]++;
    return generateCSRFToken;
  },
  get generateSecureRandomString() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[9]++;
    cov_1vli5znnne().s[12]++;
    return generateSecureRandomString;
  },
  get getClientIpAddress() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[10]++;
    cov_1vli5znnne().s[13]++;
    return getClientIpAddress;
  },
  get getSecurityHeaders() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[11]++;
    cov_1vli5znnne().s[14]++;
    return getSecurityHeaders;
  },
  get isValidEmail() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[12]++;
    cov_1vli5znnne().s[15]++;
    return isValidEmail;
  },
  get isValidSessionToken() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[13]++;
    cov_1vli5znnne().s[16]++;
    return isValidSessionToken;
  },
  get isValidURL() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[14]++;
    cov_1vli5znnne().s[17]++;
    return isValidURL;
  },
  get logSecurityEvent() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[15]++;
    cov_1vli5znnne().s[18]++;
    return logSecurityEvent;
  },
  get rateLimiter() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[16]++;
    cov_1vli5znnne().s[19]++;
    return rateLimiter;
  },
  get sanitizeHTML() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[17]++;
    cov_1vli5znnne().s[20]++;
    return sanitizeHTML;
  },
  get sanitizeSearchQuery() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[18]++;
    cov_1vli5znnne().s[21]++;
    return sanitizeSearchQuery;
  },
  get sanitizeUserInput() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[19]++;
    cov_1vli5znnne().s[22]++;
    return sanitizeUserInput;
  },
  get securityService() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[20]++;
    cov_1vli5znnne().s[23]++;
    return securityService;
  },
  get validateFileUpload() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[21]++;
    cov_1vli5znnne().s[24]++;
    return validateFileUpload;
  },
  get validatePasswordStrength() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[22]++;
    cov_1vli5znnne().s[25]++;
    return validatePasswordStrength;
  },
  get validateTrainingContent() {
    /* istanbul ignore next */
    cov_1vli5znnne().f[23]++;
    cov_1vli5znnne().s[26]++;
    return validateTrainingContent;
  }
});
const _analyticsService =
/* istanbul ignore next */
(cov_1vli5znnne().s[27]++, require("../services/analyticsService" // Corrected import path
));
const _validation =
/* istanbul ignore next */
(cov_1vli5znnne().s[28]++, require("./validation"));
const _encryption =
/* istanbul ignore next */
(cov_1vli5znnne().s[29]++, require("./encryption"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1vli5znnne().f[24]++;
  cov_1vli5znnne().s[30]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1vli5znnne().b[0][0]++;
    cov_1vli5znnne().s[31]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[32]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[33]++, new WeakMap());
  /* istanbul ignore next */
  cov_1vli5znnne().s[34]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1vli5znnne().f[25]++;
    cov_1vli5znnne().s[35]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1vli5znnne().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1vli5znnne().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1vli5znnne().f[26]++;
  cov_1vli5znnne().s[36]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[2][0]++;
    cov_1vli5znnne().s[37]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[2][1]++;
  }
  cov_1vli5znnne().s[38]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1vli5znnne().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[4][0]++;
    cov_1vli5znnne().s[39]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[40]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1vli5znnne().s[41]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[6][0]++;
    cov_1vli5znnne().s[42]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[43]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[44]++,
  /* istanbul ignore next */
  (cov_1vli5znnne().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1vli5znnne().s[45]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1vli5znnne().s[46]++;
    if (
    /* istanbul ignore next */
    (cov_1vli5znnne().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1vli5znnne().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1vli5znnne().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1vli5znnne().s[47]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1vli5znnne().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1vli5znnne().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1vli5znnne().s[48]++;
      if (
      /* istanbul ignore next */
      (cov_1vli5znnne().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1vli5znnne().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1vli5znnne().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1vli5znnne().b[12][0]++;
        cov_1vli5znnne().s[49]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1vli5znnne().b[12][1]++;
        cov_1vli5znnne().s[50]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1vli5znnne().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1vli5znnne().s[51]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1vli5znnne().s[52]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[14][0]++;
    cov_1vli5znnne().s[53]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[14][1]++;
  }
  cov_1vli5znnne().s[54]++;
  return newObj;
}
// Dynamic import for DOMPurify to handle SSR
let DOMPurify =
/* istanbul ignore next */
(cov_1vli5znnne().s[55]++, null);
/* istanbul ignore next */
cov_1vli5znnne().s[56]++;
if (typeof window !== 'undefined') {
  /* istanbul ignore next */
  cov_1vli5znnne().b[15][0]++;
  cov_1vli5znnne().s[57]++;
  Promise.resolve().then(() => {
    /* istanbul ignore next */
    cov_1vli5znnne().f[27]++;
    cov_1vli5znnne().s[58]++;
    return /*#__PURE__*/_interop_require_wildcard(require("dompurify"));
  }).then(module => {
    /* istanbul ignore next */
    cov_1vli5znnne().f[28]++;
    cov_1vli5znnne().s[59]++;
    DOMPurify =
    /* istanbul ignore next */
    (cov_1vli5znnne().b[16][0]++, module.default) ||
    /* istanbul ignore next */
    (cov_1vli5znnne().b[16][1]++, module);
  });
} else
/* istanbul ignore next */
{
  cov_1vli5znnne().b[15][1]++;
}
const cspHeaders =
/* istanbul ignore next */
(cov_1vli5znnne().s[60]++, {
  "Content-Security-Policy": "default-src 'self'; " + "script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; " + "style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; " + "img-src 'self' data: https: blob:; " + "font-src 'self' data: https://fonts.gstatic.com; " + "connect-src 'self' https://*.supabase.co https://api.github.com https://api.openai.com wss://*.supabase.co; " + "media-src 'self' data: blob:; " + "object-src 'none'; " + "frame-src 'self' https://www.youtube.com https://player.vimeo.com; " + "frame-ancestors 'none'; " + "base-uri 'self'; " + "form-action 'self'; " + "upgrade-insecure-requests; " + "block-all-mixed-content;"
});
const rateLimiter =
/* istanbul ignore next */
(cov_1vli5znnne().s[61]++, new _analyticsService.RateLimiter({
  windowMs: 15 * 60 * 1000,
  max: 100
}));
/* istanbul ignore next */
cov_1vli5znnne().s[62]++;
const sanitizeUserInput = input => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[29]++;
  cov_1vli5znnne().s[63]++;
  if (typeof input !== "string") {
    /* istanbul ignore next */
    cov_1vli5znnne().b[17][0]++;
    cov_1vli5znnne().s[64]++;
    return "";
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[17][1]++;
  }
  // Fallback sanitization if DOMPurify is not available
  cov_1vli5znnne().s[65]++;
  if (!DOMPurify) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[18][0]++;
    cov_1vli5znnne().s[66]++;
    return input.replace(/<[^>]*>/g, '').trim();
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[18][1]++;
  }
  cov_1vli5znnne().s[67]++;
  return DOMPurify.sanitize(input, {
    ALLOWED_TAGS: ["b", "i", "em", "strong", "a", "p", "br"],
    ALLOWED_ATTR: ["href", "title"],
    ALLOW_DATA_ATTR: false,
    FORBID_TAGS: ["script", "object", "embed", "form", "input"],
    FORBID_ATTR: ["onerror", "onload", "onclick", "onmouseover"]
  });
};
/* istanbul ignore next */
cov_1vli5znnne().s[68]++;
const sanitizeHTML = html => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[30]++;
  cov_1vli5znnne().s[69]++;
  if (typeof html !== "string") {
    /* istanbul ignore next */
    cov_1vli5znnne().b[19][0]++;
    cov_1vli5znnne().s[70]++;
    return "";
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[19][1]++;
  }
  // Fallback sanitization if DOMPurify is not available
  cov_1vli5znnne().s[71]++;
  if (!DOMPurify) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[20][0]++;
    cov_1vli5znnne().s[72]++;
    return html.replace(/<script[^>]*>.*?<\/script>/gi, '').replace(/<[^>]*>/g, '').trim();
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[20][1]++;
  }
  cov_1vli5znnne().s[73]++;
  return DOMPurify.sanitize(html, {
    ALLOWED_TAGS: ["p", "br", "strong", "em", "u", "ol", "ul", "li", "h1", "h2", "h3", "h4", "h5", "h6", "blockquote", "code", "pre", "a", "img"],
    ALLOWED_ATTR: {
      "a": ["href", "title", "target"],
      "img": ["src", "alt", "title", "width", "height"],
      "*": ["class"]
    },
    ALLOW_DATA_ATTR: false,
    FORBID_TAGS: ["script", "object", "embed", "form", "input", "iframe"],
    FORBID_ATTR: ["onerror", "onload", "onclick", "onmouseover", "style"]
  });
};
/* istanbul ignore next */
cov_1vli5znnne().s[74]++;
const isValidURL = url => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[31]++;
  cov_1vli5znnne().s[75]++;
  try {
    const urlObj =
    /* istanbul ignore next */
    (cov_1vli5znnne().s[76]++, new URL(url));
    /* istanbul ignore next */
    cov_1vli5znnne().s[77]++;
    return ["http:", "https:"].includes(urlObj.protocol);
  } catch {
    /* istanbul ignore next */
    cov_1vli5znnne().s[78]++;
    return false;
  }
};
/* istanbul ignore next */
cov_1vli5znnne().s[79]++;
const isValidEmail = email => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[32]++;
  const emailRegex =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[80]++, /^[^\s@]+@[^\s@]+\.[^\s@]+$/);
  /* istanbul ignore next */
  cov_1vli5znnne().s[81]++;
  return /* istanbul ignore next */(cov_1vli5znnne().b[21][0]++, emailRegex.test(email)) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[21][1]++, email.length <= 254);
};
/* istanbul ignore next */
cov_1vli5znnne().s[82]++;
const validatePasswordStrength = password => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[33]++;
  const result =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[83]++, (0, _validation.validatePasswordSecure)(password));
  /* istanbul ignore next */
  cov_1vli5znnne().s[84]++;
  if (!result.isValid) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[22][0]++;
    cov_1vli5znnne().s[85]++;
    return {
      isValid: false,
      errors: result.error ?
      /* istanbul ignore next */
      (cov_1vli5znnne().b[23][0]++, [result.error]) :
      /* istanbul ignore next */
      (cov_1vli5znnne().b[23][1]++, ['Invalid password']),
      score: 0
    };
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[22][1]++;
  }
  // Calculate score based on password strength
  let score =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[86]++, 0);
  /* istanbul ignore next */
  cov_1vli5znnne().s[87]++;
  if (password.length >= 8) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[24][0]++;
    cov_1vli5znnne().s[88]++;
    score += 1;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[24][1]++;
  }
  cov_1vli5znnne().s[89]++;
  if (/[a-z]/.test(password)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[25][0]++;
    cov_1vli5znnne().s[90]++;
    score += 1;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[25][1]++;
  }
  cov_1vli5znnne().s[91]++;
  if (/[A-Z]/.test(password)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[26][0]++;
    cov_1vli5znnne().s[92]++;
    score += 1;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[26][1]++;
  }
  cov_1vli5znnne().s[93]++;
  if (/\d/.test(password)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[27][0]++;
    cov_1vli5znnne().s[94]++;
    score += 1;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[27][1]++;
  }
  cov_1vli5znnne().s[95]++;
  if (/[!@#$%^&*()_+\-=[\]{};':"\\|,.<>/?]/.test(password)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[28][0]++;
    cov_1vli5znnne().s[96]++;
    score += 1;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[28][1]++;
  }
  cov_1vli5znnne().s[97]++;
  return {
    isValid: true,
    errors: [],
    score
  };
};
/* istanbul ignore next */
cov_1vli5znnne().s[98]++;
const generateCSRFToken = () => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[34]++;
  const array =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[99]++, new Uint8Array(32));
  /* istanbul ignore next */
  cov_1vli5znnne().s[100]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[30][0]++, typeof crypto !== "undefined") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[30][1]++, crypto.getRandomValues)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[29][0]++;
    cov_1vli5znnne().s[101]++;
    crypto.getRandomValues(array);
  } else {
    /* istanbul ignore next */
    cov_1vli5znnne().b[29][1]++;
    cov_1vli5znnne().s[102]++;
    // Fallback for environments without crypto.getRandomValues
    for (let i =
    /* istanbul ignore next */
    (cov_1vli5znnne().s[103]++, 0); i < array.length; i++) {
      /* istanbul ignore next */
      cov_1vli5znnne().s[104]++;
      array[i] = Math.floor(Math.random() * 256);
    }
  }
  /* istanbul ignore next */
  cov_1vli5znnne().s[105]++;
  return Array.from(array, byte => {
    /* istanbul ignore next */
    cov_1vli5znnne().f[35]++;
    cov_1vli5znnne().s[106]++;
    return byte.toString(16).padStart(2, "0");
  }).join("");
};
/* istanbul ignore next */
cov_1vli5znnne().s[107]++;
const isValidSessionToken = token => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[36]++;
  cov_1vli5znnne().s[108]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[32][0]++, !token) ||
  /* istanbul ignore next */
  (cov_1vli5znnne().b[32][1]++, typeof token !== "string")) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[31][0]++;
    cov_1vli5znnne().s[109]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[31][1]++;
  }
  // Check token format (should be hex string of specific length)
  const tokenRegex =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[110]++, /^[a-f0-9]{64}$/i);
  /* istanbul ignore next */
  cov_1vli5znnne().s[111]++;
  return tokenRegex.test(token);
};
/* istanbul ignore next */
cov_1vli5znnne().s[112]++;
const sanitizeSearchQuery = query => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[37]++;
  cov_1vli5znnne().s[113]++;
  if (typeof query !== "string") {
    /* istanbul ignore next */
    cov_1vli5znnne().b[33][0]++;
    cov_1vli5znnne().s[114]++;
    return "";
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[33][1]++;
  }
  // Use whitelist approach - only allow alphanumeric, spaces, and safe punctuation
  cov_1vli5znnne().s[115]++;
  return query.replace(/[^a-zA-Z0-9\s\-_.@]/g, "") // Only allow safe characters
  .replace(/\s+/g, " ") // Normalize whitespace
  .trim().substring(0, 100) // Limit length
  ;
};
/* istanbul ignore next */
cov_1vli5znnne().s[116]++;
const validateFileUpload = file => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[38]++;
  const errors =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[117]++, []);
  const maxSize =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[118]++, 10 * 1024 * 1024) // 10MB
  ;
  const allowedTypes =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[119]++, ["image/jpeg", "image/png", "image/gif", "application/pdf", "text/plain", "application/msword", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]);
  /* istanbul ignore next */
  cov_1vli5znnne().s[120]++;
  if (file.size > maxSize) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[34][0]++;
    cov_1vli5znnne().s[121]++;
    errors.push("File size must be less than 10MB");
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[34][1]++;
  }
  cov_1vli5znnne().s[122]++;
  if (!allowedTypes.includes(file.type)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[35][0]++;
    cov_1vli5znnne().s[123]++;
    errors.push("File type not allowed");
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[35][1]++;
  }
  // Check file extension matches MIME type
  const extension =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[124]++, file.name.split(".").pop()?.toLowerCase());
  const mimeTypeMap =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[125]++, {
    "image/jpeg": ["jpg", "jpeg"],
    "image/png": ["png"],
    "image/gif": ["gif"],
    "application/pdf": ["pdf"],
    "text/plain": ["txt"],
    "application/msword": ["doc"],
    "application/vnd.openxmlformats-officedocument.wordprocessingml.document": ["docx"]
  });
  const expectedExtensions =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[126]++, mimeTypeMap[file.type]);
  /* istanbul ignore next */
  cov_1vli5znnne().s[127]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[37][0]++, expectedExtensions) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[37][1]++, extension) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[37][2]++, !expectedExtensions.includes(extension))) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[36][0]++;
    cov_1vli5znnne().s[128]++;
    errors.push("File extension does not match file type");
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[36][1]++;
  }
  cov_1vli5znnne().s[129]++;
  return {
    isValid: errors.length === 0,
    errors
  };
};
/* istanbul ignore next */
cov_1vli5znnne().s[130]++;
const escapeHTML = text => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[39]++;
  cov_1vli5znnne().s[131]++;
  if (typeof text !== "string") {
    /* istanbul ignore next */
    cov_1vli5znnne().b[38][0]++;
    cov_1vli5znnne().s[132]++;
    return "";
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[38][1]++;
  }
  const div =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[133]++, document.createElement("div"));
  /* istanbul ignore next */
  cov_1vli5znnne().s[134]++;
  div.textContent = text;
  /* istanbul ignore next */
  cov_1vli5znnne().s[135]++;
  return div.innerHTML;
};
/* istanbul ignore next */
cov_1vli5znnne().s[136]++;
const generateSecureRandomString = (length =
/* istanbul ignore next */
(cov_1vli5znnne().b[39][0]++, 32)) => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[40]++;
  const chars =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[137]++, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
  let result =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[138]++, "");
  /* istanbul ignore next */
  cov_1vli5znnne().s[139]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[41][0]++, typeof crypto !== "undefined") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[41][1]++, crypto.getRandomValues)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[40][0]++;
    const array =
    /* istanbul ignore next */
    (cov_1vli5znnne().s[140]++, new Uint8Array(length));
    /* istanbul ignore next */
    cov_1vli5znnne().s[141]++;
    crypto.getRandomValues(array);
    /* istanbul ignore next */
    cov_1vli5znnne().s[142]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1vli5znnne().s[143]++, 0); i < length; i++) {
      /* istanbul ignore next */
      cov_1vli5znnne().s[144]++;
      result += chars[array[i] % chars.length];
    }
  } else {
    /* istanbul ignore next */
    cov_1vli5znnne().b[40][1]++;
    cov_1vli5znnne().s[145]++;
    // Fallback for environments without crypto.getRandomValues
    for (let i =
    /* istanbul ignore next */
    (cov_1vli5znnne().s[146]++, 0); i < length; i++) {
      /* istanbul ignore next */
      cov_1vli5znnne().s[147]++;
      result += chars[Math.floor(Math.random() * chars.length)];
    }
  }
  /* istanbul ignore next */
  cov_1vli5znnne().s[148]++;
  return result;
};
// Legacy encryption key for backward compatibility
const LEGACY_ENCRYPTION_KEY =
/* istanbul ignore next */
(cov_1vli5znnne().s[149]++, typeof window === 'undefined' ?
/* istanbul ignore next */
(cov_1vli5znnne().b[42][0]++,
/* istanbul ignore next */
(cov_1vli5znnne().b[43][0]++, process.env.ENCRYPTION_KEY) ||
/* istanbul ignore next */
(cov_1vli5znnne().b[43][1]++, (() => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[41]++;
  cov_1vli5znnne().s[150]++;
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_1vli5znnne().b[44][0]++;
    cov_1vli5znnne().s[151]++;
    throw new Error('ENCRYPTION_KEY must be set in production');
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[44][1]++;
  }
  cov_1vli5znnne().s[152]++;
  return 'dev-only-legacy-key-not-for-production';
})())) :
/* istanbul ignore next */
(cov_1vli5znnne().b[42][1]++,
/* istanbul ignore next */
(cov_1vli5znnne().b[45][0]++, process.env.NEXT_PUBLIC_ENCRYPTION_KEY) ||
/* istanbul ignore next */
(cov_1vli5znnne().b[45][1]++, (() => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[42]++;
  cov_1vli5znnne().s[153]++;
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_1vli5znnne().b[46][0]++;
    cov_1vli5znnne().s[154]++;
    throw new Error('NEXT_PUBLIC_ENCRYPTION_KEY must be set in production');
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[46][1]++;
  }
  cov_1vli5znnne().s[155]++;
  return 'dev-only-client-key-not-for-production';
})())));
/* istanbul ignore next */
cov_1vli5znnne().s[156]++;
const encryptApiKey = async apiKey => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[43]++;
  cov_1vli5znnne().s[157]++;
  try {
    /* istanbul ignore next */
    cov_1vli5znnne().s[158]++;
    // Use advanced encryption for new data
    return await _encryption.advancedEncryption.encryptApiKey(apiKey, {
      encryptedAt: new Date().toISOString(),
      source: 'security_module'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1vli5znnne().s[159]++;
    console.error('Advanced encryption failed, falling back to legacy:', error);
    // Fallback to legacy base64 encoding for compatibility
    /* istanbul ignore next */
    cov_1vli5znnne().s[160]++;
    if (
    /* istanbul ignore next */
    (cov_1vli5znnne().b[48][0]++, typeof crypto !== "undefined") &&
    /* istanbul ignore next */
    (cov_1vli5znnne().b[48][1]++, crypto.subtle)) {
      /* istanbul ignore next */
      cov_1vli5znnne().b[47][0]++;
      cov_1vli5znnne().s[161]++;
      return btoa(apiKey + ":" + LEGACY_ENCRYPTION_KEY);
    } else
    /* istanbul ignore next */
    {
      cov_1vli5znnne().b[47][1]++;
    }
    cov_1vli5znnne().s[162]++;
    return btoa(apiKey);
  }
};
/* istanbul ignore next */
cov_1vli5znnne().s[163]++;
const decryptApiKey = async encryptedApiKey => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[44]++;
  cov_1vli5znnne().s[164]++;
  try {
    /* istanbul ignore next */
    cov_1vli5znnne().s[165]++;
    // Check if it's new format (JSON structure)
    if (_encryption.advancedEncryption.isEncrypted(encryptedApiKey)) {
      /* istanbul ignore next */
      cov_1vli5znnne().b[49][0]++;
      const result =
      /* istanbul ignore next */
      (cov_1vli5znnne().s[166]++, await _encryption.advancedEncryption.decryptApiKey(encryptedApiKey));
      /* istanbul ignore next */
      cov_1vli5znnne().s[167]++;
      return result.apiKey;
    } else
    /* istanbul ignore next */
    {
      cov_1vli5znnne().b[49][1]++;
    }
    // Handle legacy format
    cov_1vli5znnne().s[168]++;
    if (
    /* istanbul ignore next */
    (cov_1vli5znnne().b[51][0]++, typeof crypto !== "undefined") &&
    /* istanbul ignore next */
    (cov_1vli5znnne().b[51][1]++, crypto.subtle)) {
      /* istanbul ignore next */
      cov_1vli5znnne().b[50][0]++;
      cov_1vli5znnne().s[169]++;
      try {
        const decoded =
        /* istanbul ignore next */
        (cov_1vli5znnne().s[170]++, atob(encryptedApiKey));
        const parts =
        /* istanbul ignore next */
        (cov_1vli5znnne().s[171]++, decoded.split(":"));
        /* istanbul ignore next */
        cov_1vli5znnne().s[172]++;
        if (
        /* istanbul ignore next */
        (cov_1vli5znnne().b[53][0]++, parts.length === 2) &&
        /* istanbul ignore next */
        (cov_1vli5znnne().b[53][1]++, parts[1] === LEGACY_ENCRYPTION_KEY)) {
          /* istanbul ignore next */
          cov_1vli5znnne().b[52][0]++;
          cov_1vli5znnne().s[173]++;
          return parts[0];
        } else
        /* istanbul ignore next */
        {
          cov_1vli5znnne().b[52][1]++;
        }
      } catch {
        // Continue to fallback
      }
    } else
    /* istanbul ignore next */
    {
      cov_1vli5znnne().b[50][1]++;
    }
    // Final fallback - simple base64 decode
    cov_1vli5znnne().s[174]++;
    try {
      /* istanbul ignore next */
      cov_1vli5znnne().s[175]++;
      return atob(encryptedApiKey);
    } catch {
      /* istanbul ignore next */
      cov_1vli5znnne().s[176]++;
      return encryptedApiKey // Return as-is if all decoding fails
      ;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1vli5znnne().s[177]++;
    console.error('Decryption failed:', error);
    /* istanbul ignore next */
    cov_1vli5znnne().s[178]++;
    throw new Error('Failed to decrypt API key');
  }
};
/* istanbul ignore next */
cov_1vli5znnne().s[179]++;
const encryptApiKeySync = apiKey => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[45]++;
  cov_1vli5znnne().s[180]++;
  console.warn('⚠️  Using legacy synchronous encryption. Migrate to async encryptApiKey()');
  /* istanbul ignore next */
  cov_1vli5znnne().s[181]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[55][0]++, typeof crypto !== "undefined") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[55][1]++, crypto.subtle)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[54][0]++;
    cov_1vli5znnne().s[182]++;
    return btoa(apiKey + ":" + LEGACY_ENCRYPTION_KEY);
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[54][1]++;
  }
  cov_1vli5znnne().s[183]++;
  return btoa(apiKey);
};
/* istanbul ignore next */
cov_1vli5znnne().s[184]++;
const decryptApiKeySync = encryptedApiKey => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[46]++;
  cov_1vli5znnne().s[185]++;
  console.warn('⚠️  Using legacy synchronous decryption. Migrate to async decryptApiKey()');
  /* istanbul ignore next */
  cov_1vli5znnne().s[186]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[57][0]++, typeof crypto !== "undefined") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[57][1]++, crypto.subtle)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[56][0]++;
    cov_1vli5znnne().s[187]++;
    try {
      const decoded =
      /* istanbul ignore next */
      (cov_1vli5znnne().s[188]++, atob(encryptedApiKey));
      const parts =
      /* istanbul ignore next */
      (cov_1vli5znnne().s[189]++, decoded.split(":"));
      /* istanbul ignore next */
      cov_1vli5znnne().s[190]++;
      if (
      /* istanbul ignore next */
      (cov_1vli5znnne().b[59][0]++, parts.length === 2) &&
      /* istanbul ignore next */
      (cov_1vli5znnne().b[59][1]++, parts[1] === LEGACY_ENCRYPTION_KEY)) {
        /* istanbul ignore next */
        cov_1vli5znnne().b[58][0]++;
        cov_1vli5znnne().s[191]++;
        return parts[0];
      } else
      /* istanbul ignore next */
      {
        cov_1vli5znnne().b[58][1]++;
      }
    } catch {
      // Continue to fallback
    }
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[56][1]++;
  }
  cov_1vli5znnne().s[192]++;
  try {
    /* istanbul ignore next */
    cov_1vli5znnne().s[193]++;
    return atob(encryptedApiKey);
  } catch {
    /* istanbul ignore next */
    cov_1vli5znnne().s[194]++;
    return encryptedApiKey;
  }
};
/* istanbul ignore next */
cov_1vli5znnne().s[195]++;
const getClientIpAddress = async () => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[47]++;
  cov_1vli5znnne().s[196]++;
  try {
    /* istanbul ignore next */
    cov_1vli5znnne().s[197]++;
    // Try to get IP from various sources
    if (typeof window !== "undefined") {
      /* istanbul ignore next */
      cov_1vli5znnne().b[60][0]++;
      // Client-side: use a service to get public IP
      const response =
      /* istanbul ignore next */
      (cov_1vli5znnne().s[198]++, await fetch('https://api.ipify.org?format=json'));
      const data =
      /* istanbul ignore next */
      (cov_1vli5znnne().s[199]++, await response.json());
      /* istanbul ignore next */
      cov_1vli5znnne().s[200]++;
      return /* istanbul ignore next */(cov_1vli5znnne().b[61][0]++, data.ip) ||
      /* istanbul ignore next */
      (cov_1vli5znnne().b[61][1]++, 'unknown');
    } else
    /* istanbul ignore next */
    {
      cov_1vli5znnne().b[60][1]++;
    }
    // Server-side: would get from request headers
    cov_1vli5znnne().s[201]++;
    return 'server-side-ip';
  } catch {
    /* istanbul ignore next */
    cov_1vli5znnne().s[202]++;
    return 'unknown';
  }
};
/* istanbul ignore next */
cov_1vli5znnne().s[203]++;
const validateTrainingContent = content => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[48]++;
  const errors =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[204]++, []);
  /* istanbul ignore next */
  cov_1vli5znnne().s[205]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[63][0]++, !content) ||
  /* istanbul ignore next */
  (cov_1vli5znnne().b[63][1]++, typeof content !== "object") ||
  /* istanbul ignore next */
  (cov_1vli5znnne().b[63][2]++, content === null)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[62][0]++;
    cov_1vli5znnne().s[206]++;
    errors.push("Content must be a valid object");
    /* istanbul ignore next */
    cov_1vli5znnne().s[207]++;
    return {
      isValid: false,
      errors
    };
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[62][1]++;
  }
  const contentObj =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[208]++, content);
  // Validate required fields
  const requiredFields =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[209]++, ["title", "description", "category"]);
  /* istanbul ignore next */
  cov_1vli5znnne().s[210]++;
  for (const field of requiredFields) {
    /* istanbul ignore next */
    cov_1vli5znnne().s[211]++;
    if (
    /* istanbul ignore next */
    (cov_1vli5znnne().b[65][0]++, !contentObj[field]) ||
    /* istanbul ignore next */
    (cov_1vli5znnne().b[65][1]++, typeof contentObj[field] !== "string")) {
      /* istanbul ignore next */
      cov_1vli5znnne().b[64][0]++;
      cov_1vli5znnne().s[212]++;
      errors.push(`${field} is required and must be a string`);
    } else
    /* istanbul ignore next */
    {
      cov_1vli5znnne().b[64][1]++;
    }
  }
  // Validate title length
  /* istanbul ignore next */
  cov_1vli5znnne().s[213]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[67][0]++, contentObj.title) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[67][1]++, typeof contentObj.title === "string") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[67][2]++, contentObj.title.length > 100)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[66][0]++;
    cov_1vli5znnne().s[214]++;
    errors.push("Title must be less than 100 characters");
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[66][1]++;
  }
  // Validate description length
  cov_1vli5znnne().s[215]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[69][0]++, contentObj.description) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[69][1]++, typeof contentObj.description === "string") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[69][2]++, contentObj.description.length > 1000)) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[68][0]++;
    cov_1vli5znnne().s[216]++;
    errors.push("Description must be less than 1000 characters");
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[68][1]++;
  }
  // Validate category
  const allowedCategories =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[217]++, ["security", "compliance", "technical", "soft-skills", "onboarding"]);
  /* istanbul ignore next */
  cov_1vli5znnne().s[218]++;
  if (
  /* istanbul ignore next */
  (cov_1vli5znnne().b[71][0]++, contentObj.category) &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[71][1]++, typeof contentObj.category === "string") &&
  /* istanbul ignore next */
  (cov_1vli5znnne().b[71][2]++, !allowedCategories.includes(contentObj.category))) {
    /* istanbul ignore next */
    cov_1vli5znnne().b[70][0]++;
    cov_1vli5znnne().s[219]++;
    errors.push("Invalid category");
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[70][1]++;
  }
  cov_1vli5znnne().s[220]++;
  return {
    isValid: errors.length === 0,
    errors
  };
};
/* istanbul ignore next */
cov_1vli5znnne().s[221]++;
const getSecurityHeaders = () => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[49]++;
  cov_1vli5znnne().s[222]++;
  return {
    "X-Content-Type-Options": "nosniff",
    "X-Frame-Options": "DENY",
    "X-XSS-Protection": "1; mode=block",
    "Referrer-Policy": "strict-origin-when-cross-origin",
    "Permissions-Policy": "camera=(), microphone=(), geolocation=()",
    ...cspHeaders
  };
};
/* istanbul ignore next */
cov_1vli5znnne().s[223]++;
const checkRateLimit = (userId, action) => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[50]++;
  const key =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[224]++, `${userId}:${action}`);
  /* istanbul ignore next */
  cov_1vli5znnne().s[225]++;
  return rateLimiter.isAllowed(key);
};
/* istanbul ignore next */
cov_1vli5znnne().s[226]++;
const logSecurityEvent = event => {
  /* istanbul ignore next */
  cov_1vli5znnne().f[51]++;
  const logEntry =
  /* istanbul ignore next */
  (cov_1vli5znnne().s[227]++, {
    ...event,
    timestamp: new Date().toISOString(),
    sessionId: generateSecureRandomString(16)
  });
  // In a real implementation, this would be sent to a secure logging service
  /* istanbul ignore next */
  cov_1vli5znnne().s[228]++;
  console.log("Security Event:", logEntry);
  // Send to security monitoring service
  /* istanbul ignore next */
  cov_1vli5znnne().s[229]++;
  if (typeof fetch !== "undefined") {
    /* istanbul ignore next */
    cov_1vli5znnne().b[72][0]++;
    cov_1vli5znnne().s[230]++;
    fetch("/api/security/audit", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        ...getSecurityHeaders()
      },
      body: JSON.stringify(logEntry)
    }).catch(error => {
      /* istanbul ignore next */
      cov_1vli5znnne().f[52]++;
      cov_1vli5znnne().s[231]++;
      console.warn("Failed to log security event:", error);
    });
  } else
  /* istanbul ignore next */
  {
    cov_1vli5znnne().b[72][1]++;
  }
};
const securityService =
/* istanbul ignore next */
(cov_1vli5znnne().s[232]++, {
  validateCSRFToken: token => {
    /* istanbul ignore next */
    cov_1vli5znnne().f[53]++;
    cov_1vli5znnne().s[233]++;
    return isValidSessionToken(token);
  },
  validateSession: sessionId => {
    /* istanbul ignore next */
    cov_1vli5znnne().f[54]++;
    cov_1vli5znnne().s[234]++;
    return isValidSessionToken(sessionId);
  },
  sanitizeInput: input => {
    /* istanbul ignore next */
    cov_1vli5znnne().f[55]++;
    cov_1vli5znnne().s[235]++;
    return sanitizeUserInput(input);
  },
  generateCSPHeader: () => {
    /* istanbul ignore next */
    cov_1vli5znnne().f[56]++;
    cov_1vli5znnne().s[236]++;
    return cspHeaders["Content-Security-Policy"];
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjaGVja1JhdGVMaW1pdCIsImNvdl8xdmxpNXpubm5lIiwiZiIsInMiLCJjc3BIZWFkZXJzIiwiZGVjcnlwdEFwaUtleSIsImRlY3J5cHRBcGlLZXlTeW5jIiwiZW5jcnlwdEFwaUtleSIsImVuY3J5cHRBcGlLZXlTeW5jIiwiZXNjYXBlSFRNTCIsImdlbmVyYXRlQ1NSRlRva2VuIiwiZ2VuZXJhdGVTZWN1cmVSYW5kb21TdHJpbmciLCJnZXRDbGllbnRJcEFkZHJlc3MiLCJnZXRTZWN1cml0eUhlYWRlcnMiLCJpc1ZhbGlkRW1haWwiLCJpc1ZhbGlkU2Vzc2lvblRva2VuIiwiaXNWYWxpZFVSTCIsImxvZ1NlY3VyaXR5RXZlbnQiLCJyYXRlTGltaXRlciIsInNhbml0aXplSFRNTCIsInNhbml0aXplU2VhcmNoUXVlcnkiLCJzYW5pdGl6ZVVzZXJJbnB1dCIsInNlY3VyaXR5U2VydmljZSIsInZhbGlkYXRlRmlsZVVwbG9hZCIsInZhbGlkYXRlUGFzc3dvcmRTdHJlbmd0aCIsInZhbGlkYXRlVHJhaW5pbmdDb250ZW50IiwiRE9NUHVyaWZ5Iiwid2luZG93IiwiYiIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsIl9pbnRlcm9wX3JlcXVpcmVfd2lsZGNhcmQiLCJyZXF1aXJlIiwibW9kdWxlIiwiZGVmYXVsdCIsIl9hbmFseXRpY3NTZXJ2aWNlIiwiUmF0ZUxpbWl0ZXIiLCJ3aW5kb3dNcyIsIm1heCIsImlucHV0IiwicmVwbGFjZSIsInRyaW0iLCJzYW5pdGl6ZSIsIkFMTE9XRURfVEFHUyIsIkFMTE9XRURfQVRUUiIsIkFMTE9XX0RBVEFfQVRUUiIsIkZPUkJJRF9UQUdTIiwiRk9SQklEX0FUVFIiLCJodG1sIiwidXJsIiwidXJsT2JqIiwiVVJMIiwiaW5jbHVkZXMiLCJwcm90b2NvbCIsImVtYWlsIiwiZW1haWxSZWdleCIsInRlc3QiLCJsZW5ndGgiLCJwYXNzd29yZCIsInJlc3VsdCIsIl92YWxpZGF0aW9uIiwidmFsaWRhdGVQYXNzd29yZFNlY3VyZSIsImlzVmFsaWQiLCJlcnJvcnMiLCJlcnJvciIsInNjb3JlIiwiYXJyYXkiLCJVaW50OEFycmF5IiwiY3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwiaSIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsIkFycmF5IiwiZnJvbSIsImJ5dGUiLCJ0b1N0cmluZyIsInBhZFN0YXJ0Iiwiam9pbiIsInRva2VuIiwidG9rZW5SZWdleCIsInF1ZXJ5Iiwic3Vic3RyaW5nIiwiZmlsZSIsIm1heFNpemUiLCJhbGxvd2VkVHlwZXMiLCJzaXplIiwicHVzaCIsInR5cGUiLCJleHRlbnNpb24iLCJuYW1lIiwic3BsaXQiLCJwb3AiLCJ0b0xvd2VyQ2FzZSIsIm1pbWVUeXBlTWFwIiwiZXhwZWN0ZWRFeHRlbnNpb25zIiwidGV4dCIsImRpdiIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInRleHRDb250ZW50IiwiaW5uZXJIVE1MIiwiY2hhcnMiLCJMRUdBQ1lfRU5DUllQVElPTl9LRVkiLCJwcm9jZXNzIiwiZW52IiwiRU5DUllQVElPTl9LRVkiLCJOT0RFX0VOViIsIkVycm9yIiwiTkVYVF9QVUJMSUNfRU5DUllQVElPTl9LRVkiLCJhcGlLZXkiLCJfZW5jcnlwdGlvbiIsImFkdmFuY2VkRW5jcnlwdGlvbiIsImVuY3J5cHRlZEF0IiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic291cmNlIiwiY29uc29sZSIsInN1YnRsZSIsImJ0b2EiLCJlbmNyeXB0ZWRBcGlLZXkiLCJpc0VuY3J5cHRlZCIsImRlY29kZWQiLCJhdG9iIiwicGFydHMiLCJ3YXJuIiwicmVzcG9uc2UiLCJmZXRjaCIsImRhdGEiLCJqc29uIiwiaXAiLCJjb250ZW50IiwiY29udGVudE9iaiIsInJlcXVpcmVkRmllbGRzIiwiZmllbGQiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiYWxsb3dlZENhdGVnb3JpZXMiLCJjYXRlZ29yeSIsInVzZXJJZCIsImFjdGlvbiIsImtleSIsImlzQWxsb3dlZCIsImV2ZW50IiwibG9nRW50cnkiLCJ0aW1lc3RhbXAiLCJzZXNzaW9uSWQiLCJsb2ciLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYXRjaCIsInZhbGlkYXRlQ1NSRlRva2VuIiwidmFsaWRhdGVTZXNzaW9uIiwic2FuaXRpemVJbnB1dCIsImdlbmVyYXRlQ1NQSGVhZGVyIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxjaGFzZVxcRG93bmxvYWRzXFxjcm0gKDMyKVxcc3JjXFx1dGlsc1xcc2VjdXJpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmF0ZUxpbWl0ZXIgfSBmcm9tIFwiLi4vc2VydmljZXMvYW5hbHl0aWNzU2VydmljZVwiIC8vIENvcnJlY3RlZCBpbXBvcnQgcGF0aFxyXG5cclxuLy8gRHluYW1pYyBpbXBvcnQgZm9yIERPTVB1cmlmeSB0byBoYW5kbGUgU1NSXHJcbmxldCBET01QdXJpZnk6IGFueSA9IG51bGxcclxuaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgaW1wb3J0KCdkb21wdXJpZnknKS50aGVuKChtb2R1bGU6IGFueSkgPT4ge1xyXG4gICAgRE9NUHVyaWZ5ID0gbW9kdWxlLmRlZmF1bHQgfHwgbW9kdWxlXHJcbiAgfSlcclxufVxyXG5cclxuLy8gQ29udGVudCBTZWN1cml0eSBQb2xpY3kgaGVhZGVyc1xyXG5leHBvcnQgY29uc3QgY3NwSGVhZGVycyA9IHtcclxuICBcIkNvbnRlbnQtU2VjdXJpdHktUG9saWN5XCI6XHJcbiAgICBcImRlZmF1bHQtc3JjICdzZWxmJzsgXCIgK1xyXG4gICAgXCJzY3JpcHQtc3JjICdzZWxmJyAndW5zYWZlLWlubGluZScgJ3Vuc2FmZS1ldmFsJyBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQgaHR0cHM6Ly91bnBrZy5jb207IFwiICtcclxuICAgIFwic3R5bGUtc3JjICdzZWxmJyAndW5zYWZlLWlubGluZScgaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbTsgXCIgK1xyXG4gICAgXCJpbWctc3JjICdzZWxmJyBkYXRhOiBodHRwczogYmxvYjo7IFwiICtcclxuICAgIFwiZm9udC1zcmMgJ3NlbGYnIGRhdGE6IGh0dHBzOi8vZm9udHMuZ3N0YXRpYy5jb207IFwiICtcclxuICAgIFwiY29ubmVjdC1zcmMgJ3NlbGYnIGh0dHBzOi8vKi5zdXBhYmFzZS5jbyBodHRwczovL2FwaS5naXRodWIuY29tIGh0dHBzOi8vYXBpLm9wZW5haS5jb20gd3NzOi8vKi5zdXBhYmFzZS5jbzsgXCIgK1xyXG4gICAgXCJtZWRpYS1zcmMgJ3NlbGYnIGRhdGE6IGJsb2I6OyBcIiArXHJcbiAgICBcIm9iamVjdC1zcmMgJ25vbmUnOyBcIiArXHJcbiAgICBcImZyYW1lLXNyYyAnc2VsZicgaHR0cHM6Ly93d3cueW91dHViZS5jb20gaHR0cHM6Ly9wbGF5ZXIudmltZW8uY29tOyBcIiArXHJcbiAgICBcImZyYW1lLWFuY2VzdG9ycyAnbm9uZSc7IFwiICtcclxuICAgIFwiYmFzZS11cmkgJ3NlbGYnOyBcIiArXHJcbiAgICBcImZvcm0tYWN0aW9uICdzZWxmJzsgXCIgK1xyXG4gICAgXCJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzOyBcIiArXHJcbiAgICBcImJsb2NrLWFsbC1taXhlZC1jb250ZW50O1wiLFxyXG59XHJcblxyXG4vLyBSYXRlIGxpbWl0ZXIgaW5zdGFuY2UgZm9yIEFQSSBjYWxsc1xyXG5leHBvcnQgY29uc3QgcmF0ZUxpbWl0ZXIgPSBuZXcgUmF0ZUxpbWl0ZXIoe1xyXG4gIHdpbmRvd01zOiAxNSAqIDYwICogMTAwMCwgLy8gMTUgbWludXRlc1xyXG4gIG1heDogMTAwLCAvLyBsaW1pdCBlYWNoIElQIHRvIDEwMCByZXF1ZXN0cyBwZXIgd2luZG93TXNcclxufSlcclxuXHJcbi8vIElucHV0IHNhbml0aXphdGlvbiBmdW5jdGlvblxyXG5leHBvcnQgY29uc3Qgc2FuaXRpemVVc2VySW5wdXQgPSAoaW5wdXQ6IHN0cmluZyk6IHN0cmluZyA9PiB7XHJcbiAgaWYgKHR5cGVvZiBpbnB1dCAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgcmV0dXJuIFwiXCJcclxuICB9XHJcbiAgLy8gRmFsbGJhY2sgc2FuaXRpemF0aW9uIGlmIERPTVB1cmlmeSBpcyBub3QgYXZhaWxhYmxlXHJcbiAgaWYgKCFET01QdXJpZnkpIHtcclxuICAgIHJldHVybiBpbnB1dC5yZXBsYWNlKC88W14+XSo+L2csICcnKS50cmltKClcclxuICB9XHJcbiAgcmV0dXJuIERPTVB1cmlmeS5zYW5pdGl6ZShpbnB1dCwge1xyXG4gICAgQUxMT1dFRF9UQUdTOiBbXCJiXCIsIFwiaVwiLCBcImVtXCIsIFwic3Ryb25nXCIsIFwiYVwiLCBcInBcIiwgXCJiclwiXSxcclxuICAgIEFMTE9XRURfQVRUUjogW1wiaHJlZlwiLCBcInRpdGxlXCJdLFxyXG4gICAgQUxMT1dfREFUQV9BVFRSOiBmYWxzZSxcclxuICAgIEZPUkJJRF9UQUdTOiBbXCJzY3JpcHRcIiwgXCJvYmplY3RcIiwgXCJlbWJlZFwiLCBcImZvcm1cIiwgXCJpbnB1dFwiXSxcclxuICAgIEZPUkJJRF9BVFRSOiBbXCJvbmVycm9yXCIsIFwib25sb2FkXCIsIFwib25jbGlja1wiLCBcIm9ubW91c2VvdmVyXCJdLFxyXG4gIH0pXHJcbn1cclxuXHJcbi8vIEhUTUwgc2FuaXRpemF0aW9uIGZvciByaWNoIGNvbnRlbnRcclxuZXhwb3J0IGNvbnN0IHNhbml0aXplSFRNTCA9IChodG1sOiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gIGlmICh0eXBlb2YgaHRtbCAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgcmV0dXJuIFwiXCJcclxuICB9XHJcbiAgLy8gRmFsbGJhY2sgc2FuaXRpemF0aW9uIGlmIERPTVB1cmlmeSBpcyBub3QgYXZhaWxhYmxlXHJcbiAgaWYgKCFET01QdXJpZnkpIHtcclxuICAgIHJldHVybiBodG1sLnJlcGxhY2UoLzxzY3JpcHRbXj5dKj4uKj88XFwvc2NyaXB0Pi9naSwgJycpLnJlcGxhY2UoLzxbXj5dKj4vZywgJycpLnRyaW0oKVxyXG4gIH1cclxuICByZXR1cm4gRE9NUHVyaWZ5LnNhbml0aXplKGh0bWwsIHtcclxuICAgIEFMTE9XRURfVEFHUzogW1xyXG4gICAgICBcInBcIixcclxuICAgICAgXCJiclwiLFxyXG4gICAgICBcInN0cm9uZ1wiLFxyXG4gICAgICBcImVtXCIsXHJcbiAgICAgIFwidVwiLFxyXG4gICAgICBcIm9sXCIsXHJcbiAgICAgIFwidWxcIixcclxuICAgICAgXCJsaVwiLFxyXG4gICAgICBcImgxXCIsXHJcbiAgICAgIFwiaDJcIixcclxuICAgICAgXCJoM1wiLFxyXG4gICAgICBcImg0XCIsXHJcbiAgICAgIFwiaDVcIixcclxuICAgICAgXCJoNlwiLFxyXG4gICAgICBcImJsb2NrcXVvdGVcIixcclxuICAgICAgXCJjb2RlXCIsXHJcbiAgICAgIFwicHJlXCIsXHJcbiAgICAgIFwiYVwiLFxyXG4gICAgICBcImltZ1wiLFxyXG4gICAgXSxcclxuICAgIEFMTE9XRURfQVRUUjoge1xyXG4gICAgICBcImFcIjogW1wiaHJlZlwiLCBcInRpdGxlXCIsIFwidGFyZ2V0XCJdLFxyXG4gICAgICBcImltZ1wiOiBbXCJzcmNcIiwgXCJhbHRcIiwgXCJ0aXRsZVwiLCBcIndpZHRoXCIsIFwiaGVpZ2h0XCJdLFxyXG4gICAgICBcIipcIjogW1wiY2xhc3NcIl0sXHJcbiAgICB9IGFzIFJlY29yZDxzdHJpbmcsIHN0cmluZ1tdPixcclxuICAgIEFMTE9XX0RBVEFfQVRUUjogZmFsc2UsXHJcbiAgICBGT1JCSURfVEFHUzogW1wic2NyaXB0XCIsIFwib2JqZWN0XCIsIFwiZW1iZWRcIiwgXCJmb3JtXCIsIFwiaW5wdXRcIiwgXCJpZnJhbWVcIl0sXHJcbiAgICBGT1JCSURfQVRUUjogW1wib25lcnJvclwiLCBcIm9ubG9hZFwiLCBcIm9uY2xpY2tcIiwgXCJvbm1vdXNlb3ZlclwiLCBcInN0eWxlXCJdLFxyXG4gIH0pXHJcbn1cclxuXHJcbi8vIFVSTCB2YWxpZGF0aW9uXHJcbmV4cG9ydCBjb25zdCBpc1ZhbGlkVVJMID0gKHVybDogc3RyaW5nKTogYm9vbGVhbiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHVybE9iaiA9IG5ldyBVUkwodXJsKVxyXG4gICAgcmV0dXJuIFtcImh0dHA6XCIsIFwiaHR0cHM6XCJdLmluY2x1ZGVzKHVybE9iai5wcm90b2NvbClcclxuICB9IGNhdGNoIHtcclxuICAgIHJldHVybiBmYWxzZVxyXG4gIH1cclxufVxyXG5cclxuLy8gRW1haWwgdmFsaWRhdGlvblxyXG5leHBvcnQgY29uc3QgaXNWYWxpZEVtYWlsID0gKGVtYWlsOiBzdHJpbmcpOiBib29sZWFuID0+IHtcclxuICBjb25zdCBlbWFpbFJlZ2V4ID0gL15bXlxcc0BdK0BbXlxcc0BdK1xcLlteXFxzQF0rJC9cclxuICByZXR1cm4gZW1haWxSZWdleC50ZXN0KGVtYWlsKSAmJiBlbWFpbC5sZW5ndGggPD0gMjU0XHJcbn1cclxuXHJcbi8vIEltcG9ydCBzdGFuZGFyZGl6ZWQgcGFzc3dvcmQgdmFsaWRhdGlvblxyXG5pbXBvcnQgeyB2YWxpZGF0ZVBhc3N3b3JkU2VjdXJlIH0gZnJvbSAnLi92YWxpZGF0aW9uJ1xyXG5cclxuLy8gUGFzc3dvcmQgc3RyZW5ndGggdmFsaWRhdGlvbiAtIG5vdyB1c2VzIHN0YW5kYXJkaXplZCB2YWxpZGF0aW9uXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZVBhc3N3b3JkU3RyZW5ndGggPSAoXHJcbiAgcGFzc3dvcmQ6IHN0cmluZyxcclxuKToge1xyXG4gIGlzVmFsaWQ6IGJvb2xlYW5cclxuICBlcnJvcnM6IHN0cmluZ1tdXHJcbiAgc2NvcmU6IG51bWJlclxyXG59ID0+IHtcclxuICBjb25zdCByZXN1bHQgPSB2YWxpZGF0ZVBhc3N3b3JkU2VjdXJlKHBhc3N3b3JkKVxyXG4gIFxyXG4gIGlmICghcmVzdWx0LmlzVmFsaWQpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGlzVmFsaWQ6IGZhbHNlLFxyXG4gICAgICBlcnJvcnM6IHJlc3VsdC5lcnJvciA/IFtyZXN1bHQuZXJyb3JdIDogWydJbnZhbGlkIHBhc3N3b3JkJ10sXHJcbiAgICAgIHNjb3JlOiAwXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC8vIENhbGN1bGF0ZSBzY29yZSBiYXNlZCBvbiBwYXNzd29yZCBzdHJlbmd0aFxyXG4gIGxldCBzY29yZSA9IDBcclxuICBpZiAocGFzc3dvcmQubGVuZ3RoID49IDgpIHNjb3JlICs9IDFcclxuICBpZiAoL1thLXpdLy50ZXN0KHBhc3N3b3JkKSkgc2NvcmUgKz0gMVxyXG4gIGlmICgvW0EtWl0vLnRlc3QocGFzc3dvcmQpKSBzY29yZSArPSAxXHJcbiAgaWYgKC9cXGQvLnRlc3QocGFzc3dvcmQpKSBzY29yZSArPSAxXHJcbiAgaWYgKC9bIUAjJCVeJiooKV8rXFwtPVtcXF17fTsnOlwiXFxcXHwsLjw+Lz9dLy50ZXN0KHBhc3N3b3JkKSkgc2NvcmUgKz0gMVxyXG4gIFxyXG4gIHJldHVybiB7XHJcbiAgICBpc1ZhbGlkOiB0cnVlLFxyXG4gICAgZXJyb3JzOiBbXSxcclxuICAgIHNjb3JlXHJcbiAgfVxyXG59XHJcblxyXG4vLyBDU1JGIHRva2VuIGdlbmVyYXRpb24gYW5kIHZhbGlkYXRpb25cclxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlQ1NSRlRva2VuID0gKCk6IHN0cmluZyA9PiB7XHJcbiAgY29uc3QgYXJyYXkgPSBuZXcgVWludDhBcnJheSgzMilcclxuICBpZiAodHlwZW9mIGNyeXB0byAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKSB7XHJcbiAgICBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGFycmF5KVxyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyBGYWxsYmFjayBmb3IgZW52aXJvbm1lbnRzIHdpdGhvdXQgY3J5cHRvLmdldFJhbmRvbVZhbHVlc1xyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnJheS5sZW5ndGg7IGkrKykge1xyXG4gICAgICBhcnJheVtpXSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NilcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIEFycmF5LmZyb20oYXJyYXksIChieXRlKSA9PiBieXRlLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCBcIjBcIikpLmpvaW4oXCJcIilcclxufVxyXG5cclxuLy8gU2Vzc2lvbiB0b2tlbiB2YWxpZGF0aW9uXHJcbmV4cG9ydCBjb25zdCBpc1ZhbGlkU2Vzc2lvblRva2VuID0gKHRva2VuOiBzdHJpbmcpOiBib29sZWFuID0+IHtcclxuICBpZiAoIXRva2VuIHx8IHR5cGVvZiB0b2tlbiAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgcmV0dXJuIGZhbHNlXHJcbiAgfVxyXG4gIC8vIENoZWNrIHRva2VuIGZvcm1hdCAoc2hvdWxkIGJlIGhleCBzdHJpbmcgb2Ygc3BlY2lmaWMgbGVuZ3RoKVxyXG4gIGNvbnN0IHRva2VuUmVnZXggPSAvXlthLWYwLTldezY0fSQvaVxyXG4gIHJldHVybiB0b2tlblJlZ2V4LnRlc3QodG9rZW4pXHJcbn1cclxuXHJcbi8vIFNRTCBpbmplY3Rpb24gcHJldmVudGlvbiBmb3Igc2VhcmNoIHF1ZXJpZXNcclxuZXhwb3J0IGNvbnN0IHNhbml0aXplU2VhcmNoUXVlcnkgPSAocXVlcnk6IHN0cmluZyk6IHN0cmluZyA9PiB7XHJcbiAgaWYgKHR5cGVvZiBxdWVyeSAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgcmV0dXJuIFwiXCJcclxuICB9XHJcbiAgLy8gVXNlIHdoaXRlbGlzdCBhcHByb2FjaCAtIG9ubHkgYWxsb3cgYWxwaGFudW1lcmljLCBzcGFjZXMsIGFuZCBzYWZlIHB1bmN0dWF0aW9uXHJcbiAgcmV0dXJuIHF1ZXJ5XHJcbiAgICAucmVwbGFjZSgvW15hLXpBLVowLTlcXHNcXC1fLkBdL2csIFwiXCIpIC8vIE9ubHkgYWxsb3cgc2FmZSBjaGFyYWN0ZXJzXHJcbiAgICAucmVwbGFjZSgvXFxzKy9nLCBcIiBcIikgLy8gTm9ybWFsaXplIHdoaXRlc3BhY2VcclxuICAgIC50cmltKClcclxuICAgIC5zdWJzdHJpbmcoMCwgMTAwKSAvLyBMaW1pdCBsZW5ndGhcclxufVxyXG5cclxuLy8gRmlsZSB1cGxvYWQgdmFsaWRhdGlvblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGVGaWxlVXBsb2FkID0gKFxyXG4gIGZpbGU6IEZpbGUsXHJcbik6IHtcclxuICBpc1ZhbGlkOiBib29sZWFuXHJcbiAgZXJyb3JzOiBzdHJpbmdbXVxyXG59ID0+IHtcclxuICBjb25zdCBlcnJvcnM6IHN0cmluZ1tdID0gW11cclxuICBjb25zdCBtYXhTaXplID0gMTAgKiAxMDI0ICogMTAyNCAvLyAxME1CXHJcbiAgY29uc3QgYWxsb3dlZFR5cGVzID0gW1xyXG4gICAgXCJpbWFnZS9qcGVnXCIsXHJcbiAgICBcImltYWdlL3BuZ1wiLFxyXG4gICAgXCJpbWFnZS9naWZcIixcclxuICAgIFwiYXBwbGljYXRpb24vcGRmXCIsXHJcbiAgICBcInRleHQvcGxhaW5cIixcclxuICAgIFwiYXBwbGljYXRpb24vbXN3b3JkXCIsXHJcbiAgICBcImFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2luZ21sLmRvY3VtZW50XCIsXHJcbiAgXVxyXG4gIGlmIChmaWxlLnNpemUgPiBtYXhTaXplKSB7XHJcbiAgICBlcnJvcnMucHVzaChcIkZpbGUgc2l6ZSBtdXN0IGJlIGxlc3MgdGhhbiAxME1CXCIpXHJcbiAgfVxyXG4gIGlmICghYWxsb3dlZFR5cGVzLmluY2x1ZGVzKGZpbGUudHlwZSkpIHtcclxuICAgIGVycm9ycy5wdXNoKFwiRmlsZSB0eXBlIG5vdCBhbGxvd2VkXCIpXHJcbiAgfVxyXG4gIC8vIENoZWNrIGZpbGUgZXh0ZW5zaW9uIG1hdGNoZXMgTUlNRSB0eXBlXHJcbiAgY29uc3QgZXh0ZW5zaW9uID0gZmlsZS5uYW1lLnNwbGl0KFwiLlwiKS5wb3AoKT8udG9Mb3dlckNhc2UoKVxyXG4gIGNvbnN0IG1pbWVUeXBlTWFwOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmdbXT4gPSB7XHJcbiAgICBcImltYWdlL2pwZWdcIjogW1wianBnXCIsIFwianBlZ1wiXSxcclxuICAgIFwiaW1hZ2UvcG5nXCI6IFtcInBuZ1wiXSxcclxuICAgIFwiaW1hZ2UvZ2lmXCI6IFtcImdpZlwiXSxcclxuICAgIFwiYXBwbGljYXRpb24vcGRmXCI6IFtcInBkZlwiXSxcclxuICAgIFwidGV4dC9wbGFpblwiOiBbXCJ0eHRcIl0sXHJcbiAgICBcImFwcGxpY2F0aW9uL21zd29yZFwiOiBbXCJkb2NcIl0sXHJcbiAgICBcImFwcGxpY2F0aW9uL3ZuZC5vcGVueG1sZm9ybWF0cy1vZmZpY2Vkb2N1bWVudC53b3JkcHJvY2Vzc2luZ21sLmRvY3VtZW50XCI6IFtcImRvY3hcIl0sXHJcbiAgfVxyXG4gIGNvbnN0IGV4cGVjdGVkRXh0ZW5zaW9ucyA9IG1pbWVUeXBlTWFwW2ZpbGUudHlwZV1cclxuICBpZiAoZXhwZWN0ZWRFeHRlbnNpb25zICYmIGV4dGVuc2lvbiAmJiAhZXhwZWN0ZWRFeHRlbnNpb25zLmluY2x1ZGVzKGV4dGVuc2lvbikpIHtcclxuICAgIGVycm9ycy5wdXNoKFwiRmlsZSBleHRlbnNpb24gZG9lcyBub3QgbWF0Y2ggZmlsZSB0eXBlXCIpXHJcbiAgfVxyXG4gIHJldHVybiB7XHJcbiAgICBpc1ZhbGlkOiBlcnJvcnMubGVuZ3RoID09PSAwLFxyXG4gICAgZXJyb3JzLFxyXG4gIH1cclxufVxyXG5cclxuLy8gWFNTIHByZXZlbnRpb24gZm9yIGR5bmFtaWMgY29udGVudFxyXG5leHBvcnQgY29uc3QgZXNjYXBlSFRNTCA9ICh0ZXh0OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gIGlmICh0eXBlb2YgdGV4dCAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgcmV0dXJuIFwiXCJcclxuICB9XHJcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKVxyXG4gIGRpdi50ZXh0Q29udGVudCA9IHRleHRcclxuICByZXR1cm4gZGl2LmlubmVySFRNTFxyXG59XHJcblxyXG4vLyBTZWN1cmUgcmFuZG9tIHN0cmluZyBnZW5lcmF0aW9uXHJcbmV4cG9ydCBjb25zdCBnZW5lcmF0ZVNlY3VyZVJhbmRvbVN0cmluZyA9IChsZW5ndGggPSAzMik6IHN0cmluZyA9PiB7XHJcbiAgY29uc3QgY2hhcnMgPSBcIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5XCJcclxuICBsZXQgcmVzdWx0ID0gXCJcIlxyXG5cclxuICBpZiAodHlwZW9mIGNyeXB0byAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKSB7XHJcbiAgICBjb25zdCBhcnJheSA9IG5ldyBVaW50OEFycmF5KGxlbmd0aClcclxuICAgIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYXJyYXkpXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHJlc3VsdCArPSBjaGFyc1thcnJheVtpXSAlIGNoYXJzLmxlbmd0aF1cclxuICAgIH1cclxuICB9IGVsc2Uge1xyXG4gICAgLy8gRmFsbGJhY2sgZm9yIGVudmlyb25tZW50cyB3aXRob3V0IGNyeXB0by5nZXRSYW5kb21WYWx1ZXNcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuICAgICAgcmVzdWx0ICs9IGNoYXJzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGNoYXJzLmxlbmd0aCldXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZXR1cm4gcmVzdWx0XHJcbn1cclxuXHJcbi8vIEltcG9ydCBhZHZhbmNlZCBlbmNyeXB0aW9uIHN5c3RlbVxyXG5pbXBvcnQgeyBhZHZhbmNlZEVuY3J5cHRpb24gfSBmcm9tICcuL2VuY3J5cHRpb24nXHJcblxyXG4vLyBMZWdhY3kgZW5jcnlwdGlvbiBrZXkgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcclxuY29uc3QgTEVHQUNZX0VOQ1JZUFRJT05fS0VZID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgXHJcbiAgPyBwcm9jZXNzLmVudi5FTkNSWVBUSU9OX0tFWSB8fCAoKCkgPT4geyBcclxuICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0VOQ1JZUFRJT05fS0VZIG11c3QgYmUgc2V0IGluIHByb2R1Y3Rpb24nKVxyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiAnZGV2LW9ubHktbGVnYWN5LWtleS1ub3QtZm9yLXByb2R1Y3Rpb24nXHJcbiAgICB9KSgpXHJcbiAgOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19FTkNSWVBUSU9OX0tFWSB8fCAoKCkgPT4ge1xyXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTkVYVF9QVUJMSUNfRU5DUllQVElPTl9LRVkgbXVzdCBiZSBzZXQgaW4gcHJvZHVjdGlvbicpXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuICdkZXYtb25seS1jbGllbnQta2V5LW5vdC1mb3ItcHJvZHVjdGlvbidcclxuICAgIH0pKClcclxuXHJcbi8qKlxyXG4gKiBFbmNyeXB0cyBBUEkga2V5cyB1c2luZyBBRVMtMjU2LUdDTSBlbmNyeXB0aW9uXHJcbiAqIEF1dG9tYXRpY2FsbHkgaGFuZGxlcyBib3RoIG5ldyBhbmQgbGVnYWN5IGZvcm1hdHNcclxuICovXHJcbmV4cG9ydCBjb25zdCBlbmNyeXB0QXBpS2V5ID0gYXN5bmMgKGFwaUtleTogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gVXNlIGFkdmFuY2VkIGVuY3J5cHRpb24gZm9yIG5ldyBkYXRhXHJcbiAgICByZXR1cm4gYXdhaXQgYWR2YW5jZWRFbmNyeXB0aW9uLmVuY3J5cHRBcGlLZXkoYXBpS2V5LCB7XHJcbiAgICAgIGVuY3J5cHRlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXHJcbiAgICAgIHNvdXJjZTogJ3NlY3VyaXR5X21vZHVsZSdcclxuICAgIH0pXHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoJ0FkdmFuY2VkIGVuY3J5cHRpb24gZmFpbGVkLCBmYWxsaW5nIGJhY2sgdG8gbGVnYWN5OicsIGVycm9yKVxyXG4gICAgLy8gRmFsbGJhY2sgdG8gbGVnYWN5IGJhc2U2NCBlbmNvZGluZyBmb3IgY29tcGF0aWJpbGl0eVxyXG4gICAgaWYgKHR5cGVvZiBjcnlwdG8gIT09IFwidW5kZWZpbmVkXCIgJiYgY3J5cHRvLnN1YnRsZSkge1xyXG4gICAgICByZXR1cm4gYnRvYShhcGlLZXkgKyBcIjpcIiArIExFR0FDWV9FTkNSWVBUSU9OX0tFWSlcclxuICAgIH1cclxuICAgIHJldHVybiBidG9hKGFwaUtleSlcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBEZWNyeXB0cyBBUEkga2V5cywgaGFuZGxpbmcgYm90aCBuZXcgQUVTLTI1Ni1HQ00gYW5kIGxlZ2FjeSBmb3JtYXRzXHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZGVjcnlwdEFwaUtleSA9IGFzeW5jIChlbmNyeXB0ZWRBcGlLZXk6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIC8vIENoZWNrIGlmIGl0J3MgbmV3IGZvcm1hdCAoSlNPTiBzdHJ1Y3R1cmUpXHJcbiAgICBpZiAoYWR2YW5jZWRFbmNyeXB0aW9uLmlzRW5jcnlwdGVkKGVuY3J5cHRlZEFwaUtleSkpIHtcclxuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYWR2YW5jZWRFbmNyeXB0aW9uLmRlY3J5cHRBcGlLZXkoZW5jcnlwdGVkQXBpS2V5KVxyXG4gICAgICByZXR1cm4gcmVzdWx0LmFwaUtleVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBIYW5kbGUgbGVnYWN5IGZvcm1hdFxyXG4gICAgaWYgKHR5cGVvZiBjcnlwdG8gIT09IFwidW5kZWZpbmVkXCIgJiYgY3J5cHRvLnN1YnRsZSkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGRlY29kZWQgPSBhdG9iKGVuY3J5cHRlZEFwaUtleSlcclxuICAgICAgICBjb25zdCBwYXJ0cyA9IGRlY29kZWQuc3BsaXQoXCI6XCIpXHJcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMiAmJiBwYXJ0c1sxXSA9PT0gTEVHQUNZX0VOQ1JZUFRJT05fS0VZKSB7XHJcbiAgICAgICAgICByZXR1cm4gcGFydHNbMF1cclxuICAgICAgICB9XHJcbiAgICAgIH0gY2F0Y2gge1xyXG4gICAgICAgIC8vIENvbnRpbnVlIHRvIGZhbGxiYWNrXHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gRmluYWwgZmFsbGJhY2sgLSBzaW1wbGUgYmFzZTY0IGRlY29kZVxyXG4gICAgdHJ5IHtcclxuICAgICAgcmV0dXJuIGF0b2IoZW5jcnlwdGVkQXBpS2V5KVxyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIHJldHVybiBlbmNyeXB0ZWRBcGlLZXkgLy8gUmV0dXJuIGFzLWlzIGlmIGFsbCBkZWNvZGluZyBmYWlsc1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdEZWNyeXB0aW9uIGZhaWxlZDonLCBlcnJvcilcclxuICAgIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHRvIGRlY3J5cHQgQVBJIGtleScpXHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogU3luY2hyb25vdXMgdmVyc2lvbnMgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcclxuICogTm90ZTogVGhlc2UgdXNlIGxlZ2FjeSBlbmNyeXB0aW9uIGFuZCBzaG91bGQgYmUgbWlncmF0ZWRcclxuICovXHJcbmV4cG9ydCBjb25zdCBlbmNyeXB0QXBpS2V5U3luYyA9IChhcGlLZXk6IHN0cmluZyk6IHN0cmluZyA9PiB7XHJcbiAgY29uc29sZS53YXJuKCfimqDvuI8gIFVzaW5nIGxlZ2FjeSBzeW5jaHJvbm91cyBlbmNyeXB0aW9uLiBNaWdyYXRlIHRvIGFzeW5jIGVuY3J5cHRBcGlLZXkoKScpXHJcbiAgaWYgKHR5cGVvZiBjcnlwdG8gIT09IFwidW5kZWZpbmVkXCIgJiYgY3J5cHRvLnN1YnRsZSkge1xyXG4gICAgcmV0dXJuIGJ0b2EoYXBpS2V5ICsgXCI6XCIgKyBMRUdBQ1lfRU5DUllQVElPTl9LRVkpXHJcbiAgfVxyXG4gIHJldHVybiBidG9hKGFwaUtleSlcclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGRlY3J5cHRBcGlLZXlTeW5jID0gKGVuY3J5cHRlZEFwaUtleTogc3RyaW5nKTogc3RyaW5nID0+IHtcclxuICBjb25zb2xlLndhcm4oJ+KaoO+4jyAgVXNpbmcgbGVnYWN5IHN5bmNocm9ub3VzIGRlY3J5cHRpb24uIE1pZ3JhdGUgdG8gYXN5bmMgZGVjcnlwdEFwaUtleSgpJylcclxuICBpZiAodHlwZW9mIGNyeXB0byAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjcnlwdG8uc3VidGxlKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBkZWNvZGVkID0gYXRvYihlbmNyeXB0ZWRBcGlLZXkpXHJcbiAgICAgIGNvbnN0IHBhcnRzID0gZGVjb2RlZC5zcGxpdChcIjpcIilcclxuICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMiAmJiBwYXJ0c1sxXSA9PT0gTEVHQUNZX0VOQ1JZUFRJT05fS0VZKSB7XHJcbiAgICAgICAgcmV0dXJuIHBhcnRzWzBdXHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2gge1xyXG4gICAgICAvLyBDb250aW51ZSB0byBmYWxsYmFja1xyXG4gICAgfVxyXG4gIH1cclxuICB0cnkge1xyXG4gICAgcmV0dXJuIGF0b2IoZW5jcnlwdGVkQXBpS2V5KVxyXG4gIH0gY2F0Y2gge1xyXG4gICAgcmV0dXJuIGVuY3J5cHRlZEFwaUtleVxyXG4gIH1cclxufVxyXG5cclxuLy8gR2V0IGNsaWVudCBJUCBhZGRyZXNzXHJcbmV4cG9ydCBjb25zdCBnZXRDbGllbnRJcEFkZHJlc3MgPSBhc3luYyAoKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcclxuICB0cnkge1xyXG4gICAgLy8gVHJ5IHRvIGdldCBJUCBmcm9tIHZhcmlvdXMgc291cmNlc1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgLy8gQ2xpZW50LXNpZGU6IHVzZSBhIHNlcnZpY2UgdG8gZ2V0IHB1YmxpYyBJUFxyXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5pcGlmeS5vcmc/Zm9ybWF0PWpzb24nKVxyXG4gICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpXHJcbiAgICAgIHJldHVybiBkYXRhLmlwIHx8ICd1bmtub3duJ1xyXG4gICAgfVxyXG4gICAgLy8gU2VydmVyLXNpZGU6IHdvdWxkIGdldCBmcm9tIHJlcXVlc3QgaGVhZGVyc1xyXG4gICAgcmV0dXJuICdzZXJ2ZXItc2lkZS1pcCdcclxuICB9IGNhdGNoIHtcclxuICAgIHJldHVybiAndW5rbm93bidcclxuICB9XHJcbn1cclxuXHJcbi8vIENvbnRlbnQgdmFsaWRhdGlvbiBmb3IgdHJhaW5pbmcgbW9kdWxlc1xyXG5leHBvcnQgY29uc3QgdmFsaWRhdGVUcmFpbmluZ0NvbnRlbnQgPSAoXHJcbiAgY29udGVudDogdW5rbm93bixcclxuKToge1xyXG4gIGlzVmFsaWQ6IGJvb2xlYW5cclxuICBlcnJvcnM6IHN0cmluZ1tdXHJcbn0gPT4ge1xyXG4gIGNvbnN0IGVycm9yczogc3RyaW5nW10gPSBbXVxyXG4gIGlmICghY29udGVudCB8fCB0eXBlb2YgY29udGVudCAhPT0gXCJvYmplY3RcIiB8fCBjb250ZW50ID09PSBudWxsKSB7XHJcbiAgICBlcnJvcnMucHVzaChcIkNvbnRlbnQgbXVzdCBiZSBhIHZhbGlkIG9iamVjdFwiKVxyXG4gICAgcmV0dXJuIHsgaXNWYWxpZDogZmFsc2UsIGVycm9ycyB9XHJcbiAgfVxyXG4gIFxyXG4gIGNvbnN0IGNvbnRlbnRPYmogPSBjb250ZW50IGFzIFJlY29yZDxzdHJpbmcsIHVua25vd24+XHJcbiAgXHJcbiAgLy8gVmFsaWRhdGUgcmVxdWlyZWQgZmllbGRzXHJcbiAgY29uc3QgcmVxdWlyZWRGaWVsZHMgPSBbXCJ0aXRsZVwiLCBcImRlc2NyaXB0aW9uXCIsIFwiY2F0ZWdvcnlcIl1cclxuICBmb3IgKGNvbnN0IGZpZWxkIG9mIHJlcXVpcmVkRmllbGRzKSB7XHJcbiAgICBpZiAoIWNvbnRlbnRPYmpbZmllbGRdIHx8IHR5cGVvZiBjb250ZW50T2JqW2ZpZWxkXSAhPT0gXCJzdHJpbmdcIikge1xyXG4gICAgICBlcnJvcnMucHVzaChgJHtmaWVsZH0gaXMgcmVxdWlyZWQgYW5kIG11c3QgYmUgYSBzdHJpbmdgKVxyXG4gICAgfVxyXG4gIH1cclxuICAvLyBWYWxpZGF0ZSB0aXRsZSBsZW5ndGhcclxuICBpZiAoY29udGVudE9iai50aXRsZSAmJiB0eXBlb2YgY29udGVudE9iai50aXRsZSA9PT0gXCJzdHJpbmdcIiAmJiBjb250ZW50T2JqLnRpdGxlLmxlbmd0aCA+IDEwMCkge1xyXG4gICAgZXJyb3JzLnB1c2goXCJUaXRsZSBtdXN0IGJlIGxlc3MgdGhhbiAxMDAgY2hhcmFjdGVyc1wiKVxyXG4gIH1cclxuICAvLyBWYWxpZGF0ZSBkZXNjcmlwdGlvbiBsZW5ndGhcclxuICBpZiAoY29udGVudE9iai5kZXNjcmlwdGlvbiAmJiB0eXBlb2YgY29udGVudE9iai5kZXNjcmlwdGlvbiA9PT0gXCJzdHJpbmdcIiAmJiBjb250ZW50T2JqLmRlc2NyaXB0aW9uLmxlbmd0aCA+IDEwMDApIHtcclxuICAgIGVycm9ycy5wdXNoKFwiRGVzY3JpcHRpb24gbXVzdCBiZSBsZXNzIHRoYW4gMTAwMCBjaGFyYWN0ZXJzXCIpXHJcbiAgfVxyXG4gIC8vIFZhbGlkYXRlIGNhdGVnb3J5XHJcbiAgY29uc3QgYWxsb3dlZENhdGVnb3JpZXMgPSBbXCJzZWN1cml0eVwiLCBcImNvbXBsaWFuY2VcIiwgXCJ0ZWNobmljYWxcIiwgXCJzb2Z0LXNraWxsc1wiLCBcIm9uYm9hcmRpbmdcIl1cclxuICBpZiAoY29udGVudE9iai5jYXRlZ29yeSAmJiB0eXBlb2YgY29udGVudE9iai5jYXRlZ29yeSA9PT0gXCJzdHJpbmdcIiAmJiAhYWxsb3dlZENhdGVnb3JpZXMuaW5jbHVkZXMoY29udGVudE9iai5jYXRlZ29yeSkpIHtcclxuICAgIGVycm9ycy5wdXNoKFwiSW52YWxpZCBjYXRlZ29yeVwiKVxyXG4gIH1cclxuICByZXR1cm4ge1xyXG4gICAgaXNWYWxpZDogZXJyb3JzLmxlbmd0aCA9PT0gMCxcclxuICAgIGVycm9ycyxcclxuICB9XHJcbn1cclxuXHJcbi8vIFNlY3VyaXR5IGhlYWRlcnMgZm9yIEFQSSByZXNwb25zZXNcclxuZXhwb3J0IGNvbnN0IGdldFNlY3VyaXR5SGVhZGVycyA9ICgpOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgXCJYLUNvbnRlbnQtVHlwZS1PcHRpb25zXCI6IFwibm9zbmlmZlwiLFxyXG4gICAgXCJYLUZyYW1lLU9wdGlvbnNcIjogXCJERU5ZXCIsXHJcbiAgICBcIlgtWFNTLVByb3RlY3Rpb25cIjogXCIxOyBtb2RlPWJsb2NrXCIsXHJcbiAgICBcIlJlZmVycmVyLVBvbGljeVwiOiBcInN0cmljdC1vcmlnaW4td2hlbi1jcm9zcy1vcmlnaW5cIixcclxuICAgIFwiUGVybWlzc2lvbnMtUG9saWN5XCI6IFwiY2FtZXJhPSgpLCBtaWNyb3Bob25lPSgpLCBnZW9sb2NhdGlvbj0oKVwiLFxyXG4gICAgLi4uY3NwSGVhZGVycyxcclxuICB9XHJcbn1cclxuXHJcbi8vIFJhdGUgbGltaXRpbmcgY2hlY2sgZm9yIHVzZXIgYWN0aW9uc1xyXG5leHBvcnQgY29uc3QgY2hlY2tSYXRlTGltaXQgPSAodXNlcklkOiBzdHJpbmcsIGFjdGlvbjogc3RyaW5nKTogYm9vbGVhbiA9PiB7XHJcbiAgY29uc3Qga2V5ID0gYCR7dXNlcklkfToke2FjdGlvbn1gXHJcbiAgcmV0dXJuIHJhdGVMaW1pdGVyLmlzQWxsb3dlZChrZXkpXHJcbn1cclxuXHJcbi8vIEF1ZGl0IGxvZ2dpbmcgZm9yIHNlY3VyaXR5IGV2ZW50c1xyXG5leHBvcnQgY29uc3QgbG9nU2VjdXJpdHlFdmVudCA9IChldmVudDoge1xyXG4gIHR5cGU6IFwibG9naW5cIiB8IFwibG9nb3V0XCIgfCBcImZhaWxlZF9sb2dpblwiIHwgXCJwZXJtaXNzaW9uX2RlbmllZFwiIHwgXCJkYXRhX2FjY2Vzc1wiIHwgXCJkYXRhX21vZGlmaWNhdGlvblwiXHJcbiAgdXNlcklkPzogc3RyaW5nXHJcbiAgaXA/OiBzdHJpbmdcclxuICB1c2VyQWdlbnQ/OiBzdHJpbmdcclxuICBkZXRhaWxzPzogUmVjb3JkPHN0cmluZywgdW5rbm93bj5cclxufSk6IHZvaWQgPT4ge1xyXG4gIGNvbnN0IGxvZ0VudHJ5ID0ge1xyXG4gICAgLi4uZXZlbnQsXHJcbiAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcclxuICAgIHNlc3Npb25JZDogZ2VuZXJhdGVTZWN1cmVSYW5kb21TdHJpbmcoMTYpLFxyXG4gIH1cclxuICAvLyBJbiBhIHJlYWwgaW1wbGVtZW50YXRpb24sIHRoaXMgd291bGQgYmUgc2VudCB0byBhIHNlY3VyZSBsb2dnaW5nIHNlcnZpY2VcclxuICBjb25zb2xlLmxvZyhcIlNlY3VyaXR5IEV2ZW50OlwiLCBsb2dFbnRyeSlcclxuICAvLyBTZW5kIHRvIHNlY3VyaXR5IG1vbml0b3Jpbmcgc2VydmljZVxyXG4gIGlmICh0eXBlb2YgZmV0Y2ggIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgIGZldGNoKFwiL2FwaS9zZWN1cml0eS9hdWRpdFwiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgICAuLi5nZXRTZWN1cml0eUhlYWRlcnMoKSxcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkobG9nRW50cnkpLFxyXG4gICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgIGNvbnNvbGUud2FybihcIkZhaWxlZCB0byBsb2cgc2VjdXJpdHkgZXZlbnQ6XCIsIGVycm9yKVxyXG4gICAgfSlcclxuICB9XHJcbn1cclxuXHJcbi8vIFNlY3VyaXR5IHNlcnZpY2Ugb2JqZWN0IHdpdGggcmVxdWlyZWQgbWV0aG9kc1xyXG5leHBvcnQgY29uc3Qgc2VjdXJpdHlTZXJ2aWNlID0ge1xyXG4gIHZhbGlkYXRlQ1NSRlRva2VuOiAodG9rZW46IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xyXG4gICAgcmV0dXJuIGlzVmFsaWRTZXNzaW9uVG9rZW4odG9rZW4pXHJcbiAgfSxcclxuICBcclxuICB2YWxpZGF0ZVNlc3Npb246IChzZXNzaW9uSWQ6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xyXG4gICAgcmV0dXJuIGlzVmFsaWRTZXNzaW9uVG9rZW4oc2Vzc2lvbklkKVxyXG4gIH0sXHJcbiAgXHJcbiAgc2FuaXRpemVJbnB1dDogKGlucHV0OiBzdHJpbmcpOiBzdHJpbmcgPT4ge1xyXG4gICAgcmV0dXJuIHNhbml0aXplVXNlcklucHV0KGlucHV0KVxyXG4gIH0sXHJcbiAgXHJcbiAgZ2VuZXJhdGVDU1BIZWFkZXI6ICgpOiBzdHJpbmcgPT4ge1xyXG4gICAgcmV0dXJuIGNzcEhlYWRlcnNbXCJDb250ZW50LVNlY3VyaXR5LVBvbGljeVwiXVxyXG4gIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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