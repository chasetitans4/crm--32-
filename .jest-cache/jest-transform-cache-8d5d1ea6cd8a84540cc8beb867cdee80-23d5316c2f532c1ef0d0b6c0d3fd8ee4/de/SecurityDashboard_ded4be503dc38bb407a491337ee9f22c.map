{"version":3,"names":["_default","SecurityDashboard","cov_v3d2ooo7t","f","metrics","setMetrics","s","_react","useState","totalUsers","activeUsers","failedLogins24h","successfulLogins24h","highRiskEvents","mfaEnabled","suspiciousActivity","systemHealth","auditMetrics","setAuditMetrics","auditEvents","setAuditEvents","roles","setRoles","searchFilters","setSearchFilters","selectedEvent","setSelectedEvent","loading","setLoading","activeTab","setActiveTab","useEffect","loadSecurityData","now","Date","yesterday","getTime","auditData","_enhancedAuditLog","enhancedAuditLogService","getMetrics","from","to","recentEvents","searchEvents","events","allRoles","_granularRBAC","granularRBACService","getAllRoles","getSuspiciousActivity","uniqueUsers","Math","floor","failedLogins","successfulLogins","multipleFailedLogins","length","offHoursActivity","b","error","console","handleSearchEvents","results","handleExportAuditData","csvData","exportAuditData","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","_datefns","format","body","appendChild","click","removeChild","revokeObjectURL","getSeverityColor","severity","getEventTypeIcon","eventType","_jsxruntime","jsx","_lucidereact","UserCheck","className","AlertTriangle","Eye","Activity","Shield","getRiskScoreColor","score","jsxs","_button","Button","variant","onClick","Download","_alert","Alert","AlertTitle","AlertDescription","_card","Card","CardHeader","CardTitle","Users","CardContent","Lock","round","_tabs","Tabs","value","onValueChange","TabsList","TabsTrigger","TabsContent","CardDescription","slice","map","event","action","userEmail","timestamp","_badge","Badge","id","topUsers","user","index","eventCount","TrendingUp","userId","_input","Input","placeholder","searchText","onChange","e","target","_select","Select","undefined","SelectTrigger","SelectValue","SelectContent","SelectItem","Search","_table","Table","TableHeader","TableRow","TableHead","TableBody","TableCell","resource","riskScore","toFixed","success","_dialog","Dialog","DialogTrigger","asChild","size","DialogContent","DialogHeader","DialogTitle","DialogDescription","ipAddress","JSON","stringify","details","tags","tag","role","name","description","permissions","requiresMFA","dataAccessLevel","isActive","_dropdownmenu","DropdownMenu","DropdownMenuTrigger","MoreHorizontal","DropdownMenuContent","align","DropdownMenuLabel","DropdownMenuItem","DropdownMenuSeparator","isSystemRole","count","lastAttempt"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\security\\SecurityDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from '@/components/ui/tabs';\nimport {\n  Alert,\n  AlertDescription,\n  AlertTitle,\n} from '@/components/ui/alert';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  Shield,\n  AlertTriangle,\n  Users,\n  Activity,\n  Lock,\n  Eye,\n  Download,\n  Filter,\n  Search,\n  MoreHorizontal,\n  UserCheck,\n  UserX,\n  Clock,\n  MapPin,\n  TrendingUp,\n  TrendingDown\n} from 'lucide-react';\nimport { enhancedAuditLogService, type EnhancedAuditEvent, type AuditMetrics, type AuditSearchFilters } from '@/services/enhancedAuditLog';\nimport { granularRBACService, type GranularRole, type UserRoleAssignment } from '@/services/granularRBAC';\nimport { format } from 'date-fns';\n\ninterface SecurityMetrics {\n  totalUsers: number;\n  activeUsers: number;\n  failedLogins24h: number;\n  successfulLogins24h: number;\n  highRiskEvents: number;\n  mfaEnabled: number;\n  suspiciousActivity: number;\n  systemHealth: 'good' | 'warning' | 'critical';\n}\n\nconst SecurityDashboard: React.FC = () => {\n  const [metrics, setMetrics] = useState<SecurityMetrics>({\n    totalUsers: 0,\n    activeUsers: 0,\n    failedLogins24h: 0,\n    successfulLogins24h: 0,\n    highRiskEvents: 0,\n    mfaEnabled: 0,\n    suspiciousActivity: 0,\n    systemHealth: 'good'\n  });\n  \n  const [auditMetrics, setAuditMetrics] = useState<AuditMetrics | null>(null);\n  const [auditEvents, setAuditEvents] = useState<EnhancedAuditEvent[]>([]);\n  const [roles, setRoles] = useState<GranularRole[]>([]);\n  const [searchFilters, setSearchFilters] = useState<AuditSearchFilters>({});\n  const [selectedEvent, setSelectedEvent] = useState<EnhancedAuditEvent | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState('overview');\n\n  useEffect(() => {\n    loadSecurityData();\n  }, []);\n\n  const loadSecurityData = async () => {\n    try {\n      setLoading(true);\n      \n      // Load audit metrics\n      const now = new Date();\n      const yesterday = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n      const auditData = enhancedAuditLogService.getMetrics({ from: yesterday, to: now });\n      setAuditMetrics(auditData);\n      \n      // Load recent audit events\n      const recentEvents = enhancedAuditLogService.searchEvents({}, 50, 0);\n      setAuditEvents(recentEvents.events);\n      \n      // Load roles\n      const allRoles = granularRBACService.getAllRoles();\n      setRoles(allRoles);\n      \n      // Calculate security metrics\n      const suspiciousActivity = enhancedAuditLogService.getSuspiciousActivity();\n      \n      setMetrics({\n        totalUsers: auditData.uniqueUsers,\n        activeUsers: Math.floor(auditData.uniqueUsers * 0.8), // Simulated\n        failedLogins24h: auditData.failedLogins,\n        successfulLogins24h: auditData.successfulLogins,\n        highRiskEvents: auditData.highRiskEvents,\n        mfaEnabled: Math.floor(auditData.uniqueUsers * 0.6), // Simulated\n        suspiciousActivity: suspiciousActivity.multipleFailedLogins.length + \n                           suspiciousActivity.offHoursActivity.length + \n                           suspiciousActivity.highRiskEvents.length,\n        systemHealth: auditData.highRiskEvents > 10 ? 'critical' : \n                     auditData.highRiskEvents > 5 ? 'warning' : 'good'\n      });\n    } catch (error) {\n      console.error('Error loading security data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSearchEvents = () => {\n    const results = enhancedAuditLogService.searchEvents(searchFilters, 100, 0);\n    setAuditEvents(results.events);\n  };\n\n  const handleExportAuditData = () => {\n    const csvData = enhancedAuditLogService.exportAuditData(searchFilters, 'csv');\n    const blob = new Blob([csvData], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `audit-log-${format(new Date(), 'yyyy-MM-dd')}.csv`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'critical': return 'bg-red-100 text-red-800 border-red-200';\n      case 'high': return 'bg-orange-100 text-orange-800 border-orange-200';\n      case 'medium': return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'low': return 'bg-blue-100 text-blue-800 border-blue-200';\n      case 'info': return 'bg-gray-100 text-gray-800 border-gray-200';\n      default: return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getEventTypeIcon = (eventType: string) => {\n    switch (eventType) {\n      case 'auth': return <UserCheck className=\"h-4 w-4\" />;\n      case 'security_violation': return <AlertTriangle className=\"h-4 w-4\" />;\n      case 'data_access': return <Eye className=\"h-4 w-4\" />;\n      case 'data_modification': return <Activity className=\"h-4 w-4\" />;\n      case 'system_event': return <Shield className=\"h-4 w-4\" />;\n      default: return <Activity className=\"h-4 w-4\" />;\n    }\n  };\n\n  const getRiskScoreColor = (score: number) => {\n    if (score >= 0.8) return 'text-red-600';\n    if (score >= 0.6) return 'text-orange-600';\n    if (score >= 0.4) return 'text-yellow-600';\n    return 'text-green-600';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Security Dashboard</h1>\n          <p className=\"text-muted-foreground\">\n            Monitor security events, audit logs, and user access\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"outline\" onClick={loadSecurityData}>\n            <Activity className=\"h-4 w-4 mr-2\" />\n            Refresh\n          </Button>\n          <Button variant=\"outline\" onClick={handleExportAuditData}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* System Health Alert */}\n      {metrics.systemHealth !== 'good' && (\n        <Alert className={metrics.systemHealth === 'critical' ? 'border-red-200 bg-red-50' : 'border-yellow-200 bg-yellow-50'}>\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertTitle>\n            {metrics.systemHealth === 'critical' ? 'Critical Security Alert' : 'Security Warning'}\n          </AlertTitle>\n          <AlertDescription>\n            {metrics.systemHealth === 'critical' \n              ? `${metrics.highRiskEvents} high-risk security events detected in the last 24 hours. Immediate attention required.`\n              : `${metrics.highRiskEvents} high-risk security events detected. Please review recent activity.`\n            }\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Security Metrics Cards */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.totalUsers}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {metrics.activeUsers} active users\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Login Activity</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">{metrics.successfulLogins24h}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              <span className=\"text-red-600\">{metrics.failedLogins24h}</span> failed attempts\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">High Risk Events</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className={`text-2xl font-bold ${metrics.highRiskEvents > 5 ? 'text-red-600' : 'text-green-600'}`}>\n              {metrics.highRiskEvents}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Last 24 hours\n            </p>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">MFA Enabled</CardTitle>\n            <Lock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{metrics.mfaEnabled}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {Math.round((metrics.mfaEnabled / metrics.totalUsers) * 100)}% coverage\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Main Content Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n          <TabsTrigger value=\"audit-logs\">Audit Logs</TabsTrigger>\n          <TabsTrigger value=\"user-access\">User Access</TabsTrigger>\n          <TabsTrigger value=\"suspicious\">Suspicious Activity</TabsTrigger>\n        </TabsList>\n\n        {/* Overview Tab */}\n        <TabsContent value=\"overview\" className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            {/* Recent Activity */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Security Events</CardTitle>\n                <CardDescription>Latest high-priority security events</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {auditEvents.slice(0, 5).map((event) => (\n                    <div key={event.id} className=\"flex items-center space-x-3\">\n                      <div className=\"flex-shrink-0\">\n                        {getEventTypeIcon(event.eventType)}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium truncate\">{event.action}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {event.userEmail} • {format(event.timestamp || new Date(), 'MMM d, HH:mm')}\n                        </p>\n                      </div>\n                      <Badge className={getSeverityColor(event.severity)}>\n                        {event.severity}\n                      </Badge>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Top Users by Activity */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Most Active Users</CardTitle>\n                <CardDescription>Users with highest activity in last 24h</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {auditMetrics?.topUsers.slice(0, 5).map((user, index) => (\n                    <div key={user.userId} className=\"flex items-center space-x-3\">\n                      <div className=\"flex-shrink-0 w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center text-xs font-medium text-blue-600\">\n                        {index + 1}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium truncate\">{user.userEmail}</p>\n                        <p className=\"text-xs text-muted-foreground\">{user.eventCount} events</p>\n                      </div>\n                      <TrendingUp className=\"h-4 w-4 text-green-600\" />\n                    </div>\n                  )) || []}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        {/* Audit Logs Tab */}\n        <TabsContent value=\"audit-logs\" className=\"space-y-4\">\n          {/* Search and Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Search Audit Logs</CardTitle>\n              <CardDescription>Filter and search through security audit logs</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid gap-4 md:grid-cols-4\">\n                <div>\n                  <Input\n                    placeholder=\"Search events...\"\n                    value={searchFilters.searchText || ''}\n                    onChange={(e) => setSearchFilters({ ...searchFilters, searchText: e.target.value })}\n                  />\n                </div>\n                <div>\n                  <Select\n                    value={searchFilters.eventType?.[0] || ''}\n                    onValueChange={(value) => setSearchFilters({ \n                      ...searchFilters, \n                      eventType: value ? [value] : undefined \n                    })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Event Type\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">All Types</SelectItem>\n                      <SelectItem value=\"auth\">Authentication</SelectItem>\n                      <SelectItem value=\"data_access\">Data Access</SelectItem>\n                      <SelectItem value=\"data_modification\">Data Modification</SelectItem>\n                      <SelectItem value=\"security_violation\">Security Violation</SelectItem>\n                      <SelectItem value=\"system_event\">System Event</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Select\n                    value={searchFilters.severity?.[0] || ''}\n                    onValueChange={(value) => setSearchFilters({ \n                      ...searchFilters, \n                      severity: value ? [value] : undefined \n                    })}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Severity\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">All Severities</SelectItem>\n                      <SelectItem value=\"critical\">Critical</SelectItem>\n                      <SelectItem value=\"high\">High</SelectItem>\n                      <SelectItem value=\"medium\">Medium</SelectItem>\n                      <SelectItem value=\"low\">Low</SelectItem>\n                      <SelectItem value=\"info\">Info</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                <div>\n                  <Button onClick={handleSearchEvents} className=\"w-full\">\n                    <Search className=\"h-4 w-4 mr-2\" />\n                    Search\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Audit Events Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Audit Events</CardTitle>\n              <CardDescription>{auditEvents.length} events found</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Timestamp</TableHead>\n                    <TableHead>Event</TableHead>\n                    <TableHead>User</TableHead>\n                    <TableHead>Resource</TableHead>\n                    <TableHead>Severity</TableHead>\n                    <TableHead>Risk Score</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead></TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {auditEvents.map((event) => (\n                    <TableRow key={event.id}>\n                      <TableCell className=\"text-sm\">\n                        {format(event.timestamp || new Date(), 'MMM d, HH:mm:ss')}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex items-center space-x-2\">\n                          {getEventTypeIcon(event.eventType)}\n                          <span className=\"text-sm\">{event.action}</span>\n                        </div>\n                      </TableCell>\n                      <TableCell className=\"text-sm\">\n                        {event.userEmail || 'System'}\n                      </TableCell>\n                      <TableCell className=\"text-sm\">{event.resource}</TableCell>\n                      <TableCell>\n                        <Badge className={getSeverityColor(event.severity)}>\n                          {event.severity}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <span className={`text-sm font-medium ${getRiskScoreColor(event.riskScore || 0)}`}>\n                          {((event.riskScore || 0) * 100).toFixed(0)}%\n                        </span>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={event.success ? 'default' : 'destructive'}>\n                          {event.success ? 'Success' : 'Failed'}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <Dialog>\n                          <DialogTrigger asChild>\n                            <Button variant=\"ghost\" size=\"sm\" onClick={() => setSelectedEvent(event)}>\n                              <Eye className=\"h-4 w-4\" />\n                            </Button>\n                          </DialogTrigger>\n                          <DialogContent className=\"max-w-2xl\">\n                            <DialogHeader>\n                              <DialogTitle>Event Details</DialogTitle>\n                              <DialogDescription>\n                                Detailed information about this security event\n                              </DialogDescription>\n                            </DialogHeader>\n                            {selectedEvent && (\n                              <div className=\"space-y-4\">\n                                <div className=\"grid gap-4 md:grid-cols-2\">\n                                  <div>\n                                    <label className=\"text-sm font-medium\">Event ID</label>\n                                    <p className=\"text-sm text-muted-foreground\">{selectedEvent.id}</p>\n                                  </div>\n                                  <div>\n                                    <label className=\"text-sm font-medium\">Timestamp</label>\n                                    <p className=\"text-sm text-muted-foreground\">\n                                      {format(selectedEvent.timestamp || new Date(), 'PPpp')}\n                                    </p>\n                                  </div>\n                                  <div>\n                                    <label className=\"text-sm font-medium\">User</label>\n                                    <p className=\"text-sm text-muted-foreground\">\n                                      {selectedEvent.userEmail || 'System'}\n                                    </p>\n                                  </div>\n                                  <div>\n                                    <label className=\"text-sm font-medium\">IP Address</label>\n                                    <p className=\"text-sm text-muted-foreground\">\n                                      {selectedEvent.ipAddress || 'N/A'}\n                                    </p>\n                                  </div>\n                                  <div>\n                                    <label className=\"text-sm font-medium\">Action</label>\n                                    <p className=\"text-sm text-muted-foreground\">{selectedEvent.action}</p>\n                                  </div>\n                                  <div>\n                                    <label className=\"text-sm font-medium\">Resource</label>\n                                    <p className=\"text-sm text-muted-foreground\">{selectedEvent.resource}</p>\n                                  </div>\n                                </div>\n                                <div>\n                                  <label className=\"text-sm font-medium\">Details</label>\n                                  <pre className=\"text-xs bg-gray-50 p-3 rounded-md overflow-auto max-h-40\">\n                                    {JSON.stringify(selectedEvent.details, null, 2)}\n                                  </pre>\n                                </div>\n                                {selectedEvent.tags && selectedEvent.tags.length > 0 && (\n                                  <div>\n                                    <label className=\"text-sm font-medium\">Tags</label>\n                                    <div className=\"flex flex-wrap gap-1 mt-1\">\n                                      {selectedEvent.tags.map((tag) => (\n                                        <Badge key={tag} variant=\"outline\" className=\"text-xs\">\n                                          {tag}\n                                        </Badge>\n                                      ))}\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            )}\n                          </DialogContent>\n                        </Dialog>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* User Access Tab */}\n        <TabsContent value=\"user-access\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Role Management</CardTitle>\n              <CardDescription>Manage user roles and permissions</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Role Name</TableHead>\n                    <TableHead>Description</TableHead>\n                    <TableHead>Permissions</TableHead>\n                    <TableHead>MFA Required</TableHead>\n                    <TableHead>Data Access</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead></TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {roles.map((role) => (\n                    <TableRow key={role.id}>\n                      <TableCell className=\"font-medium\">{role.name}</TableCell>\n                      <TableCell className=\"text-sm text-muted-foreground\">\n                        {role.description}\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant=\"outline\">\n                          {role.permissions.length} permissions\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={role.requiresMFA ? 'default' : 'secondary'}>\n                          {role.requiresMFA ? 'Required' : 'Optional'}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <Badge className={role.dataAccessLevel === 'admin' ? 'bg-red-100 text-red-800' : \n                                        role.dataAccessLevel === 'write' ? 'bg-yellow-100 text-yellow-800' : \n                                        'bg-green-100 text-green-800'}>\n                          {role.dataAccessLevel}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={role.isActive ? 'default' : 'secondary'}>\n                          {role.isActive ? 'Active' : 'Inactive'}\n                        </Badge>\n                      </TableCell>\n                      <TableCell>\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button variant=\"ghost\" size=\"sm\">\n                              <MoreHorizontal className=\"h-4 w-4\" />\n                            </Button>\n                          </DropdownMenuTrigger>\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuLabel>Actions</DropdownMenuLabel>\n                            <DropdownMenuItem>\n                              <Eye className=\"h-4 w-4 mr-2\" />\n                              View Details\n                            </DropdownMenuItem>\n                            <DropdownMenuItem>\n                              <Users className=\"h-4 w-4 mr-2\" />\n                              Manage Users\n                            </DropdownMenuItem>\n                            <DropdownMenuSeparator />\n                            <DropdownMenuItem>\n                              Edit Role\n                            </DropdownMenuItem>\n                            {!role.isSystemRole && (\n                              <DropdownMenuItem className=\"text-red-600\">\n                                Delete Role\n                              </DropdownMenuItem>\n                            )}\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* Suspicious Activity Tab */}\n        <TabsContent value=\"suspicious\" className=\"space-y-4\">\n          <div className=\"grid gap-4 md:grid-cols-2\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Failed Login Attempts</CardTitle>\n                <CardDescription>Users with multiple failed login attempts</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {enhancedAuditLogService.getSuspiciousActivity().multipleFailedLogins.map((user) => (\n                    <div key={user.userId} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div>\n                        <p className=\"text-sm font-medium\">{user.userId}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {user.count} failed attempts\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-xs text-muted-foreground\">\n                          Last: {format(user.lastAttempt, 'MMM d, HH:mm')}\n                        </p>\n                        <Badge variant=\"destructive\">High Risk</Badge>\n                      </div>\n                    </div>\n                  ))}\n                  {enhancedAuditLogService.getSuspiciousActivity().multipleFailedLogins.length === 0 && (\n                    <p className=\"text-sm text-muted-foreground text-center py-4\">\n                      No suspicious login activity detected\n                    </p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader>\n                <CardTitle>Off-Hours Activity</CardTitle>\n                <CardDescription>Activity outside normal business hours</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {enhancedAuditLogService.getSuspiciousActivity().offHoursActivity.slice(0, 5).map((event) => (\n                    <div key={event.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div>\n                        <p className=\"text-sm font-medium\">{event.action}</p>\n                        <p className=\"text-xs text-muted-foreground\">\n                          {event.userEmail}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-xs text-muted-foreground\">\n                          {format(event.timestamp || new Date(), 'MMM d, HH:mm')}\n                        </p>\n                        <Badge variant=\"outline\">Off-Hours</Badge>\n                      </div>\n                    </div>\n                  ))}\n                  {enhancedAuditLogService.getSuspiciousActivity().offHoursActivity.length === 0 && (\n                    <p className=\"text-sm text-muted-foreground text-center py-4\">\n                      No off-hours activity detected\n                    </p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default SecurityDashboard;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}