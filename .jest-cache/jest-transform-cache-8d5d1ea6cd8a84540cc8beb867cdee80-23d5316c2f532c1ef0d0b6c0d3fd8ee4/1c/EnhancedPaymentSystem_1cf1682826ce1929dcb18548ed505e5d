4c3c566f9de0e74a589a5a391b13e054
"use client";
"use strict";

/* istanbul ignore next */
function cov_1006xtvesb() {
  var path = "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\EnhancedPaymentSystem.tsx";
  var hash = "1f005cf18893d0e958e05a3af92aa286dc39a384";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\EnhancedPaymentSystem.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 14,
          column: 44
        }
      },
      "6": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 15,
          column: 52
        }
      },
      "7": {
        start: {
          line: 16,
          column: 20
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "8": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 56
        }
      },
      "9": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 39
        },
        end: {
          line: 19,
          column: 51
        }
      },
      "11": {
        start: {
          line: 20,
          column: 28
        },
        end: {
          line: 20,
          column: 41
        }
      },
      "12": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 40
        }
      },
      "13": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "14": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 66
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 19
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 33,
          column: 10
        }
      },
      "19": {
        start: {
          line: 35,
          column: 16
        },
        end: {
          line: 35,
          column: 53
        }
      },
      "20": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 30
        }
      },
      "22": {
        start: {
          line: 39,
          column: 17
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 32
        },
        end: {
          line: 42,
          column: 88
        }
      },
      "24": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "26": {
        start: {
          line: 45,
          column: 23
        },
        end: {
          line: 45,
          column: 95
        }
      },
      "27": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 50,
          column: 13
        }
      },
      "28": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "29": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 39
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 25
        }
      },
      "31": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "32": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 31
        }
      },
      "33": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 18
        }
      },
      "34": {
        start: {
          line: 59,
          column: 30
        },
        end: {
          line: 522,
          column: 1
        }
      },
      "35": {
        start: {
          line: 63,
          column: 39
        },
        end: {
          line: 63,
          column: 67
        }
      },
      "36": {
        start: {
          line: 64,
          column: 48
        },
        end: {
          line: 64,
          column: 78
        }
      },
      "37": {
        start: {
          line: 65,
          column: 46
        },
        end: {
          line: 65,
          column: 74
        }
      },
      "38": {
        start: {
          line: 66,
          column: 40
        },
        end: {
          line: 66,
          column: 67
        }
      },
      "39": {
        start: {
          line: 67,
          column: 42
        },
        end: {
          line: 67,
          column: 68
        }
      },
      "40": {
        start: {
          line: 68,
          column: 54
        },
        end: {
          line: 68,
          column: 81
        }
      },
      "41": {
        start: {
          line: 69,
          column: 42
        },
        end: {
          line: 74,
          column: 6
        }
      },
      "42": {
        start: {
          line: 76,
          column: 33
        },
        end: {
          line: 94,
          column: 10
        }
      },
      "43": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "44": {
        start: {
          line: 79,
          column: 35
        },
        end: {
          line: 79,
          column: 86
        }
      },
      "45": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 83,
          column: 20
        }
      },
      "46": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 83,
          column: 17
        }
      },
      "47": {
        start: {
          line: 85,
          column: 31
        },
        end: {
          line: 85,
          column: 65
        }
      },
      "48": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 88
        }
      },
      "49": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 30
        }
      },
      "50": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 68
        }
      },
      "51": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 65
        }
      },
      "52": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 110,
          column: 10
        }
      },
      "53": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "54": {
        start: {
          line: 104,
          column: 21
        },
        end: {
          line: 104,
          column: 62
        }
      },
      "55": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "56": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "57": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 61
        }
      },
      "58": {
        start: {
          line: 111,
          column: 4
        },
        end: {
          line: 115,
          column: 7
        }
      },
      "59": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 33
        }
      },
      "60": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "61": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "62": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 33
        }
      },
      "63": {
        start: {
          line: 124,
          column: 36
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "64": {
        start: {
          line: 153,
          column: 29
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "65": {
        start: {
          line: 154,
          column: 18
        },
        end: {
          line: 154,
          column: 67
        }
      },
      "66": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 155,
          column: 44
        }
      },
      "67": {
        start: {
          line: 156,
          column: 22
        },
        end: {
          line: 156,
          column: 49
        }
      },
      "68": {
        start: {
          line: 157,
          column: 22
        },
        end: {
          line: 157,
          column: 24
        }
      },
      "69": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "70": {
        start: {
          line: 158,
          column: 20
        },
        end: {
          line: 158,
          column: 21
        }
      },
      "71": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 50
        }
      },
      "72": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 54
        }
      },
      "73": {
        start: {
          line: 163,
          column: 25
        },
        end: {
          line: 169,
          column: 5
        }
      },
      "74": {
        start: {
          line: 164,
          column: 18
        },
        end: {
          line: 164,
          column: 67
        }
      },
      "75": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "76": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 63
        }
      },
      "77": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 21
        }
      },
      "78": {
        start: {
          line: 170,
          column: 32
        },
        end: {
          line: 190,
          column: 5
        }
      },
      "79": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "80": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 32
        }
      },
      "81": {
        start: {
          line: 174,
          column: 29
        },
        end: {
          line: 182,
          column: 13
        }
      },
      "82": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 37
        }
      },
      "83": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 75
        }
      },
      "84": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 186,
          column: 66
        }
      },
      "85": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 33
        }
      },
      "86": {
        start: {
          line: 191,
          column: 27
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "87": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "88": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 32
        }
      },
      "89": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 199,
          column: 13
        }
      },
      "90": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 198,
          column: 17
        }
      },
      "91": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 197,
          column: 71
        }
      },
      "92": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 68
        }
      },
      "93": {
        start: {
          line: 203,
          column: 41
        },
        end: {
          line: 203,
          column: 66
        }
      },
      "94": {
        start: {
          line: 204,
          column: 32
        },
        end: {
          line: 214,
          column: 13
        }
      },
      "95": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 33
        }
      },
      "96": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 35
        }
      },
      "97": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 113
        }
      },
      "98": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 33
        }
      },
      "99": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 99
        }
      },
      "100": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 33
        }
      },
      "101": {
        start: {
          line: 227,
          column: 28
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "102": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "103": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 59
        }
      },
      "104": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 71
        }
      },
      "105": {
        start: {
          line: 233,
          column: 4
        },
        end: {
          line: 521,
          column: 7
        }
      },
      "106": {
        start: {
          line: 268,
          column: 75
        },
        end: {
          line: 268,
          column: 89
        }
      },
      "107": {
        start: {
          line: 268,
          column: 119
        },
        end: {
          line: 281,
          column: 41
        }
      },
      "108": {
        start: {
          line: 269,
          column: 45
        },
        end: {
          line: 269,
          column: 73
        }
      },
      "109": {
        start: {
          line: 302,
          column: 47
        },
        end: {
          line: 302,
          column: 87
        }
      },
      "110": {
        start: {
          line: 334,
          column: 60
        },
        end: {
          line: 334,
          column: 92
        }
      },
      "111": {
        start: {
          line: 335,
          column: 36
        },
        end: {
          line: 338,
          column: 44
        }
      },
      "112": {
        start: {
          line: 335,
          column: 60
        },
        end: {
          line: 338,
          column: 41
        }
      },
      "113": {
        start: {
          line: 339,
          column: 36
        },
        end: {
          line: 339,
          column: 84
        }
      },
      "114": {
        start: {
          line: 360,
          column: 68
        },
        end: {
          line: 360,
          column: 96
        }
      },
      "115": {
        start: {
          line: 361,
          column: 44
        },
        end: {
          line: 364,
          column: 52
        }
      },
      "116": {
        start: {
          line: 361,
          column: 68
        },
        end: {
          line: 364,
          column: 49
        }
      },
      "117": {
        start: {
          line: 365,
          column: 44
        },
        end: {
          line: 365,
          column: 92
        }
      },
      "118": {
        start: {
          line: 383,
          column: 61
        },
        end: {
          line: 383,
          column: 94
        }
      },
      "119": {
        start: {
          line: 384,
          column: 44
        },
        end: {
          line: 387,
          column: 52
        }
      },
      "120": {
        start: {
          line: 384,
          column: 68
        },
        end: {
          line: 387,
          column: 49
        }
      },
      "121": {
        start: {
          line: 388,
          column: 44
        },
        end: {
          line: 388,
          column: 82
        }
      },
      "122": {
        start: {
          line: 408,
          column: 36
        },
        end: {
          line: 411,
          column: 44
        }
      },
      "123": {
        start: {
          line: 408,
          column: 60
        },
        end: {
          line: 411,
          column: 41
        }
      },
      "124": {
        start: {
          line: 412,
          column: 36
        },
        end: {
          line: 412,
          column: 81
        }
      },
      "125": {
        start: {
          line: 425,
          column: 37
        },
        end: {
          line: 425,
          column: 77
        }
      },
      "126": {
        start: {
          line: 523,
          column: 17
        },
        end: {
          line: 523,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 33
          }
        },
        loc: {
          start: {
            line: 18,
            column: 47
          },
          end: {
            line: 25,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 39
          },
          end: {
            line: 22,
            column: 40
          }
        },
        loc: {
          start: {
            line: 22,
            column: 61
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 53
          },
          end: {
            line: 58,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 59,
            column: 30
          },
          end: {
            line: 59,
            column: 31
          }
        },
        loc: {
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 522,
            column: 1
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 88
          },
          end: {
            line: 59,
            column: 89
          }
        },
        loc: {
          start: {
            line: 59,
            column: 92
          },
          end: {
            line: 59,
            column: 94
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 107
          },
          end: {
            line: 59,
            column: 108
          }
        },
        loc: {
          start: {
            line: 59,
            column: 111
          },
          end: {
            line: 59,
            column: 113
          }
        },
        line: 59
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 76,
            column: 57
          },
          end: {
            line: 76,
            column: 58
          }
        },
        loc: {
          start: {
            line: 76,
            column: 79
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 76
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 27
          },
          end: {
            line: 80,
            column: 28
          }
        },
        loc: {
          start: {
            line: 80,
            column: 36
          },
          end: {
            line: 83,
            column: 17
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 88,
            column: 23
          },
          end: {
            line: 88,
            column: 24
          }
        },
        loc: {
          start: {
            line: 88,
            column: 27
          },
          end: {
            line: 90,
            column: 13
          }
        },
        line: 88
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 55
          },
          end: {
            line: 95,
            column: 56
          }
        },
        loc: {
          start: {
            line: 95,
            column: 59
          },
          end: {
            line: 110,
            column: 5
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 105,
            column: 22
          }
        },
        loc: {
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 109,
            column: 9
          }
        },
        line: 105
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 111,
            column: 26
          },
          end: {
            line: 111,
            column: 27
          }
        },
        loc: {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 111
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 117,
            column: 26
          },
          end: {
            line: 117,
            column: 27
          }
        },
        loc: {
          start: {
            line: 117,
            column: 30
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 117
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 118,
            column: 15
          },
          end: {
            line: 118,
            column: 16
          }
        },
        loc: {
          start: {
            line: 118,
            column: 19
          },
          end: {
            line: 120,
            column: 9
          }
        },
        line: 118
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 153,
            column: 29
          },
          end: {
            line: 153,
            column: 30
          }
        },
        loc: {
          start: {
            line: 153,
            column: 38
          },
          end: {
            line: 162,
            column: 5
          }
        },
        line: 153
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 163,
            column: 25
          },
          end: {
            line: 163,
            column: 26
          }
        },
        loc: {
          start: {
            line: 163,
            column: 34
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 163
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 170,
            column: 32
          },
          end: {
            line: 170,
            column: 33
          }
        },
        loc: {
          start: {
            line: 170,
            column: 42
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 170
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 191,
            column: 27
          },
          end: {
            line: 191,
            column: 28
          }
        },
        loc: {
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 191
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 203,
            column: 30
          },
          end: {
            line: 203,
            column: 31
          }
        },
        loc: {
          start: {
            line: 203,
            column: 41
          },
          end: {
            line: 203,
            column: 66
          }
        },
        line: 203
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 227,
            column: 28
          },
          end: {
            line: 227,
            column: 29
          }
        },
        loc: {
          start: {
            line: 227,
            column: 32
          },
          end: {
            line: 232,
            column: 5
          }
        },
        line: 227
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 268,
            column: 65
          },
          end: {
            line: 268,
            column: 66
          }
        },
        loc: {
          start: {
            line: 268,
            column: 75
          },
          end: {
            line: 268,
            column: 89
          }
        },
        line: 268
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 268,
            column: 95
          },
          end: {
            line: 268,
            column: 96
          }
        },
        loc: {
          start: {
            line: 268,
            column: 119
          },
          end: {
            line: 281,
            column: 41
          }
        },
        line: 268
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 269,
            column: 41
          },
          end: {
            line: 269,
            column: 42
          }
        },
        loc: {
          start: {
            line: 269,
            column: 45
          },
          end: {
            line: 269,
            column: 73
          }
        },
        line: 269
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 302,
            column: 42
          },
          end: {
            line: 302,
            column: 43
          }
        },
        loc: {
          start: {
            line: 302,
            column: 47
          },
          end: {
            line: 302,
            column: 87
          }
        },
        line: 302
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 333,
            column: 42
          },
          end: {
            line: 333,
            column: 43
          }
        },
        loc: {
          start: {
            line: 333,
            column: 47
          },
          end: {
            line: 340,
            column: 33
          }
        },
        line: 333
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 335,
            column: 51
          },
          end: {
            line: 335,
            column: 52
          }
        },
        loc: {
          start: {
            line: 335,
            column: 60
          },
          end: {
            line: 338,
            column: 41
          }
        },
        line: 335
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 359,
            column: 50
          },
          end: {
            line: 359,
            column: 51
          }
        },
        loc: {
          start: {
            line: 359,
            column: 55
          },
          end: {
            line: 366,
            column: 41
          }
        },
        line: 359
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 361,
            column: 59
          },
          end: {
            line: 361,
            column: 60
          }
        },
        loc: {
          start: {
            line: 361,
            column: 68
          },
          end: {
            line: 364,
            column: 49
          }
        },
        line: 361
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 382,
            column: 50
          },
          end: {
            line: 382,
            column: 51
          }
        },
        loc: {
          start: {
            line: 382,
            column: 55
          },
          end: {
            line: 389,
            column: 41
          }
        },
        line: 382
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 384,
            column: 59
          },
          end: {
            line: 384,
            column: 60
          }
        },
        loc: {
          start: {
            line: 384,
            column: 68
          },
          end: {
            line: 387,
            column: 49
          }
        },
        line: 384
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 407,
            column: 42
          },
          end: {
            line: 407,
            column: 43
          }
        },
        loc: {
          start: {
            line: 407,
            column: 47
          },
          end: {
            line: 413,
            column: 33
          }
        },
        line: 407
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 408,
            column: 51
          },
          end: {
            line: 408,
            column: 52
          }
        },
        loc: {
          start: {
            line: 408,
            column: 60
          },
          end: {
            line: 411,
            column: 41
          }
        },
        line: 408
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 425,
            column: 33
          },
          end: {
            line: 425,
            column: 34
          }
        },
        loc: {
          start: {
            line: 425,
            column: 37
          },
          end: {
            line: 425,
            column: 77
          }
        },
        line: 425
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 19
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 15
          },
          end: {
            line: 23,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 29
          },
          end: {
            line: 23,
            column: 45
          }
        }, {
          start: {
            line: 23,
            column: 48
          },
          end: {
            line: 23,
            column: 65
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 8
          },
          end: {
            line: 27,
            column: 20
          }
        }, {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 27,
            column: 27
          }
        }, {
          start: {
            line: 27,
            column: 31
          },
          end: {
            line: 27,
            column: 45
          }
        }],
        line: 27
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 47
          }
        }, {
          start: {
            line: 30,
            column: 51
          },
          end: {
            line: 30,
            column: 76
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 38,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "7": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 13
          }
        }, {
          start: {
            line: 36,
            column: 17
          },
          end: {
            line: 36,
            column: 31
          }
        }],
        line: 36
      },
      "8": {
        loc: {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 42,
            column: 53
          }
        }, {
          start: {
            line: 42,
            column: 57
          },
          end: {
            line: 42,
            column: 88
          }
        }],
        line: 42
      },
      "9": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 51,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "10": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 44,
            column: 29
          }
        }, {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 79
          }
        }],
        line: 44
      },
      "11": {
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 45,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 88
          }
        }, {
          start: {
            line: 45,
            column: 91
          },
          end: {
            line: 45,
            column: 95
          }
        }],
        line: 45
      },
      "12": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 48,
            column: 19
          },
          end: {
            line: 50,
            column: 13
          }
        }],
        line: 46
      },
      "13": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 20
          }
        }, {
          start: {
            line: 46,
            column: 25
          },
          end: {
            line: 46,
            column: 33
          }
        }, {
          start: {
            line: 46,
            column: 37
          },
          end: {
            line: 46,
            column: 45
          }
        }],
        line: 46
      },
      "14": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "15": {
        loc: {
          start: {
            line: 59,
            column: 44
          },
          end: {
            line: 59,
            column: 56
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 53
          },
          end: {
            line: 59,
            column: 56
          }
        }],
        line: 59
      },
      "16": {
        loc: {
          start: {
            line: 59,
            column: 58
          },
          end: {
            line: 59,
            column: 74
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 69
          },
          end: {
            line: 59,
            column: 74
          }
        }],
        line: 59
      },
      "17": {
        loc: {
          start: {
            line: 59,
            column: 76
          },
          end: {
            line: 59,
            column: 94
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 88
          },
          end: {
            line: 59,
            column: 94
          }
        }],
        line: 59
      },
      "18": {
        loc: {
          start: {
            line: 59,
            column: 96
          },
          end: {
            line: 59,
            column: 113
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 107
          },
          end: {
            line: 59,
            column: 113
          }
        }],
        line: 59
      },
      "19": {
        loc: {
          start: {
            line: 59,
            column: 115
          },
          end: {
            line: 59,
            column: 143
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 138
          },
          end: {
            line: 59,
            column: 143
          }
        }],
        line: 59
      },
      "20": {
        loc: {
          start: {
            line: 59,
            column: 145
          },
          end: {
            line: 62,
            column: 1
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 59,
            column: 162
          },
          end: {
            line: 62,
            column: 1
          }
        }],
        line: 59
      },
      "21": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "22": {
        loc: {
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 22
          },
          end: {
            line: 156,
            column: 29
          }
        }, {
          start: {
            line: 156,
            column: 33
          },
          end: {
            line: 156,
            column: 43
          }
        }, {
          start: {
            line: 156,
            column: 47
          },
          end: {
            line: 156,
            column: 49
          }
        }],
        line: 156
      },
      "23": {
        loc: {
          start: {
            line: 161,
            column: 15
          },
          end: {
            line: 161,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 161,
            column: 30
          },
          end: {
            line: 161,
            column: 45
          }
        }, {
          start: {
            line: 161,
            column: 48
          },
          end: {
            line: 161,
            column: 53
          }
        }],
        line: 161
      },
      "24": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "25": {
        loc: {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 176,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 176,
            column: 36
          }
        }, {
          start: {
            line: 176,
            column: 40
          },
          end: {
            line: 176,
            column: 42
          }
        }],
        line: 176
      },
      "26": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 199,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "27": {
        loc: {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 198,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "28": {
        loc: {
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 20
          },
          end: {
            line: 196,
            column: 39
          }
        }, {
          start: {
            line: 196,
            column: 43
          },
          end: {
            line: 196,
            column: 62
          }
        }, {
          start: {
            line: 196,
            column: 66
          },
          end: {
            line: 196,
            column: 82
          }
        }, {
          start: {
            line: 196,
            column: 86
          },
          end: {
            line: 196,
            column: 103
          }
        }],
        line: 196
      },
      "29": {
        loc: {
          start: {
            line: 213,
            column: 27
          },
          end: {
            line: 213,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 213,
            column: 57
          },
          end: {
            line: 213,
            column: 85
          }
        }, {
          start: {
            line: 213,
            column: 88
          },
          end: {
            line: 213,
            column: 97
          }
        }],
        line: 213
      },
      "30": {
        loc: {
          start: {
            line: 222,
            column: 40
          },
          end: {
            line: 222,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 65
          },
          end: {
            line: 222,
            column: 78
          }
        }, {
          start: {
            line: 222,
            column: 81
          },
          end: {
            line: 222,
            column: 97
          }
        }],
        line: 222
      },
      "31": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "32": {
        loc: {
          start: {
            line: 270,
            column: 104
          },
          end: {
            line: 270,
            column: 205
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 270,
            column: 135
          },
          end: {
            line: 270,
            column: 163
          }
        }, {
          start: {
            line: 270,
            column: 166
          },
          end: {
            line: 270,
            column: 205
          }
        }],
        line: 270
      },
      "33": {
        loc: {
          start: {
            line: 277,
            column: 36
          },
          end: {
            line: 279,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 277,
            column: 36
          },
          end: {
            line: 277,
            column: 64
          }
        }, {
          start: {
            line: 277,
            column: 82
          },
          end: {
            line: 279,
            column: 38
          }
        }],
        line: 277
      },
      "34": {
        loc: {
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 320,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 285,
            column: 12
          },
          end: {
            line: 285,
            column: 32
          }
        }, {
          start: {
            line: 285,
            column: 50
          },
          end: {
            line: 320,
            column: 14
          }
        }],
        line: 285
      },
      "35": {
        loc: {
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 420,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 321,
            column: 12
          },
          end: {
            line: 321,
            column: 39
          }
        }, {
          start: {
            line: 321,
            column: 57
          },
          end: {
            line: 420,
            column: 14
          }
        }],
        line: 321
      },
      "36": {
        loc: {
          start: {
            line: 429,
            column: 20
          },
          end: {
            line: 480,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 429,
            column: 20
          },
          end: {
            line: 429,
            column: 37
          }
        }, {
          start: {
            line: 429,
            column: 55
          },
          end: {
            line: 480,
            column: 22
          }
        }],
        line: 429
      },
      "37": {
        loc: {
          start: {
            line: 447,
            column: 28
          },
          end: {
            line: 478,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 447,
            column: 28
          },
          end: {
            line: 447,
            column: 39
          }
        }, {
          start: {
            line: 447,
            column: 57
          },
          end: {
            line: 478,
            column: 30
          }
        }],
        line: 447
      },
      "38": {
        loc: {
          start: {
            line: 495,
            column: 34
          },
          end: {
            line: 507,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 495,
            column: 61
          },
          end: {
            line: 497,
            column: 26
          }
        }, {
          start: {
            line: 497,
            column: 43
          },
          end: {
            line: 507,
            column: 26
          }
        }],
        line: 495
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\EnhancedPaymentSystem.tsx"],
      sourcesContent: ["\"use client\"\n\nimport React, { useState, useCallback, useEffect } from 'react'\nimport { CreditCard, Lock, CheckCircle, DollarSign, Receipt, Send } from 'lucide-react'\nimport { useToast } from '../hooks/useAppState'\nimport { advancedEncryption } from '../utils/encryption'\nimport { secureStorage, setSecureItemAdvanced } from '../utils/secureStorage'\n\ninterface PaymentMethod {\n  id: string\n  type: 'stripe' | 'paypal' | 'square'\n  name: string\n  icon: React.ReactNode\n  enabled: boolean\n}\n\ninterface PaymentLink {\n  id: string\n  invoiceId: string\n  amount: number\n  currency: string\n  expiresAt: string\n  status: 'active' | 'expired' | 'used'\n  url: string\n}\n\ninterface EnhancedPaymentSystemProps {\n  invoiceId?: string\n  amount?: number\n  currency?: string\n  onSuccess?: (paymentData: any) => void\n  onCancel?: () => void\n  allowPartialPayments?: boolean\n  paymentMethods?: string[]\n}\n\nconst EnhancedPaymentSystem: React.FC<EnhancedPaymentSystemProps> = ({\n  invoiceId,\n  amount = 100,\n  currency = 'USD',\n  onSuccess = () => {},\n  onCancel = () => {},\n  allowPartialPayments = false,\n  paymentMethods = ['stripe', 'paypal']\n}) => {\n  const { showSuccess, showError } = useToast()\n  const [selectedMethod, setSelectedMethod] = useState<string>('stripe')\n  const [paymentAmount, setPaymentAmount] = useState(amount)\n  const [processing, setProcessing] = useState(false)\n  const [paymentLink, setPaymentLink] = useState<PaymentLink | null>(null)\n  const [showLinkGenerator, setShowLinkGenerator] = useState(false)\n  const [cardDetails, setCardDetails] = useState({\n    number: '',\n    expiry: '',\n    cvc: '',\n    name: ''\n  })\n\n  // Secure functions for handling sensitive card data\n  const setSecureCardDetails = useCallback(async (field: string, value: string) => {\n    try {\n      // Encrypt the sensitive card data before storing\n      const encryptedValue = await advancedEncryption.encrypt(value)\n      setCardDetails(prev => ({ ...prev, [field]: value })) // Keep plain text for UI\n      \n      // Store encrypted version temporarily for processing\n      const sessionKey = `temp_card_${field}_${Date.now()}`\n      await setSecureItemAdvanced(sessionKey, encryptedValue)\n      \n      // Clear the temporary storage after 5 minutes\n      setTimeout(() => {\n        secureStorage.removeItem(sessionKey)\n      }, 5 * 60 * 1000)\n    } catch (error) {\n      console.error('Failed to encrypt card data:', error)\n    }\n  }, [])\n\n  const clearSensitiveData = useCallback(() => {\n    // Clear all card details from memory\n    setCardDetails({\n      number: '',\n      expiry: '',\n      cvc: '',\n      name: ''\n    })\n    \n    // Clear any temporary encrypted storage\n    const keys = secureStorage.getAllKeys()\n    keys.forEach(key => {\n      if (key.startsWith('temp_card_')) {\n        secureStorage.removeItem(key)\n      }\n    })\n  }, [])\n\n  useEffect(() => {\n    setPaymentAmount(amount)\n  }, [amount])\n\n  // Cleanup sensitive data on unmount\n  useEffect(() => {\n    return () => {\n      clearSensitiveData()\n    }\n  }, [clearSensitiveData])\n\n  const availablePaymentMethods: PaymentMethod[] = [\n    {\n      id: 'stripe',\n      type: 'stripe',\n      name: 'Credit/Debit Card',\n      icon: <CreditCard className=\"w-5 h-5\" />,\n      enabled: paymentMethods.includes('stripe')\n    },\n    {\n      id: 'paypal',\n      type: 'paypal',\n      name: 'PayPal',\n      icon: <DollarSign className=\"w-5 h-5\" />,\n      enabled: paymentMethods.includes('paypal')\n    },\n    {\n      id: 'square',\n      type: 'square',\n      name: 'Square',\n      icon: <Receipt className=\"w-5 h-5\" />,\n      enabled: paymentMethods.includes('square')\n    }\n  ]\n\n  const formatCardNumber = (value: string) => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '')\n    const matches = v.match(/\\d{4,16}/g)\n    const match = (matches && matches[0]) || ''\n    const parts = []\n\n    for (let i = 0; i < match.length; i += 4) {\n      parts.push(match.substring(i, i + 4))\n    }\n\n    return parts.length ? parts.join(' ') : value\n  }\n\n  const formatExpiry = (value: string) => {\n    const v = value.replace(/\\s+/g, '').replace(/[^0-9]/gi, '')\n    if (v.length >= 3) {\n      return `${v.substring(0, 2)}/${v.substring(2, 4)}`\n    }\n    return value\n  }\n\n  const generatePaymentLink = async () => {\n    try {\n      setProcessing(true)\n      \n      // Simulate API call to generate payment link\n      const linkData: PaymentLink = {\n        id: `link_${Date.now()}`,\n        invoiceId: invoiceId || '',\n        amount: paymentAmount,\n        currency,\n        expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // 7 days\n        status: 'active',\n        url: `https://pay.pixelworks.net/invoice/${invoiceId}?token=${Math.random().toString(36).substr(2, 9)}`\n      }\n      \n      setPaymentLink(linkData)\n      showSuccess('Success', 'Payment link generated successfully!')\n    } catch (error) {\n      showError('Error', 'Failed to generate payment link')\n    } finally {\n      setProcessing(false)\n    }\n  }\n\n  const processPayment = async () => {\n    try {\n      setProcessing(true)\n      \n      // Validate card details\n      if (selectedMethod === 'stripe') {\n        if (!cardDetails.number || !cardDetails.expiry || !cardDetails.cvc || !cardDetails.name) {\n          throw new Error('Please fill in all card details')\n        }\n      }\n\n      // For real implementation, card details would be sent directly to payment processor\n      // without storing them locally. This is just for demonstration.\n      \n      // Simulate payment processing\n      await new Promise(resolve => setTimeout(resolve, 2000))\n      \n      const paymentData = {\n        id: `pay_${Date.now()}`,\n        amount: paymentAmount,\n        currency,\n        method: selectedMethod,\n        status: 'succeeded',\n        invoiceId,\n        timestamp: new Date().toISOString(),\n        // Never store actual card details in payment data\n        cardLast4: selectedMethod === 'stripe' ? cardDetails.number.slice(-4) : undefined\n      }\n      \n      // Clear sensitive data immediately after processing\n      clearSensitiveData()\n      \n      onSuccess(paymentData)\n      showSuccess('Payment Successful', `Payment of ${currency} ${paymentAmount} processed successfully!`)\n    } catch (error) {\n      // Clear sensitive data even on error\n      clearSensitiveData()\n      showError('Payment Failed', error instanceof Error ? error.message : 'Payment failed')\n    } finally {\n      setProcessing(false)\n    }\n  }\n\n  const copyPaymentLink = () => {\n    if (paymentLink) {\n      navigator.clipboard.writeText(paymentLink.url)\n      showSuccess('Copied', 'Payment link copied to clipboard!')\n    }\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto bg-white rounded-lg shadow-lg p-6\">\n      <div className=\"text-center mb-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Payment</h2>\n        <p className=\"text-gray-600\">\n          Amount: <span className=\"font-semibold\">{currency} {amount.toFixed(2)}</span>\n        </p>\n      </div>\n\n      {/* Payment Method Selection */}\n      <div className=\"mb-6\">\n        <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n          Payment Method\n        </label>\n        <div className=\"grid gap-3\">\n          {availablePaymentMethods.filter(method => method.enabled).map((method) => (\n            <button\n              key={method.id}\n              onClick={() => setSelectedMethod(method.id)}\n              className={`flex items-center p-3 border rounded-lg transition-colors ${\n                selectedMethod === method.id\n                  ? 'border-blue-500 bg-blue-50'\n                  : 'border-gray-200 hover:border-gray-300'\n              }`}\n            >\n              {method.icon}\n              <span className=\"ml-3 font-medium\">{method.name}</span>\n              {selectedMethod === method.id && (\n                <CheckCircle className=\"w-5 h-5 text-blue-500 ml-auto\" />\n              )}\n            </button>\n          ))}\n        </div>\n      </div>\n\n      {/* Partial Payment Option */}\n      {allowPartialPayments && (\n        <div className=\"mb-6\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Payment Amount\n          </label>\n          <div className=\"relative\">\n            <span className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\">\n              {currency}\n            </span>\n            <input\n              type=\"number\"\n              value={paymentAmount}\n              onChange={(e) => setPaymentAmount(Number(e.target.value))}\n              max={amount}\n              min={0.01}\n              step=\"0.01\"\n              className=\"w-full pl-12 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          <p className=\"text-xs text-gray-500 mt-1\">\n            Maximum: {currency} {amount.toFixed(2)}\n          </p>\n        </div>\n      )}\n\n      {/* Card Details for Stripe */}\n      {selectedMethod === 'stripe' && (\n        <div className=\"mb-6 space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Card Number\n            </label>\n            <input\n              type=\"text\"\n              value={cardDetails.number}\n              onChange={(e) => {\n                const formattedNumber = formatCardNumber(e.target.value)\n                setCardDetails(prev => ({ ...prev, number: formattedNumber }))\n                setSecureCardDetails('number', formattedNumber)\n              }}\n              placeholder=\"1234 5678 9012 3456\"\n              maxLength={19}\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n          \n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Expiry Date\n              </label>\n              <input\n                type=\"text\"\n                value={cardDetails.expiry}\n                onChange={(e) => {\n                  const formattedExpiry = formatExpiry(e.target.value)\n                  setCardDetails(prev => ({ ...prev, expiry: formattedExpiry }))\n                  setSecureCardDetails('expiry', formattedExpiry)\n                }}\n                placeholder=\"MM/YY\"\n                maxLength={5}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n            \n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                CVC\n              </label>\n              <input\n                type=\"text\"\n                value={cardDetails.cvc}\n                onChange={(e) => {\n                  const cvcValue = e.target.value.replace(/\\D/g, '')\n                  setCardDetails(prev => ({ ...prev, cvc: cvcValue }))\n                  setSecureCardDetails('cvc', cvcValue)\n                }}\n                placeholder=\"123\"\n                maxLength={4}\n                className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n              />\n            </div>\n          </div>\n          \n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Cardholder Name\n            </label>\n            <input\n              type=\"text\"\n              value={cardDetails.name}\n              onChange={(e) => {\n                setCardDetails(prev => ({ ...prev, name: e.target.value }))\n                setSecureCardDetails('name', e.target.value)\n              }}\n              placeholder=\"John Doe\"\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Payment Link Generator */}\n      <div className=\"mb-6\">\n        <button\n          onClick={() => setShowLinkGenerator(!showLinkGenerator)}\n          className=\"text-blue-600 hover:text-blue-700 text-sm font-medium\"\n        >\n          Generate Payment Link Instead\n        </button>\n        \n        {showLinkGenerator && (\n          <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n            <p className=\"text-sm text-gray-600 mb-3\">\n              Generate a secure payment link to send to your client\n            </p>\n            <button\n              onClick={generatePaymentLink}\n              disabled={processing}\n              className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n            >\n              <Send className=\"w-4 h-4 mr-2\" />\n              Generate Link\n            </button>\n            \n            {paymentLink && (\n              <div className=\"mt-4 p-3 bg-white border rounded-lg\">\n                <p className=\"text-xs text-gray-500 mb-2\">Payment Link:</p>\n                <div className=\"flex items-center gap-2\">\n                  <input\n                    type=\"text\"\n                    value={paymentLink.url}\n                    readOnly\n                    className=\"flex-1 text-sm px-2 py-1 border rounded\"\n                  />\n                  <button\n                    onClick={copyPaymentLink}\n                    className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700\"\n                  >\n                    Copy\n                  </button>\n                </div>\n                <p className=\"text-xs text-gray-500 mt-2\">\n                  Expires: {new Date(paymentLink.expiresAt).toLocaleDateString()}\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Action Buttons */}\n      <div className=\"flex gap-3\">\n        <button\n          onClick={onCancel}\n          className=\"flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50\"\n        >\n          Cancel\n        </button>\n        <button\n          onClick={processPayment}\n          disabled={processing}\n          className=\"flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n        >\n          {processing ? (\n            <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n          ) : (\n            <>\n              <Lock className=\"w-4 h-4 mr-2\" />\n              Pay {currency} {paymentAmount.toFixed(2)}\n            </>\n          )}\n        </button>\n      </div>\n\n      {/* Security Notice */}\n      <div className=\"mt-4 flex items-center justify-center text-xs text-gray-500\">\n        <Lock className=\"w-3 h-3 mr-1\" />\n        Secured by 256-bit SSL encryption\n      </div>\n    </div>\n  )\n}\n\nexport default EnhancedPaymentSystem\n"],
      names: ["EnhancedPaymentSystem", "invoiceId", "amount", "currency", "onSuccess", "onCancel", "allowPartialPayments", "paymentMethods", "showSuccess", "showError", "useToast", "selectedMethod", "setSelectedMethod", "useState", "paymentAmount", "setPaymentAmount", "processing", "setProcessing", "paymentLink", "setPaymentLink", "showLinkGenerator", "setShowLinkGenerator", "cardDetails", "setCardDetails", "number", "expiry", "cvc", "name", "setSecureCardDetails", "useCallback", "field", "value", "encryptedValue", "advancedEncryption", "encrypt", "prev", "sessionKey", "Date", "now", "setSecureItemAdvanced", "setTimeout", "secureStorage", "removeItem", "error", "console", "clearSensitiveData", "keys", "getAllKeys", "forEach", "key", "startsWith", "useEffect", "availablePaymentMethods", "id", "type", "icon", "CreditCard", "className", "enabled", "includes", "DollarSign", "Receipt", "formatCardNumber", "v", "replace", "matches", "match", "parts", "i", "length", "push", "substring", "join", "formatExpiry", "generatePaymentLink", "linkData", "expiresAt", "toISOString", "status", "url", "Math", "random", "toString", "substr", "processPayment", "Error", "Promise", "resolve", "paymentData", "method", "timestamp", "cardLast4", "slice", "undefined", "message", "copyPaymentLink", "navigator", "clipboard", "writeText", "div", "h2", "p", "span", "toFixed", "label", "filter", "map", "button", "onClick", "CheckCircle", "input", "onChange", "e", "Number", "target", "max", "min", "step", "formattedNumber", "placeholder", "maxLength", "formattedExpiry", "cvcValue", "disabled", "Send", "readOnly", "toLocaleDateString", "Lock"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1f005cf18893d0e958e05a3af92aa286dc39a384"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1006xtvesb = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1006xtvesb();
cov_1006xtvesb().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1006xtvesb().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1006xtvesb().f[0]++;
    cov_1006xtvesb().s[2]++;
    return _default;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1006xtvesb().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1006xtvesb().s[4]++, _interop_require_wildcard(require("react")));
const _lucidereact =
/* istanbul ignore next */
(cov_1006xtvesb().s[5]++, require("lucide-react"));
const _useAppState =
/* istanbul ignore next */
(cov_1006xtvesb().s[6]++, require("../hooks/useAppState"));
const _encryption =
/* istanbul ignore next */
(cov_1006xtvesb().s[7]++, require("../utils/encryption"));
const _secureStorage =
/* istanbul ignore next */
(cov_1006xtvesb().s[8]++, require("../utils/secureStorage"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1006xtvesb().f[1]++;
  cov_1006xtvesb().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1006xtvesb().b[0][0]++;
    cov_1006xtvesb().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1006xtvesb().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_1006xtvesb().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1006xtvesb().f[2]++;
    cov_1006xtvesb().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1006xtvesb().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1006xtvesb().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1006xtvesb().f[3]++;
  cov_1006xtvesb().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1006xtvesb().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1006xtvesb().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1006xtvesb().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1006xtvesb().b[2][0]++;
    cov_1006xtvesb().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1006xtvesb().b[2][1]++;
  }
  cov_1006xtvesb().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1006xtvesb().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1006xtvesb().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1006xtvesb().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1006xtvesb().b[4][0]++;
    cov_1006xtvesb().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1006xtvesb().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1006xtvesb().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1006xtvesb().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1006xtvesb().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1006xtvesb().b[6][0]++;
    cov_1006xtvesb().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1006xtvesb().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[23]++,
  /* istanbul ignore next */
  (cov_1006xtvesb().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1006xtvesb().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1006xtvesb().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1006xtvesb().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_1006xtvesb().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1006xtvesb().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1006xtvesb().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1006xtvesb().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1006xtvesb().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1006xtvesb().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1006xtvesb().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_1006xtvesb().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1006xtvesb().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1006xtvesb().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1006xtvesb().b[12][0]++;
        cov_1006xtvesb().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1006xtvesb().b[12][1]++;
        cov_1006xtvesb().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1006xtvesb().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1006xtvesb().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1006xtvesb().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1006xtvesb().b[14][0]++;
    cov_1006xtvesb().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1006xtvesb().b[14][1]++;
  }
  cov_1006xtvesb().s[33]++;
  return newObj;
}
/* istanbul ignore next */
cov_1006xtvesb().s[34]++;
const EnhancedPaymentSystem = ({
  invoiceId,
  amount =
  /* istanbul ignore next */
  (cov_1006xtvesb().b[15][0]++, 100),
  currency =
  /* istanbul ignore next */
  (cov_1006xtvesb().b[16][0]++, 'USD'),
  onSuccess =
  /* istanbul ignore next */
  (cov_1006xtvesb().b[17][0]++, () => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[5]++;
  }),
  onCancel =
  /* istanbul ignore next */
  (cov_1006xtvesb().b[18][0]++, () => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[6]++;
  }),
  allowPartialPayments =
  /* istanbul ignore next */
  (cov_1006xtvesb().b[19][0]++, false),
  paymentMethods =
  /* istanbul ignore next */
  (cov_1006xtvesb().b[20][0]++, ['stripe', 'paypal'])
}) => {
  /* istanbul ignore next */
  cov_1006xtvesb().f[4]++;
  const {
    showSuccess,
    showError
  } =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[35]++, (0, _useAppState.useToast)());
  const [selectedMethod, setSelectedMethod] =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[36]++, (0, _react.useState)('stripe'));
  const [paymentAmount, setPaymentAmount] =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[37]++, (0, _react.useState)(amount));
  const [processing, setProcessing] =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[38]++, (0, _react.useState)(false));
  const [paymentLink, setPaymentLink] =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[39]++, (0, _react.useState)(null));
  const [showLinkGenerator, setShowLinkGenerator] =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[40]++, (0, _react.useState)(false));
  const [cardDetails, setCardDetails] =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[41]++, (0, _react.useState)({
    number: '',
    expiry: '',
    cvc: '',
    name: ''
  }));
  // Secure functions for handling sensitive card data
  const setSecureCardDetails =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[42]++, (0, _react.useCallback)(async (field, value) => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[7]++;
    cov_1006xtvesb().s[43]++;
    try {
      // Encrypt the sensitive card data before storing
      const encryptedValue =
      /* istanbul ignore next */
      (cov_1006xtvesb().s[44]++, await _encryption.advancedEncryption.encrypt(value));
      /* istanbul ignore next */
      cov_1006xtvesb().s[45]++;
      setCardDetails(prev => {
        /* istanbul ignore next */
        cov_1006xtvesb().f[8]++;
        cov_1006xtvesb().s[46]++;
        return {
          ...prev,
          [field]: value
        };
      }); // Keep plain text for UI
      // Store encrypted version temporarily for processing
      const sessionKey =
      /* istanbul ignore next */
      (cov_1006xtvesb().s[47]++, `temp_card_${field}_${Date.now()}`);
      /* istanbul ignore next */
      cov_1006xtvesb().s[48]++;
      await (0, _secureStorage.setSecureItemAdvanced)(sessionKey, encryptedValue);
      // Clear the temporary storage after 5 minutes
      /* istanbul ignore next */
      cov_1006xtvesb().s[49]++;
      setTimeout(() => {
        /* istanbul ignore next */
        cov_1006xtvesb().f[9]++;
        cov_1006xtvesb().s[50]++;
        _secureStorage.secureStorage.removeItem(sessionKey);
      }, 5 * 60 * 1000);
    } catch (error) {
      /* istanbul ignore next */
      cov_1006xtvesb().s[51]++;
      console.error('Failed to encrypt card data:', error);
    }
  }, []));
  const clearSensitiveData =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[52]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[10]++;
    cov_1006xtvesb().s[53]++;
    // Clear all card details from memory
    setCardDetails({
      number: '',
      expiry: '',
      cvc: '',
      name: ''
    });
    // Clear any temporary encrypted storage
    const keys =
    /* istanbul ignore next */
    (cov_1006xtvesb().s[54]++, _secureStorage.secureStorage.getAllKeys());
    /* istanbul ignore next */
    cov_1006xtvesb().s[55]++;
    keys.forEach(key => {
      /* istanbul ignore next */
      cov_1006xtvesb().f[11]++;
      cov_1006xtvesb().s[56]++;
      if (key.startsWith('temp_card_')) {
        /* istanbul ignore next */
        cov_1006xtvesb().b[21][0]++;
        cov_1006xtvesb().s[57]++;
        _secureStorage.secureStorage.removeItem(key);
      } else
      /* istanbul ignore next */
      {
        cov_1006xtvesb().b[21][1]++;
      }
    });
  }, []));
  /* istanbul ignore next */
  cov_1006xtvesb().s[58]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[12]++;
    cov_1006xtvesb().s[59]++;
    setPaymentAmount(amount);
  }, [amount]);
  // Cleanup sensitive data on unmount
  /* istanbul ignore next */
  cov_1006xtvesb().s[60]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[13]++;
    cov_1006xtvesb().s[61]++;
    return () => {
      /* istanbul ignore next */
      cov_1006xtvesb().f[14]++;
      cov_1006xtvesb().s[62]++;
      clearSensitiveData();
    };
  }, [clearSensitiveData]);
  const availablePaymentMethods =
  /* istanbul ignore next */
  (cov_1006xtvesb().s[63]++, [{
    id: 'stripe',
    type: 'stripe',
    name: 'Credit/Debit Card',
    icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CreditCard, {
      className: "w-5 h-5"
    }),
    enabled: paymentMethods.includes('stripe')
  }, {
    id: 'paypal',
    type: 'paypal',
    name: 'PayPal',
    icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.DollarSign, {
      className: "w-5 h-5"
    }),
    enabled: paymentMethods.includes('paypal')
  }, {
    id: 'square',
    type: 'square',
    name: 'Square',
    icon: /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Receipt, {
      className: "w-5 h-5"
    }),
    enabled: paymentMethods.includes('square')
  }]);
  /* istanbul ignore next */
  cov_1006xtvesb().s[64]++;
  const formatCardNumber = value => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[15]++;
    const v =
    /* istanbul ignore next */
    (cov_1006xtvesb().s[65]++, value.replace(/\s+/g, '').replace(/[^0-9]/gi, ''));
    const matches =
    /* istanbul ignore next */
    (cov_1006xtvesb().s[66]++, v.match(/\d{4,16}/g));
    const match =
    /* istanbul ignore next */
    (cov_1006xtvesb().s[67]++,
    /* istanbul ignore next */
    (cov_1006xtvesb().b[22][0]++, matches) &&
    /* istanbul ignore next */
    (cov_1006xtvesb().b[22][1]++, matches[0]) ||
    /* istanbul ignore next */
    (cov_1006xtvesb().b[22][2]++, ''));
    const parts =
    /* istanbul ignore next */
    (cov_1006xtvesb().s[68]++, []);
    /* istanbul ignore next */
    cov_1006xtvesb().s[69]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1006xtvesb().s[70]++, 0); i < match.length; i += 4) {
      /* istanbul ignore next */
      cov_1006xtvesb().s[71]++;
      parts.push(match.substring(i, i + 4));
    }
    /* istanbul ignore next */
    cov_1006xtvesb().s[72]++;
    return parts.length ?
    /* istanbul ignore next */
    (cov_1006xtvesb().b[23][0]++, parts.join(' ')) :
    /* istanbul ignore next */
    (cov_1006xtvesb().b[23][1]++, value);
  };
  /* istanbul ignore next */
  cov_1006xtvesb().s[73]++;
  const formatExpiry = value => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[16]++;
    const v =
    /* istanbul ignore next */
    (cov_1006xtvesb().s[74]++, value.replace(/\s+/g, '').replace(/[^0-9]/gi, ''));
    /* istanbul ignore next */
    cov_1006xtvesb().s[75]++;
    if (v.length >= 3) {
      /* istanbul ignore next */
      cov_1006xtvesb().b[24][0]++;
      cov_1006xtvesb().s[76]++;
      return `${v.substring(0, 2)}/${v.substring(2, 4)}`;
    } else
    /* istanbul ignore next */
    {
      cov_1006xtvesb().b[24][1]++;
    }
    cov_1006xtvesb().s[77]++;
    return value;
  };
  /* istanbul ignore next */
  cov_1006xtvesb().s[78]++;
  const generatePaymentLink = async () => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[17]++;
    cov_1006xtvesb().s[79]++;
    try {
      /* istanbul ignore next */
      cov_1006xtvesb().s[80]++;
      setProcessing(true);
      // Simulate API call to generate payment link
      const linkData =
      /* istanbul ignore next */
      (cov_1006xtvesb().s[81]++, {
        id: `link_${Date.now()}`,
        invoiceId:
        /* istanbul ignore next */
        (cov_1006xtvesb().b[25][0]++, invoiceId) ||
        /* istanbul ignore next */
        (cov_1006xtvesb().b[25][1]++, ''),
        amount: paymentAmount,
        currency,
        expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
        status: 'active',
        url: `https://pay.pixelworks.net/invoice/${invoiceId}?token=${Math.random().toString(36).substr(2, 9)}`
      });
      /* istanbul ignore next */
      cov_1006xtvesb().s[82]++;
      setPaymentLink(linkData);
      /* istanbul ignore next */
      cov_1006xtvesb().s[83]++;
      showSuccess('Success', 'Payment link generated successfully!');
    } catch (error) {
      /* istanbul ignore next */
      cov_1006xtvesb().s[84]++;
      showError('Error', 'Failed to generate payment link');
    } finally {
      /* istanbul ignore next */
      cov_1006xtvesb().s[85]++;
      setProcessing(false);
    }
  };
  /* istanbul ignore next */
  cov_1006xtvesb().s[86]++;
  const processPayment = async () => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[18]++;
    cov_1006xtvesb().s[87]++;
    try {
      /* istanbul ignore next */
      cov_1006xtvesb().s[88]++;
      setProcessing(true);
      // Validate card details
      /* istanbul ignore next */
      cov_1006xtvesb().s[89]++;
      if (selectedMethod === 'stripe') {
        /* istanbul ignore next */
        cov_1006xtvesb().b[26][0]++;
        cov_1006xtvesb().s[90]++;
        if (
        /* istanbul ignore next */
        (cov_1006xtvesb().b[28][0]++, !cardDetails.number) ||
        /* istanbul ignore next */
        (cov_1006xtvesb().b[28][1]++, !cardDetails.expiry) ||
        /* istanbul ignore next */
        (cov_1006xtvesb().b[28][2]++, !cardDetails.cvc) ||
        /* istanbul ignore next */
        (cov_1006xtvesb().b[28][3]++, !cardDetails.name)) {
          /* istanbul ignore next */
          cov_1006xtvesb().b[27][0]++;
          cov_1006xtvesb().s[91]++;
          throw new Error('Please fill in all card details');
        } else
        /* istanbul ignore next */
        {
          cov_1006xtvesb().b[27][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1006xtvesb().b[26][1]++;
      }
      // For real implementation, card details would be sent directly to payment processor
      // without storing them locally. This is just for demonstration.
      // Simulate payment processing
      cov_1006xtvesb().s[92]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1006xtvesb().f[19]++;
        cov_1006xtvesb().s[93]++;
        return setTimeout(resolve, 2000);
      });
      const paymentData =
      /* istanbul ignore next */
      (cov_1006xtvesb().s[94]++, {
        id: `pay_${Date.now()}`,
        amount: paymentAmount,
        currency,
        method: selectedMethod,
        status: 'succeeded',
        invoiceId,
        timestamp: new Date().toISOString(),
        // Never store actual card details in payment data
        cardLast4: selectedMethod === 'stripe' ?
        /* istanbul ignore next */
        (cov_1006xtvesb().b[29][0]++, cardDetails.number.slice(-4)) :
        /* istanbul ignore next */
        (cov_1006xtvesb().b[29][1]++, undefined)
      });
      // Clear sensitive data immediately after processing
      /* istanbul ignore next */
      cov_1006xtvesb().s[95]++;
      clearSensitiveData();
      /* istanbul ignore next */
      cov_1006xtvesb().s[96]++;
      onSuccess(paymentData);
      /* istanbul ignore next */
      cov_1006xtvesb().s[97]++;
      showSuccess('Payment Successful', `Payment of ${currency} ${paymentAmount} processed successfully!`);
    } catch (error) {
      /* istanbul ignore next */
      cov_1006xtvesb().s[98]++;
      // Clear sensitive data even on error
      clearSensitiveData();
      /* istanbul ignore next */
      cov_1006xtvesb().s[99]++;
      showError('Payment Failed', error instanceof Error ?
      /* istanbul ignore next */
      (cov_1006xtvesb().b[30][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1006xtvesb().b[30][1]++, 'Payment failed'));
    } finally {
      /* istanbul ignore next */
      cov_1006xtvesb().s[100]++;
      setProcessing(false);
    }
  };
  /* istanbul ignore next */
  cov_1006xtvesb().s[101]++;
  const copyPaymentLink = () => {
    /* istanbul ignore next */
    cov_1006xtvesb().f[20]++;
    cov_1006xtvesb().s[102]++;
    if (paymentLink) {
      /* istanbul ignore next */
      cov_1006xtvesb().b[31][0]++;
      cov_1006xtvesb().s[103]++;
      navigator.clipboard.writeText(paymentLink.url);
      /* istanbul ignore next */
      cov_1006xtvesb().s[104]++;
      showSuccess('Copied', 'Payment link copied to clipboard!');
    } else
    /* istanbul ignore next */
    {
      cov_1006xtvesb().b[31][1]++;
    }
  };
  /* istanbul ignore next */
  cov_1006xtvesb().s[105]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "max-w-md mx-auto bg-white rounded-lg shadow-lg p-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-center mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
        className: "text-2xl font-bold text-gray-900 mb-2",
        children: "Payment"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
        className: "text-gray-600",
        children: ["Amount: ", /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "font-semibold",
          children: [currency, " ", amount.toFixed(2)]
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        className: "block text-sm font-medium text-gray-700 mb-3",
        children: "Payment Method"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "grid gap-3",
        children: availablePaymentMethods.filter(method => {
          /* istanbul ignore next */
          cov_1006xtvesb().f[21]++;
          cov_1006xtvesb().s[106]++;
          return method.enabled;
        }).map(method => {
          /* istanbul ignore next */
          cov_1006xtvesb().f[22]++;
          cov_1006xtvesb().s[107]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_1006xtvesb().f[23]++;
              cov_1006xtvesb().s[108]++;
              return setSelectedMethod(method.id);
            },
            className: `flex items-center p-3 border rounded-lg transition-colors ${selectedMethod === method.id ?
            /* istanbul ignore next */
            (cov_1006xtvesb().b[32][0]++, 'border-blue-500 bg-blue-50') :
            /* istanbul ignore next */
            (cov_1006xtvesb().b[32][1]++, 'border-gray-200 hover:border-gray-300')}`,
            children: [method.icon, /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "ml-3 font-medium",
              children: method.name
            }),
            /* istanbul ignore next */
            (cov_1006xtvesb().b[33][0]++, selectedMethod === method.id) &&
            /* istanbul ignore next */
            (cov_1006xtvesb().b[33][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.CheckCircle, {
              className: "w-5 h-5 text-blue-500 ml-auto"
            }))]
          }, method.id);
        })
      })]
    }),
    /* istanbul ignore next */
    (cov_1006xtvesb().b[34][0]++, allowPartialPayments) &&
    /* istanbul ignore next */
    (cov_1006xtvesb().b[34][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
        className: "block text-sm font-medium text-gray-700 mb-2",
        children: "Payment Amount"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "relative",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500",
          children: currency
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "number",
          value: paymentAmount,
          onChange: e => {
            /* istanbul ignore next */
            cov_1006xtvesb().f[24]++;
            cov_1006xtvesb().s[109]++;
            return setPaymentAmount(Number(e.target.value));
          },
          max: amount,
          min: 0.01,
          step: "0.01",
          className: "w-full pl-12 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
        className: "text-xs text-gray-500 mt-1",
        children: ["Maximum: ", currency, " ", amount.toFixed(2)]
      })]
    })),
    /* istanbul ignore next */
    (cov_1006xtvesb().b[35][0]++, selectedMethod === 'stripe') &&
    /* istanbul ignore next */
    (cov_1006xtvesb().b[35][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-6 space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          className: "block text-sm font-medium text-gray-700 mb-2",
          children: "Card Number"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "text",
          value: cardDetails.number,
          onChange: e => {
            /* istanbul ignore next */
            cov_1006xtvesb().f[25]++;
            const formattedNumber =
            /* istanbul ignore next */
            (cov_1006xtvesb().s[110]++, formatCardNumber(e.target.value));
            /* istanbul ignore next */
            cov_1006xtvesb().s[111]++;
            setCardDetails(prev => {
              /* istanbul ignore next */
              cov_1006xtvesb().f[26]++;
              cov_1006xtvesb().s[112]++;
              return {
                ...prev,
                number: formattedNumber
              };
            });
            /* istanbul ignore next */
            cov_1006xtvesb().s[113]++;
            setSecureCardDetails('number', formattedNumber);
          },
          placeholder: "1234 5678 9012 3456",
          maxLength: 19,
          className: "w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "grid grid-cols-2 gap-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            className: "block text-sm font-medium text-gray-700 mb-2",
            children: "Expiry Date"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            type: "text",
            value: cardDetails.expiry,
            onChange: e => {
              /* istanbul ignore next */
              cov_1006xtvesb().f[27]++;
              const formattedExpiry =
              /* istanbul ignore next */
              (cov_1006xtvesb().s[114]++, formatExpiry(e.target.value));
              /* istanbul ignore next */
              cov_1006xtvesb().s[115]++;
              setCardDetails(prev => {
                /* istanbul ignore next */
                cov_1006xtvesb().f[28]++;
                cov_1006xtvesb().s[116]++;
                return {
                  ...prev,
                  expiry: formattedExpiry
                };
              });
              /* istanbul ignore next */
              cov_1006xtvesb().s[117]++;
              setSecureCardDetails('expiry', formattedExpiry);
            },
            placeholder: "MM/YY",
            maxLength: 5,
            className: "w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
            className: "block text-sm font-medium text-gray-700 mb-2",
            children: "CVC"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
            type: "text",
            value: cardDetails.cvc,
            onChange: e => {
              /* istanbul ignore next */
              cov_1006xtvesb().f[29]++;
              const cvcValue =
              /* istanbul ignore next */
              (cov_1006xtvesb().s[118]++, e.target.value.replace(/\D/g, ''));
              /* istanbul ignore next */
              cov_1006xtvesb().s[119]++;
              setCardDetails(prev => {
                /* istanbul ignore next */
                cov_1006xtvesb().f[30]++;
                cov_1006xtvesb().s[120]++;
                return {
                  ...prev,
                  cvc: cvcValue
                };
              });
              /* istanbul ignore next */
              cov_1006xtvesb().s[121]++;
              setSecureCardDetails('cvc', cvcValue);
            },
            placeholder: "123",
            maxLength: 4,
            className: "w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          className: "block text-sm font-medium text-gray-700 mb-2",
          children: "Cardholder Name"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
          type: "text",
          value: cardDetails.name,
          onChange: e => {
            /* istanbul ignore next */
            cov_1006xtvesb().f[31]++;
            cov_1006xtvesb().s[122]++;
            setCardDetails(prev => {
              /* istanbul ignore next */
              cov_1006xtvesb().f[32]++;
              cov_1006xtvesb().s[123]++;
              return {
                ...prev,
                name: e.target.value
              };
            });
            /* istanbul ignore next */
            cov_1006xtvesb().s[124]++;
            setSecureCardDetails('name', e.target.value);
          },
          placeholder: "John Doe",
          className: "w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        })]
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mb-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: () => {
          /* istanbul ignore next */
          cov_1006xtvesb().f[33]++;
          cov_1006xtvesb().s[125]++;
          return setShowLinkGenerator(!showLinkGenerator);
        },
        className: "text-blue-600 hover:text-blue-700 text-sm font-medium",
        children: "Generate Payment Link Instead"
      }),
      /* istanbul ignore next */
      (cov_1006xtvesb().b[36][0]++, showLinkGenerator) &&
      /* istanbul ignore next */
      (cov_1006xtvesb().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "mt-4 p-4 bg-gray-50 rounded-lg",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-sm text-gray-600 mb-3",
          children: "Generate a secure payment link to send to your client"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("button", {
          onClick: generatePaymentLink,
          disabled: processing,
          className: "w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Send, {
            className: "w-4 h-4 mr-2"
          }), "Generate Link"]
        }),
        /* istanbul ignore next */
        (cov_1006xtvesb().b[37][0]++, paymentLink) &&
        /* istanbul ignore next */
        (cov_1006xtvesb().b[37][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "mt-4 p-3 bg-white border rounded-lg",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-xs text-gray-500 mb-2",
            children: "Payment Link:"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center gap-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
              type: "text",
              value: paymentLink.url,
              readOnly: true,
              className: "flex-1 text-sm px-2 py-1 border rounded"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
              onClick: copyPaymentLink,
              className: "px-3 py-1 bg-blue-600 text-white text-sm rounded hover:bg-blue-700",
              children: "Copy"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
            className: "text-xs text-gray-500 mt-2",
            children: ["Expires: ", new Date(paymentLink.expiresAt).toLocaleDateString()]
          })]
        }))]
      }))]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex gap-3",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: onCancel,
        className: "flex-1 px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50",
        children: "Cancel"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
        onClick: processPayment,
        disabled: processing,
        className: "flex-1 bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center",
        children: processing ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1006xtvesb().b[38][0]++, (0, _jsxruntime.jsx)("div", {
          className: "w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"
        })) :
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1006xtvesb().b[38][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Lock, {
            className: "w-4 h-4 mr-2"
          }), "Pay ", currency, " ", paymentAmount.toFixed(2)]
        }))
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "mt-4 flex items-center justify-center text-xs text-gray-500",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Lock, {
        className: "w-3 h-3 mr-1"
      }), "Secured by 256-bit SSL encryption"]
    })]
  });
};
const _default =
/* istanbul ignore next */
(cov_1006xtvesb().s[126]++, EnhancedPaymentSystem);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,