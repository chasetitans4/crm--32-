{"version":3,"names":["_default","FocusMode","isOpen","onClose","cov_1upi6wkgng","f","selectedMode","setSelectedMode","s","_react","useState","duration","setDuration","timeRemaining","setTimeRemaining","isActive","setIsActive","isMinimized","setIsMinimized","position","setPosition","x","y","timerRef","useRef","dragControls","_framermotion","useDragControls","modeOptions","type","label","icon","_jsxruntime","jsx","_lucidereact","Clock","size","defaultDuration","color","Coffee","Utensils","useEffect","b","current","setInterval","prev","clearInterval","playNotificationSound","audio","Audio","volume","play","error","console","warn","window","Notification","permission","body","alert","selectMode","mode","selectedOption","find","option","startTimer","pauseTimer","resetTimer","handleClose","formatTime","seconds","mins","Math","floor","secs","toString","padStart","getProgressPercentage","totalSeconds","getModeColor","replace","handleDurationChange","e","newDuration","Number","parseInt","target","value","AnimatePresence","jsxs","motion","div","initial","opacity","scale","animate","exit","transition","damping","stiffness","className","drag","dragMomentum","onDragEnd","event","info","offset","onPointerDown","start","Move","m","onClick","Maximize2","Minimize2","X","map","viewBox","strokeWidth","stroke","fill","r","cx","cy","strokeDasharray","strokeDashoffset","strokeLinecap","min","max","onChange"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\FocusMode.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useState, useEffect, useRef } from \"react\"\nimport { Clock, Coffee, Utensils, X, Maximize2, Minimize2, Move } from \"lucide-react\"\nimport { motion, useDragControls, AnimatePresence } from \"framer-motion\"\n\ninterface FocusModeProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\ntype ModeType = \"focus\" | \"break\" | \"lunch\"\n\ninterface ModeOption {\n  type: ModeType\n  label: string\n  icon: React.ReactNode\n  defaultDuration: number // in minutes\n  color: string\n}\n\nconst FocusMode: React.FC<FocusModeProps> = ({ isOpen, onClose }) => {\n  const [selectedMode, setSelectedMode] = useState<ModeType | null>(null)\n  const [duration, setDuration] = useState<number>(25) // default 25 minutes\n  const [timeRemaining, setTimeRemaining] = useState<number>(0)\n  const [isActive, setIsActive] = useState<boolean>(false)\n  const [isMinimized, setIsMinimized] = useState<boolean>(false)\n  const [position, setPosition] = useState({ x: 0, y: 0 })\n  const timerRef = useRef<NodeJS.Timeout | null>(null)\n  const dragControls = useDragControls()\n\n  const modeOptions: ModeOption[] = [\n    {\n      type: \"focus\",\n      label: \"Focus Mode\",\n      icon: <Clock size={24} />,\n      defaultDuration: 25,\n      color: \"bg-blue-500 hover:bg-blue-600\",\n    },\n    {\n      type: \"break\",\n      label: \"Break\",\n      icon: <Coffee size={24} />,\n      defaultDuration: 5,\n      color: \"bg-green-500 hover:bg-green-600\",\n    },\n    {\n      type: \"lunch\",\n      label: \"Lunch\",\n      icon: <Utensils size={24} />,\n      defaultDuration: 30,\n      color: \"bg-amber-500 hover:bg-amber-600\",\n    },\n  ]\n\n  // Reset state when modal is opened\n  useEffect(() => {\n    if (isOpen) {\n      setSelectedMode(null)\n      setIsActive(false)\n      setTimeRemaining(0)\n      setIsMinimized(false)\n    }\n  }, [isOpen])\n\n  // Handle timer\n  useEffect(() => {\n    if (isActive && timeRemaining > 0) {\n      timerRef.current = setInterval(() => {\n        setTimeRemaining((prev) => {\n          if (prev <= 1) {\n            clearInterval(timerRef.current as NodeJS.Timeout)\n            setIsActive(false)\n            // Play sound notification with proper error handling\n            const playNotificationSound = async () => {\n              try {\n                const audio = new Audio(\"https://assets.mixkit.co/active_storage/sfx/2869/2869-preview.mp3\")\n                audio.volume = 0.5 // Set reasonable volume\n                await audio.play()\n              } catch (error) {\n                console.warn(\"Audio notification failed:\", error)\n                // Fallback: Show visual notification if audio fails\n                if ('Notification' in window && Notification.permission === 'granted') {\n                  new Notification('Focus Timer Complete!', {\n                    body: 'Your focus session has ended.',\n                    icon: '/favicon.ico'\n                  })\n                } else {\n                  // Final fallback: Browser alert\n                  alert('Focus Timer Complete! Your session has ended.')\n                }\n              }\n            }\n            playNotificationSound()\n            return 0\n          }\n          return prev - 1\n        })\n      }, 1000)\n    } else if (timerRef.current) {\n      clearInterval(timerRef.current)\n    }\n\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current)\n      }\n    }\n  }, [isActive, timeRemaining])\n\n  const selectMode = (mode: ModeType) => {\n    const selectedOption = modeOptions.find((option) => option.type === mode)\n    if (selectedOption) {\n      setSelectedMode(mode)\n      setDuration(selectedOption.defaultDuration)\n      setTimeRemaining(selectedOption.defaultDuration * 60) // Convert to seconds\n    }\n  }\n\n  const startTimer = () => {\n    setIsActive(true)\n  }\n\n  const pauseTimer = () => {\n    setIsActive(false)\n  }\n\n  const resetTimer = () => {\n    setIsActive(false)\n    if (selectedMode) {\n      const selectedOption = modeOptions.find((option) => option.type === selectedMode)\n      if (selectedOption) {\n        setTimeRemaining(selectedOption.defaultDuration * 60)\n      }\n    }\n  }\n\n  const handleClose = () => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current)\n    }\n    onClose()\n  }\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`\n  }\n\n  const getProgressPercentage = (): number => {\n    if (!selectedMode) return 0\n    const selectedOption = modeOptions.find((option) => option.type === selectedMode)\n    if (!selectedOption) return 0\n\n    const totalSeconds = selectedOption.defaultDuration * 60\n    return ((totalSeconds - timeRemaining) / totalSeconds) * 100\n  }\n\n  const getModeColor = (): string => {\n    if (!selectedMode) return \"bg-gray-200\"\n    const selectedOption = modeOptions.find((option) => option.type === selectedMode)\n    return selectedOption ? selectedOption.color.replace(\"hover:\", \"\") : \"bg-gray-200\"\n  }\n\n  const handleDurationChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newDuration = Number.parseInt(e.target.value, 10)\n    setDuration(newDuration)\n    setTimeRemaining(newDuration * 60)\n  }\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{\n            opacity: 1,\n            scale: 1,\n            x: position.x,\n            y: position.y,\n          }}\n          exit={{ opacity: 0, scale: 0.9 }}\n          transition={{ type: \"spring\", damping: 20, stiffness: 300 }}\n          className={`fixed z-50 ${\n            isMinimized ? \"w-auto h-auto\" : \"w-80\"\n          } bg-white rounded-xl shadow-xl overflow-hidden border border-gray-200`}\n          drag\n          dragControls={dragControls}\n          dragMomentum={false}\n          onDragEnd={(event, info) => {\n            setPosition({\n              x: position.x + info.offset.x,\n              y: position.y + info.offset.y,\n            })\n          }}\n        >\n          {/* Header */}\n          <div\n            className=\"bg-gray-100 p-3 flex justify-between items-center cursor-move\"\n            onPointerDown={(e) => dragControls.start(e)}\n          >\n            <div className=\"flex items-center gap-2\">\n              <Move size={16} className=\"text-gray-500\" />\n              <h3 className=\"font-medium text-sm\">\n                {selectedMode ? modeOptions.find((m) => m.type === selectedMode)?.label : \"Productivity Timer\"}\n              </h3>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <button\n                onClick={() => setIsMinimized(!isMinimized)}\n                className=\"p-1 hover:bg-gray-200 rounded-md transition-colors\"\n              >\n                {isMinimized ? <Maximize2 size={14} /> : <Minimize2 size={14} />}\n              </button>\n              <button onClick={handleClose} className=\"p-1 hover:bg-gray-200 rounded-md transition-colors\">\n                <X size={14} />\n              </button>\n            </div>\n          </div>\n\n          {/* Content */}\n          {!isMinimized && (\n            <div className=\"p-4\">\n              {!selectedMode ? (\n                <div className=\"space-y-4\">\n                  <p className=\"text-sm text-gray-600\">Select a productivity mode:</p>\n                  <div className=\"grid grid-cols-3 gap-2\">\n                    {modeOptions.map((option) => (\n                      <button\n                        key={option.type}\n                        onClick={() => selectMode(option.type)}\n                        className={`${option.color} text-white p-3 rounded-lg flex flex-col items-center justify-center transition-colors`}\n                      >\n                        {option.icon}\n                        <span className=\"mt-2 text-xs font-medium\">{option.label}</span>\n                        <span className=\"text-xs opacity-80\">{option.defaultDuration} min</span>\n                      </button>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-center\">\n                    <div className=\"relative w-32 h-32\">\n                      {/* Progress circle */}\n                      <svg className=\"w-full h-full\" viewBox=\"0 0 100 100\">\n                        <circle\n                          className=\"text-gray-200\"\n                          strokeWidth=\"8\"\n                          stroke=\"currentColor\"\n                          fill=\"transparent\"\n                          r=\"42\"\n                          cx=\"50\"\n                          cy=\"50\"\n                        />\n                        <circle\n                          className={`${getModeColor().replace(\"bg-\", \"text-\")}`}\n                          strokeWidth=\"8\"\n                          strokeDasharray={264}\n                          strokeDashoffset={264 - (getProgressPercentage() * 264) / 100}\n                          strokeLinecap=\"round\"\n                          stroke=\"currentColor\"\n                          fill=\"transparent\"\n                          r=\"42\"\n                          cx=\"50\"\n                          cy=\"50\"\n                        />\n                      </svg>\n                      <div className=\"absolute top-0 left-0 w-full h-full flex flex-col items-center justify-center\">\n                        <span className=\"text-3xl font-bold\">{formatTime(timeRemaining)}</span>\n                        <span className=\"text-xs text-gray-500\">{isActive ? \"In progress\" : \"Paused\"}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Duration slider */}\n                  {!isActive && (\n                    <div className=\"space-y-2\">\n                      <label className=\"text-xs text-gray-500 flex justify-between\">\n                        <span>Duration: {duration} minutes</span>\n                      </label>\n                      <input\n                        type=\"range\"\n                        min=\"1\"\n                        max=\"60\"\n                        value={duration}\n                        onChange={handleDurationChange}\n                        className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\n                      />\n                    </div>\n                  )}\n\n                  {/* Controls */}\n                  <div className=\"flex justify-center gap-2\">\n                    {isActive ? (\n                      <button\n                        onClick={pauseTimer}\n                        className=\"px-4 py-2 bg-amber-500 text-white rounded-lg hover:bg-amber-600 transition-colors\"\n                      >\n                        Pause\n                      </button>\n                    ) : (\n                      <button\n                        onClick={startTimer}\n                        className=\"px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\n                      >\n                        {timeRemaining === modeOptions.find((m) => m.type === selectedMode)?.defaultDuration! * 60\n                          ? \"Start\"\n                          : \"Resume\"}\n                      </button>\n                    )}\n                    <button\n                      onClick={resetTimer}\n                      className=\"px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 transition-colors\"\n                    >\n                      Reset\n                    </button>\n                  </div>\n\n                  {/* Back button */}\n                  <div className=\"text-center\">\n                    <button onClick={() => setSelectedMode(null)} className=\"text-xs text-blue-500 hover:text-blue-700\">\n                      Choose a different mode\n                    </button>\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Minimized view */}\n          {isMinimized && selectedMode && (\n            <div className=\"p-2 flex items-center gap-2\">\n              {modeOptions.find((m) => m.type === selectedMode)?.icon}\n              <span className=\"font-bold\">{formatTime(timeRemaining)}</span>\n              {isActive ? (\n                <button onClick={pauseTimer} className=\"p-1 bg-amber-100 text-amber-600 rounded hover:bg-amber-200\">\n                  <Coffee size={14} />\n                </button>\n              ) : (\n                <button onClick={startTimer} className=\"p-1 bg-green-100 text-green-600 rounded hover:bg-green-200\">\n                  <Clock size={14} />\n                </button>\n              )}\n            </div>\n          )}\n        </motion.div>\n      )}\n    </AnimatePresence>\n  )\n}\n\nexport default FocusMode\n"],"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","ignoreList":[]}