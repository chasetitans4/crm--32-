{"version":3,"names":["TaskCard","cov_1p5bnhjiph","s","_react","memo","task","onEdit","onDelete","onSelect","isTaskOverdue","getTaskProgress","TaskPriorities","TaskCategories","f","handleEdit","useCallback","e","stopPropagation","handleDelete","id","handleSelect","_jsxruntime","jsx","_framermotion","motion","div","layout","initial","opacity","y","animate","exit","whileHover","scale","className","onClick","jsxs","b","priority","color","category","title","description","_lucidereact","Calendar","size","Date","dueDate","toLocaleDateString","User","assignee","Clock","estimatedHours","tags","length","map","tag","index","style","width","Edit2","Trash2","displayName"],"sources":["C:\\Users\\chase\\Downloads\\crm (32)\\src\\components\\Tasks\\TaskCard.tsx"],"sourcesContent":["\"use client\"\n\nimport React, { useCallback, memo } from \"react\"\nimport { motion } from \"framer-motion\"\nimport { Calendar, User, Clock, Edit2, Trash2 } from \"lucide-react\"\nimport { Task, TaskPriority, TaskCategory } from '../../types/task'\n\n// Interface for TaskCard props\ninterface TaskCardProps {\n  task: Task;\n  onEdit: (task: Task) => void;\n  onDelete: (id: string) => void;\n  onSelect: (task: Task) => void;\n  isTaskOverdue: (task: Task) => boolean;\n  getTaskProgress: (task: Task) => number;\n  TaskPriorities: Record<string, TaskPriority>;\n  TaskCategories: Record<string, TaskCategory>;\n}\n\n// Memoized TaskCard component to prevent unnecessary re-renders\nexport const TaskCard = memo(({\n  task,\n  onEdit,\n  onDelete,\n  onSelect,\n  isTaskOverdue,\n  getTaskProgress,\n  TaskPriorities,\n  TaskCategories\n}: TaskCardProps) => {\n  const handleEdit = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    onEdit(task)\n  }, [onEdit, task])\n\n  const handleDelete = useCallback((e: React.MouseEvent) => {\n    e.stopPropagation()\n    onDelete(task.id)\n  }, [onDelete, task.id])\n\n  const handleSelect = useCallback(() => {\n    onSelect(task)\n  }, [onSelect, task])\n\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      whileHover={{ scale: 1.02 }}\n      className=\"bg-white rounded-lg border border-gray-200 p-4 cursor-pointer hover:shadow-md transition-all duration-200\"\n      onClick={handleSelect}\n    >\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center space-x-2 mb-2\">\n            <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n              TaskPriorities[task.priority]?.color || 'bg-gray-100 text-gray-700'\n            }`}>\n              {task.priority}\n            </span>\n            <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n              task.category ? TaskCategories[task.category]?.color || 'bg-gray-100 text-gray-700' : 'bg-gray-100 text-gray-700'\n            }`}>\n              {task.category}\n            </span>\n            {isTaskOverdue(task) && (\n              <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-red-100 text-red-700\">\n                Overdue\n              </span>\n            )}\n          </div>\n          <h3 className=\"font-semibold text-gray-900 mb-1\">{task.title}</h3>\n          <p className=\"text-sm text-gray-600 mb-2 line-clamp-2\">{task.description}</p>\n          <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\n            <div className=\"flex items-center space-x-1\">\n              <Calendar size={12} />\n              <span>{new Date(task.dueDate).toLocaleDateString()}</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <User size={12} />\n              <span>{task.assignee}</span>\n            </div>\n            <div className=\"flex items-center space-x-1\">\n              <Clock size={12} />\n              <span>{task.estimatedHours}h</span>\n            </div>\n          </div>\n          {task.tags && task.tags.length > 0 && (\n            <div className=\"flex flex-wrap gap-1 mt-2\">\n              {task.tags.map((tag, index) => (\n                <span key={index} className=\"px-2 py-1 text-xs bg-blue-100 text-blue-700 rounded\">\n                  {tag}\n                </span>\n              ))}\n            </div>\n          )}\n          <div className=\"mt-2\">\n            <div className=\"flex items-center justify-between text-xs text-gray-500 mb-1\">\n              <span>Progress</span>\n              <span>{getTaskProgress(task)}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\" \n                style={{ width: `${getTaskProgress(task)}%` }}\n              />\n            </div>\n          </div>\n        </div>\n        <button\n          onClick={handleEdit}\n          className=\"p-2 text-gray-400 hover:text-blue-600 rounded-full hover:bg-blue-50 transition-colors\"\n        >\n          <Edit2 size={16} />\n        </button>\n\n        <button\n          onClick={handleDelete}\n          className=\"p-2 text-gray-400 hover:text-red-600 rounded-full hover:bg-red-50 transition-colors\"\n        >\n          <Trash2 size={16} />\n        </button>\n      </div>\n    </motion.div>\n  )\n})\n\nTaskCard.displayName = 'TaskCard'"],"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","ignoreList":[]}