import type { Position } from "./utils";
export type RowHeight = number | ((width: number) => number);
export type PositionParams = {
    margin: [number, number];
    containerPadding: [number, number];
    containerWidth: number;
    cols: number;
    rowHeight: RowHeight;
    maxRows: number;
};
export declare function calcGridColWidth(positionParams: PositionParams): number;
export declare function calcGridItemWHPx(gridUnits: number, colOrRowSize: number, marginPx: number): number;
export declare const resolveRowHeight: (rowHeight: RowHeight, width: number) => number;
/**
 * Return position on the page given an x, y, w, h.
 * left, top, width, height are all in pixels.
 */
export declare function calcGridItemPosition(positionParams: PositionParams, x: number, y: number, z: number, w: number, h: number, state?: {
    resizing?: {
        width: number;
        height: number;
    };
    dragging?: {
        top: number;
        left: number;
    };
}): Position;
/**
 * Translate x and y coordinates from pixels to grid units.
 */
export declare function calcXY(positionParams: PositionParams, top: number, left: number, w: number, h: number): {
    x: number;
    y: number;
};
/**
 * Given a height and width in pixel values, calculate grid units.
 */
export declare function calcWH(positionParams: PositionParams, width: number, height: number, x: number, y: number): {
    w: number;
    h: number;
};
export declare function clamp(num: number, lowerBound: number, upperBound: number): number;
